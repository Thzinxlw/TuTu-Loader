local logo = [[
    <svg width="97" height="74" viewBox="0 0 97 74" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4118 10.1063 49.8607 10.2501 50.3553 10.3845C51.7432 10.7649 52.6678 11.564 53.5054 13.1211C53.6724 13.4686 53.8302 13.8242 53.981 14.1849C54.5 15.4114 54.8533 15.9969 55.8625 16.4118C56.2284 16.5802 56.4455 16.7861 56.7472 17.1063C57.4004 17.7006 58.1005 17.666 58.8595 17.6998C59.9974 17.7553 60.6534 18.0452 61.4624 19.1413C61.6637 19.2589 61.8674 19.369 62.0723 19.4743C63.2073 20.1305 63.9933 21.3005 64.5301 22.792C64.829 23.8421 64.8247 24.7252 64.785 25.826C64.7309 26.8923 64.7309 26.8923 65.0279 27.851C65.3336 28.1434 65.6483 28.3729 65.9775 28.6133C67.0699 29.8619 67.7868 31.2327 67.9107 33.189C67.9459 34.9827 67.7535 36.4826 67.3921 38.2065C67.126 39.5484 67.1192 40.6174 67.2735 41.9996C67.2918 42.7743 67.1623 43.1632 66.8513 43.808C66.5691 44.0909 66.5691 44.0909 66.2688 44.289C65.6383 44.7743 65.5171 45.2608 65.2492 46.176C64.5481 47.4914 63.4374 48.3646 62.3363 48.9387C62.096 48.8736 61.8557 48.8084 61.6081 48.7413C61.7042 49.5228 61.8003 50.3042 61.8994 51.1093C61.1342 51.5989 60.4861 51.4763 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.5149 51.4562 58.1901 51.3927 57.8668 51.319C57.695 51.2806 57.5232 51.2422 57.3462 51.2026C57.1488 51.1564 57.1488 51.1564 56.9474 51.1093C56.8994 50.6535 56.8513 50.1977 56.8018 49.728C56.7057 49.7931 56.6095 49.8582 56.5105 49.9253C56.5105 50.3161 56.5105 50.7068 56.5105 51.1093C55.8793 51.3659 55.3179 51.2654 54.6757 51.1594C54.1293 51.0812 53.7344 51.113 53.2062 51.3313C52.7376 51.5003 52.4427 51.4963 51.9773 51.319C51.1894 51.0231 50.4474 51.1582 49.6424 51.2689C49.4374 51.2876 49.4374 51.2876 49.2282 51.3067C48.9375 50.9128 49.0229 50.1588 49.0006 49.617C48.9912 49.4066 48.9912 49.4066 48.9816 49.1919C48.9661 48.8444 48.9514 48.4969 48.9369 48.1493C48.7927 48.1493 48.6485 48.1493 48.5 48.1493C48.3558 49.6145 48.3558 49.6145 48.2087 51.1093C47.5358 51.1093 46.8629 51.1093 46.1697 51.1093C46.1697 50.1977 46.1697 49.286 46.1697 48.3467C46.0735 48.3467 45.9774 48.3467 45.8784 48.3467C45.8801 48.5296 45.8817 48.7125 45.8835 48.9009C45.8848 49.1372 45.8861 49.3735 45.8875 49.617C45.8892 49.8528 45.8908 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4148 51.1557 45.0959 51.191 44.7769 51.2203C44.6025 51.2369 44.4281 51.2534 44.2484 51.2704C44.1134 51.2824 43.9784 51.2944 43.8393 51.3067C43.4901 50.1753 43.3173 49.1745 43.2567 47.952C43.1606 47.952 43.0645 47.952 42.9654 47.952C42.9671 48.1469 42.9688 48.3417 42.9706 48.5425C42.9719 48.7953 42.9732 49.0482 42.9746 49.3087C42.9762 49.5605 42.9779 49.8123 42.9797 50.0718C42.9654 50.7147 42.9654 50.7147 42.8198 51.1093C42.0239 51.3078 41.2079 51.3656 40.4075 51.1957C39.8901 51.0312 39.8901 51.0312 39.47 51.504C39.0931 51.543 38.7359 51.5603 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.4912 50.3517 35.3436 49.6125 35.2462 48.7413C35.108 48.7658 34.9699 48.7902 34.8275 48.8153C33.8603 48.818 33.0422 47.8857 32.3515 47.0517C31.5128 45.7482 31.5128 45.7482 31.3337 45.1971C31.1342 44.7122 30.9213 44.5039 30.5856 44.1903C30.1808 43.8103 29.9921 43.5886 29.7117 43.0187C29.7095 42.4678 29.7206 41.9279 29.739 41.3783C29.7724 39.6623 29.5721 38.1262 29.2424 36.4725C28.8751 34.5755 28.776 32.595 29.4204 30.784C30.1061 29.4473 31.0533 28.3432 32.042 27.4293C32.1382 27.4293 32.2343 27.4293 32.3333 27.4293C32.3102 27.2917 32.2871 27.1541 32.2633 27.0123C31.9986 25.0195 32.1322 23.2231 32.9574 21.517C33.7068 20.2218 34.7547 19.4582 35.8288 18.7467C35.979 18.6083 36.1292 18.4699 36.284 18.3273C36.9415 17.7463 37.4551 17.7479 38.232 17.723C39.1898 17.6407 39.8527 17.3035 40.6812 16.6654C41.0324 16.4077 41.3161 16.2805 41.7002 16.1567C42.4241 15.8169 42.6564 14.9072 42.9973 14.04C43.592 12.6159 44.3467 11.542 45.4414 10.8533C45.5293 10.7971 45.6172 10.7409 45.7077 10.683C46.5264 10.2073 47.324 10.1389 48.2087 10.064C48.1606 9.21745 48.1126 8.37089 48.063 7.49867Z" fill="#090909"/>
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4118 10.1063 49.8607 10.2501 50.3553 10.3845C51.7432 10.7649 52.6678 11.564 53.5054 13.1211C53.6724 13.4686 53.8302 13.8242 53.981 14.1849C54.5 15.4114 54.8534 15.9969 55.8625 16.4118C56.2284 16.5802 56.4455 16.7861 56.7472 17.1063C57.4004 17.7006 58.1005 17.666 58.8595 17.6998C59.9974 17.7553 60.6534 18.0452 61.4624 19.1413C61.6637 19.2589 61.8674 19.369 62.0723 19.4743C63.2771 20.1639 64.0937 21.4716 64.5995 23.0795C64.677 23.5449 64.6324 23.8244 64.521 24.272C64.4249 24.0115 64.3288 23.751 64.2297 23.4827C64.1817 24.0036 64.1336 24.5246 64.0841 25.0613C63.9399 24.9311 63.7957 24.8009 63.6471 24.6667C63.6471 25.383 63.6471 26.0993 63.6471 26.8373C63.7433 26.8373 63.8394 26.8373 63.9384 26.8373C64.0447 28.1614 63.7145 29.0695 63.2102 30.192C62.9007 30.71 62.9007 30.71 62.6276 30.9813C62.4834 30.9813 62.3392 30.9813 62.1907 30.9813C62.1907 30.786 62.1907 30.5906 62.1907 30.3893C62.0955 30.5286 62.0955 30.5286 61.9984 30.6707C61.4655 31.4255 61.0081 31.927 60.2973 32.3627C60.2492 32.4929 60.2012 32.6232 60.1516 32.7573C60.2958 32.8225 60.44 32.8876 60.5886 32.9547C60.5886 33.4756 60.5886 33.9966 60.5886 34.5333C59.5875 34.7159 58.6032 34.7473 57.5952 34.7233C57.1418 34.7156 56.7989 34.732 56.3649 34.928C56.3815 33.9859 56.4109 33.3371 56.8291 32.56C57.2751 32.1303 57.5715 32.0192 58.1126 31.968C58.0075 31.8871 57.9023 31.8062 57.794 31.7229C57.6588 31.6166 57.5236 31.5102 57.3844 31.4007C57.2492 31.2954 57.114 31.1901 56.9747 31.0815C56.8696 30.9834 56.7645 30.8852 56.6561 30.784C56.6561 30.6538 56.6561 30.5235 56.6561 30.3893C56.4639 30.3242 56.2716 30.2591 56.0736 30.192C56.3619 30.6478 56.6503 31.1037 56.9474 31.5733C56.6495 32.3806 56.5203 32.546 55.9825 33.004C55.804 33.1582 55.804 33.1582 55.6218 33.3154C55.5306 33.3917 55.4393 33.468 55.3453 33.5467C55.6337 33.4164 55.9221 33.2862 56.2192 33.152C56.075 33.9334 56.075 33.9334 55.9279 34.7307C55.7927 34.7286 55.6574 34.7265 55.5181 34.7244C55.017 34.7177 54.516 34.7127 54.0149 34.709C53.7979 34.707 53.5809 34.7043 53.3639 34.7009C53.0523 34.6961 52.7407 34.6939 52.429 34.6921C52.2414 34.6901 52.0537 34.688 51.8604 34.6859C51.3973 34.6659 51.3973 34.6659 51.1216 35.1253C50.8474 35.0845 50.8474 35.0845 50.5208 34.965C49.8951 34.752 49.2867 34.6281 48.6456 34.5333C48.5735 34.0449 48.5735 34.0449 48.5 33.5467C48.2597 33.6769 48.0194 33.8072 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3543 34.1387C48.3063 34.2689 48.2582 34.3992 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.4102 34.7892 47.4102 34.7892 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.4491 34.7069 45.0326 34.7038 44.604 34.7183C43.3694 34.7414 42.1568 34.6729 40.9264 34.5333C40.9121 34.4143 40.8979 34.2952 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0525 31.968C40.0525 31.8378 40.0525 31.7075 40.0525 31.5733C40.7735 31.4757 40.7735 31.4757 41.509 31.376C41.1726 31.3109 40.8361 31.2458 40.4895 31.1787C40.5526 31.0716 40.6156 30.9645 40.6806 30.8542C40.7617 30.713 40.8428 30.5718 40.9264 30.4263C41.0075 30.2867 41.0886 30.147 41.1722 30.0032C41.4027 29.5969 41.4027 29.5969 41.3633 29.008C41.2147 29.2217 41.2147 29.2217 41.063 29.4397C40.4554 30.2605 39.7305 31.0831 38.8874 31.376C38.3173 31.3599 38.0718 31.2411 37.6221 30.7593C36.8791 29.5078 36.7818 28.4017 36.7027 26.8373C36.6546 28.0095 36.6066 29.1817 36.557 30.3893C35.5172 30.1881 35.167 30.035 34.518 29.008C34.3267 28.55 34.2069 28.1283 34.0811 27.6267C33.9849 27.822 33.8888 28.0174 33.7898 28.2187C33.3298 27.1849 33.399 26.0291 33.4985 24.864C33.717 24.0242 33.9588 23.295 34.543 22.8437C34.6309 22.794 34.7188 22.7444 34.8093 22.6933C34.6651 22.6933 34.5209 22.6933 34.3724 22.6933C34.1291 23.082 33.9131 23.4613 33.6987 23.8773C33.4895 24.2757 33.2776 24.6695 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8841 23.877 32.9879 22.8527 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1898 17.6407 39.8527 17.3035 40.6812 16.6654C41.0324 16.4077 41.3161 16.2805 41.7002 16.1567C42.4241 15.8169 42.6564 14.9072 42.9973 14.04C43.592 12.6159 44.3467 11.542 45.4414 10.8533C45.5293 10.7971 45.6172 10.7409 45.7077 10.683C46.5264 10.2073 47.324 10.1389 48.2087 10.064C48.1606 9.21745 48.1126 8.37089 48.063 7.49867Z" fill="#0F383F"/>
<path d="M32.479 27.6267C32.5571 27.8546 32.6352 28.0825 32.7156 28.3173C33.4354 30.2541 34.3197 31.4081 35.8288 32.1653C36.0211 32.1653 36.2133 32.1653 36.4114 32.1653C36.123 31.9048 35.8346 31.6444 35.5375 31.376C35.9003 31.2404 36.1753 31.1787 36.557 31.1787C36.6051 31.0484 36.6532 30.9182 36.7027 30.784C37.0632 30.9794 37.0632 30.9794 37.4309 31.1787C37.3829 31.5694 37.3348 31.9601 37.2853 32.3627C37.6457 32.0696 37.6457 32.0696 38.0135 31.7707C38.0856 31.966 38.0856 31.966 38.1591 32.1653C38.5348 32.3017 38.5348 32.3017 38.9693 32.3873C39.1167 32.4204 39.2641 32.4535 39.4159 32.4875C39.5299 32.5114 39.6438 32.5354 39.7613 32.56C39.8093 32.4298 39.8574 32.2995 39.9069 32.1653C40.4349 32.9269 40.6065 33.486 40.6351 34.5333C40.539 34.7287 40.4429 34.924 40.3438 35.1253C40.0647 35.0284 40.0647 35.0284 39.78 34.9295C39.035 34.7052 38.3276 34.6852 37.5675 34.706C37.3784 34.7087 37.3784 34.7087 37.1854 34.7114C36.8789 34.716 36.5723 34.7231 36.2658 34.7307C36.2177 34.4051 36.1696 34.0795 36.1201 33.744C36.0796 34.0492 36.0796 34.0492 36.0382 34.3607C35.8483 35.2964 35.3694 35.7554 34.8093 36.3093C34.8574 36.5047 34.9054 36.7 34.9549 36.9013C34.9126 37.1664 34.8635 37.4296 34.8093 37.6907C34.789 37.9604 34.7738 38.2309 34.7632 38.5016C34.7571 38.6504 34.751 38.7992 34.7447 38.9525C34.739 39.1059 34.7333 39.2593 34.7274 39.4173C34.7179 39.652 34.7179 39.652 34.7083 39.8914C34.6929 40.276 34.6782 40.6607 34.6637 41.0453C34.5675 41.0453 34.4714 41.0453 34.3724 41.0453C34.4685 41.6314 34.5646 42.2175 34.6637 42.8213C34.5195 42.7562 34.3753 42.6911 34.2267 42.624C34.0159 42.0526 33.9354 41.6883 33.9354 41.0453C33.7852 41.0331 33.635 41.0209 33.4803 41.0083C32.7805 40.8095 32.5467 40.5288 32.042 39.8613C31.7862 39.1681 31.7957 38.445 31.8964 37.6907C32.1413 37.1585 32.4314 36.7343 32.7703 36.3093C32.6982 36.2116 32.6982 36.2116 32.6246 36.112C32.4912 34.907 32.9147 34.1415 33.3528 33.152C33.4518 32.8902 33.5495 32.6274 33.6441 32.3627C33.548 32.3627 33.4519 32.3627 33.3528 32.3627C33.3528 32.4929 33.3528 32.6231 33.3528 32.7573C33.2567 32.7573 33.1606 32.7573 33.0616 32.7573C32.8545 33.3109 32.658 33.8688 32.4699 34.4347C32.4201 34.5832 32.3704 34.7318 32.3191 34.8848C32.1969 35.2921 32.1118 35.6834 32.042 36.112C31.9459 36.112 31.8498 36.112 31.7507 36.112C31.5442 36.6691 31.338 37.2261 31.1408 37.7893C31.0877 37.9379 31.0346 38.0864 30.9798 38.2395C30.8585 38.7555 30.9012 38.9588 31.0225 39.4667C31.0398 39.63 31.0571 39.7933 31.0749 39.9615C31.131 40.4715 31.1967 40.9491 31.3138 41.44C31.6254 41.731 31.6254 41.731 32.042 41.8347C32.5751 42.2267 33.0752 42.6369 33.4985 43.2283C33.9213 43.7833 34.4234 44.0714 34.9549 44.4C34.9549 44.6605 34.9549 44.921 34.9549 45.1893C34.2392 44.8955 33.7311 44.3128 33.2072 43.6107C33.1351 43.4153 33.1351 43.4153 33.0616 43.216C32.9174 43.3137 32.9174 43.3137 32.7703 43.4133C32.8639 44.0199 32.8639 44.0199 33.1776 44.195C33.2835 44.2626 33.3894 44.3303 33.4985 44.4C33.7096 44.6307 33.9159 44.8695 34.1175 45.1153C34.2718 45.3023 34.2718 45.3023 34.4293 45.493C34.5066 45.5882 34.584 45.6833 34.6637 45.7813C34.5916 46.0744 34.5916 46.0744 34.518 46.3733C33.974 46.2751 33.6715 46.2007 33.2072 45.7813C33.2072 45.6511 33.2072 45.5209 33.2072 45.3867C32.6785 45.2564 32.1498 45.1262 31.6051 44.992C31.6051 45.1222 31.6051 45.2525 31.6051 45.3867C31.7943 45.4274 31.9836 45.4681 32.1786 45.51C32.8727 45.7147 33.3595 46.1193 33.9292 46.6817C34.2133 46.9525 34.4951 47.161 34.8093 47.36C34.8093 47.6856 34.8093 48.0112 34.8093 48.3467C35.0016 48.3467 35.1938 48.3467 35.3919 48.3467C35.3919 47.3699 35.3919 46.3931 35.3919 45.3867C36.0648 45.3867 36.7376 45.3867 37.4309 45.3867C37.4309 46.5588 37.4309 47.731 37.4309 48.9387C37.8635 48.841 37.8635 48.841 38.3048 48.7413C38.4384 47.4887 38.5323 46.4198 37.9788 45.3466C37.5831 44.7837 37.1502 44.2934 36.7027 43.808C36.6068 43.7007 36.5108 43.5933 36.412 43.4827C36.3367 43.3988 36.2614 43.3148 36.1838 43.2283C35.717 42.6932 35.5609 42.3162 35.4929 41.4902C35.4827 40.8238 35.4762 40.1578 35.4738 39.4913C35.469 39.2601 35.4642 39.0289 35.4593 38.7906C35.4505 36.8885 35.4505 36.8885 35.8874 36.1598C36.5006 35.4427 36.977 35.4778 37.7586 35.4707C37.8681 35.4666 37.9775 35.4625 38.0903 35.4583C38.7977 35.4516 39.3161 35.5294 39.9069 36.112C40.3832 37.1849 40.3997 38.1265 40.3711 39.3557C40.3682 39.6004 40.3682 39.6004 40.3652 39.8502C40.3601 40.2486 40.3522 40.647 40.3438 41.0453C39.719 41.0453 39.0942 41.0453 38.4504 41.0453C38.4024 40.1988 38.3543 39.3522 38.3048 38.48C38.0645 38.48 37.8242 38.48 37.5766 38.48C37.428 39.2626 37.4195 39.8678 37.5766 40.6507C38.0754 41.5954 38.7384 42.3586 39.3769 43.1257C40.3291 44.2731 40.3291 44.2731 40.3673 45.1124C40.3739 45.8123 40.3781 46.5121 40.3802 47.212C40.3832 47.4544 40.3863 47.6968 40.3893 47.9466C40.3905 48.2988 40.3905 48.2988 40.3916 48.6581C40.393 48.8726 40.3943 49.0871 40.3957 49.3081C40.3353 50.0271 40.1849 50.494 39.9069 51.1093C39.3751 51.5897 38.9743 51.5647 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.4912 50.3517 35.3437 49.6125 35.2462 48.7413C35.1081 48.7658 34.9699 48.7902 34.8275 48.8153C33.8603 48.818 33.0422 47.8857 32.3515 47.0517C31.5128 45.7481 31.5128 45.7481 31.3337 45.197C31.1342 44.7122 30.9213 44.5039 30.5856 44.1903C30.1808 43.8103 29.9921 43.5886 29.7117 43.0187C29.7095 42.4678 29.7206 41.9279 29.739 41.3783C29.7724 39.6622 29.5721 38.1262 29.2424 36.4725C28.8753 34.5764 28.7753 32.5938 29.4204 30.784C30.1009 29.466 31.2315 27.6267 32.479 27.6267Z" fill="#16353A"/>
<path d="M43.0656 17.464C43.659 17.5854 43.869 17.8774 44.2757 18.4491C45.1727 19.3636 46.3312 19.1918 47.392 19.1544C47.6747 19.1447 47.9575 19.1367 48.2403 19.1298C48.7639 19.1164 49.2873 19.0985 49.8108 19.0797C49.9811 19.0753 50.1514 19.0709 50.3269 19.0663C51.4298 19.0187 52.2336 18.9188 53.0969 17.9203C53.4519 17.5627 53.4519 17.5627 53.898 17.4393C54.3258 17.5627 54.3258 17.5627 54.6717 18.0067C55.0702 18.9947 55.0405 20.0299 54.9084 21.1147C54.3558 23.6312 53.2843 26.304 51.5585 27.6267C49.9381 28.6835 48.1695 29.0125 46.4245 28.305C45.5794 27.876 44.9331 27.2738 44.2762 26.4427C44.1605 26.3015 44.1605 26.3015 44.0424 26.1575C43.26 25.0717 42.8276 23.5955 42.3562 22.2387C42.2646 21.981 42.1642 21.729 42.0603 21.48C41.8129 20.6895 41.8844 19.7831 41.9459 18.944C42.198 18.1834 42.4363 17.6226 43.0656 17.464Z" fill="#A9AAA7"/>
<path d="M42.3829 15.392C42.5271 15.4897 42.5271 15.4897 42.6742 15.5893C42.6261 15.7847 42.578 15.9801 42.5285 16.1813C42.865 16.1813 43.2014 16.1813 43.548 16.1813C43.1572 16.5343 42.8148 16.7366 42.3829 16.9707C41.9278 17.2933 41.9278 17.2933 41.8458 17.7847C41.8308 17.9068 41.8158 18.0289 41.8003 18.1547C41.8003 18.0244 41.8003 17.8942 41.8003 17.76C41.7042 17.76 41.608 17.76 41.509 17.76C41.488 17.992 41.4669 18.224 41.4453 18.463C41.3759 19.2167 41.2986 19.9684 41.2177 20.72C40.4384 20.6463 40.124 20.3262 39.6156 19.536C39.5435 19.6337 39.5435 19.6337 39.47 19.7333C39.2259 19.6769 38.9829 19.6114 38.7417 19.536C38.8401 19.622 38.9385 19.708 39.0398 19.7965C39.9568 20.6259 40.5701 21.2451 40.9264 22.6933C41.2147 23.027 41.506 23.356 41.8003 23.68C42.1681 24.6767 42.0484 26.4552 41.8583 27.5303C41.7006 28.0452 41.593 28.3591 41.2177 28.6133C41.2019 28.7652 41.1862 28.9171 41.1699 29.0735C41.0388 29.7791 40.8228 29.9329 40.3802 30.3277C40.2548 30.4424 40.1294 30.5571 40.0002 30.6753C39.4723 31.0954 39.0681 31.3811 38.4504 31.3637C37.7149 31.0522 37.3935 30.459 37.0304 29.563C36.7757 28.6818 36.7501 27.7746 36.7027 26.8373C36.6546 28.0095 36.6066 29.1817 36.557 30.3893C35.5172 30.1881 35.167 30.035 34.518 29.008C34.3267 28.55 34.2069 28.1283 34.0811 27.6267C33.9849 27.822 33.8888 28.0174 33.7898 28.2187C33.3298 27.1849 33.399 26.0291 33.4985 24.864C33.717 24.0242 33.9588 23.295 34.543 22.8436C34.6309 22.794 34.7188 22.7444 34.8093 22.6933C34.6651 22.6933 34.5209 22.6933 34.3724 22.6933C34.1291 23.0819 33.9131 23.4613 33.6987 23.8773C33.4895 24.2757 33.2776 24.6695 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8841 23.877 32.9879 22.8527 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1877 17.6409 39.8485 17.3018 40.6778 16.6731C41.0335 16.4074 41.3718 16.2122 41.7548 16.0333C42.2496 15.8649 42.2496 15.8649 42.3829 15.392Z" fill="#6B99B1"/>
<path d="M36.0072 52.0736C36.1468 52.0746 36.2864 52.0757 36.4302 52.0767C36.5658 52.0772 36.7015 52.0777 36.8412 52.0782C37.1016 52.0809 37.1016 52.0809 37.3672 52.0837C37.9169 52.0877 38.4666 52.0918 39.033 52.096C39.2733 54.0496 39.5136 56.0032 39.7612 58.016C40.1217 55.0856 40.1217 55.0856 40.4895 52.096C41.5949 52.096 42.7004 52.096 43.8393 52.096C43.8393 56.0683 43.8393 60.0406 43.8393 64.1333C43.1184 64.1333 42.3974 64.1333 41.6546 64.1333C41.4239 63.8207 41.477 63.4866 41.4629 63.0534C41.4568 62.876 41.4507 62.6985 41.4444 62.5157C41.4387 62.3292 41.433 62.1426 41.4271 61.9503C41.4208 61.763 41.4145 61.5756 41.408 61.3826C41.3925 60.9182 41.3776 60.4538 41.3633 59.9893C41.3509 60.1008 41.3384 60.2124 41.3255 60.3272C41.2689 60.8314 41.2114 61.3354 41.154 61.8393C41.1344 62.0148 41.1147 62.1904 41.0945 62.3712C41.0753 62.5391 41.056 62.707 41.0362 62.88C41.0099 63.1125 41.0099 63.1125 40.983 63.3497C40.9264 63.7387 40.9264 63.7387 40.7808 64.1333C40.1079 64.1333 39.435 64.1333 38.7417 64.1333C38.5172 63.3727 38.4006 62.8821 38.3264 62.1006C38.3076 61.908 38.2888 61.7153 38.2695 61.5167C38.2511 61.3179 38.2327 61.1191 38.2137 60.9143C38.1942 60.7117 38.1747 60.5091 38.1546 60.3004C38.1067 59.8022 38.0597 59.3038 38.0135 58.8053C38.0098 58.9597 38.0062 59.1141 38.0024 59.2732C37.9856 59.9683 37.9677 60.6633 37.9498 61.3583C37.944 61.6014 37.9383 61.8444 37.9324 62.0949C37.9263 62.3257 37.9202 62.5566 37.9139 62.7944C37.9086 63.0083 37.9032 63.2222 37.8977 63.4426C37.8678 63.936 37.8678 63.936 37.7222 64.1333C37.3795 64.1477 37.0364 64.1498 36.6936 64.1457C36.5056 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4916 63.6142 35.519 63.2277 35.5187 62.6463C35.5182 62.4179 35.5177 62.1894 35.5173 61.954C35.5176 61.7063 35.5179 61.4586 35.5182 61.2034C35.518 60.9504 35.5179 60.6974 35.5177 60.4367C35.5175 59.901 35.5178 59.3654 35.5185 58.8298C35.5194 58.1418 35.5189 57.4539 35.518 56.7659C35.5174 56.1114 35.5178 55.4569 35.5182 54.8024C35.5179 54.5543 35.5176 54.3062 35.5173 54.0506C35.5177 53.8227 35.5182 53.5949 35.5187 53.3601C35.5188 53.1584 35.5189 52.9567 35.519 52.7489C35.5435 52.1446 35.5614 52.1044 36.0072 52.0736Z" fill="#3F86A8"/>
<path d="M62.1907 20.128C63.1966 20.921 63.6867 22.2345 64.0841 23.68C64.1441 24.1907 64.136 24.5457 64.0841 25.0613C63.68 24.7876 63.5882 24.4019 63.3559 23.8773C63.1241 23.4656 62.8812 23.082 62.6277 22.6933C62.5796 22.6933 62.5315 22.6933 62.482 22.6933C62.5434 22.8124 62.6048 22.9314 62.668 23.0541C62.7478 23.2118 62.8276 23.3695 62.9098 23.532C62.9893 23.6877 63.0687 23.8434 63.1505 24.0037C63.5945 25.0102 63.5602 26.0878 63.5015 27.232C63.3559 27.8487 63.3559 27.8487 63.2102 28.2187C63.1141 27.9582 63.018 27.6977 62.9189 27.4293C62.887 27.5461 62.8551 27.6628 62.8222 27.7831C62.4941 28.8909 62.2156 29.5517 61.4625 30.192C60.9578 30.2897 60.9578 30.2897 60.443 30.3893C60.3949 29.3474 60.3468 28.3055 60.2973 27.232C60.2613 27.525 60.2252 27.8181 60.1881 28.12C60.0087 29.3179 59.7734 30.3612 59.0866 31.191C58.5496 31.4448 58.224 31.3742 57.6757 31.1787C56.6703 30.4541 55.6161 29.1679 55.1457 27.733C55.0179 27.0343 54.9856 26.345 54.9722 25.6287C54.9682 25.4942 54.9643 25.3598 54.9602 25.2213C54.9667 24.0979 55.2183 23.6492 55.7823 22.8907C55.9265 22.7604 56.0707 22.6302 56.2192 22.496C56.2416 22.3396 56.2639 22.1831 56.2869 22.0219C56.4439 20.99 57.1989 20.4518 57.7997 19.8644C59.1491 18.7674 60.8562 19.2051 62.1907 20.128Z" fill="#6595AD"/>
<path d="M51.7042 35.52C55.3454 35.52 55.3454 35.52 56.2192 36.3093C56.6251 37.0131 56.5576 37.875 56.5595 38.7313C56.5604 38.8894 56.5614 39.0476 56.5624 39.2105C56.5639 39.5445 56.5646 39.8786 56.5645 40.2126C56.5651 40.7216 56.5704 41.2302 56.576 41.7391C56.5768 42.0644 56.5774 42.3897 56.5777 42.715C56.5798 42.8661 56.5818 43.0172 56.584 43.1729C56.5764 44.3942 56.2809 45.1058 55.6367 45.9787C55.6672 46.4491 55.6672 46.4491 55.7726 46.9823C55.8071 47.1822 55.8415 47.3822 55.877 47.5882C55.9338 47.9026 55.9338 47.9026 55.9917 48.2233C56.0655 48.6356 56.1382 49.0482 56.2096 49.4613C56.2427 49.6448 56.2758 49.8283 56.3099 50.0174C56.3654 50.5221 56.3394 50.8282 56.2192 51.3067C56.0893 51.2924 55.9594 51.2782 55.8255 51.2635C55.6551 51.2452 55.4846 51.2269 55.309 51.208C55.14 51.1897 54.971 51.1714 54.7969 51.1525C54.0852 51.0873 53.5638 51.1603 52.8978 51.4562C52.5781 51.504 52.5781 51.504 51.7042 51.1093C51.7042 45.9649 51.7042 40.8204 51.7042 35.52Z" fill="#D3D2D2"/>
<path d="M50.221 52.0767C50.4514 52.078 50.6819 52.0804 50.9123 52.0837C51.0297 52.0845 51.1471 52.0854 51.2681 52.0864C51.5591 52.0887 51.8501 52.0922 52.1411 52.096C52.5351 53.457 52.8486 54.8405 53.1607 56.24C53.2087 54.8725 53.2568 53.505 53.3063 52.096C54.0753 52.096 54.8443 52.096 55.6366 52.096C55.6399 53.6363 55.6426 55.1767 55.6442 56.717C55.6449 57.4322 55.646 58.1473 55.6476 58.8625C55.6492 59.5522 55.6501 60.2418 55.6505 60.9314C55.6509 61.3238 55.652 61.7161 55.6531 62.1084C55.6532 62.3455 55.6532 62.5825 55.6532 62.8267C55.6535 63.0366 55.6538 63.2465 55.6542 63.4628C55.6366 63.936 55.6366 63.936 55.491 64.1333C55.0741 64.1478 54.6607 64.1516 54.2439 64.1457C54.1265 64.1448 54.009 64.1439 53.888 64.143C53.597 64.1406 53.306 64.1371 53.015 64.1333C52.6734 63.2714 52.4499 62.4369 52.2595 61.494C52.2094 61.2483 52.1592 61.0025 52.1076 60.7494C52.0706 60.5637 52.0336 60.378 51.9955 60.1867C51.9972 60.4385 51.9989 60.6903 52.0006 60.9498C52.002 61.2792 52.0033 61.6086 52.0046 61.938C52.0058 62.1041 52.007 62.2702 52.0083 62.4413C52.009 62.6798 52.009 62.6798 52.0097 62.9231C52.0109 63.1432 52.0109 63.1432 52.012 63.3678C51.9955 63.7387 51.9955 63.7387 51.8499 64.1333C51.4888 64.1386 51.1277 64.1426 50.7666 64.1457C50.6636 64.1473 50.5607 64.149 50.4546 64.1507C50.1914 64.1524 49.9282 64.1436 49.6652 64.1333C49.4113 63.7894 49.5009 63.3156 49.5007 62.848C49.5002 62.6155 49.4998 62.3831 49.4993 62.1436C49.4996 61.8906 49.4999 61.6375 49.5002 61.3768C49.5 61.1192 49.4999 60.8615 49.4998 60.596C49.4995 60.0499 49.4999 59.5038 49.5005 58.9577C49.5014 58.2562 49.5009 57.5548 49.5 56.8534C49.4994 56.1864 49.4998 55.5194 49.5002 54.8525C49.4999 54.5995 49.4996 54.3464 49.4993 54.0857C49.4997 53.8533 49.5002 53.6208 49.5007 53.3814C49.5008 53.1756 49.5009 52.9698 49.501 52.7577C49.532 51.9809 49.6169 52.0977 50.221 52.0767Z" fill="#3C82A2"/>
<path d="M40.9264 35.52C41.5513 35.52 42.1761 35.52 42.8198 35.52C42.8198 37.6038 42.8198 39.6877 42.8198 41.8347C43.1563 41.8347 43.4927 41.8347 43.8394 41.8347C43.8394 39.7508 43.8394 37.667 43.8394 35.52C44.4642 35.52 45.089 35.52 45.7327 35.52C45.7551 37.5234 45.7767 39.5269 45.7973 41.5304C45.8068 42.4606 45.8167 43.3908 45.8272 44.3209C45.8372 45.2179 45.8466 46.1148 45.8555 47.0117C45.859 47.3547 45.8628 47.6976 45.8668 48.0406C45.8724 48.5193 45.8771 48.998 45.8816 49.4767C45.8834 49.6199 45.8853 49.7631 45.8873 49.9107C45.8899 50.2444 45.885 50.5783 45.8784 50.912C45.6048 51.2826 45.1444 51.1865 44.7769 51.2203C44.6025 51.2369 44.4281 51.2534 44.2484 51.2704C44.1134 51.2824 43.9784 51.2944 43.8394 51.3067C43.4902 50.1753 43.3173 49.1745 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9672 48.1469 42.9689 48.3417 42.9706 48.5425C42.9719 48.7953 42.9732 49.0482 42.9746 49.3087C42.9763 49.5605 42.978 49.8123 42.9797 50.0718C42.9655 50.7147 42.9655 50.7147 42.8198 51.1093C42.4284 51.198 42.4284 51.198 41.946 51.245C41.7867 51.262 41.6275 51.2791 41.4635 51.2966C41.3343 51.3 41.2052 51.3033 41.0721 51.3067C40.8233 50.9696 40.909 50.545 40.9083 50.0955C40.9088 49.9504 40.9094 49.8053 40.9099 49.6559C40.9099 49.5038 40.9099 49.3517 40.9098 49.195C40.9099 48.69 40.9111 48.1849 40.9122 47.6799C40.9125 47.3307 40.9127 46.9814 40.9128 46.6322C40.9134 45.7112 40.9148 44.7902 40.9164 43.8692C40.9179 42.9301 40.9186 41.991 40.9193 41.0519C40.9209 39.2079 40.9234 37.364 40.9264 35.52Z" fill="#FBFBFB"/>
<path d="M48.6275 35.4583C48.7286 35.4552 48.8298 35.452 48.9341 35.4487C49.6275 35.4478 50.1074 35.5886 50.6847 36.112C51.1286 36.9073 51.1782 37.5117 51.1846 38.4968C51.1868 38.702 51.1868 38.702 51.1891 38.9114C51.1935 39.3609 51.1948 39.8103 51.1962 40.2599C51.1986 40.5726 51.2013 40.8853 51.2041 41.198C51.211 42.0191 51.2153 42.8401 51.2192 43.6612C51.2235 44.4999 51.2303 45.3385 51.2368 46.1772C51.2494 47.8212 51.2592 49.4652 51.2673 51.1093C50.9306 51.1476 50.5937 51.1843 50.2569 51.2203C50.0693 51.2409 49.8817 51.2615 49.6885 51.2828C49.5366 51.2907 49.3847 51.2985 49.2282 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9515 48.4969 48.937 48.1493C48.7928 48.1493 48.6486 48.1493 48.5 48.1493C48.4039 49.1261 48.3078 50.1029 48.2087 51.1093C47.5358 51.1093 46.863 51.1093 46.1697 51.1093C46.1502 48.7969 46.208 46.5111 46.3153 44.2027C47.2766 44.2027 48.2379 44.2027 49.2282 44.2027C49.1802 42.3142 49.1321 40.4257 49.0826 38.48C48.8423 38.48 48.602 38.48 48.3544 38.48C48.3063 40.3034 48.2582 42.1267 48.2087 44.0053C47.5839 44.0053 46.9591 44.0053 46.3153 44.0053C46.3009 43.0434 46.2903 42.0816 46.2833 41.1195C46.2804 40.7926 46.2764 40.4657 46.2714 40.1388C46.2643 39.6676 46.261 39.1965 46.2584 38.7251C46.2554 38.5802 46.2524 38.4352 46.2493 38.2858C46.249 37.2667 46.4268 36.7012 46.8979 35.9147C47.4078 35.382 48.009 35.4545 48.6275 35.4583Z" fill="#FAFAFA"/>
<path d="M57.0931 35.52C57.7179 35.52 58.3427 35.52 58.9865 35.52C59.0346 37.0829 59.0826 38.6458 59.1321 40.256C59.3657 38.8452 59.3657 38.8452 59.5983 37.4341C59.6275 37.2588 59.6567 37.0835 59.6868 36.9029C59.7315 36.6332 59.7315 36.6332 59.777 36.358C59.8604 35.9147 59.8604 35.9147 60.006 35.52C60.6308 35.52 61.2556 35.52 61.8994 35.52C61.7535 36.7812 61.5915 38.0273 61.3834 39.2724C61.3442 39.507 61.3051 39.7415 61.2648 39.9831C61.1836 40.4645 61.1013 40.9455 61.0178 41.4261C60.8062 42.7072 60.6758 43.7056 60.8799 44.992C60.9009 45.134 60.9218 45.2761 60.9434 45.4224C61.0116 45.8767 61.086 46.3284 61.1621 46.7803C61.1868 46.9311 61.2114 47.0818 61.2369 47.2371C61.3873 48.1431 61.5638 49.0327 61.7538 49.9253C61.8066 50.319 61.8566 50.7134 61.8994 51.1093C61.1343 51.5989 60.4861 51.4762 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.216 51.3738 57.5912 51.2435 56.9474 51.1093C56.9955 45.9649 57.0436 40.8204 57.0931 35.52Z" fill="#F9F9F9"/>
<path d="M37.7586 35.4707C37.9228 35.4646 37.9228 35.4646 38.0903 35.4583C38.7977 35.4516 39.3161 35.5294 39.9069 36.112C40.3832 37.1849 40.3996 38.1265 40.3711 39.3557C40.3682 39.6004 40.3682 39.6004 40.3652 39.8502C40.3601 40.2486 40.3522 40.647 40.3438 41.0453C39.719 41.0453 39.0942 41.0453 38.4504 41.0453C38.3783 39.7755 38.3783 39.7755 38.3048 38.48C38.0645 38.48 37.8242 38.48 37.5766 38.48C37.428 39.2626 37.4195 39.8678 37.5766 40.6507C38.0754 41.5954 38.7384 42.3586 39.3769 43.1257C40.3291 44.2731 40.3291 44.2731 40.3673 45.1124C40.3739 45.8123 40.3781 46.5121 40.3802 47.212C40.3832 47.4544 40.3862 47.6968 40.3893 47.9466C40.3905 48.2988 40.3905 48.2988 40.3916 48.6581C40.393 48.8726 40.3943 49.0871 40.3957 49.3081C40.3353 50.0271 40.1849 50.494 39.9069 51.1093C39.3751 51.5897 38.9743 51.5647 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.292 49.9144 35.3635 48.8322 35.4374 47.471C35.4463 47.2702 35.4552 47.0693 35.4644 46.8624C35.4866 46.3703 35.5118 45.8785 35.5375 45.3867C36.1623 45.3867 36.7872 45.3867 37.4309 45.3867C37.4309 46.5588 37.4309 47.731 37.4309 48.9387C37.8635 48.841 37.8635 48.841 38.3048 48.7413C38.4384 47.4887 38.5323 46.4198 37.9788 45.3466C37.5831 44.7837 37.1502 44.2934 36.7027 43.808C36.6067 43.7007 36.5108 43.5933 36.412 43.4827C36.299 43.3568 36.299 43.3568 36.1838 43.2283C35.717 42.6932 35.5609 42.3162 35.4929 41.4902C35.4827 40.8238 35.4762 40.1578 35.4738 39.4913C35.469 39.2601 35.4642 39.0289 35.4593 38.7906C35.4505 36.8886 35.4505 36.8886 35.8874 36.1598C36.5006 35.4427 36.977 35.4778 37.7586 35.4707Z" fill="#B1B1B1"/>
<path d="M56.0736 52.096C56.8426 52.096 57.6116 52.096 58.4039 52.096C58.5437 52.6643 58.5673 53.0168 58.5661 53.6066C58.5661 53.7922 58.5661 53.9779 58.5661 54.1691C58.5653 54.369 58.5646 54.5688 58.5638 54.7747C58.5636 54.9797 58.5634 55.1847 58.5632 55.3959C58.5624 56.0514 58.5605 56.7069 58.5587 57.3623C58.558 57.8065 58.5573 58.2506 58.5567 58.6947C58.5551 59.784 58.5526 60.8734 58.5496 61.9627C58.838 61.9627 59.1263 61.9627 59.4235 61.9627C59.4715 58.7067 59.5196 55.4507 59.5691 52.096C60.29 52.096 61.011 52.096 61.7538 52.096C61.9871 52.4121 61.9191 52.747 61.9206 53.1846C61.9215 53.3743 61.9224 53.5641 61.9234 53.7596C61.9236 53.9663 61.9237 54.1731 61.9239 54.3862C61.9246 54.7035 61.9246 54.7035 61.9254 55.0272C61.9261 55.4762 61.9264 55.9253 61.9264 56.3744C61.9267 57.06 61.9294 57.7455 61.9321 58.4311C61.9326 58.867 61.9329 59.3029 61.933 59.7388C61.934 59.9436 61.9351 60.1484 61.9362 60.3594C61.9307 62.7096 61.9307 62.7096 61.2713 63.603C60.5402 64.225 59.7654 64.1693 58.9228 64.1703C58.8153 64.1728 58.7078 64.1752 58.5971 64.1777C57.7862 64.1806 57.1016 64.0899 56.465 63.344C56.0745 62.7169 56.0557 62.3563 56.0571 61.5498C56.0571 61.3404 56.0571 61.1311 56.0571 60.9154C56.0579 60.6886 56.0586 60.4619 56.0594 60.2283C56.0596 59.9967 56.0598 59.7651 56.06 59.5265C56.0608 58.7846 56.0627 58.0426 56.0645 57.3007C56.0652 56.7986 56.0659 56.2965 56.0665 55.7945C56.0681 54.5616 56.0706 53.3288 56.0736 52.096Z" fill="#377896"/>
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4118 10.1063 49.8599 10.2505 50.3547 10.3832C51.6804 10.7429 52.6609 11.5234 53.4519 13.024C53.0666 13.5674 52.6727 14.0246 52.2231 14.467C51.6183 15.0896 51.2519 15.7279 50.8303 16.576C50.7342 16.576 50.6381 16.576 50.539 16.576C50.5291 16.691 50.5191 16.806 50.5089 16.9244C50.3483 17.5374 50.1007 17.7356 49.7107 18.1053C49.5869 18.2264 49.4632 18.3475 49.3357 18.4723C48.8531 18.8044 48.5984 18.8539 48.063 18.7467C47.5954 18.4013 47.5954 18.4013 47.1346 17.9573C46.9802 17.8108 46.8259 17.6643 46.6669 17.5133C46.5509 17.3994 46.4348 17.2854 46.3153 17.168C46.3634 16.9075 46.4114 16.647 46.4609 16.3787C46.3736 16.3642 46.2863 16.3497 46.1964 16.3347C45.669 16.0804 45.5153 15.458 45.2463 14.8254C44.9546 14.3187 44.7191 14.2154 44.2763 14.0107C44.0282 13.7568 43.7841 13.4954 43.548 13.2213C43.9781 11.8996 44.8036 11.1004 45.7782 10.582C46.5865 10.2231 47.3615 10.1236 48.2087 10.064C48.1366 8.79417 48.1366 8.79417 48.063 7.49867Z" fill="#709BB2"/>
<path d="M43.0656 17.464C43.6591 17.5854 43.869 17.8774 44.2757 18.4491C45.1728 19.3636 46.3312 19.1918 47.392 19.1544C47.6748 19.1447 47.9575 19.1368 48.2403 19.1298C48.7639 19.1164 49.2873 19.0985 49.8108 19.0797C49.9812 19.0753 50.1515 19.0709 50.327 19.0663C51.409 19.0196 52.1081 18.8154 53.0514 18.1053C53.3063 17.9573 53.3063 17.9573 53.7433 18.1547C53.3155 19.4895 52.388 20.3246 51.4493 20.952C50.3269 21.5091 49.3226 21.559 48.1359 21.534C47.9744 21.5322 47.813 21.5304 47.6466 21.5286C47.2514 21.524 46.8562 21.5169 46.461 21.5093C47.3261 21.7047 47.3261 21.7047 48.2087 21.904C48.3742 22.5768 48.3351 22.694 48.145 23.3223C48.1031 23.4635 48.0613 23.6047 48.0181 23.7501C47.9849 23.8572 47.9517 23.9643 47.9174 24.0747C47.8213 24.0747 47.7252 24.0747 47.6261 24.0747C47.6261 24.27 47.6261 24.4654 47.6261 24.6667C47.7223 24.6667 47.8184 24.6667 47.9174 24.6667C47.9595 24.4754 48.0015 24.2841 48.0449 24.087C48.2087 23.4827 48.2087 23.4827 48.5 23.2853C48.5631 23.4766 48.6262 23.6679 48.6912 23.865C48.8935 24.5241 48.8935 24.5241 49.3739 24.6667C49.5181 24.2108 49.6623 23.755 49.8108 23.2853C50.1021 23.68 50.1021 23.68 50.3934 24.4693C50.2012 23.753 50.0089 23.0367 49.8108 22.2987C49.5224 23.1778 49.5224 23.1778 49.2282 24.0747C49.1321 24.0747 49.036 24.0747 48.937 24.0747C48.7928 23.4235 48.6486 22.7723 48.5 22.1013C49.2638 21.7564 49.8797 21.6684 50.6847 21.7067C50.7027 21.9305 50.7207 22.1544 50.7393 22.385C50.7694 22.617 50.7994 22.849 50.8303 23.088C50.9265 23.1531 51.0226 23.2182 51.1216 23.2853C51.1216 23.7412 51.1216 24.197 51.1216 24.6667C51.362 24.6667 51.6023 24.6667 51.8499 24.6667C51.4667 25.3385 50.9873 25.5115 50.3934 25.6533C49.7225 25.7202 49.0542 25.7264 48.3817 25.7273C48.1151 25.7346 48.1151 25.7346 47.8432 25.742C46.7785 25.7466 45.7774 25.6685 44.8589 24.864C44.8108 24.6686 44.7627 24.4733 44.7132 24.272C44.6411 24.1865 44.569 24.1011 44.4948 24.013C44.1882 23.5457 44.1806 23.1048 44.1306 22.496C44.2268 22.496 44.3229 22.496 44.4219 22.496C44.47 22.0402 44.5181 21.5843 44.5676 21.1147C44.7118 21.1798 44.856 21.2449 45.0045 21.312C44.9565 21.8981 44.9084 22.4842 44.8589 23.088C44.955 23.0229 45.0511 22.9578 45.1502 22.8907C45.2463 23.4768 45.3424 24.0628 45.4415 24.6667C45.5376 24.6667 45.6337 24.6667 45.7327 24.6667C45.7573 24.3831 45.7815 24.0994 45.8056 23.8157C45.8258 23.5787 45.8258 23.5787 45.8465 23.337C45.8854 22.8672 45.8854 22.8672 45.8784 22.2987C45.7823 22.6894 45.6861 23.0801 45.5871 23.4827C45.2958 23.088 45.2958 23.088 45.2674 22.6178C45.2707 22.4392 45.2741 22.2607 45.2776 22.0767C45.2802 21.8971 45.2829 21.7175 45.2856 21.5325C45.2889 21.3946 45.2923 21.2567 45.2958 21.1147C45.44 21.1147 45.5842 21.1147 45.7327 21.1147C45.6516 21.0595 45.5705 21.0043 45.487 20.9474C44.6635 20.3613 43.8732 19.707 43.2568 18.7467C43.2568 18.5513 43.2568 18.356 43.2568 18.1547C43.1606 18.1547 43.0645 18.1547 42.9655 18.1547C43.0063 18.7428 43.049 19.3306 43.0929 19.9183C43.1044 20.0861 43.1158 20.2539 43.1276 20.4267C43.1398 20.5863 43.152 20.7459 43.1646 20.9104C43.1753 21.0582 43.186 21.206 43.197 21.3582C43.2167 21.4732 43.2364 21.5882 43.2568 21.7067C43.3529 21.7718 43.449 21.8369 43.5481 21.904C43.6756 22.2809 43.7923 22.6645 43.9031 23.051C44.2329 24.3601 44.2329 24.3601 44.9683 25.2291C45.903 25.6968 46.8686 25.8391 47.8537 25.9863C48.0145 26.0119 48.1753 26.0375 48.341 26.0638C48.7337 26.126 49.1265 26.1865 49.5195 26.2453C49.5195 26.3105 49.5195 26.3756 49.5195 26.4427C46.7516 26.5155 46.7516 26.5155 45.5871 26.048C45.7871 26.1437 45.9874 26.238 46.1879 26.3317C46.2994 26.3843 46.4109 26.437 46.5258 26.4912C47.4694 26.8685 48.3806 26.8613 49.3557 26.8497C49.4976 26.8488 49.6396 26.8479 49.7858 26.847C50.134 26.8447 50.4822 26.8414 50.8303 26.8373C50.6847 27.232 50.6847 27.232 50.4314 27.3533C49.7781 27.5042 49.1156 27.4658 48.4545 27.4663C48.3059 27.4688 48.1573 27.4712 48.0042 27.4737C46.4733 27.4777 45.4493 26.9988 44.2763 25.6533C43.9487 25.1547 43.6739 24.6305 43.4024 24.0747C43.1895 23.6395 43.1895 23.6395 42.9655 23.2853C42.8694 23.2853 42.7732 23.2853 42.6742 23.2853C42.0955 21.8376 41.7576 20.6032 41.946 18.944C42.198 18.1834 42.4363 17.6226 43.0656 17.464Z" fill="#8F7B77"/>
<path d="M53.6795 26.381C53.8871 26.3821 53.8871 26.3821 54.0988 26.3833C54.4715 26.4427 54.4715 26.4427 54.9084 26.8373C54.9719 27.2082 55.035 27.5792 55.095 27.9512C55.3489 29.0783 55.8544 30.1564 56.4923 30.9567C56.6455 31.1642 56.6455 31.1642 56.8018 31.376C56.8018 31.6365 56.8018 31.897 56.8018 32.1653C56.552 32.4945 56.552 32.4945 56.2283 32.7943C56.1219 32.8948 56.0154 32.9953 55.9057 33.0988C55.7725 33.2228 55.7725 33.2228 55.6366 33.3493C55.5886 33.4145 55.5405 33.4796 55.491 33.5467C55.7313 33.4164 55.9716 33.2862 56.2192 33.152C56.1231 33.673 56.027 34.1939 55.9279 34.7307C55.7927 34.7286 55.6574 34.7265 55.5181 34.7244C55.017 34.7177 54.516 34.7127 54.0149 34.709C53.7979 34.707 53.5809 34.7043 53.3639 34.7009C53.0523 34.6961 52.7407 34.6939 52.429 34.6921C52.2414 34.6901 52.0538 34.688 51.8604 34.6859C51.3973 34.6659 51.3973 34.6659 51.1216 35.1253C50.8423 35.0845 50.8423 35.0845 50.5117 34.965C49.9379 34.77 49.3778 34.6348 48.7913 34.5333C48.8393 34.338 48.8874 34.1426 48.9369 33.9413C49.0331 33.9413 49.1292 33.9413 49.2282 33.9413C49.1328 33.8688 49.0375 33.7963 48.9392 33.7217C48.6456 33.3493 48.6456 33.3493 48.5887 32.7735C48.5955 32.5606 48.6023 32.3477 48.6092 32.1283C48.6145 31.9139 48.6197 31.6995 48.6252 31.4785C48.6319 31.3145 48.6387 31.1504 48.6456 30.9813C48.8379 31.0465 49.0301 31.1116 49.2282 31.1787C49.084 31.0484 48.9398 30.9182 48.7913 30.784C48.7435 30.3639 48.7435 30.3639 48.7549 29.8837C48.7571 29.7247 48.7594 29.5657 48.7617 29.4019C48.7913 29.008 48.7913 29.008 48.9369 28.8107C49.1544 28.7464 49.3731 28.6903 49.5923 28.638C51.1032 28.2645 51.1032 28.2645 52.2868 27.0347C52.7506 26.4608 53.056 26.3661 53.6795 26.381Z" fill="#DEDFDE"/>
<path d="M44.1306 26.4427C44.5949 26.899 44.5949 26.899 44.8589 27.4293C44.8589 27.6247 44.8589 27.8201 44.8589 28.0213C44.7627 28.0865 44.6666 28.1516 44.5676 28.2187C44.7075 28.2118 44.7075 28.2118 44.8503 28.2048C45.6452 28.1823 46.2801 28.2815 47.0435 28.6133C47.2298 28.6459 47.416 28.6785 47.6079 28.712C47.7581 28.7446 47.9083 28.7771 48.0631 28.8107C48.2972 29.445 48.2171 30.0807 48.2087 30.784C47.3985 31.309 46.6164 31.5659 45.7327 31.7707C46.6881 31.6937 47.4725 31.4902 48.3544 30.9813C48.3544 31.8279 48.3544 32.6745 48.3544 33.5467C48.1621 33.6769 47.9698 33.8071 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3544 34.1387C48.2823 34.334 48.2823 34.334 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.467 34.7738 47.3534 34.8046 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.4491 34.7069 45.0326 34.7038 44.604 34.7183C43.3694 34.7414 42.1568 34.6729 40.9264 34.5333C40.9122 34.4143 40.8979 34.2952 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733C40.5332 31.5082 41.0138 31.4431 41.509 31.376C41.1726 31.3109 40.8361 31.2458 40.4895 31.1787C40.5458 31.0876 40.6021 30.9965 40.6602 30.9027C41.4219 29.6101 41.8757 28.2701 42.0916 26.64C42.7655 26.3357 43.4277 26.3161 44.1306 26.4427Z" fill="#D9DADA"/>
<path d="M65.2493 28.0213C65.7659 28.3195 66.1023 28.7294 66.4964 29.267C66.6077 29.4168 66.719 29.5667 66.8337 29.721C67.5833 30.8638 67.5833 30.8638 67.5739 31.6651C67.4057 32.6269 67.2208 33.4714 66.8514 34.336C66.7552 34.336 66.6591 34.336 66.5601 34.336C66.464 34.1406 66.3678 33.9453 66.2688 33.744C66.1197 34.4108 66.1037 35.0224 66.1049 35.7173C66.1046 35.9208 66.1042 36.1243 66.1038 36.334C66.1204 36.8217 66.1649 37.2258 66.2688 37.6907C66.3319 37.475 66.395 37.2592 66.4599 37.037C66.6325 36.4923 66.7825 36.078 67.1427 35.7173C67.2388 35.7173 67.3349 35.7173 67.434 35.7173C67.3736 36.399 67.3063 37.0271 67.1427 37.6783C66.9659 38.4116 66.9099 39.0947 66.8514 39.8613C66.7552 39.8613 66.6591 39.8613 66.5601 39.8613C66.6352 40.0648 66.7103 40.2683 66.7876 40.478C67.0126 41.1935 67.0453 41.6735 66.8514 42.4267C66.551 42.698 66.551 42.698 66.2688 42.8213C66.2688 42.4306 66.2688 42.0399 66.2688 41.6373C66.1944 41.8483 66.1944 41.8483 66.1186 42.0636C65.4978 43.7255 64.7485 44.9366 63.5015 45.7813C63.3077 45.8489 63.1135 45.915 62.9189 45.9787C62.7747 46.174 62.7747 46.174 62.6276 46.3733C62.6327 46.1848 62.6378 45.9963 62.643 45.8021C62.6675 44.2202 62.6628 42.7272 62.1907 41.2427C62.0946 41.1775 61.9985 41.1124 61.8994 41.0453C61.8704 39.91 61.956 38.966 62.1816 37.8757C62.3795 36.8932 62.5354 35.9397 62.6276 34.928C62.1951 34.7978 61.7625 34.6675 61.3168 34.5333C61.3641 33.8677 61.4192 33.2866 61.6172 32.671C61.9884 32.2655 62.3064 32.2519 62.7744 32.2879C63.4535 32.4629 63.747 33.0648 64.1296 33.7933C64.4432 34.5834 64.4196 35.2278 64.3754 36.112C64.3418 36.5246 64.3418 36.5246 64.5757 36.7903C64.6538 36.8921 64.7319 36.9938 64.8123 37.0987C65.2044 37.8956 65.218 38.5306 65.1036 39.4667C64.8426 40.1862 64.4847 40.5814 63.9476 40.922C63.4941 41.0474 63.0891 41.0751 62.6276 41.0453C62.6992 41.2046 62.7707 41.3638 62.8444 41.5279C63.1151 42.3904 63.1144 43.0579 63.0919 43.9807C63.0899 44.1353 63.0879 44.29 63.0859 44.4493C63.0808 44.8276 63.073 45.2058 63.0646 45.584C63.2358 45.3886 63.2358 45.3886 63.4105 45.1893C63.7928 44.7947 63.7928 44.7947 64.0841 44.7947C64.1232 44.6797 64.1622 44.5647 64.2024 44.4462C64.3775 43.9998 64.5703 43.649 64.8123 43.2653C64.8874 43.1442 64.9625 43.0232 65.0399 42.8984C65.2493 42.624 65.2493 42.624 65.5406 42.624C65.5826 42.51 65.6247 42.3961 65.668 42.2787C65.7669 42.0106 65.8709 41.7456 65.9838 41.4878C66.3299 40.389 66.2563 38.9956 65.9701 37.8872C65.7244 37.2126 65.4974 36.6456 65.1036 36.112C65.0079 35.7123 64.9212 35.3087 64.8396 34.9033C64.6618 34.0769 64.4867 33.3998 64.1205 32.6957C63.7119 31.8814 63.6881 31.3666 63.7928 30.3893C64.1168 29.587 64.4631 28.7621 65.1309 28.4777C65.2616 28.4471 65.2616 28.4471 65.3949 28.416C65.3468 28.2858 65.2988 28.1555 65.2493 28.0213Z" fill="#6592A7"/>
<path d="M45.5643 52.0698C45.664 52.0696 45.7636 52.0694 45.8663 52.0692C46.0774 52.0691 46.2885 52.0695 46.4996 52.0703C46.8237 52.0713 47.1478 52.0703 47.4719 52.069C47.6766 52.0692 47.8812 52.0694 48.0858 52.0698C48.2733 52.07 48.4607 52.0702 48.6539 52.0705C49.0826 52.096 49.0826 52.096 49.2282 52.2933C49.248 53.0163 49.2522 53.5772 49.0826 54.2667C48.3616 54.3318 47.6407 54.3969 46.8979 54.464C46.9009 54.7815 46.9039 55.0989 46.907 55.426C46.9161 56.388 46.9161 56.388 46.7522 56.832C47.4732 56.832 48.1941 56.832 48.9369 56.832C48.9369 57.6134 48.9369 58.3949 48.9369 59.2C48.264 59.2651 47.5912 59.3302 46.8979 59.3973C46.8979 60.1788 46.8979 60.9602 46.8979 61.7653C47.1142 61.6677 47.1142 61.6677 47.3348 61.568C47.6083 61.5751 47.8816 61.597 48.1541 61.6297C48.2971 61.6452 48.4402 61.6607 48.5876 61.6767C48.7029 61.7059 48.8182 61.7352 48.9369 61.7653C49.1187 62.258 49.0755 62.5178 49.028 63.0603C49.0148 63.2193 49.0017 63.3783 48.9881 63.5421C48.9369 63.936 48.9369 63.936 48.7913 64.1333C48.4805 64.1531 48.1693 64.1591 47.8582 64.1595C47.6688 64.1598 47.4794 64.1601 47.2842 64.1603C47.185 64.1599 47.0859 64.1595 46.9837 64.1591C46.6807 64.158 46.3777 64.1591 46.0746 64.1603C45.7905 64.1599 45.7905 64.1599 45.5006 64.1595C45.3253 64.1593 45.1501 64.1591 44.9695 64.1589C44.5676 64.1333 44.5676 64.1333 44.4219 63.936C44.4075 63.5738 44.4033 63.2107 44.4031 62.848C44.4026 62.6155 44.4021 62.3831 44.4017 62.1436C44.402 61.8906 44.4023 61.6375 44.4026 61.3768C44.4024 61.1192 44.4023 60.8615 44.4021 60.596C44.4019 60.0499 44.4022 59.5038 44.4029 58.9577C44.4038 58.2562 44.4033 57.5548 44.4024 56.8534C44.4017 56.1864 44.4022 55.5195 44.4026 54.8525C44.4023 54.5995 44.402 54.3464 44.4017 54.0857C44.4021 53.8533 44.4026 53.6209 44.4031 53.3814C44.4032 53.1756 44.4033 52.9698 44.4034 52.7577C44.4418 51.795 44.963 52.0705 45.5643 52.0698Z" fill="#3B7D9D"/>
<path d="M33.3528 32.3627C33.4489 32.3627 33.5451 32.3627 33.6441 32.3627C33.5509 32.9971 33.3803 33.4633 33.1344 34.0153C32.8375 34.7166 32.671 35.2938 32.6246 36.112C32.7688 36.1771 32.913 36.2422 33.0615 36.3093C32.8387 36.5534 32.6159 36.7975 32.393 37.0416C32.128 37.3699 32.05 37.6008 32.0073 38.083C31.9894 38.8413 31.9975 39.3462 32.2514 40.034C32.6309 40.4604 32.8256 40.5477 33.2891 40.7123C33.8876 40.9397 33.8876 40.9397 34.1072 41.4254C34.2176 41.8593 34.2176 41.8593 34.2944 42.2802C34.333 42.4504 34.333 42.4504 34.3723 42.624C34.4685 42.6891 34.5646 42.7542 34.6636 42.8213C34.6156 42.6748 34.5675 42.5283 34.518 42.3773C34.3723 41.8347 34.3723 41.8347 34.3723 41.0453C34.4685 41.0453 34.5646 41.0453 34.6636 41.0453C34.6619 40.8169 34.6603 40.5885 34.6585 40.3531C34.6571 40.0494 34.6558 39.7457 34.6545 39.442C34.6533 39.2919 34.6521 39.1418 34.6508 38.9872C34.6481 38.1334 34.7042 37.3506 34.8093 36.5067C34.7612 36.3764 34.7132 36.2462 34.6636 36.112C34.7748 36.0265 34.8859 35.9411 35.0004 35.853C35.4741 35.4703 35.4741 35.4703 35.8288 34.928C35.9086 34.3992 35.9418 33.8893 35.9744 33.3493C36.2657 33.744 36.2657 33.744 36.2839 34.262C36.2779 34.4167 36.2719 34.5713 36.2657 34.7307C36.3775 34.6834 36.3775 34.6834 36.4916 34.6351C37.7874 34.2655 39.1329 34.4345 40.3438 35.1253C40.098 35.5323 40.098 35.5323 39.7612 35.9147C39.5172 35.8584 39.2747 35.79 39.033 35.7173C38.6204 35.6723 38.2088 35.6629 37.795 35.6557C37.632 35.6471 37.632 35.6471 37.4656 35.6383C36.8914 35.6294 36.6219 35.6613 36.1246 36.0912C35.4656 37.0168 35.6449 38.1969 35.6376 39.4173C35.6334 39.6503 35.6292 39.8834 35.6248 40.1234C35.6104 41.8159 35.6104 41.8159 36.2657 43.216C36.4976 43.5272 36.7376 43.8277 36.9849 44.1163C37.112 44.2705 37.2391 44.4246 37.37 44.5835C37.7292 45.0136 37.7292 45.0136 38.1773 45.4237C38.6578 46.4002 38.5274 47.6035 38.4504 48.7413C38.4024 48.8065 38.3543 48.8716 38.3048 48.9387C38.0164 48.9387 37.728 48.9387 37.4309 48.9387C37.4309 47.7665 37.4309 46.5944 37.4309 45.3867C36.758 45.3867 36.0851 45.3867 35.3919 45.3867C35.3919 46.3635 35.3919 47.3403 35.3919 48.3467C35.1996 48.3467 35.0074 48.3467 34.8093 48.3467C34.798 48.1946 34.7867 48.0424 34.7751 47.8857C34.7006 47.3403 34.7006 47.3403 34.3883 47.0686C34.2749 46.9938 34.1615 46.9191 34.0446 46.842C33.8661 46.7203 33.8661 46.7203 33.6839 46.5961C33.5747 46.5226 33.4654 46.4491 33.3528 46.3733C33.2267 46.2634 33.1005 46.1536 32.9705 46.0403C32.5323 45.7122 32.0886 45.5537 31.6051 45.3867C31.6051 45.2564 31.6051 45.1262 31.6051 44.992C32.687 44.9356 32.687 44.9356 33.2072 45.3867C33.2072 45.5169 33.2072 45.6472 33.2072 45.7813C33.6981 46.077 33.9652 46.176 34.518 46.176C34.518 46.0458 34.518 45.9155 34.518 45.7813C34.2823 45.4584 34.2823 45.4584 33.9809 45.1277C33.5053 44.5806 33.0587 44.0199 32.6246 43.4133C32.6727 43.2831 32.7207 43.1529 32.7702 43.0187C32.9625 43.1489 33.1547 43.2792 33.3528 43.4133C33.3528 43.5436 33.3528 43.6738 33.3528 43.808C33.4279 43.8528 33.503 43.8975 33.5804 43.9437C34.07 44.3009 34.5077 44.7434 34.9549 45.1893C34.9549 44.9289 34.9549 44.6684 34.9549 44.4C34.7927 44.3145 34.7927 44.3145 34.6272 44.2273C34.2897 44.0403 33.9676 43.8379 33.6441 43.6107C33.6441 43.4804 33.6441 43.3502 33.6441 43.216C33.5662 43.1636 33.4883 43.1112 33.408 43.0572C33.2937 42.9794 33.1793 42.9015 33.0615 42.8213C32.8517 42.6802 32.8517 42.6802 32.6377 42.5361C31.246 41.5314 31.246 41.5314 30.9861 40.5643C30.95 40.3323 30.914 40.1004 30.8768 39.8613C30.8288 39.8613 30.7807 39.8613 30.7312 39.8613C30.7839 38.2857 31.1077 37.4188 31.7507 36.112C31.8468 36.112 31.943 36.112 32.042 36.112C32.048 35.9248 32.054 35.7376 32.0602 35.5447C32.1665 34.4978 32.5963 33.5884 33.0615 32.7573C33.1577 32.7573 33.2538 32.7573 33.3528 32.7573C33.3528 32.6271 33.3528 32.4969 33.3528 32.3627Z" fill="#080A0B"/>
<path d="M67.4339 31.7707C67.53 31.7707 67.6262 31.7707 67.7252 31.7707C68.2103 33.9255 67.8305 36.1149 67.3921 38.2064C67.126 39.5484 67.1192 40.6174 67.2735 41.9996C67.2918 42.7743 67.1623 43.1631 66.8513 43.808C66.5691 44.0909 66.5691 44.0909 66.2687 44.289C65.6383 44.7742 65.5171 45.2608 65.2492 46.176C64.5602 47.4685 63.4404 48.4418 62.3363 48.9387C61.7674 48.7776 61.7674 48.7776 61.3168 48.544C61.1891 47.8544 61.066 47.1634 60.9436 46.472C60.8896 46.1812 60.8896 46.1812 60.8346 45.8846C60.6347 44.74 60.5491 43.7845 60.7342 42.624C60.7712 42.363 60.7712 42.363 60.8088 42.0967C60.8951 41.4983 60.9868 40.9018 61.0801 40.3053C61.1125 40.0961 61.145 39.8869 61.1784 39.6713C61.3961 38.2783 61.6312 36.897 61.8994 35.52C61.2746 35.52 60.6497 35.52 60.006 35.52C60.006 35.4549 60.006 35.3898 60.006 35.3227C60.6789 35.2575 61.3517 35.1924 62.045 35.1253C61.6845 34.93 61.6845 34.93 61.3168 34.7307C61.3168 34.6655 61.3168 34.6004 61.3168 34.5333C62.136 34.484 62.136 34.484 62.6276 34.928C62.703 35.9644 62.5493 36.8843 62.3454 37.8757C62.1311 38.9335 61.9849 39.9532 61.8994 41.0453C62.0436 41.1104 62.1878 41.1756 62.3363 41.2427C62.8481 42.7379 62.8243 44.3669 62.7732 45.9787C64.3953 44.9793 65.2098 44.0579 66.0673 41.9164C66.1338 41.7592 66.2003 41.602 66.2687 41.44C66.3168 41.44 66.3649 41.44 66.4144 41.44C66.3663 41.8958 66.3183 42.3517 66.2687 42.8213C66.5873 42.5052 66.5873 42.5052 66.8513 42.032C66.8374 41.4419 66.8374 41.4419 66.7057 40.848C66.6786 40.6608 66.6516 40.4736 66.6238 40.2807C66.6027 40.1423 66.5817 40.0039 66.56 39.8613C66.6562 39.8613 66.7523 39.8613 66.8513 39.8613C66.8393 39.6538 66.8273 39.4462 66.8149 39.2323C66.8084 38.0034 67.1441 36.8673 67.4339 35.7173C66.774 36.3702 66.5851 36.7949 66.4144 37.888C66.1231 37.6907 66.1231 37.6907 66.0338 37.3561C65.8692 36.0275 65.8609 34.5927 66.2687 33.3493C66.56 33.9413 66.56 33.9413 66.56 34.336C66.6562 34.336 66.7523 34.336 66.8513 34.336C67.0653 33.4868 67.2554 32.6344 67.4339 31.7707Z" fill="#0C0F11"/>
<path d="M51.8499 35.52C55.3453 35.52 55.3453 35.52 56.2192 36.3093C56.4282 36.8757 56.3811 37.3622 56.3791 37.9944C56.3786 38.2513 56.3782 38.5082 56.3777 38.7729C56.3765 39.0453 56.3752 39.3176 56.374 39.59C56.3732 39.8639 56.3726 40.1378 56.372 40.4117C56.3703 41.0834 56.3679 41.755 56.3649 42.4267C55.8362 42.4267 55.3075 42.4267 54.7628 42.4267C54.7147 42.622 54.6666 42.8174 54.6171 43.0187C54.2773 43.027 53.9374 43.0267 53.5976 43.0187C53.5495 42.9536 53.5015 42.8884 53.452 42.8213C52.9713 42.7562 52.4907 42.6911 51.9955 42.624C51.9955 45.2288 51.9955 47.8336 51.9955 50.5173C51.9474 50.5173 51.8994 50.5173 51.8499 50.5173C51.8499 45.5682 51.8499 40.6191 51.8499 35.52Z" fill="#FAFAFA"/>
<path d="M42.3829 15.392C42.5271 15.4897 42.5271 15.4897 42.6742 15.5893C42.6261 15.7847 42.578 15.9801 42.5285 16.1813C42.865 16.1813 43.2014 16.1813 43.548 16.1813C43.1572 16.5343 42.8148 16.7366 42.3829 16.9707C41.9278 17.2933 41.9278 17.2933 41.8458 17.7847C41.8308 17.9068 41.8158 18.0289 41.8003 18.1547C41.8003 18.0244 41.8003 17.8942 41.8003 17.76C41.7042 17.76 41.608 17.76 41.509 17.76C41.488 17.992 41.4669 18.224 41.4453 18.463C41.3759 19.2167 41.2986 19.9684 41.2177 20.72C40.4384 20.6463 40.124 20.3262 39.6156 19.536C39.5435 19.6337 39.5435 19.6337 39.47 19.7333C39.2259 19.6769 38.9829 19.6114 38.7417 19.536C38.8401 19.622 38.9385 19.708 39.0398 19.7965C39.9568 20.6259 40.5701 21.2451 40.9264 22.6933C41.2147 23.027 41.506 23.356 41.8003 23.68C42.0156 24.2634 41.9547 24.8131 41.9459 25.456C41.9069 25.3461 41.8678 25.2362 41.8276 25.123C41.5098 24.2466 41.5098 24.2466 41.0721 23.4827C40.7536 23.4683 40.4349 23.4661 40.1163 23.4703C39.9418 23.4721 39.7674 23.4739 39.5877 23.4757C39.3852 23.4792 39.3852 23.4792 39.1787 23.4827C39.1787 23.0268 39.1787 22.571 39.1787 22.1013C39.0825 22.1013 38.9864 22.1013 38.8874 22.1013C38.8874 21.9711 38.8874 21.8409 38.8874 21.7067C37.9742 21.7718 37.061 21.8369 36.1201 21.904C37.0007 21.0092 37.6771 21.0323 38.7417 21.1147C39.1892 21.2147 39.613 21.3531 40.0525 21.5093C39.1457 20.8391 38.308 20.7509 37.2853 20.9173C36.7769 21.1248 36.3042 21.3875 35.8288 21.7067C35.8769 21.8369 35.9249 21.9671 35.9745 22.1013C35.8783 22.1013 35.7822 22.1013 35.6832 22.1013C35.6832 22.2316 35.6832 22.3618 35.6832 22.496C35.4534 22.4655 35.4534 22.4655 35.2189 22.4343C34.6582 22.4273 34.6582 22.4273 34.2904 22.8907C33.9263 23.4978 33.5778 24.115 33.2413 24.7507C33.1523 24.9045 33.1523 24.9045 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8841 23.877 32.9879 22.8527 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1877 17.6409 39.8485 17.3018 40.6778 16.6731C41.0335 16.4074 41.3718 16.2122 41.7548 16.0333C42.2496 15.8649 42.2496 15.8649 42.3829 15.392Z" fill="#578499"/>
<path d="M64.0841 23.2853C64.4482 23.5759 64.4482 23.5759 64.8123 24.0747C64.8552 24.8054 64.8299 25.4625 64.7839 26.1887C64.7501 27.0574 64.7429 27.3174 65.1764 28.0159C65.2966 28.148 65.4168 28.28 65.5406 28.416C65.5406 28.4811 65.5406 28.5462 65.5406 28.6133C65.4084 28.6581 65.2762 28.7029 65.14 28.749C64.5155 29.0907 64.2356 29.5842 63.9385 30.3893C63.8471 31.5862 63.9648 32.116 64.4681 33.0842C64.7927 33.8403 64.929 34.6679 65.0905 35.51C65.2647 36.1705 65.4948 36.572 65.8319 37.0987C66.3696 38.3477 66.4076 39.6219 66.2688 41.0453C65.9651 42.1188 65.4729 42.7197 64.8123 43.4133C64.6864 43.639 64.5652 43.8697 64.4482 44.104C64.1383 44.7199 63.8163 45.1625 63.3559 45.584C63.2598 45.584 63.1636 45.584 63.0646 45.584C63.0539 45.2414 63.0539 45.2414 63.043 44.8918C63.032 44.5881 63.021 44.2844 63.01 43.9807C63.0055 43.8306 63.001 43.6805 62.9963 43.5259C62.9623 42.6346 62.8714 41.8857 62.6276 41.0453C62.7471 41.0141 62.8665 40.9828 62.9895 40.9505C63.9442 40.6821 63.9442 40.6821 64.7759 40.034C65.0908 39.0529 65.0416 38.1343 64.8487 37.111C64.6363 36.6362 64.4644 36.4983 64.0841 36.3093C64.2283 36.2117 64.2283 36.2117 64.3754 36.112C64.2017 34.5796 64.2017 34.5796 63.7928 33.152C63.5039 32.8986 63.5039 32.8986 63.2102 32.7573C63.1381 32.6597 63.1381 32.6597 63.0646 32.56C62.8683 32.5145 62.6708 32.4788 62.4729 32.449C62.2837 32.4205 62.0944 32.392 61.8994 32.3627C61.6135 33.0544 61.4685 33.7704 61.3168 34.5333C61.2207 34.5333 61.1246 34.5333 61.0255 34.5333C60.9775 34.2729 60.9294 34.0124 60.8799 33.744C60.6636 33.8417 60.6636 33.8417 60.443 33.9413C60.443 33.6157 60.443 33.2901 60.443 32.9547C60.3468 32.8896 60.2507 32.8244 60.1517 32.7573C60.3194 32.0754 60.3936 32.0357 60.8344 31.6967C61.3857 31.2539 61.8545 30.7633 62.3364 30.192C62.2883 30.4525 62.2402 30.713 62.1907 30.9813C62.9446 30.5144 63.3108 29.807 63.6472 28.8107C63.7801 28.1579 63.8705 27.5078 63.9385 26.8373C63.8423 26.8373 63.7462 26.8373 63.6472 26.8373C63.5991 26.0559 63.551 25.2745 63.5015 24.4693C63.6457 24.5996 63.7899 24.7298 63.9385 24.864C63.9865 24.343 64.0346 23.8221 64.0841 23.2853Z" fill="#07191C"/>
<path d="M37.7586 35.4707C37.9228 35.4646 37.9228 35.4646 38.0903 35.4583C38.7977 35.4516 39.3161 35.5294 39.9069 36.112C40.3832 37.1849 40.3997 38.1265 40.3712 39.3557C40.3682 39.6004 40.3682 39.6004 40.3652 39.8502C40.3601 40.2486 40.3522 40.647 40.3438 41.0453C39.719 41.0453 39.0942 41.0453 38.4505 41.0453C38.3784 39.7755 38.3784 39.7755 38.3048 38.48C38.0645 38.48 37.8242 38.48 37.5766 38.48C37.4555 39.2514 37.4372 39.8814 37.5766 40.6507C38.0474 41.5708 38.6995 42.2968 39.3243 43.0187C39.1801 43.0187 39.036 43.0187 38.8874 43.0187C38.8153 42.921 38.8153 42.921 38.7417 42.8213C38.349 42.8069 37.9601 42.8031 37.5675 42.809C37.457 42.8099 37.3465 42.8108 37.2327 42.8117C36.9589 42.814 36.6852 42.8176 36.4114 42.8213C36.4776 42.8955 36.5438 42.9697 36.612 43.0461C38.6149 45.3476 38.6149 45.3476 38.7412 46.637C38.756 47.3504 38.6952 48.0402 38.5961 48.7413C38.548 48.7413 38.5 48.7413 38.4505 48.7413C38.4585 48.5671 38.4666 48.3928 38.4749 48.2133C38.48 46.9348 38.4425 46.0182 37.7656 45.0578C37.4218 44.6201 37.0694 44.2108 36.7027 43.808C36.5591 43.647 36.5591 43.647 36.4126 43.4827C36.3371 43.3988 36.2616 43.3148 36.1838 43.2283C35.717 42.6932 35.5609 42.3162 35.4929 41.4902C35.4827 40.8238 35.4762 40.1578 35.4738 39.4913C35.469 39.2601 35.4642 39.0289 35.4593 38.7906C35.4506 36.8886 35.4506 36.8886 35.8874 36.1598C36.5006 35.4427 36.9771 35.4778 37.7586 35.4707Z" fill="#F9F9F9"/>
<path d="M41.0721 24.0747C41.4635 24.5433 41.4635 24.5433 41.6546 25.0613C41.6546 25.1916 41.6546 25.3218 41.6546 25.456C41.7508 25.456 41.8469 25.456 41.9459 25.456C41.9916 26.632 41.9181 27.3715 41.509 28.416C41.3648 28.5137 41.3648 28.5137 41.2177 28.6133C41.2019 28.7652 41.1862 28.9171 41.1699 29.0735C41.0388 29.7791 40.8228 29.9329 40.3803 30.3277C40.2548 30.4424 40.1294 30.5571 40.0002 30.6753C39.4723 31.0954 39.0681 31.3811 38.4504 31.3637C37.7257 31.0568 37.4048 30.4697 37.0304 29.6C36.7275 28.5485 36.7073 27.3629 36.7027 26.2453C36.7508 26.1151 36.7988 25.9849 36.8483 25.8507C36.9925 25.8507 37.1367 25.8507 37.2853 25.8507C37.3333 25.6553 37.3814 25.4599 37.4309 25.2587C37.5387 25.2365 37.6465 25.2144 37.7575 25.1916C38.1702 25.0578 38.41 24.872 38.7599 24.5557C39.511 23.9711 40.2213 23.8344 41.0721 24.0747Z" fill="#6395AD"/>
<path d="M41.0721 42.624C42.514 42.624 43.9559 42.624 45.4415 42.624C45.4415 45.1637 45.4415 47.7034 45.4415 50.32C45.2973 50.4177 45.2973 50.4177 45.1502 50.5173C45.3424 50.5824 45.5347 50.6476 45.7327 50.7147C45.7327 49.9332 45.7327 49.1518 45.7327 48.3467C45.7808 48.3467 45.8289 48.3467 45.8784 48.3467C45.8823 48.7701 45.8851 49.1935 45.8875 49.617C45.8892 49.8528 45.8909 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4148 51.1557 45.096 51.1909 44.7769 51.2203C44.6025 51.2369 44.4281 51.2534 44.2484 51.2704C44.1134 51.2824 43.9784 51.2943 43.8393 51.3067C43.4902 50.1753 43.3173 49.1745 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.2396 42.8198 46.1326 42.8198 44.992C43.1563 44.992 43.4927 44.992 43.8393 44.992C43.8874 44.9269 43.9355 44.8618 43.985 44.7947C43.3361 44.8923 43.3361 44.8923 42.6742 44.992C42.6261 45.6432 42.5781 46.2944 42.5285 46.9653C42.3843 46.9002 42.2402 46.8351 42.0916 46.768C41.7552 46.9634 41.4187 47.1587 41.0721 47.36C41.0721 45.7971 41.0721 44.2342 41.0721 42.624Z" fill="#7F7F7F"/>
<path d="M49.8523 42.4074C50.0526 42.4108 50.0526 42.4108 50.2568 42.4143C50.3907 42.4161 50.5246 42.4179 50.6625 42.4197C50.7659 42.422 50.8694 42.4243 50.976 42.4267C50.9796 43.3533 50.9822 44.2799 50.984 45.2065C50.9847 45.5211 50.9857 45.8357 50.987 46.1504C50.9887 46.605 50.9896 47.0596 50.9902 47.5142C50.9909 47.6528 50.9917 47.7914 50.9925 47.9342C50.9925 48.8769 50.9279 49.781 50.8303 50.7147C51.0466 50.8123 51.0466 50.8123 51.2673 50.912C51.2673 50.9771 51.2673 51.0422 51.2673 51.1093C50.9305 51.1476 50.5937 51.1843 50.2568 51.2203C50.0693 51.2409 49.8817 51.2615 49.6885 51.2828C49.5366 51.2907 49.3847 51.2985 49.2282 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9514 48.4969 48.9369 48.1493C48.5765 47.954 48.5765 47.954 48.2087 47.7547C48.2087 47.6244 48.2087 47.4942 48.2087 47.36C48.5451 47.36 48.8816 47.36 49.2282 47.36C49.3003 48.9229 49.3003 48.9229 49.3739 50.5173C49.5516 49.9613 49.5516 49.9613 49.4558 49.5183C49.3358 48.669 49.3627 47.8275 49.3739 46.9653C48.9413 47.0305 48.5087 47.0956 48.0631 47.1627C48.015 48.2046 47.9669 49.2465 47.9174 50.32C47.2839 50.4917 47.0477 50.5244 46.461 50.32C46.4732 50.1702 46.4854 50.0203 46.4979 49.866C46.5128 49.6699 46.5276 49.4737 46.5429 49.2717C46.5581 49.0771 46.5733 48.8825 46.589 48.682C46.6308 48.1297 46.6308 48.1297 46.461 47.5573C46.4507 47.0492 46.4473 46.5481 46.4519 46.0403C46.4549 45.5641 46.4579 45.088 46.461 44.5973C47.4222 44.5973 48.3835 44.5973 49.3739 44.5973C49.3739 43.9461 49.3739 43.2949 49.3739 42.624C49.5195 42.4267 49.5195 42.4267 49.8523 42.4074ZM49.6652 49.5307C49.6652 49.6609 49.6652 49.7911 49.6652 49.9253C49.7613 49.8602 49.8574 49.7951 49.9565 49.728C49.8603 49.6629 49.7642 49.5978 49.6652 49.5307Z" fill="#9D9D9D"/>
<path d="M57.2387 42.4267C58.3442 42.4267 59.4496 42.4267 60.5886 42.4267C60.5886 43.143 60.5886 43.8593 60.5886 44.5973C60.6071 44.972 60.6295 45.3466 60.6614 45.7197C60.6749 45.8832 60.6884 46.0468 60.7024 46.2153C60.7129 46.3326 60.7234 46.4498 60.7342 46.5707C60.2331 47.0233 60.0464 47.1627 59.4234 47.1627C59.3273 46.7068 59.2312 46.251 59.1321 45.7813C59.036 45.8465 58.9399 45.9116 58.8408 45.9787C58.7928 47.4764 58.7447 48.9742 58.6952 50.5173C58.7913 50.5173 58.8874 50.5173 58.9865 50.5173C58.9865 49.2149 58.9865 47.9125 58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1321 46.5707C59.3244 47.6777 59.5166 48.7847 59.7147 49.9253C59.8108 49.9253 59.907 49.9253 60.006 49.9253C60.006 50.0556 60.006 50.1858 60.006 50.32C60.2493 50.3139 60.2493 50.3139 60.4976 50.3077C61.0255 50.32 61.0255 50.32 61.3168 50.5173C61.3168 49.9964 61.3168 49.4754 61.3168 48.9387C61.6748 49.6663 61.7556 50.2602 61.8994 51.1093C61.1343 51.5989 60.4861 51.4762 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.5149 51.4562 58.1901 51.3927 57.8668 51.319C57.695 51.2806 57.5233 51.2422 57.3463 51.2026C57.1489 51.1564 57.1489 51.1564 56.9474 51.1093C56.9474 50.5233 56.9474 49.9372 56.9474 49.3333C56.9955 49.3333 57.0436 49.3333 57.0931 49.3333C57.1412 47.0541 57.1892 44.7749 57.2387 42.4267Z" fill="#838383"/>
<path d="M54.9084 15.984C55.5907 16.2472 56.1726 16.5027 56.7381 17.094C57.3965 17.6971 58.0932 17.6658 58.8595 17.6997C59.9974 17.7554 60.6534 18.0451 61.4624 19.1413C61.6637 19.2588 61.8674 19.369 62.0723 19.4743C63.2771 20.1639 64.0937 21.4716 64.5995 23.0795C64.677 23.5448 64.6324 23.8244 64.521 24.272C64.3768 23.8813 64.3768 23.8813 64.2297 23.4827C64.0855 23.5803 64.0855 23.5803 63.9384 23.68C63.8855 23.5205 63.8325 23.361 63.778 23.1967C63.1823 21.481 62.7617 20.6166 61.4533 19.869C60.3826 19.3907 59.3192 19.2243 58.2446 19.7611C57.3154 20.4041 56.56 21.1106 56.2192 22.496C56.3153 22.5611 56.4115 22.6262 56.5105 22.6933C56.3783 22.7747 56.2461 22.8561 56.11 22.94C55.6662 23.2637 55.3874 23.5709 55.054 24.0747C55.054 23.8142 55.054 23.5537 55.054 23.2853C54.9821 23.4682 54.9102 23.6511 54.8361 23.8396C54.7419 24.0783 54.6476 24.317 54.5534 24.5557C54.506 24.6764 54.4586 24.7971 54.4097 24.9214C54.051 25.8283 54.051 25.8283 53.8889 26.048C53.6462 26.056 53.4033 26.0564 53.1606 26.048C53.2357 25.8201 53.3108 25.5922 53.3882 25.3573C53.4404 25.1955 53.4926 25.0338 53.5464 24.8671C53.694 24.4208 53.8464 23.9811 54.0038 23.5412C54.5913 21.8629 54.9251 20.4434 54.9084 18.5493C55.0045 18.6144 55.1006 18.6796 55.1997 18.7467C55.1997 19.3327 55.1997 19.9188 55.1997 20.5227C55.2207 20.3639 55.2417 20.2052 55.2634 20.0417C55.3453 19.536 55.3453 19.536 55.491 19.3387C55.4615 18.9833 55.42 18.6298 55.3726 18.278C55.3477 18.0852 55.3227 17.8924 55.297 17.6937C55.2154 17.1281 55.2154 17.1281 54.9084 16.576C54.9084 16.3806 54.9084 16.1853 54.9084 15.984Z" fill="#1E373D"/>
<path d="M54.4715 57.424C54.4715 57.6845 54.4715 57.945 54.4715 58.2133C54.6157 58.1482 54.7599 58.0831 54.9084 58.016C55.0526 58.016 55.1968 58.016 55.3454 58.016C55.4415 57.9509 55.5376 57.8858 55.6367 57.8187C55.6402 58.6863 55.6429 59.5538 55.6447 60.4214C55.6454 60.7168 55.6464 61.0122 55.6476 61.3075C55.6494 61.7312 55.6502 62.1549 55.6509 62.5786C55.6516 62.8338 55.6524 63.0891 55.6532 63.352C55.6367 63.936 55.6367 63.936 55.491 64.1333C55.0741 64.1478 54.6607 64.1516 54.2439 64.1457C54.1265 64.1448 54.009 64.1439 53.888 64.143C53.597 64.1406 53.306 64.1371 53.015 64.1333C52.6734 63.2714 52.4499 62.4369 52.2595 61.494C52.2094 61.2483 52.1592 61.0025 52.1076 60.7494C52.0706 60.5637 52.0336 60.378 51.9955 60.1867C51.9972 60.4385 51.9989 60.6903 52.0006 60.9498C52.002 61.2792 52.0033 61.6086 52.0046 61.938C52.0058 62.1041 52.0071 62.2702 52.0083 62.4414C52.009 62.6798 52.009 62.6798 52.0097 62.9231C52.0109 63.1432 52.0109 63.1432 52.012 63.3678C51.9955 63.7387 51.9955 63.7387 51.8499 64.1333C51.4888 64.1386 51.1277 64.1426 50.7666 64.1457C50.6636 64.1473 50.5607 64.149 50.4546 64.1507C50.1914 64.1524 49.9282 64.1436 49.6652 64.1333C49.5195 63.936 49.5195 63.936 49.5053 63.2261C49.5063 62.9324 49.508 62.6387 49.5104 62.345C49.5111 62.1953 49.5117 62.0456 49.5124 61.8914C49.5141 61.5205 49.5168 61.1496 49.5195 60.7787C49.7118 61.1043 49.904 61.4299 50.1021 61.7653C50.006 61.9607 49.9099 62.1561 49.8108 62.3573C49.8829 62.5283 49.8829 62.5283 49.9565 62.7027C50.1021 63.1467 50.1021 63.1467 50.1021 63.936C50.4866 63.8058 50.8711 63.6755 51.2673 63.5413C51.2673 63.4111 51.2673 63.2809 51.2673 63.1467C51.3634 63.1467 51.4595 63.1467 51.5586 63.1467C51.5697 62.2555 51.5735 61.4514 51.4129 60.5813C51.5091 60.5813 51.6052 60.5813 51.7042 60.5813C51.6207 60.0155 51.5788 59.8193 51.2673 59.3973C51.7493 58.6717 52.1741 58.3294 52.8785 58.127C53.1806 58.0348 53.1806 58.0348 53.4429 57.7077C53.8115 57.3596 54.0317 57.3743 54.4715 57.424Z" fill="#265A73"/>
<path d="M35.1006 32.3627C35.6186 32.96 35.8711 33.4116 35.9381 34.336C35.9168 34.8712 35.8587 35.078 35.599 35.4892C35.3445 35.7863 35.0878 36.0552 34.8093 36.3093C34.8574 36.5047 34.9054 36.7001 34.955 36.9013C34.9126 37.1664 34.8635 37.4296 34.8093 37.6907C34.789 37.9604 34.7738 38.2309 34.7632 38.5016C34.7571 38.6504 34.751 38.7992 34.7447 38.9525C34.739 39.1059 34.7333 39.2593 34.7274 39.4173C34.7211 39.5738 34.7148 39.7302 34.7083 39.8914C34.6929 40.276 34.6782 40.6607 34.6637 41.0453C34.5675 41.0453 34.4714 41.0453 34.3724 41.0453C34.4685 41.6314 34.5646 42.2175 34.6637 42.8213C34.4474 42.7237 34.4474 42.7237 34.2267 42.624C34.0159 42.0526 33.9354 41.6883 33.9354 41.0453C33.7852 41.0331 33.635 41.0209 33.4803 41.0083C32.7805 40.8095 32.5467 40.5288 32.042 39.8613C31.7862 39.1681 31.7957 38.445 31.8964 37.6907C32.1413 37.1585 32.4314 36.7343 32.7703 36.3093C32.7222 36.2442 32.6741 36.1791 32.6246 36.112C32.4935 34.9273 32.8723 34.0973 33.3529 33.152C33.8968 32.3568 34.3063 32.1705 35.1006 32.3627Z" fill="#577A8A"/>
<path d="M62.7744 32.2879C63.4535 32.4629 63.747 33.0648 64.1296 33.7933C64.4432 34.5834 64.4196 35.2278 64.3754 36.112C64.3418 36.5246 64.3418 36.5246 64.5757 36.7903C64.6538 36.8921 64.7319 36.9938 64.8123 37.0987C65.2044 37.8956 65.218 38.5306 65.1036 39.4667C64.8426 40.1862 64.4847 40.5814 63.9476 40.922C63.4941 41.0474 63.0891 41.0751 62.6276 41.0453C62.6988 41.2102 62.77 41.375 62.8433 41.5448C63.095 42.3236 63.1183 42.863 63.1101 43.7093C63.1095 43.9596 63.109 44.2099 63.1084 44.4678C63.0659 45.167 62.9596 45.7218 62.7733 46.3733C62.7252 46.3733 62.6772 46.3733 62.6276 46.3733C62.6327 46.1848 62.6378 45.9964 62.643 45.8022C62.6675 44.2202 62.6628 42.7272 62.1907 41.2427C62.0946 41.1776 61.9985 41.1124 61.8994 41.0453C61.8704 39.91 61.956 38.9661 62.1816 37.8757C62.3795 36.8932 62.5354 35.9397 62.6276 34.928C61.9788 34.7326 61.9788 34.7326 61.3168 34.5333C61.3641 33.8677 61.4192 33.2866 61.6172 32.671C61.9884 32.2655 62.3064 32.2519 62.7744 32.2879Z" fill="#6A92A5"/>
<path d="M32.479 29.008C32.9608 29.7168 33.1766 30.2409 33.2618 31.2033C33.1995 32.0763 32.9998 32.5065 32.6701 33.2399C32.3283 34.1414 32.1936 35.1251 32.042 36.112C31.9459 36.112 31.8498 36.112 31.7507 36.112C30.8994 38.4087 30.4616 40.2244 30.7312 42.8213C30.1668 42.4513 30.1668 42.4513 30.003 42.2293C29.9689 41.5681 29.9766 41.1261 30.176 40.515C30.4033 39.2589 29.956 38.0085 29.6116 36.8397C29.4281 36.1414 29.3799 35.6603 29.4204 34.928C29.6154 35.256 29.8095 35.585 30.003 35.9147C30.0841 36.0327 30.1652 36.1507 30.2488 36.2723C30.5364 36.9218 30.5394 37.5314 30.5856 38.2827C30.9581 37.1469 30.9622 35.9517 30.8769 34.7307C30.743 34.2785 30.743 34.2785 30.5856 33.9413C30.4895 34.1367 30.3933 34.332 30.2943 34.5333C29.7021 33.4558 29.421 32.7297 29.5661 31.376C29.9969 30.2734 30.5265 29.3885 31.3957 28.934C32.1191 28.7558 32.1191 28.7558 32.479 29.008Z" fill="#6591A6"/>
<path d="M62.1907 22.2987C62.8516 22.7464 63.4231 23.3964 63.7928 24.272C63.7444 24.652 63.7444 24.652 63.6472 25.0613C63.6376 25.3735 63.6347 25.6862 63.638 25.9987C63.6394 26.1564 63.6407 26.3141 63.642 26.4766C63.6437 26.5956 63.6454 26.7147 63.6472 26.8373C63.7433 26.8373 63.8394 26.8373 63.9384 26.8373C64.0447 28.1614 63.7145 29.0695 63.2102 30.192C62.9007 30.71 62.9007 30.71 62.6276 30.9813C62.4834 30.9813 62.3393 30.9813 62.1907 30.9813C62.1907 30.786 62.1907 30.5906 62.1907 30.3893C62.1272 30.4822 62.0638 30.575 61.9984 30.6707C61.4655 31.4255 61.0082 31.927 60.2973 32.3627C60.2492 32.4929 60.2012 32.6231 60.1517 32.7573C60.3679 32.855 60.3679 32.855 60.5886 32.9547C60.5886 33.4756 60.5886 33.9966 60.5886 34.5333C59.5875 34.7159 58.6032 34.7473 57.5952 34.7233C57.1418 34.7156 56.7989 34.732 56.3649 34.928C56.3815 33.9859 56.4109 33.3371 56.8291 32.56C57.2751 32.1303 57.5716 32.0191 58.1126 31.968C57.9204 31.8378 57.7281 31.7075 57.53 31.5733C57.53 31.4431 57.53 31.3128 57.53 31.1787C57.8145 31.1915 58.099 31.2044 58.3834 31.2172C58.7511 31.1717 58.9678 31.0546 59.2778 30.784C59.8606 29.5298 60.0154 28.2946 60.1517 26.8373C60.4429 27.232 60.4429 27.232 60.4714 27.9612C60.4695 28.2526 60.466 28.544 60.4612 28.8353C60.4598 28.9841 60.4585 29.1329 60.4572 29.2863C60.4537 29.654 60.4485 30.0217 60.4429 30.3893C61.3802 30.0739 61.9394 29.7594 62.482 28.6133C62.6533 28.0918 62.7874 27.5786 62.9189 27.0347C63.015 27.2951 63.1112 27.5556 63.2102 27.824C63.5193 26.5678 63.4413 25.2408 63.0646 24.0261C62.8396 23.4915 62.5226 23.1066 62.1907 22.6933C62.1907 22.5631 62.1907 22.4328 62.1907 22.2987Z" fill="#0D3139"/>
<path d="M59.5691 52.096C60.29 52.096 61.011 52.096 61.7538 52.096C62.0364 52.4789 61.9233 53.2008 61.9239 53.7232C61.9244 53.8666 61.9249 54.0099 61.9254 54.1576C61.9261 54.4613 61.9264 54.765 61.9264 55.0688C61.9267 55.5344 61.9294 55.9999 61.9321 56.4655C61.9326 56.7601 61.9329 57.0547 61.933 57.3492C61.934 57.489 61.9351 57.6288 61.9362 57.7728C61.9327 58.7602 61.9327 58.7602 61.6081 59.2C61.5051 59.5256 61.4072 59.8543 61.3168 60.1867C61.413 60.1867 61.5091 60.1867 61.6081 60.1867C61.6081 60.6183 61.6081 60.6183 61.4625 61.1733C61.1056 61.5842 60.7314 61.9197 60.2973 62.16C60.1531 62.0949 60.0089 62.0298 59.8604 61.9627C59.7603 61.5557 59.7603 61.5557 59.7147 61.1733C59.8589 61.1733 60.0031 61.1733 60.1517 61.1733C60.1517 60.7175 60.1517 60.2617 60.1517 59.792C59.8633 59.8897 59.8633 59.8897 59.5691 59.9893C59.5691 57.3845 59.5691 54.7797 59.5691 52.096Z" fill="#438DB0"/>
<path d="M33.6442 20.5227C33.7403 20.5878 33.8364 20.6529 33.9354 20.72C33.7352 21.2133 33.7352 21.2133 33.4985 21.7067C33.4024 21.7067 33.3063 21.7067 33.2072 21.7067C33.1592 22.7486 33.1111 23.7905 33.0616 24.864C33.3319 24.339 33.3319 24.339 33.6077 23.8033C34.2319 22.5912 34.2319 22.5912 34.8093 22.2987C34.8093 22.4289 34.8093 22.5592 34.8093 22.6933C34.6982 22.8399 34.587 22.9864 34.4725 23.1373C33.767 24.1155 33.6177 24.8324 33.6077 26.1837C33.6147 26.8662 33.6302 27.3728 33.7898 28.0213C33.8859 27.826 33.9821 27.6306 34.0811 27.4293C34.1252 27.5484 34.1693 27.6674 34.2148 27.7901C34.5711 28.7112 34.8602 29.4484 35.5375 29.9947C35.8761 30.1321 36.2159 30.2643 36.5571 30.3893C36.5537 30.1375 36.5503 29.8857 36.5468 29.6262C36.5441 29.2968 36.5414 28.9674 36.5389 28.638C36.5364 28.4719 36.534 28.3058 36.5315 28.1347C36.5305 27.9757 36.5296 27.8167 36.5286 27.6529C36.5271 27.5061 36.5256 27.3594 36.524 27.2082C36.5571 26.8373 36.5571 26.8373 36.8484 26.4427C36.8521 26.593 36.8559 26.7433 36.8597 26.8982C36.9146 28.2518 37.021 29.4322 37.5766 30.5867C37.9947 31.0935 38.1743 31.1862 38.7327 31.154C39.5584 30.8344 40.2273 30.2541 40.9264 29.6C40.7083 30.3676 40.3869 30.6793 39.8887 31.1293C39.7562 31.2504 39.6236 31.3715 39.487 31.4963C39.3853 31.5868 39.2835 31.6774 39.1787 31.7707C39.3709 31.7707 39.5632 31.7707 39.7613 31.7707C39.8093 31.9009 39.8574 32.0312 39.9069 32.1653C39.8348 32.3607 39.8348 32.3607 39.7613 32.56C39.4729 32.5376 39.1847 32.5124 38.8965 32.486C38.736 32.4723 38.5755 32.4585 38.4101 32.4444C38.2792 32.4174 38.1483 32.3905 38.0135 32.3627C37.9655 32.2324 37.9174 32.1022 37.8679 31.968C37.7958 32.1634 37.7958 32.1634 37.7222 32.3627C37.578 32.3627 37.4339 32.3627 37.2853 32.3627C37.2372 32.1673 37.1892 31.972 37.1397 31.7707C37.2117 31.5753 37.2117 31.5753 37.2853 31.376C37.0356 31.1325 37.0356 31.1325 36.7027 30.9813C36.223 31.1745 36.223 31.1745 35.8288 31.5733C35.949 31.667 36.0692 31.7606 36.193 31.857C36.3732 32.0096 36.3732 32.0096 36.5571 32.1653C36.5571 32.2305 36.5571 32.2956 36.5571 32.3627C35.3759 32.3034 34.4477 31.7208 33.6316 30.5427C33.3777 30.1079 33.1426 29.6669 32.9159 29.2053C32.8228 29.0181 32.7297 28.8309 32.6337 28.638C32.479 28.2187 32.479 28.2187 32.479 27.6267C32.3348 27.5616 32.1906 27.4964 32.0421 27.4293C32.1382 27.4293 32.2343 27.4293 32.3333 27.4293C32.2987 27.2229 32.2987 27.2229 32.2634 27.0123C32.0247 25.2154 32.0894 23.503 32.7703 21.904C33.0425 21.4038 33.326 20.9734 33.6442 20.5227Z" fill="#08313A"/>
<path d="M32.479 27.6267C32.5571 27.8546 32.6352 28.0825 32.7156 28.3173C33.4354 30.2541 34.3197 31.4081 35.8288 32.1653C36.0211 32.1653 36.2133 32.1653 36.4114 32.1653C36.123 31.9048 35.8346 31.6444 35.5375 31.376C35.9003 31.2404 36.1753 31.1787 36.557 31.1787C36.6051 31.0484 36.6532 30.9182 36.7027 30.784C37.0632 30.9794 37.0632 30.9794 37.4309 31.1787C37.3829 31.5694 37.3348 31.9601 37.2853 32.3627C37.6457 32.0696 37.6457 32.0696 38.0135 31.7707C38.0856 31.966 38.0856 31.966 38.1591 32.1653C38.5348 32.3017 38.5348 32.3017 38.9693 32.3873C39.1167 32.4204 39.2641 32.4535 39.4159 32.4875C39.5299 32.5114 39.6438 32.5354 39.7613 32.56C39.8093 32.4298 39.8574 32.2995 39.9069 32.1653C40.4349 32.9269 40.6065 33.486 40.6351 34.5333C40.539 34.7287 40.4429 34.924 40.3438 35.1253C40.0647 35.0284 40.0647 35.0284 39.78 34.9295C39.035 34.7052 38.3276 34.6852 37.5675 34.706C37.3784 34.7087 37.3784 34.7087 37.1854 34.7114C36.8789 34.716 36.5723 34.7231 36.2658 34.7307C36.2177 34.4051 36.1696 34.0795 36.1201 33.744C36.072 34.1347 36.024 34.5254 35.9745 34.928C35.9264 34.928 35.8783 34.928 35.8288 34.928C35.8168 34.7204 35.8048 34.5129 35.7924 34.299C35.6721 33.4707 35.5699 33.1121 35.1006 32.56C34.5466 32.481 34.1718 32.519 33.6441 32.7573C33.6441 32.6271 33.6441 32.4968 33.6441 32.3627C33.548 32.3627 33.4519 32.3627 33.3528 32.3627C33.3528 32.4929 33.3528 32.6231 33.3528 32.7573C33.2567 32.7573 33.1606 32.7573 33.0616 32.7573C32.8397 33.3369 32.6536 33.9249 32.479 34.5333C32.384 34.1919 32.384 34.1919 32.3333 33.744C32.4784 33.327 32.4784 33.327 32.6883 32.893C33.0415 32.0764 33.1799 31.5491 33.0616 30.5867C32.8738 29.9409 32.6721 29.3588 32.215 28.9957C31.5133 29.0228 31.0143 29.2461 30.4763 29.859C30.1413 30.3732 30.1413 30.3732 29.9029 30.9443C29.8398 31.0868 29.7767 31.2292 29.7117 31.376C29.6156 31.376 29.5194 31.376 29.4204 31.376C29.6216 29.8395 30.736 28.7926 31.5886 27.8733C31.8964 27.6267 31.8964 27.6267 32.479 27.6267Z" fill="#0A2D31"/>
<path d="M50.221 52.0767C50.4515 52.078 50.6819 52.0804 50.9123 52.0837C51.0297 52.0845 51.1472 52.0854 51.2682 52.0864C51.5592 52.0887 51.8502 52.0922 52.1412 52.096C52.5351 53.457 52.8487 54.8405 53.1607 56.24C53.2088 54.8725 53.2568 53.505 53.3063 52.096C54.0753 52.096 54.8444 52.096 55.6367 52.096C55.6406 52.7826 55.6435 53.4691 55.6458 54.1557C55.647 54.3478 55.6482 54.54 55.6495 54.738C55.6524 55.914 55.6041 57.0472 55.491 58.2133C55.0526 58.3977 54.9279 58.4194 54.4715 58.2133C54.4715 57.9528 54.4715 57.6924 54.4715 57.424C54.1351 57.5542 53.7986 57.6845 53.452 57.8187C53.452 57.4931 53.452 57.1675 53.452 56.832C52.9714 56.832 52.4907 56.832 51.9955 56.832C52.0436 56.5715 52.0917 56.311 52.1412 56.0427C52.2373 56.0427 52.3334 56.0427 52.4325 56.0427C52.4568 55.3685 52.4568 55.3685 52.4325 54.6613C52.3363 54.5311 52.2402 54.4008 52.1412 54.2667C52.1412 54.0713 52.1412 53.8759 52.1412 53.6747C51.8528 53.6747 51.5644 53.6747 51.2673 53.6747C51.3634 53.2839 51.4596 52.8932 51.5586 52.4907C51.2702 52.4907 50.9818 52.4907 50.6847 52.4907C50.7328 52.8163 50.7808 53.1419 50.8304 53.4773C50.6862 53.5424 50.542 53.6076 50.3934 53.6747C50.3934 53.5444 50.3934 53.4142 50.3934 53.28C50.2492 53.3777 50.2492 53.3777 50.1021 53.4773C50.1141 53.689 50.1262 53.9006 50.1385 54.1187C50.0961 54.9809 49.9764 55.0973 49.5196 55.648C49.5156 55.093 49.5127 54.538 49.5104 53.983C49.5092 53.8246 49.508 53.6663 49.5067 53.5031C49.5055 53.0998 49.5119 52.6965 49.5196 52.2933C49.6652 52.096 49.6652 52.096 50.221 52.0767Z" fill="#5AADD5"/>
<path d="M40.4895 52.096C41.595 52.096 42.7004 52.096 43.8394 52.096C43.8394 53.6589 43.8394 55.2218 43.8394 56.832C43.2082 56.832 42.5771 56.832 41.946 56.832C41.946 57.0274 41.946 57.2227 41.946 57.424C41.8498 57.424 41.7537 57.424 41.6547 57.424C41.6066 57.2938 41.5585 57.1635 41.509 57.0293C41.461 57.3549 41.4129 57.6805 41.3634 58.016C41.2673 57.9509 41.1711 57.8858 41.0721 57.8187C41.0721 57.6884 41.0721 57.5582 41.0721 57.424C40.988 57.4932 40.9039 57.5624 40.8172 57.6337C40.4316 57.8514 40.2955 57.7795 39.9069 57.6213C39.9761 56.8484 40.0461 56.0755 40.1163 55.3027C40.1359 55.0834 40.1555 54.8641 40.1757 54.6382C40.195 54.4271 40.2142 54.216 40.2341 53.9984C40.2516 53.8041 40.2691 53.6099 40.2872 53.4097C40.3439 52.8853 40.3439 52.8853 40.4895 52.096Z" fill="#5FB5DF"/>
<path d="M37.7222 56.832C37.8183 56.832 37.9145 56.832 38.0135 56.832C38.1096 57.0925 38.2058 57.353 38.3048 57.6213C38.4009 57.4911 38.4971 57.3609 38.5961 57.2267C38.6442 57.2918 38.6922 57.3569 38.7417 57.424C38.8379 57.2938 38.934 57.1635 39.033 57.0293C39.4316 57.4882 39.5413 57.8296 39.6338 58.5217C39.7236 59.1777 39.7236 59.1777 39.9069 59.792C40.1953 59.7269 40.4837 59.6618 40.7808 59.5947C40.8529 60.0831 40.8529 60.0831 40.9264 60.5813C41.0225 60.4511 41.1187 60.3209 41.2177 60.1867C41.201 60.6226 41.1824 61.0583 41.1631 61.494C41.1479 61.858 41.1479 61.858 41.1324 62.2294C41.0721 62.9493 41.0721 62.9493 40.7808 64.1333C40.1079 64.1333 39.435 64.1333 38.7417 64.1333C38.5172 63.3727 38.4006 62.8821 38.3264 62.1006C38.2983 61.8116 38.2983 61.8116 38.2695 61.5167C38.2419 61.2185 38.2419 61.2185 38.2138 60.9143C38.1942 60.7117 38.1747 60.5091 38.1546 60.3004C38.1067 59.8022 38.0597 59.3038 38.0135 58.8053C38.0099 58.9597 38.0062 59.1141 38.0025 59.2732C37.9856 59.9683 37.9677 60.6633 37.9498 61.3583C37.9441 61.6014 37.9383 61.8444 37.9324 62.0949C37.9263 62.3257 37.9202 62.5566 37.9139 62.7944C37.9086 63.0083 37.9033 63.2222 37.8978 63.4426C37.8679 63.936 37.8679 63.936 37.7222 64.1333C37.3795 64.1477 37.0365 64.1499 36.6936 64.1457C36.5057 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4993 63.6351 35.5232 63.2824 35.5284 62.7273C35.5297 62.5477 35.5311 62.3682 35.5324 62.1831C35.5341 62.0453 35.5358 61.9074 35.5375 61.7653C35.6337 61.8305 35.7298 61.8956 35.8288 61.9627C35.8258 62.1824 35.8228 62.4022 35.8197 62.6287C35.7904 63.3109 35.7904 63.3109 35.9745 63.7387C36.0657 63.7221 36.157 63.7056 36.251 63.6886C36.4295 63.6584 36.4295 63.6584 36.6117 63.6277C36.7891 63.5968 36.7891 63.5968 36.9701 63.5652C37.2853 63.5413 37.2853 63.5413 37.5766 63.7387C37.5844 63.1918 37.5902 62.6452 37.5948 62.0983C37.5972 61.9433 37.5997 61.7883 37.6022 61.6285C37.6036 61.4043 37.6036 61.4043 37.605 61.1756C37.6065 61.0382 37.6081 60.9008 37.6096 60.7592C37.592 60.3186 37.592 60.3186 37.2853 59.792C37.3814 59.792 37.4775 59.792 37.5766 59.792C37.4804 59.3362 37.3843 58.8803 37.2853 58.4107C37.4295 58.4758 37.5737 58.5409 37.7222 58.608C37.6742 58.4126 37.6261 58.2173 37.5766 58.016C37.6167 57.6196 37.6643 57.2243 37.7222 56.832Z" fill="#215064"/>
<path d="M62.1907 20.128C63.1966 20.921 63.6867 22.2345 64.0841 23.68C64.1441 24.1907 64.136 24.5457 64.0841 25.0613C63.68 24.7876 63.5882 24.4019 63.3559 23.8773C62.7967 22.8118 62.2492 22.3568 61.3715 21.8423C61.2603 21.774 61.1492 21.7057 61.0346 21.6354C59.9247 20.9587 58.7969 20.5254 57.5932 21.0938C57.2431 21.3265 57.2431 21.3265 56.8018 21.7067C56.961 21.609 57.1202 21.5113 57.2843 21.4107C58.4098 20.8449 59.5081 20.9987 60.621 21.5386C60.8799 21.7067 60.8799 21.7067 61.1712 22.1013C60.6349 22.3704 60.3741 22.1895 59.8604 21.904C59.7162 21.9691 59.572 22.0342 59.4234 22.1013C59.0192 22.1072 58.6173 22.0883 58.2133 22.0697C57.8019 22.1029 57.5767 22.18 57.2388 22.496C57.1907 22.6914 57.1426 22.8867 57.0931 23.088C56.8394 23.2113 56.8394 23.2113 56.5287 23.2853C56.0455 23.4013 55.7933 23.5372 55.491 24.0747C55.234 25.2912 55.3675 26.591 55.491 27.824C55.5871 27.824 55.6833 27.824 55.7823 27.824C55.7823 28.1496 55.7823 28.4752 55.7823 28.8107C55.1761 27.7652 54.9985 27.0146 54.9904 25.678C54.9856 25.5409 54.9808 25.4038 54.9758 25.2625C54.97 24.493 55.0425 23.9972 55.3949 23.4071C55.7823 22.8907 55.7823 22.8907 56.2192 22.496C56.2416 22.3396 56.2639 22.1831 56.2869 22.0219C56.4439 20.99 57.1989 20.4518 57.7997 19.8644C59.1491 18.7674 60.8562 19.2051 62.1907 20.128Z" fill="#547C8E"/>
<path d="M41.8003 21.312C42.2373 21.5093 42.2373 21.5093 42.5041 22.1638C42.6012 22.4424 42.6973 22.7218 42.7925 23.0017C43.6258 25.3391 44.5576 27.1566 46.4246 28.1077C48.0769 28.7668 49.8189 28.5558 51.3782 27.5696C52.1925 26.9528 52.7433 26.2624 53.3063 25.2587C53.3063 25.454 53.3063 25.6494 53.3063 25.8507C53.657 25.8443 53.657 25.8443 54.0346 25.6533C54.3029 25.1192 54.3029 25.1192 54.4988 24.4693C54.8839 23.302 54.8839 23.302 55.1997 23.088C55.1959 23.2042 55.1921 23.3205 55.1882 23.4402C55.1729 23.9764 55.1635 24.5125 55.1542 25.049C55.1481 25.2318 55.142 25.4145 55.1357 25.6028C55.1146 27.2305 55.4726 28.2658 56.2335 29.506C56.3279 29.6265 56.4223 29.7471 56.5196 29.8713C56.6144 29.995 56.7093 30.1186 56.8069 30.246C57.0866 30.5789 57.3746 30.8824 57.6757 31.1787C57.5315 31.2763 57.5315 31.2763 57.3844 31.376C57.0021 31.117 57.0021 31.117 56.6562 30.784C56.6562 30.6538 56.6562 30.5235 56.6562 30.3893C56.5456 30.4076 56.435 30.426 56.3211 30.4448C55.928 30.3893 55.928 30.3893 55.6759 30.0132C55.2359 28.952 54.9539 28.024 54.7628 26.8373C54.1811 26.4433 53.5001 26.5114 52.8694 26.64C52.5515 26.8954 52.3265 27.1635 52.0735 27.5265C51.2832 28.578 49.9942 28.8801 48.937 29.008C48.937 29.5941 48.937 30.1802 48.937 30.784C49.2734 30.9794 49.6098 31.1747 49.9565 31.376C49.5809 31.5577 49.433 31.6098 49.0621 31.3806C48.9728 31.314 48.8834 31.2473 48.7913 31.1787C48.7795 31.5321 48.7711 31.8857 48.764 32.2393C48.7589 32.4362 48.7539 32.6331 48.7486 32.836C48.7627 33.0054 48.7768 33.1748 48.7913 33.3493C49.3211 33.8278 49.6444 33.8203 50.2751 33.8673C50.4604 33.8821 50.6457 33.8968 50.8366 33.912C50.9787 33.9217 51.1209 33.9314 51.2673 33.9413C51.2673 34.0064 51.2673 34.0716 51.2673 34.1387C51.1024 34.1341 50.9376 34.1295 50.7678 34.1248C50.552 34.1211 50.3361 34.1175 50.1203 34.114C49.9573 34.109 49.9573 34.109 49.7909 34.104C49.5062 34.1005 49.2213 34.1183 48.937 34.1387C48.8408 34.2689 48.7447 34.3991 48.6457 34.5333C48.3912 33.778 48.3036 33.1274 48.2633 32.301C48.2525 32.0901 48.2416 31.8792 48.2304 31.662C48.2232 31.5025 48.2161 31.343 48.2087 31.1787C48.0555 31.2723 47.9023 31.3659 47.7445 31.4623C47.0389 31.8934 46.3847 31.9929 45.6144 31.9803C45.4723 31.9785 45.3302 31.9768 45.1837 31.9749C45.0229 31.9715 45.0229 31.9715 44.8589 31.968C44.8589 31.9029 44.8589 31.8378 44.8589 31.7707C44.989 31.7363 44.989 31.7363 45.1217 31.7013C45.5136 31.5976 45.9053 31.493 46.2971 31.3883C46.5019 31.3343 46.5019 31.3343 46.7107 31.2793C46.9065 31.2268 46.9065 31.2268 47.1061 31.1733C47.2267 31.1412 47.3472 31.1092 47.4713 31.0762C47.7787 30.9958 47.7787 30.9958 48.0631 30.784C48.0631 30.1328 48.0631 29.4816 48.0631 28.8107C47.9159 28.8188 47.7687 28.8269 47.617 28.8353C47.1257 28.8142 46.8076 28.7065 46.3506 28.5039C45.5791 28.2963 44.768 28.3895 43.985 28.416C44.0811 28.2858 44.1773 28.1555 44.2763 28.0213C44.4686 28.0213 44.6608 28.0213 44.8589 28.0213C44.6372 27.5025 44.4447 27.0655 44.1307 26.64C43.8099 26.5492 43.8099 26.5492 43.457 26.5167C43.338 26.5019 43.219 26.4872 43.0963 26.472C43.0051 26.4623 42.9139 26.4526 42.8198 26.4427C42.7951 26.2328 42.7951 26.2328 42.7698 26.0187C42.6666 25.4115 42.5068 24.9085 42.3101 24.346C41.9348 23.2669 41.7835 22.5171 41.8003 21.312Z" fill="#143039"/>
<path d="M43.0656 17.464C43.6591 17.5854 43.869 17.8774 44.2757 18.4491C45.0458 19.2342 46.0364 19.2162 46.9616 19.2647C47.1423 19.2761 47.1423 19.2761 47.3266 19.2878C47.6206 19.3062 47.9147 19.3226 48.2087 19.3387C47.7629 19.8564 47.6652 19.9307 47.0436 19.9307C47.0436 19.8004 47.0436 19.6702 47.0436 19.536C46.5895 19.6636 46.5895 19.6636 46.461 20.128C46.5571 20.1931 46.6532 20.2582 46.7523 20.3253C46.1088 20.5604 45.52 20.7024 44.8589 20.5227C44.2534 20.0361 43.7527 19.4186 43.2568 18.7467C43.2568 18.5513 43.2568 18.356 43.2568 18.1547C43.1606 18.1547 43.0645 18.1547 42.9655 18.1547C43.0063 18.7428 43.049 19.3306 43.0929 19.9183C43.1044 20.0861 43.1158 20.2539 43.1276 20.4267C43.1398 20.5863 43.152 20.7459 43.1646 20.9104C43.1753 21.0582 43.186 21.206 43.197 21.3582C43.2167 21.4732 43.2364 21.5882 43.2568 21.7067C43.3529 21.7718 43.449 21.8369 43.5481 21.904C43.6756 22.2809 43.7923 22.6645 43.9031 23.051C44.2329 24.3601 44.2329 24.3601 44.9683 25.2291C45.903 25.6968 46.8686 25.8391 47.8537 25.9863C48.0145 26.0119 48.1753 26.0375 48.341 26.0638C48.7337 26.126 49.1265 26.1865 49.5195 26.2453C49.5195 26.3105 49.5195 26.3756 49.5195 26.4427C46.7516 26.5155 46.7516 26.5155 45.5871 26.048C45.7871 26.1437 45.9874 26.238 46.1879 26.3317C46.2994 26.3843 46.4109 26.437 46.5258 26.4912C47.4694 26.8685 48.3806 26.8613 49.3557 26.8497C49.4976 26.8488 49.6396 26.8479 49.7858 26.847C50.134 26.8447 50.4822 26.8414 50.8303 26.8373C50.6847 27.232 50.6847 27.232 50.4314 27.3533C49.7781 27.5042 49.1156 27.4658 48.4545 27.4663C48.3059 27.4688 48.1573 27.4712 48.0042 27.4737C46.4733 27.4777 45.4493 26.9988 44.2763 25.6533C43.9487 25.1547 43.6739 24.6305 43.4024 24.0747C43.1895 23.6395 43.1895 23.6395 42.9655 23.2853C42.8694 23.2853 42.7732 23.2853 42.6742 23.2853C42.0955 21.8376 41.7576 20.6032 41.946 18.944C42.198 18.1834 42.4363 17.6226 43.0656 17.464Z" fill="#D6D8D5"/>
<path d="M43.5481 56.4373C43.8394 56.832 43.8394 56.832 43.8724 57.547C43.8724 57.8539 43.8707 58.1608 43.8678 58.4677C43.8674 58.6292 43.867 58.7907 43.8666 58.9571C43.8649 59.4739 43.8613 59.9906 43.8576 60.5073C43.8561 60.8573 43.8548 61.2072 43.8536 61.5572C43.8504 62.4159 43.8453 63.2746 43.8394 64.1333C43.4783 64.1386 43.1172 64.1426 42.7561 64.1457C42.6531 64.1473 42.5502 64.149 42.4441 64.1507C42.1809 64.1524 41.9177 64.1436 41.6547 64.1333C41.509 63.936 41.509 63.936 41.4925 63.5151C41.4933 63.3342 41.494 63.1534 41.4948 62.9671C41.4953 62.7718 41.4957 62.5766 41.4962 62.3754C41.4974 62.17 41.4987 61.9646 41.4999 61.753C41.5006 61.5468 41.5012 61.3407 41.5019 61.1282C41.5036 60.617 41.506 60.1059 41.509 59.5947C41.6052 59.5947 41.7013 59.5947 41.8003 59.5947C41.8003 59.3464 41.8003 59.0981 41.8003 58.8423C41.8003 57.424 41.8003 57.424 41.946 56.832C42.2795 56.606 42.4602 56.6202 42.8289 56.6347C43.0182 56.6347 43.2074 56.6347 43.4024 56.6347C43.4505 56.5695 43.4985 56.5044 43.5481 56.4373Z" fill="#2A627B"/>
<path d="M67.434 31.7707C67.5301 31.7707 67.6262 31.7707 67.7252 31.7707C68.2103 33.9255 67.8306 36.1149 67.3921 38.2064C67.1261 39.5484 67.1192 40.6174 67.2735 41.9996C67.2919 42.7743 67.1623 43.1631 66.8514 43.808C66.5692 44.0909 66.5692 44.0909 66.2688 44.289C65.6383 44.7742 65.5171 45.2608 65.2493 46.176C64.5603 47.4685 63.4404 48.4418 62.3364 48.9387C61.7674 48.7776 61.7674 48.7776 61.3168 48.544C61.5331 48.4463 61.5331 48.4463 61.7538 48.3467C61.8499 48.4118 61.946 48.4769 62.0451 48.544C62.0451 48.1533 62.0451 47.7626 62.0451 47.36C63.0909 46.5606 64.0902 45.8391 65.2493 45.3867C65.2493 45.0611 65.2493 44.7355 65.2493 44.4C65.1531 44.3349 65.057 44.2698 64.958 44.2027C65.016 44.0859 65.074 43.9691 65.1338 43.8488C65.4647 43.1801 65.7931 42.5154 66.0958 41.8223C66.1529 41.6962 66.21 41.57 66.2688 41.44C66.3168 41.44 66.3649 41.44 66.4144 41.44C66.3664 41.8958 66.3183 42.3517 66.2688 42.8213C66.5873 42.5052 66.5873 42.5052 66.8514 42.032C66.8375 41.4419 66.8375 41.4419 66.7057 40.848C66.6787 40.6608 66.6517 40.4736 66.6238 40.2807C66.6028 40.1423 66.5817 40.0039 66.5601 39.8613C66.6562 39.8613 66.7523 39.8613 66.8514 39.8613C66.8394 39.6538 66.8273 39.4462 66.815 39.2323C66.8084 38.0034 67.1441 36.8673 67.434 35.7173C66.7741 36.3702 66.5851 36.7949 66.4144 37.888C66.1231 37.6907 66.1231 37.6907 66.0338 37.3561C65.8693 36.0275 65.8609 34.5927 66.2688 33.3493C66.5601 33.9413 66.5601 33.9413 66.5601 34.336C66.6562 34.336 66.7523 34.336 66.8514 34.336C67.0654 33.4868 67.2555 32.6344 67.434 31.7707Z" fill="#193236"/>
<path d="M46.3153 58.4107C46.3634 58.8665 46.4114 59.3224 46.4609 59.792C46.6051 59.792 46.7493 59.792 46.8979 59.792C46.8979 60.4432 46.8979 61.0944 46.8979 61.7653C47.0421 61.7002 47.1863 61.6351 47.3348 61.568C47.6083 61.5751 47.8816 61.597 48.1541 61.6297C48.2971 61.6452 48.4402 61.6607 48.5876 61.6767C48.7029 61.7059 48.8181 61.7352 48.9369 61.7653C49.1187 62.258 49.0755 62.5178 49.0279 63.0603C49.0148 63.2193 49.0017 63.3783 48.9881 63.5421C48.9369 63.936 48.9369 63.936 48.7913 64.1333C48.4805 64.1531 48.1693 64.1592 47.8582 64.1596C47.6688 64.1598 47.4794 64.1601 47.2842 64.1603C47.185 64.1599 47.0859 64.1595 46.9837 64.1591C46.6807 64.158 46.3777 64.1591 46.0746 64.1603C45.7905 64.1599 45.7905 64.1599 45.5006 64.1596C45.3253 64.1593 45.1501 64.1591 44.9695 64.1589C44.5675 64.1333 44.5675 64.1333 44.4219 63.936C44.4035 63.4115 44.3949 62.8943 44.3946 62.3697C44.3928 62.2233 44.391 62.0769 44.3892 61.9261C44.3884 61.5433 44.4041 61.1607 44.4219 60.7787C44.5675 60.5813 44.7132 60.384 44.8588 60.1867C44.9159 60.0361 44.973 59.8855 45.0318 59.7303C45.3001 59.1912 45.7846 58.4107 46.3153 58.4107Z" fill="#1D4C5F"/>
<path d="M51.9955 42.624C52.4761 42.624 52.9567 42.624 53.4519 42.624C53.5 42.6891 53.5481 42.7542 53.5976 42.8213C54.1073 42.8542 54.1073 42.8542 54.6171 42.8213C54.6652 42.7562 54.7132 42.6911 54.7628 42.624C55.0326 42.6097 55.3029 42.6075 55.5729 42.6117C55.7203 42.6134 55.8677 42.6152 56.0195 42.6171C56.1905 42.6205 56.1905 42.6205 56.3649 42.624C56.2759 44.5305 56.2759 44.5305 55.7823 45.3867C55.6381 45.4843 55.6381 45.4843 55.491 45.584C55.3952 46.1818 55.3952 46.1818 55.3453 46.768C55.2612 46.7883 55.1771 46.8087 55.0905 46.8297C54.7161 46.9847 54.4807 47.2229 54.1802 47.5573C53.9971 46.9839 53.8889 46.6109 53.8889 45.9787C53.7447 45.9787 53.6005 45.9787 53.4519 45.9787C53.4519 46.3694 53.4519 46.7601 53.4519 47.1627C53.2597 47.2278 53.0674 47.2929 52.8694 47.36C52.8694 47.1646 52.8694 46.9693 52.8694 46.768C52.581 46.8331 52.2926 46.8982 51.9955 46.9653C51.9955 45.5327 51.9955 44.1 51.9955 42.624Z" fill="#808080"/>
<path d="M42.3829 15.392C42.5271 15.4897 42.5271 15.4897 42.6742 15.5893C42.6261 15.7847 42.578 15.9801 42.5285 16.1813C42.865 16.1813 43.2014 16.1813 43.548 16.1813C43.1572 16.5343 42.8148 16.7366 42.3829 16.9707C41.9278 17.2933 41.9278 17.2933 41.8458 17.7847C41.8308 17.9068 41.8158 18.0289 41.8003 18.1547C41.8003 18.0244 41.8003 17.8942 41.8003 17.76C41.7042 17.76 41.608 17.76 41.509 17.76C41.488 17.992 41.4669 18.224 41.4453 18.463C41.3759 19.2167 41.2986 19.9684 41.2177 20.72C40.4384 20.6463 40.124 20.3262 39.6156 19.536C39.5435 19.6337 39.5435 19.6337 39.47 19.7333C39.3528 19.7008 39.2357 19.6682 39.1149 19.6347C38.7451 19.4835 38.7451 19.4835 38.4504 19.7333C38.3062 19.6682 38.1621 19.6031 38.0135 19.536C36.8459 19.3825 35.6163 19.5471 34.6153 20.4263C33.9752 21.1424 33.5709 21.8846 33.2072 22.8907C33.0616 22.2987 33.0616 22.2987 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1877 17.6409 39.8485 17.3018 40.6778 16.6731C41.0335 16.4074 41.3718 16.2122 41.7548 16.0333C42.2496 15.8649 42.2496 15.8649 42.3829 15.392Z" fill="#243D44"/>
<path d="M53.4793 18.0313C53.5664 18.072 53.6535 18.1127 53.7432 18.1547C53.3154 19.4895 52.388 20.3246 51.4493 20.952C50.4362 21.4549 49.5159 21.5763 48.4454 21.571C48.317 21.5742 48.1885 21.5774 48.0562 21.5806C47.1347 21.5815 46.2962 21.4018 45.4414 20.9173C45.3453 20.7871 45.2492 20.6568 45.1501 20.5227C45.2431 20.501 45.336 20.4794 45.4318 20.4571C45.5521 20.4259 45.6725 20.3946 45.7964 20.3623C45.9164 20.3326 46.0364 20.3028 46.16 20.2721C46.2593 20.2246 46.3586 20.177 46.461 20.128C46.509 19.9326 46.5571 19.7373 46.6066 19.536C46.7508 19.536 46.895 19.536 47.0435 19.536C47.0435 19.6662 47.0435 19.7965 47.0435 19.9307C47.2839 19.8004 47.5242 19.6702 47.7718 19.536C47.7718 19.4058 47.7718 19.2755 47.7718 19.1413C47.8856 19.1385 47.9993 19.1356 48.1166 19.1326C48.6359 19.1178 49.155 19.0988 49.6743 19.0797C49.8533 19.0752 50.0323 19.0708 50.2167 19.0662C51.163 19.0282 52.7718 17.867 53.4793 18.0313Z" fill="#A2A19D"/>
<path d="M53.3063 13.2213C54.622 14.8466 55.4752 16.9248 55.6367 19.3387C55.5672 20.0773 55.4147 20.2659 55.0541 20.9173C55.0541 20.201 55.0541 19.4847 55.0541 18.7467C54.958 18.7467 54.8618 18.7467 54.7628 18.7467C54.7057 18.5879 54.6486 18.4292 54.5898 18.2657C54.3518 17.6896 54.3518 17.6896 53.8343 17.612C53.6601 17.5957 53.4858 17.5794 53.3063 17.5627C53.1216 17.5016 53.1216 17.5016 52.9331 17.4393C52.5671 17.3368 52.5671 17.3368 52.1594 17.464C51.6346 17.5778 51.2051 17.4922 50.6847 17.3653C50.5755 17.02 50.5755 17.02 50.5391 16.576C50.7666 16.2183 50.7666 16.2183 51.1216 15.7867C51.2532 15.5658 51.3836 15.3437 51.5131 15.1207C52.02 14.3032 52.6374 13.7712 53.3063 13.2213Z" fill="#082D31"/>
<path d="M45.5644 52.0698C45.664 52.0696 45.7637 52.0694 45.8664 52.0692C46.0774 52.0691 46.2885 52.0695 46.4996 52.0703C46.8237 52.0713 47.1478 52.0703 47.472 52.069C47.6766 52.0692 47.8812 52.0694 48.0858 52.0698C48.2733 52.07 48.4608 52.0702 48.6539 52.0705C49.0826 52.096 49.0826 52.096 49.2283 52.2933C49.248 53.0163 49.2522 53.5772 49.0826 54.2667C48.3617 54.3318 47.6407 54.3969 46.8979 54.464C46.8499 55.0501 46.8018 55.6362 46.7523 56.24C46.6081 56.1098 46.4639 55.9795 46.3153 55.8453C46.3153 55.65 46.3153 55.4546 46.3153 55.2533C46.2192 55.2533 46.1231 55.2533 46.0241 55.2533C46.0241 55.4487 46.0241 55.6441 46.0241 55.8453C45.6876 55.9105 45.3512 55.9756 45.0045 56.0427C44.504 54.7893 44.2942 53.7232 44.422 52.2933C44.6999 51.9167 45.196 52.0702 45.5644 52.0698Z" fill="#5FB7E2"/>
<path d="M53.3063 17.9573C53.5947 17.9573 53.8831 17.9573 54.1802 17.9573C54.1802 18.3481 54.1802 18.7388 54.1802 19.1413C54.084 19.1413 53.9879 19.1413 53.8889 19.1413C53.8923 19.282 53.8956 19.4227 53.8991 19.5676C53.9148 20.697 53.8773 21.6274 53.5976 22.6933C53.5015 22.6282 53.4053 22.5631 53.3063 22.496C53.2508 22.6814 53.2508 22.6814 53.1942 22.8706C53.1441 23.0319 53.094 23.1932 53.0423 23.3593C52.9933 23.5196 52.9443 23.6798 52.8938 23.845C52.7237 24.272 52.7237 24.272 52.2868 24.6667C52.3378 24.5161 52.3889 24.3655 52.4415 24.2103C52.6252 23.6706 52.6252 23.6706 52.4324 23.088C52.4225 22.747 52.4201 22.4056 52.4233 22.0643C52.4246 21.8865 52.426 21.7087 52.4273 21.5255C52.429 21.3899 52.4307 21.2544 52.4324 21.1147C52.2882 21.1798 52.144 21.2449 51.9955 21.312C51.9955 21.833 51.9955 22.3539 51.9955 22.8907C51.8994 22.8907 51.8032 22.8907 51.7042 22.8907C51.7042 22.4348 51.7042 21.979 51.7042 21.5093C51.4639 21.6396 51.2236 21.7698 50.976 21.904C50.982 22.0912 50.988 22.2784 50.9942 22.4713C50.976 23.088 50.976 23.088 50.6847 23.4827C50.6847 22.8966 50.6847 22.3105 50.6847 21.7067C50.0118 21.8369 49.3389 21.9671 48.6456 22.1013C48.7418 22.7525 48.8379 23.4037 48.9369 24.0747C49.0331 24.0747 49.1292 24.0747 49.2282 24.0747C49.3724 23.3583 49.5166 22.642 49.6652 21.904C50.0275 22.5586 50.179 22.8899 50.3479 23.6307C50.3845 23.7884 50.4211 23.9461 50.4588 24.1086C50.4853 24.2276 50.5118 24.3467 50.539 24.4693C50.4429 24.5996 50.3468 24.7298 50.2477 24.864C50.1516 24.4733 50.0555 24.0826 49.9564 23.68C49.8603 23.8754 49.7642 24.0707 49.6652 24.272C49.5223 24.473 49.3772 24.6713 49.2282 24.864C48.7671 24.4475 48.6171 24.1269 48.3543 23.4827C48.2102 23.8734 48.066 24.2641 47.9174 24.6667C47.8213 24.6667 47.7252 24.6667 47.6261 24.6667C47.6261 24.4713 47.6261 24.2759 47.6261 24.0747C47.7222 24.0747 47.8184 24.0747 47.9174 24.0747C47.9384 23.9322 47.9595 23.7898 47.9811 23.643C48.057 23.1291 48.1328 22.6152 48.2087 22.1013C48.0842 22.0774 47.9597 22.0535 47.8315 22.0289C47.6706 21.9958 47.5097 21.9627 47.3439 21.9287C47.1031 21.8806 47.1031 21.8806 46.8575 21.8315C46.7266 21.7903 46.5958 21.7491 46.461 21.7067C46.4129 21.5764 46.3648 21.4462 46.3153 21.312C46.4157 21.3161 46.5161 21.3203 46.6195 21.3245C49.898 21.5364 49.898 21.5364 52.7738 19.6532C53.1333 19.1844 53.4408 18.6925 53.7432 18.1547C53.599 18.0895 53.4549 18.0244 53.3063 17.9573Z" fill="#553334"/>
<path d="M42.8198 31.5733C42.7717 31.8338 42.7237 32.0943 42.6742 32.3627C42.8183 32.2975 42.9625 32.2324 43.1111 32.1653C43.6463 32.0714 44.1846 32.0174 44.7223 31.9557C44.8679 31.9377 45.0135 31.9198 45.1635 31.9013C46.084 31.7935 46.9936 31.7473 47.9174 31.7707C47.9708 33.0482 47.9708 33.0482 47.7437 33.4899C47.3913 33.83 47.167 33.8119 46.7369 33.8018C46.5937 33.7999 46.4506 33.798 46.3031 33.796C46.1539 33.7911 46.0047 33.7861 45.8511 33.781C45.6248 33.777 45.6248 33.777 45.3939 33.7729C45.0213 33.7659 44.6488 33.7562 44.2763 33.744C44.2763 33.8742 44.2763 34.0045 44.2763 34.1387C44.0243 34.1159 43.7725 34.0908 43.5207 34.0647C43.3104 34.0441 43.3104 34.0441 43.0957 34.023C42.672 33.9409 42.335 33.7837 41.9459 33.5467C41.9459 33.4164 41.9459 33.2862 41.9459 33.152C41.7792 33.0726 41.7792 33.0726 41.6091 32.9917C41.2337 32.7669 41.0328 32.5967 40.7808 32.1653C40.7808 32.0351 40.7808 31.9048 40.7808 31.7707C41.4687 31.6185 42.1229 31.5541 42.8198 31.5733Z" fill="#E1E2E1"/>
<path d="M42.8198 44.992C43.2524 44.992 43.685 44.992 44.1306 44.992C44.1787 45.513 44.2268 46.0339 44.2763 46.5707C44.4205 46.5707 44.5647 46.5707 44.7132 46.5707C44.7132 46.766 44.7132 46.9614 44.7132 47.1627C44.8574 47.0976 45.0016 47.0324 45.1502 46.9653C45.5056 48.0791 45.4695 49.1316 45.4414 50.32C45.3453 50.3851 45.2492 50.4502 45.1502 50.5173C45.3424 50.5825 45.5347 50.6476 45.7327 50.7147C45.7327 49.9332 45.7327 49.1518 45.7327 48.3467C45.7808 48.3467 45.8289 48.3467 45.8784 48.3467C45.8823 48.7701 45.8851 49.1936 45.8875 49.617C45.8892 49.8528 45.8909 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4148 51.1557 45.096 51.191 44.7769 51.2203C44.5153 51.2451 44.5153 51.2451 44.2484 51.2704C44.1134 51.2824 43.9784 51.2944 43.8393 51.3067C43.4902 50.1753 43.3173 49.1745 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.2396 42.8198 46.1326 42.8198 44.992Z" fill="#CACACA"/>
<path d="M53.6795 26.381C53.8871 26.3821 53.8871 26.3821 54.0988 26.3833C54.4715 26.4427 54.4715 26.4427 54.9084 26.8373C54.9801 27.2196 55.0508 27.6023 55.111 27.9882C55.2049 28.4409 55.3376 28.7807 55.5183 29.1807C55.6054 29.3842 55.6925 29.5877 55.7823 29.7973C55.7342 29.9276 55.6862 30.0578 55.6367 30.192C54.9266 29.6493 54.9266 29.6493 54.7628 29.2053C54.4887 29.0832 54.4887 29.0832 54.162 29.008C53.736 28.8929 53.3405 28.7638 52.924 28.5887C52.384 28.399 51.968 28.3324 51.4129 28.416C51.3018 28.5422 51.1906 28.6683 51.0761 28.7983C50.5048 29.3924 49.9314 29.3657 49.2282 29.4027C49.2282 29.7934 49.2282 30.1841 49.2282 30.5867C50.6019 31.5591 52.0802 31.7512 53.5976 31.968C53.5976 32.0331 53.5976 32.0982 53.5976 32.1653C50.1936 32.3174 50.1936 32.3174 49.2282 31.1787C49.0841 31.0484 48.9399 30.9182 48.7913 30.784C48.7435 30.3639 48.7435 30.3639 48.7549 29.8837C48.7571 29.7247 48.7594 29.5657 48.7617 29.4019C48.7913 29.008 48.7913 29.008 48.937 28.8107C49.1544 28.7464 49.3732 28.6903 49.5924 28.638C51.1032 28.2645 51.1032 28.2645 52.2868 27.0347C52.7506 26.4608 53.0561 26.3661 53.6795 26.381Z" fill="#DDDEDD"/>
<path d="M58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1321 46.5707C59.3244 47.6777 59.5166 48.7847 59.7147 49.9253C59.8108 49.9253 59.907 49.9253 60.006 49.9253C60.006 50.0556 60.006 50.1858 60.006 50.32C60.2493 50.3139 60.2493 50.3139 60.4976 50.3077C61.0255 50.32 61.0255 50.32 61.3168 50.5173C61.3168 49.9964 61.3168 49.4754 61.3168 48.9387C61.6748 49.6663 61.7556 50.2602 61.8994 51.1093C61.1343 51.5989 60.4861 51.4762 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.5149 51.4562 58.1901 51.3927 57.8668 51.319C57.695 51.2806 57.5233 51.2422 57.3463 51.2026C57.2147 51.1718 57.083 51.141 56.9474 51.1093C56.9474 50.5232 56.9474 49.9372 56.9474 49.3333C56.9955 49.3333 57.0436 49.3333 57.0931 49.3333C57.0937 49.13 57.0937 49.13 57.0942 48.9225C57.1114 48.3791 57.141 47.888 57.2387 47.36C57.6575 46.9283 57.6575 46.9283 58.1126 46.768C58.2568 46.8331 58.401 46.8982 58.5496 46.9653C58.7688 47.6646 58.7094 48.4388 58.7043 49.1853C58.703 49.4346 58.7017 49.6839 58.7003 49.9407C58.6986 50.131 58.6969 50.3213 58.6952 50.5173C58.7913 50.5173 58.8874 50.5173 58.9865 50.5173C58.9865 49.2149 58.9865 47.9125 58.9865 46.5707Z" fill="#CFCFCF"/>
<path d="M51.7042 35.52C51.7523 35.52 51.8003 35.52 51.8499 35.52C51.8979 39.297 51.946 43.0739 51.9955 46.9653C52.1878 46.8351 52.38 46.7049 52.5781 46.5707C52.6412 46.6684 52.7043 46.766 52.7693 46.8667C53.0147 47.2282 53.0147 47.2282 53.452 47.1627C53.5481 46.9022 53.6442 46.6417 53.7433 46.3733C53.8413 46.9445 53.9383 47.516 54.0346 48.0877C54.0623 48.2488 54.0901 48.41 54.1188 48.576C54.2512 49.3674 54.3652 50.0945 54.3258 50.912C54.2414 50.9397 54.1569 50.9675 54.0698 50.996C53.8659 51.0668 53.663 51.1434 53.4622 51.2288C53.3687 51.2667 53.2752 51.3046 53.1789 51.3437C53.0861 51.3831 52.9934 51.4225 52.8978 51.4632C52.5781 51.504 52.5781 51.504 51.7042 51.1093C51.7042 45.9649 51.7042 40.8204 51.7042 35.52Z" fill="#BDBCBC"/>
<path d="M61.6081 58.8053C61.7042 58.8053 61.8003 58.8053 61.8994 58.8053C61.9073 59.3069 61.9131 59.8083 61.9176 60.31C61.92 60.4507 61.9225 60.5913 61.925 60.7363C61.9309 61.6162 61.871 62.3252 61.6081 63.1467C60.8174 64.218 59.9904 64.1691 58.9228 64.1703C58.8153 64.1727 58.7078 64.1752 58.597 64.1777C57.7862 64.1806 57.1015 64.0899 56.465 63.344C56.0734 62.7151 56.0568 62.3518 56.0645 61.5433C56.0658 61.3637 56.0671 61.1842 56.0684 60.9991C56.0701 60.8612 56.0718 60.7234 56.0736 60.5813C56.2658 60.6464 56.4581 60.7116 56.6561 60.7787C56.5723 61.2494 56.4781 61.6996 56.3649 62.16C56.458 62.2048 56.5511 62.2495 56.647 62.2957C56.9474 62.5547 56.9474 62.5547 57.0567 63.0727C57.0687 63.2273 57.0807 63.382 57.0931 63.5413C57.4776 63.5413 57.8621 63.5413 58.2582 63.5413C58.2582 63.6716 58.2582 63.8018 58.2582 63.936C58.4475 63.9116 58.6367 63.8872 58.8317 63.862C58.9914 63.8414 58.9914 63.8414 59.1543 63.8204C59.2431 63.7934 59.3319 63.7664 59.4234 63.7387C59.4715 63.6084 59.5195 63.4782 59.5691 63.344C59.6171 63.4091 59.6652 63.4742 59.7147 63.5413C59.8108 63.2808 59.907 63.0204 60.006 62.752C59.7935 62.7798 59.5811 62.8088 59.3688 62.8383C59.2505 62.8544 59.1322 62.8704 59.0104 62.8869C58.689 62.9278 58.689 62.9278 58.4039 63.1467C58.3078 62.1047 58.2116 61.0628 58.1126 59.9893C58.5495 60.5813 58.5495 60.5813 58.5768 61.309C58.5633 61.6326 58.5633 61.6326 58.5495 61.9627C58.8379 61.9627 59.1263 61.9627 59.4234 61.9627C59.4715 61.3115 59.5195 60.6603 59.5691 59.9893C59.8094 59.8591 60.0497 59.7288 60.2973 59.5947C60.2119 60.8087 60.2119 60.8087 60.1516 61.1733C60.0074 61.271 60.0074 61.271 59.8603 61.3707C59.8603 61.566 59.8603 61.7614 59.8603 61.9627C60.5184 61.8578 60.9458 61.5328 61.4624 60.976C61.6011 60.5574 61.6011 60.5574 61.6081 60.1867C61.512 60.1867 61.4158 60.1867 61.3168 60.1867C61.4129 59.7308 61.5091 59.275 61.6081 58.8053Z" fill="#193742"/>
<path d="M42.3829 16.9707C42.3513 17.1397 42.3513 17.1397 42.3191 17.3122C42.0809 18.7221 42.0615 20.0672 42.0916 21.5093C42.0435 21.5093 41.9954 21.5093 41.9459 21.5093C41.9824 22.9671 42.3035 23.9996 42.7936 25.2941C42.9654 25.8507 42.9654 25.8507 42.8198 26.4427C42.4593 26.5404 42.4593 26.5404 42.0916 26.64C42.0735 26.8883 42.0555 27.1365 42.0369 27.3923C41.9898 28.0417 41.9363 28.2382 41.6546 28.8107C41.3451 29.045 41.3451 29.045 41.072 29.2053C41.1201 28.9449 41.1682 28.6844 41.2177 28.416C41.3138 28.416 41.4099 28.416 41.509 28.416C41.7441 27.43 41.847 26.5764 41.8549 25.53C41.8611 25.1538 41.8611 25.1538 41.8674 24.77C41.7897 23.965 41.6396 23.6524 41.2177 23.088C40.8364 22.825 40.8364 22.825 40.4895 22.6933C40.5856 22.6282 40.6817 22.5631 40.7808 22.496C40.2682 21.0889 39.569 20.3551 38.5961 19.536C38.8388 19.536 39.0816 19.536 39.3243 19.536C39.3243 19.0802 39.3243 18.6243 39.3243 18.1547C39.3724 18.1547 39.4204 18.1547 39.4699 18.1547C39.524 18.4721 39.524 18.4721 39.5792 18.796C39.7663 19.5564 39.878 19.852 40.3438 20.3253C40.8002 20.5755 40.8002 20.5755 41.2177 20.72C41.2117 20.5246 41.2057 20.3293 41.1995 20.128C41.197 19.2916 41.3427 18.5628 41.509 17.76C41.6051 17.76 41.7012 17.76 41.8003 17.76C41.8003 17.5646 41.8003 17.3693 41.8003 17.168C42.0916 16.9707 42.0916 16.9707 42.3829 16.9707Z" fill="#092830"/>
<path d="M62.7744 32.2879C63.4535 32.4629 63.747 33.0648 64.1296 33.7933C64.4433 34.5918 64.4413 35.2185 64.3754 36.112C64.0841 36.704 64.0841 36.704 63.8008 36.805C63.696 36.8164 63.5912 36.8279 63.4833 36.8397C63.2971 36.86 63.1108 36.8804 62.9189 36.9013C62.9189 37.0316 62.9189 37.1618 62.9189 37.296C62.8228 37.296 62.7267 37.296 62.6276 37.296C62.6276 37.5565 62.6276 37.817 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3364 38.0853C62.2883 38.2807 62.2402 38.4761 62.1907 38.6773C62.2961 37.416 62.4534 36.1751 62.6276 34.928C61.9788 34.7326 61.9788 34.7326 61.3168 34.5333C61.3641 33.8677 61.4192 33.2866 61.6172 32.671C61.9884 32.2655 62.3064 32.2519 62.7744 32.2879Z" fill="#57879B"/>
<path d="M65.3949 36.9013C65.8319 37.0987 65.8319 37.0987 66.0776 37.6413C66.4199 38.8441 66.4722 40.3265 66.1305 41.534C65.778 42.3387 65.357 42.8414 64.8123 43.4133C64.6864 43.639 64.5652 43.8697 64.4482 44.104C64.1383 44.7199 63.8164 45.1625 63.3559 45.584C63.2598 45.584 63.1636 45.584 63.0646 45.584C63.0165 44.3467 62.9685 43.1094 62.9189 41.8347C63.3515 41.7696 63.7841 41.7044 64.2298 41.6373C64.8224 41.3251 65.2568 41.0462 65.5406 40.256C65.6077 39.4388 65.5674 38.6769 65.3949 37.888C65.3949 37.5591 65.3949 37.2302 65.3949 36.9013Z" fill="#020607"/>
<path d="M42.9654 17.9573C43.1096 18.0225 43.2538 18.0876 43.4024 18.1547C43.4234 18.2747 43.4444 18.3948 43.4661 18.5185C43.6333 19.3869 44.3297 19.8551 44.8588 20.3253C45.2868 20.6244 45.7197 20.8826 46.1696 21.1147C45.6235 21.3367 45.6235 21.3367 45.2958 21.1147C45.3438 21.7659 45.3919 22.4171 45.4414 23.088C45.6337 22.6322 45.8259 22.1763 46.024 21.7067C46.0721 21.7067 46.1201 21.7067 46.1696 21.7067C46.1998 22.4425 46.1239 22.8369 45.8784 23.4827C45.8226 23.8756 45.7726 24.2702 45.7327 24.6667C45.6366 24.6667 45.5405 24.6667 45.4414 24.6667C45.2972 24.1457 45.153 23.6247 45.0045 23.088C44.9084 23.1531 44.8122 23.2182 44.7132 23.2853C44.7613 22.6341 44.8093 21.9829 44.8588 21.312C44.7627 21.2469 44.6666 21.1818 44.5675 21.1147C44.5736 21.3263 44.5796 21.5379 44.5858 21.756C44.5675 22.496 44.5675 22.496 44.4037 22.9277C44.3406 23.1047 44.3406 23.1047 44.2763 23.2853C44.3903 23.7263 44.3903 23.7263 44.5675 24.0747C44.6637 23.9444 44.7598 23.8142 44.8588 23.68C45.0227 24.42 45.0227 24.42 44.8588 24.864C45.6278 25.1245 46.3969 25.385 47.1892 25.6533C47.1892 25.7185 47.1892 25.7836 47.1892 25.8507C46.2085 25.9491 45.4278 25.7301 44.5675 25.0613C44.0787 24.2971 43.8229 23.4272 43.548 22.496C43.4519 22.496 43.3558 22.496 43.2567 22.496C43.1792 21.8509 43.104 21.2054 43.0292 20.5597C43.0071 20.3764 42.985 20.1931 42.9623 20.0043C42.9421 19.8281 42.9219 19.652 42.9012 19.4705C42.8821 19.3082 42.863 19.146 42.8434 18.9788C42.8198 18.5493 42.8198 18.5493 42.9654 17.9573Z" fill="#484544"/>
<path d="M60.4429 42.8213C60.7461 43.4375 60.784 43.8269 60.8395 44.5477C60.9089 45.3117 61.0432 46.0557 61.1712 46.805C61.247 47.2557 61.3226 47.7064 61.3976 48.1573C61.4509 48.4751 61.5064 48.7922 61.5626 49.109C61.6227 49.666 61.4995 50.0224 61.3168 50.5173C60.3337 50.542 60.3337 50.542 60.006 50.32C60.006 50.1898 60.006 50.0595 60.006 49.9253C59.9099 49.9253 59.8137 49.9253 59.7147 49.9253C59.6666 50.0556 59.6186 50.1858 59.5691 50.32C59.4249 49.4734 59.2807 48.6269 59.1321 47.7547C59.0841 48.6663 59.036 49.578 58.9865 50.5173C58.8904 50.5173 58.7942 50.5173 58.6952 50.5173C58.6952 49.0196 58.6952 47.5218 58.6952 45.9787C58.8394 45.9135 58.9836 45.8484 59.1321 45.7813C59.2283 46.2372 59.3244 46.693 59.4234 47.1627C59.5856 47.0711 59.5856 47.0711 59.7511 46.9777C60.0806 46.8052 60.3919 46.6807 60.7342 46.5707C60.7132 46.4488 60.6922 46.327 60.6705 46.2014C60.4838 45.047 60.4148 44.0025 60.4429 42.8213Z" fill="#D1D1D1"/>
<path d="M42.6742 44.7947C43.1068 44.7947 43.5393 44.7947 43.985 44.7947C43.985 46.618 43.985 48.4414 43.985 50.32C43.9369 50.32 43.8889 50.32 43.8394 50.32C43.8394 48.5618 43.8394 46.8035 43.8394 44.992C43.5029 44.992 43.1665 44.992 42.8198 44.992C42.8276 45.2489 42.8276 45.2489 42.8355 45.5111C42.8543 46.1458 42.8724 46.7805 42.8901 47.4153C42.8978 47.6902 42.9059 47.9651 42.9142 48.2399C42.9262 48.6347 42.937 49.0295 42.9479 49.4243C42.9547 49.662 42.9616 49.8997 42.9687 50.1446C42.9655 50.7147 42.9655 50.7147 42.8198 51.1093C42.4233 51.1911 42.4233 51.1911 41.9369 51.2327C41.776 51.2474 41.6151 51.2622 41.4493 51.2774C41.3248 51.2871 41.2003 51.2967 41.0721 51.3067C40.8695 50.5183 40.9325 49.7318 40.972 48.914C40.9771 48.7703 40.9823 48.6266 40.9876 48.4785C41.0365 47.4082 41.0365 47.4082 41.3634 46.9653C41.6523 46.8244 41.9435 46.6918 42.2373 46.5707C42.2853 46.6358 42.3334 46.7009 42.3829 46.768C42.3917 46.6421 42.4006 46.5162 42.4096 46.3864C42.4218 46.2234 42.4341 46.0603 42.4466 45.8923C42.4585 45.7298 42.4703 45.5673 42.4825 45.3998C42.5285 44.992 42.5285 44.992 42.6742 44.7947Z" fill="#D3D3D4"/>
<path d="M29.2748 31.376C29.3709 31.376 29.4671 31.376 29.5661 31.376C29.59 31.5725 29.59 31.5725 29.6144 31.773C29.7425 32.7393 29.8566 33.5273 30.2943 34.336C30.3904 34.0104 30.4866 33.6848 30.5856 33.3493C31.1514 34.4992 31.0987 35.7513 31.0225 37.0987C30.9124 37.6677 30.7684 38.1406 30.5856 38.6773C30.5375 38.6773 30.4895 38.6773 30.44 38.6773C30.4379 38.5509 30.4358 38.4245 30.4337 38.2942C30.3807 36.993 30.1881 36.3166 29.5661 35.3227C29.6322 36.2003 29.7658 36.886 30.036 37.6853C30.2663 38.503 30.4054 39.3827 30.44 40.256C30.3482 40.5226 30.2511 40.7859 30.1487 41.0453C30.1137 41.5115 30.1137 41.5115 30.1305 41.9827C30.1331 42.1404 30.1357 42.2981 30.1384 42.4606C30.1435 42.6392 30.1435 42.6392 30.1487 42.8213C30.0045 42.7562 29.8603 42.6911 29.7117 42.624C29.7202 42.4322 29.7286 42.2404 29.7373 42.0428C29.7939 40.0991 29.6139 38.3727 29.2425 36.4927C28.9081 34.7457 28.824 33.094 29.2748 31.376Z" fill="#0A2022"/>
<path d="M57.3844 17.76C59.9145 17.6477 59.9145 17.6477 60.8799 18.352C61.0741 18.6151 61.2683 18.8782 61.4625 19.1413C61.6638 19.2588 61.8674 19.369 62.0724 19.4743C63.2772 20.1639 64.0937 21.4716 64.5996 23.0795C64.6771 23.5448 64.6324 23.8244 64.5211 24.272C64.4249 24.0115 64.3288 23.751 64.2298 23.4827C64.0856 23.5803 64.0856 23.5803 63.9385 23.68C63.8855 23.5205 63.8326 23.361 63.778 23.1967C63.1889 21.4999 62.7677 20.6275 61.4807 19.869C60.0811 19.23 58.5681 19.2484 57.2388 20.128C57.2493 19.9901 57.2598 19.8523 57.2706 19.7102C57.2841 19.5306 57.2977 19.351 57.3116 19.166C57.3251 18.9874 57.3386 18.8089 57.3526 18.6249C57.3889 18.1679 57.3889 18.1679 57.3844 17.76Z" fill="#041B1E"/>
<path d="M48.3544 30.9813C48.3544 31.8279 48.3544 32.6745 48.3544 33.5467C48.066 33.742 48.066 33.742 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3544 34.1387C48.3063 34.2689 48.2582 34.3992 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.467 34.7738 47.3534 34.8046 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.4491 34.7069 45.0326 34.7038 44.604 34.7183C43.3694 34.7414 42.1568 34.6729 40.9264 34.5333C40.9122 34.4143 40.8979 34.2952 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733C40.4882 31.7701 40.7229 31.9852 41.0812 32.3627C41.4948 32.7978 41.4948 32.7978 41.9459 33.152C41.9459 33.2822 41.9459 33.4125 41.9459 33.5467C42.4698 33.6907 42.9947 33.8249 43.5207 33.9537C43.6629 33.9885 43.805 34.0234 43.9514 34.0593C44.0586 34.0855 44.1658 34.1117 44.2763 34.1387C44.2282 33.9433 44.1801 33.748 44.1306 33.5467C44.2306 33.5487 44.3305 33.5508 44.4335 33.5529C44.8848 33.5611 45.3361 33.5663 45.7873 33.5713C46.0233 33.5763 46.0233 33.5763 46.2641 33.5814C46.4894 33.5833 46.4894 33.5833 46.7193 33.5852C46.8581 33.5873 46.9969 33.5893 47.1399 33.5915C47.5085 33.5923 47.5085 33.5923 47.7718 33.152C47.8301 32.6936 47.8795 32.2329 47.9174 31.7707C47.6771 31.7707 47.4368 31.7707 47.1892 31.7707C48.0631 30.9813 48.0631 30.9813 48.3544 30.9813Z" fill="#8D8E8D"/>
<path d="M39.7612 43.808C40.1504 44.2417 40.3277 44.474 40.4169 45.1572C40.4166 45.3688 40.4164 45.5803 40.4161 45.7983C40.4162 46.0308 40.4163 46.2633 40.4164 46.5028C40.4135 46.745 40.4105 46.9872 40.4075 47.2367C40.4086 47.4773 40.4096 47.7179 40.4107 47.9659C40.4043 49.1856 40.3859 50.0431 39.9069 51.1093C39.3751 51.5897 38.9743 51.5647 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.292 49.9144 35.3635 48.8322 35.4374 47.471C35.4463 47.2702 35.4552 47.0693 35.4644 46.8624C35.4866 46.3703 35.5118 45.8785 35.5375 45.3867C36.1623 45.3867 36.7872 45.3867 37.4309 45.3867C37.479 46.5588 37.527 47.731 37.5766 48.9387C37.7688 49.0689 37.9611 49.1991 38.1591 49.3333C38.1111 49.4636 38.063 49.5938 38.0135 49.728C37.7404 49.6787 37.7404 49.6787 37.4309 49.5307C37.0534 48.8202 37.1062 48.0495 37.1214 47.212C37.1227 47.0744 37.124 46.9368 37.1254 46.795C37.1288 46.4571 37.134 46.1192 37.1396 45.7813C36.659 45.7813 36.1784 45.7813 35.6832 45.7813C35.6997 46.3653 35.7182 46.9489 35.7378 47.5327C35.7445 47.7818 35.7445 47.7818 35.7514 48.036C35.7571 48.195 35.7627 48.354 35.7685 48.5178C35.7731 48.6645 35.7777 48.8113 35.7824 48.9625C35.8076 49.3807 35.8076 49.3807 36.1201 49.728C36.072 49.9234 36.024 50.1187 35.9745 50.32C36.5901 50.5284 36.5901 50.5284 37.1823 50.3054C37.8372 50.0019 38.3942 50.3723 39.0387 50.6291C39.4567 50.7777 39.4567 50.7777 39.7124 50.5014C39.9923 49.9563 39.9587 49.5435 39.9547 48.8839C39.9539 48.6401 39.9532 48.3963 39.9524 48.1451C39.9494 47.8901 39.9464 47.6351 39.9433 47.3723C39.9426 47.1181 39.9418 46.8638 39.941 46.6019C39.9515 45.188 39.9515 45.188 39.7612 43.808Z" fill="#D8D8D8"/>
<path d="M35.1006 32.3627C35.5492 32.88 35.7913 33.1832 35.8732 33.9768C35.8743 34.41 35.8743 34.41 35.8288 35.1253C35.4443 35.0602 35.0598 34.9951 34.6637 34.928C34.6637 35.1234 34.6637 35.3187 34.6637 35.52C34.1059 35.8757 33.676 35.9534 33.0616 35.9147C33.0616 35.7844 33.0616 35.6542 33.0616 35.52C32.9654 35.52 32.8693 35.52 32.7703 35.52C32.845 34.2541 33.1128 33.4953 33.7625 32.5847C34.2468 32.2472 34.5649 32.2481 35.1006 32.3627Z" fill="#5E8EA2"/>
<path d="M33.3529 32.3627C33.449 32.3627 33.5451 32.3627 33.6442 32.3627C33.5509 32.9971 33.3803 33.4633 33.1344 34.0153C32.8375 34.7166 32.6711 35.2938 32.6246 36.112C32.7688 36.1771 32.913 36.2422 33.0616 36.3093C32.8387 36.5534 32.6159 36.7975 32.3931 37.0416C32.1281 37.3699 32.05 37.6008 32.0074 38.083C31.9895 38.8413 31.9976 39.3462 32.2514 40.034C32.763 40.6088 33.2993 40.8188 33.9355 41.0453C33.7898 41.44 33.7898 41.44 33.6442 41.6373C32.8681 41.7074 32.3809 41.7283 31.7508 41.0453C31.2679 40.3911 31.2509 39.7709 31.1682 38.8747C31.1051 38.7444 31.042 38.6142 30.977 38.48C30.944 38.3498 30.9109 38.2195 30.8769 38.0853C31.0587 37.5839 31.2312 37.1605 31.4595 36.704C31.5556 36.5086 31.6517 36.3133 31.7508 36.112C31.8469 36.112 31.943 36.112 32.0421 36.112C32.0481 35.9248 32.0541 35.7376 32.0603 35.5447C32.1666 34.4978 32.5963 33.5884 33.0616 32.7573C33.1577 32.7573 33.2538 32.7573 33.3529 32.7573C33.3529 32.6271 33.3529 32.4969 33.3529 32.3627Z" fill="#06171E"/>
<path d="M56.0735 31.5733C56.3619 31.5733 56.6503 31.5733 56.9474 31.5733C56.735 32.3008 56.4665 32.5919 55.9825 33.004C55.8635 33.1068 55.7445 33.2095 55.6218 33.3154C55.5306 33.3917 55.4393 33.468 55.3453 33.5467C55.6337 33.4164 55.9221 33.2862 56.2192 33.152C56.1231 33.673 56.0269 34.1939 55.9279 34.7307C55.7926 34.7286 55.6574 34.7265 55.5181 34.7244C55.017 34.7177 54.516 34.7127 54.0149 34.709C53.7979 34.707 53.5809 34.7043 53.3639 34.7009C53.0522 34.6961 52.7406 34.6939 52.429 34.6921C52.2414 34.6901 52.0537 34.688 51.8604 34.6859C51.3973 34.6659 51.3973 34.6659 51.1216 35.1253C50.8422 35.0845 50.8422 35.0845 50.5117 34.965C49.9379 34.77 49.3778 34.6348 48.7913 34.5333C48.8393 34.338 48.8874 34.1426 48.9369 33.9413C49.2607 33.722 49.4565 33.7088 49.8159 33.6885C49.9339 33.6811 50.0519 33.6737 50.1735 33.6661C50.2971 33.6593 50.4207 33.6524 50.5481 33.6453C51.4738 33.5922 52.3862 33.5 53.3063 33.3493C53.1621 33.6424 53.1621 33.6424 53.015 33.9413C53.4956 33.9413 53.9762 33.9413 54.4714 33.9413C54.4714 33.8111 54.4714 33.6809 54.4714 33.5467C55.4545 32.7573 55.4545 32.7573 55.7823 32.7573C55.8784 32.3666 55.9745 31.9759 56.0735 31.5733Z" fill="#919290"/>
<path d="M65.8319 35.52C65.8799 35.52 65.928 35.52 65.9775 35.52C66.0736 36.2363 66.1698 36.9526 66.2688 37.6907C66.3634 37.3671 66.3634 37.3671 66.46 37.037C66.6325 36.4923 66.7825 36.078 67.1427 35.7173C67.2388 35.7173 67.3349 35.7173 67.434 35.7173C67.3736 36.399 67.3063 37.0271 67.1427 37.6783C66.9659 38.4116 66.9099 39.0947 66.8514 39.8613C66.7553 39.8613 66.6591 39.8613 66.5601 39.8613C66.6352 40.0648 66.7103 40.2683 66.7877 40.478C67.0126 41.1935 67.0453 41.6735 66.8514 42.4267C66.551 42.698 66.551 42.698 66.2688 42.8213C66.2688 42.4306 66.2688 42.0399 66.2688 41.6373C66.2192 41.778 66.1697 41.9187 66.1186 42.0636C65.508 43.6985 64.7502 44.9824 63.5015 45.7813C63.3093 45.7813 63.117 45.7813 62.9189 45.7813C62.967 45.586 63.0151 45.3906 63.0646 45.1893C63.0646 45.3196 63.0646 45.4498 63.0646 45.584C63.1787 45.4538 63.2929 45.3235 63.4105 45.1893C63.7928 44.7947 63.7928 44.7947 64.0841 44.7947C64.1232 44.6797 64.1622 44.5647 64.2024 44.4463C64.3776 43.9998 64.5703 43.649 64.8123 43.2653C64.8874 43.1443 64.9625 43.0232 65.0399 42.8984C65.2493 42.624 65.2493 42.624 65.5406 42.624C65.5826 42.51 65.6247 42.3961 65.668 42.2787C65.7669 42.0106 65.8709 41.7456 65.9838 41.4878C66.3288 40.3925 66.2585 38.9983 65.9701 37.8942C65.7138 37.1977 65.4221 36.5619 65.1036 35.9147C65.2959 35.9798 65.4881 36.0449 65.6862 36.112C65.7343 35.9166 65.7823 35.7213 65.8319 35.52Z" fill="#385965"/>
<path d="M39.47 20.128C39.5421 20.3234 39.5421 20.3234 39.6156 20.5227C39.5341 20.4799 39.4526 20.4372 39.3687 20.3932C38.2779 19.88 37.2664 19.8703 36.1201 19.9307C36.1201 20.126 36.1201 20.3214 36.1201 20.5227C36.1201 20.718 36.1201 20.9134 36.1201 21.1147C35.859 21.4037 35.859 21.4037 35.5102 21.6943C35.3899 21.7989 35.2695 21.9034 35.1455 22.0112C35.0346 22.106 34.9236 22.2009 34.8093 22.2987C34.118 22.9231 33.7274 23.7316 33.2732 24.6574C33.2033 24.7907 33.1335 24.924 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8194 23.6497 33.0575 22.6839 33.6441 21.5093C35.1222 19.1375 37.4736 18.6308 39.47 20.128Z" fill="#85AEBF"/>
<path d="M50.8304 45.7813C50.8784 45.7813 50.9265 45.7813 50.976 45.7813C50.98 46.3076 50.9828 46.8338 50.9851 47.36C50.9863 47.5068 50.9876 47.6536 50.9888 47.8048C50.992 48.7929 50.9346 49.7365 50.8304 50.7147C50.9746 50.7798 51.1187 50.8449 51.2673 50.912C51.2673 50.9771 51.2673 51.0422 51.2673 51.1093C50.9306 51.1476 50.5937 51.1843 50.2569 51.2203C49.9755 51.2512 49.9755 51.2512 49.6885 51.2828C49.5366 51.2907 49.3847 51.2986 49.2283 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9515 48.4969 48.937 48.1493C48.5765 47.954 48.5765 47.954 48.2087 47.7547C48.2087 47.6244 48.2087 47.4942 48.2087 47.36C48.5452 47.36 48.8816 47.36 49.2283 47.36C49.2763 48.4019 49.3244 49.4438 49.3739 50.5173C49.5517 49.9595 49.5517 49.9595 49.4558 49.506C49.3428 48.7232 49.3624 47.9577 49.3739 47.1627C49.422 47.2929 49.47 47.4232 49.5196 47.5573C49.9521 47.4271 50.3847 47.2969 50.8304 47.1627C50.8304 46.7068 50.8304 46.251 50.8304 45.7813ZM49.6652 49.5307C49.6652 49.6609 49.6652 49.7912 49.6652 49.9253C49.7613 49.8602 49.8574 49.7951 49.9565 49.728C49.8604 49.6629 49.7642 49.5978 49.6652 49.5307Z" fill="#CECECE"/>
<path d="M53.4519 17.5627C53.8525 17.4887 53.8525 17.4887 54.3258 17.5627C54.875 18.2676 54.9547 18.8686 54.9903 19.8813C54.9639 21.128 54.6593 22.04 54.1802 23.088C54.084 23.088 53.9879 23.088 53.8889 23.088C53.8227 23.2631 53.8227 23.2631 53.7552 23.4418C53.3843 24.3896 53.0421 25.1586 52.4324 25.8507C52.3363 25.8507 52.2402 25.8507 52.1411 25.8507C52.0228 25.5177 52.0228 25.5177 51.9955 25.0613C52.1675 24.8415 52.3405 24.6228 52.5178 24.4108C52.9493 23.7065 53.1068 22.7663 53.3063 21.904C53.4024 21.9691 53.4985 22.0342 53.5976 22.1013C53.6937 21.1245 53.7898 20.1477 53.8889 19.1413C53.985 19.1413 54.0811 19.1413 54.1802 19.1413C54.1802 18.7506 54.1802 18.3599 54.1802 17.9573C53.8918 17.9573 53.6034 17.9573 53.3063 17.9573C53.3544 17.8271 53.4024 17.6969 53.4519 17.5627Z" fill="#D8DADA"/>
<path d="M54.9084 15.984C56.7199 16.6828 56.7199 16.6828 57.3844 17.5627C57.5758 18.1107 57.6125 18.5462 57.53 19.1413C57.2419 19.8813 56.8109 20.4527 56.2192 20.72C56.075 20.72 55.9308 20.72 55.7823 20.72C55.7583 20.5124 55.7583 20.5124 55.7339 20.3007C55.5882 19.1191 55.3794 18.0823 55.054 16.9707C54.9987 16.6437 54.9466 16.3154 54.9084 15.984Z" fill="#5F8B9A"/>
<path d="M46.3153 44.2027C47.2766 44.2027 48.2379 44.2027 49.2282 44.2027C49.2763 44.3329 49.3244 44.4631 49.3739 44.5973C48.4126 44.5973 47.4514 44.5973 46.461 44.5973C46.482 45.0695 46.503 45.5416 46.5247 46.028C46.5341 46.249 46.5341 46.249 46.5437 46.4745C46.568 46.9914 46.5932 47.4864 46.6885 47.989C46.7701 48.4467 46.734 48.8188 46.6885 49.284C46.6737 49.4417 46.6589 49.5994 46.6436 49.7619C46.6314 49.881 46.6192 50 46.6066 50.1227C46.9911 50.1878 47.3756 50.2529 47.7718 50.32C47.785 49.9816 47.785 49.9816 47.7985 49.6363C47.8108 49.3421 47.8231 49.0479 47.8355 48.7537C47.8412 48.6047 47.847 48.4558 47.8529 48.3023C47.9009 47.185 47.9009 47.185 48.0631 46.9653C48.2844 46.9512 48.5061 46.9488 48.7276 46.953C48.8479 46.9548 48.9683 46.9566 49.0923 46.9584C49.1852 46.9607 49.2781 46.963 49.3739 46.9653C49.4345 47.4789 49.4916 47.9924 49.5468 48.507C49.5644 48.6526 49.582 48.7983 49.6 48.9483C49.6441 49.3742 49.6441 49.3742 49.6652 50.1227C49.521 50.318 49.3768 50.5134 49.2282 50.7147C49.2282 49.6076 49.2282 48.5006 49.2282 47.36C48.8918 47.36 48.5554 47.36 48.2087 47.36C48.2848 47.508 48.2848 47.508 48.3623 47.6591C48.5576 48.3545 48.4593 48.9644 48.3726 49.6787C48.3574 49.8163 48.3422 49.9539 48.3265 50.0957C48.2889 50.4339 48.249 50.7717 48.2087 51.1093C47.5358 51.1093 46.863 51.1093 46.1697 51.1093C46.1502 48.7969 46.208 46.5111 46.3153 44.2027ZM49.6652 49.5307C49.7613 49.6609 49.8574 49.7911 49.9565 49.9253C49.8603 49.9253 49.7642 49.9253 49.6652 49.9253C49.6652 49.7951 49.6652 49.6649 49.6652 49.5307Z" fill="#DEDEDD"/>
<path d="M39.0331 32.56C39.6034 32.9464 40.0355 33.3726 40.3439 34.1387C40.3712 34.6813 40.3712 34.6813 40.3439 35.1253C40.1817 35.0643 40.0194 35.0032 39.8523 34.9403C38.7279 34.5944 37.5595 34.5971 36.4114 34.5333C36.5029 33.714 36.6346 33.2692 37.1385 32.7481C37.7451 32.3579 38.383 32.4171 39.0331 32.56Z" fill="#4B7F94"/>
<path d="M51.9955 21.1147C52.1397 21.1147 52.2839 21.1147 52.4324 21.1147C52.5045 21.7984 52.5045 21.7984 52.5781 22.496C52.6261 22.496 52.6742 22.496 52.7237 22.496C52.7568 23.4584 52.7182 24.2208 52.2373 24.9711C51.979 25.2783 51.7709 25.4207 51.4493 25.5793C51.3569 25.6267 51.2646 25.674 51.1694 25.7227C50.2175 26.0819 49.2695 26.0727 48.2906 26.0603C48.1563 26.0594 48.022 26.0586 47.8836 26.0576C47.555 26.0553 47.2264 26.0521 46.8979 26.048C47.2592 25.5584 47.3743 25.6022 47.8725 25.5924C48.0102 25.5875 48.1479 25.5825 48.2898 25.5774C48.5776 25.5706 48.8655 25.5644 49.1534 25.5589C50.0771 25.5243 50.8468 25.3359 51.7042 24.864C51.5119 24.7989 51.3197 24.7338 51.1216 24.6667C50.7619 22.6692 50.7619 22.6692 50.8303 21.904C50.9264 21.7738 51.0226 21.6435 51.1216 21.5093C51.3139 21.5093 51.5061 21.5093 51.7042 21.5093C51.7042 21.9652 51.7042 22.421 51.7042 22.8907C51.8003 22.8907 51.8964 22.8907 51.9955 22.8907C51.9685 22.6343 51.9414 22.3778 51.9136 22.1137C51.8675 21.6766 51.8675 21.6766 51.8498 21.312C51.8979 21.2469 51.946 21.1818 51.9955 21.1147Z" fill="#60403D"/>
<path d="M30.5856 39.4667C30.7298 39.4667 30.874 39.4667 31.0225 39.4667C31.0351 39.6045 31.0477 39.7424 31.0606 39.8845C31.1217 40.42 31.1923 40.9236 31.3138 41.44C31.6254 41.731 31.6254 41.731 32.042 41.8347C32.5751 42.2267 33.0752 42.6369 33.4985 43.2283C33.9213 43.7833 34.4234 44.0713 34.9549 44.4C34.9549 44.6605 34.9549 44.921 34.9549 45.1893C34.2392 44.8955 33.7311 44.3128 33.2072 43.6107C33.1591 43.4804 33.1111 43.3502 33.0615 43.216C32.9654 43.2811 32.8693 43.3462 32.7703 43.4133C32.8639 44.0199 32.8639 44.0199 33.1776 44.195C33.2835 44.2626 33.3894 44.3303 33.4985 44.4C33.7096 44.6307 33.9159 44.8695 34.1175 45.1153C34.2204 45.24 34.3233 45.3646 34.4293 45.493C34.5066 45.5882 34.584 45.6833 34.6637 45.7813C34.6156 45.9767 34.5675 46.172 34.518 46.3733C33.974 46.2751 33.6715 46.2007 33.2072 45.7813C33.2553 45.6511 33.3033 45.5208 33.3528 45.3867C33.2687 45.2765 33.1846 45.1664 33.098 45.0529C32.7696 44.5964 32.479 44.1233 32.1877 43.623C32.0915 43.4584 31.9954 43.2938 31.8964 43.1243C31.7522 42.8766 31.7522 42.8766 31.6051 42.624C31.4111 42.2949 31.2169 41.966 31.0225 41.6373C30.8783 41.9304 30.8783 41.9304 30.7312 42.2293C30.3867 41.5291 30.4241 41.3262 30.4945 40.515C30.5107 40.3189 30.5268 40.1227 30.5435 39.9207C30.5574 39.7709 30.5713 39.621 30.5856 39.4667Z" fill="#102B30"/>
<path d="M59.862 32.7465C60.2412 33.1421 60.4286 33.4842 60.5704 34.1017C60.5764 34.2441 60.5824 34.3866 60.5886 34.5333C59.2612 34.7902 57.9866 34.6693 56.6561 34.5333C57.0633 33.0753 57.0633 33.0753 57.5715 32.7257C58.3009 32.42 59.154 32.2958 59.862 32.7465Z" fill="#4B7F94"/>
<path d="M64.6667 36.704C64.7147 36.8994 64.7628 37.0947 64.8123 37.296C64.3625 37.6442 64.1958 37.6907 63.6472 37.6907C63.5991 37.5604 63.551 37.4302 63.5015 37.296C63.0239 37.8622 62.8999 38.3845 62.7744 39.2115C62.773 39.76 62.8589 39.9432 63.1192 40.3547C63.2454 40.5175 63.3715 40.6803 63.5015 40.848C63.5015 40.9131 63.5015 40.9782 63.5015 41.0453C63.2131 41.0453 62.9247 41.0453 62.6276 41.0453C62.6988 41.2102 62.7699 41.375 62.8433 41.5448C63.095 42.3236 63.1183 42.863 63.1101 43.7093C63.1095 43.9596 63.109 44.2099 63.1084 44.4678C63.0659 45.167 62.9595 45.7218 62.7733 46.3733C62.7252 46.3733 62.6772 46.3733 62.6276 46.3733C62.6327 46.1848 62.6378 45.9963 62.643 45.8021C62.6674 44.2202 62.6628 42.7272 62.1907 41.2427C62.0946 41.1775 61.9984 41.1124 61.8994 41.0453C61.8786 39.3539 61.8786 39.3539 62.045 38.6773C62.1412 38.6773 62.2373 38.6773 62.3363 38.6773C62.3363 38.482 62.3363 38.2866 62.3363 38.0853C62.4325 38.0853 62.5286 38.0853 62.6276 38.0853C62.6276 37.8249 62.6276 37.5644 62.6276 37.296C62.7238 37.296 62.8199 37.296 62.9189 37.296C62.9189 37.1658 62.9189 37.0355 62.9189 36.9013C64.1663 36.4225 64.1663 36.4225 64.6667 36.704Z" fill="#5A8597"/>
<path d="M36.0072 52.0736C36.1468 52.0746 36.2864 52.0757 36.4302 52.0767C36.6562 52.0777 36.6562 52.0777 36.8867 52.0787C37.0453 52.0803 37.2038 52.082 37.3672 52.0837C37.6059 52.085 37.6059 52.085 37.8494 52.0864C38.2439 52.0887 38.6385 52.0919 39.033 52.096C39.1067 52.733 39.1792 53.3703 39.2515 54.0077C39.2723 54.1876 39.2932 54.3676 39.3146 54.553C39.3344 54.7279 39.3541 54.9028 39.3744 55.083C39.3927 55.2432 39.411 55.4033 39.4299 55.5684C39.4714 56.0595 39.4768 56.5354 39.47 57.0293C39.4099 56.8991 39.3498 56.7688 39.2879 56.6347C39.2038 56.5044 39.1197 56.3742 39.033 56.24C38.8408 56.24 38.6485 56.24 38.4504 56.24C38.4626 56.1141 38.4749 55.9882 38.4874 55.8584C38.5023 55.6954 38.5171 55.5323 38.5324 55.3643C38.5476 55.2018 38.5628 55.0392 38.5785 54.8718C38.5843 54.7372 38.5901 54.6026 38.5961 54.464C38.548 54.3989 38.5 54.3338 38.4504 54.2667C38.4745 54.0794 38.4985 53.8922 38.5233 53.6993C38.6325 53.0787 38.6325 53.0787 38.4504 52.4907C38.3378 52.5456 38.3378 52.5456 38.2229 52.6017C37.7427 52.7184 37.3257 52.6026 36.8483 52.4907C36.8003 52.6209 36.7522 52.7511 36.7027 52.8853C36.6546 52.8202 36.6066 52.7551 36.5571 52.688C36.542 52.8427 36.527 52.9973 36.5115 53.1567C36.4114 53.6747 36.4114 53.6747 35.9745 54.0693C35.869 54.4757 35.869 54.4757 35.8288 54.8587C35.9249 54.8587 36.0211 54.8587 36.1201 54.8587C36.0055 55.5316 35.8476 56.1786 35.6832 56.832C35.6351 56.832 35.5871 56.832 35.5375 56.832C35.5333 56.0797 35.5307 55.3273 35.5284 54.575C35.5272 54.3602 35.526 54.1454 35.5247 53.924C35.5243 53.7199 35.5238 53.5158 35.5233 53.3054C35.5225 53.1163 35.5218 52.9272 35.521 52.7324C35.5434 52.1388 35.5691 52.1039 36.0072 52.0736Z" fill="#71CBF7"/>
<path d="M41.8003 16.576C41.608 17.9435 41.4158 19.311 41.2177 20.72C40.3095 20.5149 40.1828 20.4143 39.6156 19.536C39.5676 19.4709 39.5195 19.4058 39.47 19.3387C39.4063 18.796 39.4063 18.796 39.47 18.1547C40.1287 17.2409 40.8327 16.576 41.8003 16.576Z" fill="#638FA1"/>
<path d="M45.2958 21.1147C45.6322 21.1147 45.9687 21.1147 46.3153 21.1147C46.3634 21.2449 46.4114 21.3751 46.4609 21.5093C46.8702 21.6459 46.8702 21.6459 47.3439 21.7313C47.5853 21.7809 47.5853 21.7809 47.8315 21.8315C47.956 21.8555 48.0804 21.8794 48.2087 21.904C48.3742 22.5768 48.335 22.694 48.145 23.3223C48.0822 23.5341 48.0822 23.5341 48.0181 23.7501C47.9683 23.9108 47.9683 23.9108 47.9174 24.0747C47.7732 24.0747 47.629 24.0747 47.4805 24.0747C47.2347 23.5813 47.2347 23.5813 47.0435 23.088C46.9474 23.6741 46.8513 24.2602 46.7522 24.864C46.6561 24.864 46.56 24.864 46.4609 24.864C45.7652 23.0435 45.7652 23.0435 46.024 21.904C45.8798 22.425 45.7356 22.9459 45.5871 23.4827C45.2958 23.088 45.2958 23.088 45.2673 22.6178C45.2707 22.4392 45.2741 22.2607 45.2776 22.0767C45.2802 21.8971 45.2828 21.7175 45.2855 21.5325C45.2889 21.3946 45.2923 21.2567 45.2958 21.1147Z" fill="#886767"/>
<path d="M44.5676 21.1147C44.7117 21.1798 44.8559 21.2449 45.0045 21.312C44.9564 21.8981 44.9084 22.4842 44.8588 23.088C44.955 23.0229 45.0511 22.9578 45.1501 22.8907C45.2463 23.4767 45.3424 24.0628 45.4414 24.6667C45.5376 24.6667 45.6337 24.6667 45.7327 24.6667C45.7267 24.4794 45.7207 24.2922 45.7145 24.0993C45.7327 23.4827 45.7327 23.4827 46.024 23.088C46.1682 23.6741 46.3124 24.2602 46.4609 24.864C47.9022 25.3462 49.3356 25.3698 50.7757 24.8393C51.2564 24.6705 51.4002 24.6751 51.8498 24.864C50.6725 25.6978 49.7266 25.7013 48.409 25.715C48.2293 25.7207 48.0496 25.7265 47.8645 25.7323C46.7917 25.7424 45.7841 25.6789 44.8588 24.864C44.8108 24.6686 44.7627 24.4733 44.7132 24.272C44.6051 24.1438 44.6051 24.1438 44.4947 24.013C44.1881 23.5457 44.1805 23.1048 44.1306 22.496C44.2267 22.496 44.3229 22.496 44.4219 22.496C44.47 22.0402 44.518 21.5843 44.5676 21.1147Z" fill="#DAA9AD"/>
<path d="M50.539 16.7733C50.6201 16.8344 50.7012 16.8954 50.7848 16.9583C51.43 17.36 51.8927 17.3879 52.5781 17.168C53.015 17.168 53.015 17.168 53.2608 17.464C53.3239 17.5617 53.3869 17.6594 53.4519 17.76C52.4867 18.9432 51.697 19.2044 50.4116 19.166C50.2404 19.1633 50.2404 19.1633 50.0657 19.1606C49.7865 19.156 49.5073 19.1489 49.2282 19.1413C49.3243 18.946 49.4205 18.7506 49.5195 18.5493C49.6156 18.5493 49.7118 18.5493 49.8108 18.5493C49.8228 18.4028 49.8348 18.2563 49.8472 18.1053C49.9768 17.4616 50.1727 17.2056 50.539 16.7733Z" fill="#194048"/>
<path d="M44.8589 61.3707C44.9069 61.3707 44.955 61.3707 45.0045 61.3707C45.0015 61.6149 44.9985 61.8591 44.9954 62.1107C44.9947 62.6857 45.0147 63.188 45.1502 63.7387C45.1982 63.6735 45.2463 63.6084 45.2958 63.5413C45.5339 63.5242 45.7725 63.5202 46.011 63.5221C46.155 63.5227 46.2991 63.5233 46.4476 63.524C46.5992 63.5256 46.7508 63.5273 46.907 63.529C47.1353 63.5303 47.1353 63.5303 47.3681 63.5317C47.7454 63.534 48.1227 63.5373 48.5 63.5413C48.5481 63.4111 48.5961 63.2809 48.6457 63.1467C48.5495 62.9513 48.4534 62.7559 48.3544 62.5547C48.2597 62.7012 48.2597 62.7012 48.1632 62.8507C47.9174 63.1467 47.9174 63.1467 47.4805 63.1467C47.4805 62.9513 47.4805 62.7559 47.4805 62.5547C47.4324 62.6849 47.3844 62.8151 47.3348 62.9493C47.1426 62.8842 46.9503 62.8191 46.7523 62.752C46.8003 62.5566 46.8484 62.3613 46.8979 62.16C46.994 62.16 47.0902 62.16 47.1892 62.16C47.2373 61.9646 47.2853 61.7693 47.3348 61.568C47.5989 61.5904 47.8629 61.6156 48.1268 61.642C48.3473 61.6626 48.3473 61.6626 48.5723 61.6836C48.6926 61.7106 48.813 61.7376 48.937 61.7653C49.1188 62.258 49.0755 62.5178 49.028 63.0603C49.0148 63.2193 49.0017 63.3783 48.9882 63.5421C48.937 63.936 48.937 63.936 48.7913 64.1333C48.4806 64.1531 48.1693 64.1591 47.8583 64.1595C47.6688 64.1598 47.4794 64.1601 47.2842 64.1603C47.1851 64.1599 47.0859 64.1595 46.9837 64.1591C46.6807 64.158 46.3777 64.159 46.0747 64.1603C45.7905 64.1599 45.7905 64.1599 45.5006 64.1595C45.3254 64.1593 45.1501 64.1591 44.9695 64.1589C44.5676 64.1333 44.5676 64.1333 44.4219 63.936C44.4114 63.5375 44.4097 63.1384 44.4128 62.7397C44.4141 62.5217 44.4155 62.3037 44.4168 62.0791C44.4185 61.9104 44.4202 61.7418 44.4219 61.568C44.47 61.7634 44.5181 61.9587 44.5676 62.16C44.6637 62.16 44.7598 62.16 44.8589 62.16C44.8108 61.9646 44.7627 61.7693 44.7132 61.568C44.7613 61.5029 44.8094 61.4378 44.8589 61.3707Z" fill="#1A323E"/>
<path d="M37.7222 56.832C37.8183 56.832 37.9145 56.832 38.0135 56.832C38.1096 57.0925 38.2058 57.353 38.3048 57.6213C38.4009 57.4911 38.4971 57.3609 38.5961 57.2267C38.6442 57.2918 38.6922 57.3569 38.7417 57.424C38.8379 57.2938 38.934 57.1635 39.033 57.0293C39.2606 57.239 39.2606 57.239 39.47 57.6213C39.4518 58.3243 39.4518 58.3243 39.3243 59.0027C39.1801 59.1329 39.0359 59.2631 38.8874 59.3973C38.8874 59.2671 38.8874 59.1369 38.8874 59.0027C38.4262 59.3644 38.4262 59.3644 38.1592 59.9893C38.1111 59.5986 38.063 59.2079 38.0135 58.8053C38.0099 58.9597 38.0062 59.1141 38.0025 59.2732C37.9856 59.9683 37.9677 60.6633 37.9498 61.3583C37.9441 61.6014 37.9383 61.8444 37.9324 62.0949C37.9263 62.3257 37.9202 62.5566 37.9139 62.7944C37.9086 63.0083 37.9033 63.2222 37.8978 63.4426C37.8679 63.936 37.8679 63.936 37.7222 64.1333C37.3795 64.1477 37.0365 64.1499 36.6936 64.1457C36.5057 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4993 63.6351 35.5232 63.2824 35.5284 62.7273C35.5297 62.5477 35.5311 62.3682 35.5324 62.1831C35.5341 62.0453 35.5358 61.9074 35.5375 61.7653C35.6337 61.8305 35.7298 61.8956 35.8288 61.9627C35.8258 62.1824 35.8228 62.4022 35.8197 62.6287C35.7904 63.3109 35.7904 63.3109 35.9745 63.7387C36.0657 63.7221 36.157 63.7056 36.251 63.6886C36.4295 63.6584 36.4295 63.6584 36.6117 63.6277C36.7891 63.5968 36.7891 63.5968 36.9701 63.5652C37.2853 63.5413 37.2853 63.5413 37.5766 63.7387C37.5844 63.1918 37.5902 62.6452 37.5948 62.0983C37.5972 61.9433 37.5997 61.7883 37.6022 61.6285C37.6036 61.4043 37.6036 61.4043 37.605 61.1756C37.6065 61.0382 37.6081 60.9008 37.6096 60.7592C37.592 60.3186 37.592 60.3186 37.2853 59.792C37.3814 59.792 37.4775 59.792 37.5766 59.792C37.4804 59.3362 37.3843 58.8803 37.2853 58.4107C37.4295 58.4758 37.5737 58.5409 37.7222 58.608C37.6742 58.4126 37.6261 58.2173 37.5766 58.016C37.6167 57.6196 37.6643 57.2243 37.7222 56.832Z" fill="#4188AA"/>
<path d="M32.3333 33.9413C32.1877 35.4072 32.1877 35.4072 32.042 36.112C31.9459 36.112 31.8498 36.112 31.7507 36.112C30.8994 38.4087 30.4616 40.2244 30.7312 42.8213C30.1668 42.4513 30.1668 42.4513 30.003 42.2293C29.9689 41.5682 29.9766 41.1261 30.176 40.515C30.4033 39.2589 29.956 38.0085 29.6116 36.8397C29.4281 36.1414 29.3799 35.6603 29.4204 34.928C29.6154 35.256 29.8095 35.585 30.003 35.9147C30.0841 36.0327 30.1652 36.1507 30.2488 36.2723C30.5364 36.9218 30.5394 37.5314 30.5856 38.2827C30.8647 37.2995 30.9577 36.3632 31.0225 35.3227C31.1186 35.5831 31.2148 35.8436 31.3138 36.112C31.6567 35.6087 31.7483 35.3799 31.7781 34.6813C31.769 34.5022 31.76 34.3232 31.7507 34.1387C32.042 33.9413 32.042 33.9413 32.3333 33.9413Z" fill="#3E636F"/>
<path d="M43.4024 13.2213C43.9036 13.4803 44.296 13.7474 44.7132 14.208C44.6622 14.3871 44.6111 14.5662 44.5585 14.7507C44.3861 15.3539 44.3861 15.3539 44.5039 15.8113C44.5676 16.1813 44.5676 16.1813 44.431 16.6253C43.9626 17.1639 43.5668 17.0241 42.9655 16.9707C42.9655 16.8404 42.9655 16.7102 42.9655 16.576C43.0616 16.5109 43.1577 16.4458 43.2568 16.3787C43.0165 16.3135 42.7761 16.2484 42.5285 16.1813C42.4 15.0496 42.7469 14.4508 43.2113 13.5682C43.3059 13.3965 43.3059 13.3965 43.4024 13.2213Z" fill="#133942"/>
<path d="M45.2364 52.4683C45.4004 52.4693 45.5644 52.4703 45.7333 52.4714C45.9103 52.472 46.0872 52.4727 46.2695 52.4733C46.4559 52.475 46.6422 52.4766 46.8342 52.4783C47.0211 52.4792 47.208 52.4801 47.4006 52.481C47.8642 52.4834 48.3277 52.4866 48.7913 52.4907C48.8778 52.9562 48.8778 52.9562 48.937 53.4773C48.7185 53.9213 48.7185 53.9213 48.3544 54.2667C47.8082 54.4147 47.8082 54.4147 47.3349 54.464C47.3829 54.3338 47.431 54.2035 47.4805 54.0693C47.0364 53.8698 47.0364 53.8698 46.6066 54.0693C46.5105 53.874 46.4144 53.6786 46.3153 53.4773C46.1711 53.5425 46.027 53.6076 45.8784 53.6747C45.7823 53.4793 45.6861 53.2839 45.5871 53.0827C45.47 53.2455 45.3528 53.4083 45.2321 53.576C44.8589 54.0693 44.8589 54.0693 44.7132 54.0693C44.7071 53.609 44.7073 53.1484 44.7132 52.688C44.8589 52.4907 44.8589 52.4907 45.2364 52.4683Z" fill="#68C7F7"/>
<path d="M56.0735 52.096C56.8426 52.096 57.6116 52.096 58.4039 52.096C58.551 52.6942 58.5569 53.0321 58.5319 53.6523C58.5248 53.8374 58.5178 54.0224 58.5106 54.2131C58.5024 54.4058 58.4942 54.5985 58.4858 54.797C58.4782 54.992 58.4706 55.187 58.4628 55.3879C58.4439 55.8693 58.4242 56.3507 58.4039 56.832C58.3078 56.7669 58.2116 56.7018 58.1126 56.6347C58.1126 55.6579 58.1126 54.6811 58.1126 53.6747C58.0165 53.6096 57.9203 53.5444 57.8213 53.4773C57.9174 53.2169 58.0135 52.9564 58.1126 52.688C57.8723 52.8182 57.632 52.9485 57.3844 53.0827C57.3844 52.9524 57.3844 52.8222 57.3844 52.688C57.2402 52.7857 57.2402 52.7857 57.0931 52.8853C57.0931 53.0807 57.0931 53.2761 57.0931 53.4773C56.9489 53.6076 56.8047 53.7378 56.6561 53.872C56.5709 54.2442 56.5709 54.2442 56.556 54.6737C56.5466 54.8304 56.5372 54.9871 56.5276 55.1485C56.5016 55.9085 56.5016 56.6633 56.5105 57.424C56.3663 57.424 56.2221 57.424 56.0735 57.424C56.0735 55.6658 56.0735 53.9075 56.0735 52.096Z" fill="#73B3D4"/>
<path d="M43.0565 17.4763C43.6622 17.5827 43.8628 17.8687 44.2757 18.4491C45.0457 19.2341 46.0364 19.2162 46.9616 19.2647C47.1423 19.2761 47.1423 19.2761 47.3266 19.2878C47.6206 19.3062 47.9146 19.3226 48.2087 19.3387C47.7628 19.8564 47.6652 19.9307 47.0435 19.9307C47.0435 19.8004 47.0435 19.6702 47.0435 19.536C46.5894 19.6636 46.5894 19.6636 46.4609 20.128C46.5571 20.1931 46.6532 20.2582 46.7522 20.3253C46.1088 20.5604 45.52 20.7024 44.8588 20.5227C44.2534 20.0361 43.7527 19.4186 43.2567 18.7467C43.2567 18.5513 43.2567 18.3559 43.2567 18.1547C43.1606 18.1547 43.0645 18.1547 42.9654 18.1547C42.9174 18.4803 42.8693 18.8059 42.8198 19.1413C42.7717 19.1413 42.7237 19.1413 42.6741 19.1413C42.6187 18.6823 42.5703 18.2217 42.5285 17.76C42.6741 17.5627 42.6741 17.5627 43.0565 17.4763Z" fill="#DEE2E1"/>
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4115 10.1061 49.8585 10.2509 50.3534 10.3814C51.2586 10.6239 51.9932 11.0544 52.7237 11.84C52.7958 12.0354 52.7958 12.0354 52.8694 12.2347C52.3695 12.1263 52.0045 11.8235 51.5836 11.4523C50.6326 10.8382 49.6532 10.7769 48.6183 10.7793C48.4843 10.7795 48.3502 10.7797 48.2121 10.7799C46.9664 10.809 45.8294 11.0675 44.7542 11.978C44.6445 12.0627 44.5349 12.1474 44.4219 12.2347C44.3258 12.1696 44.2297 12.1044 44.1306 12.0373C45.2807 10.5212 46.6475 10.1739 48.2087 10.064C48.1366 8.79417 48.1366 8.79417 48.063 7.49867Z" fill="#B2CED6"/>
<path d="M52.1412 25.456C52.1412 25.7165 52.1412 25.977 52.1412 26.2453C51.2668 27.0734 50.5815 27.1601 49.5286 27.1333C49.3816 27.1314 49.2345 27.1294 49.083 27.1274C46.1206 27.029 46.1206 27.029 45.1615 25.9223C45.1097 25.8336 45.0579 25.7448 45.0045 25.6533C45.1277 25.6961 45.2508 25.7388 45.3777 25.7828C46.2957 26.0881 47.1178 26.3207 48.0631 26.2453C48.0631 26.1802 48.0631 26.1151 48.0631 26.048C48.3475 26.0121 48.3475 26.0121 48.6377 25.9755C48.8892 25.9422 49.1406 25.9088 49.3921 25.8753C49.5791 25.8521 49.5791 25.8521 49.7699 25.8283C50.5427 25.7236 51.4312 25.1354 52.1412 25.456Z" fill="#959590"/>
<path d="M53.3063 13.2213C53.8287 13.8898 54.2582 14.5455 54.6171 15.392C54.6171 15.6525 54.6171 15.913 54.6171 16.1813C54.3768 16.2464 54.1365 16.3116 53.8889 16.3787C53.937 16.4438 53.985 16.5089 54.0345 16.576C54.0826 16.7062 54.1307 16.8365 54.1802 16.9707C53.6996 16.9707 53.2189 16.9707 52.7237 16.9707C52.7718 16.7753 52.8199 16.5799 52.8694 16.3787C52.7732 16.4438 52.6771 16.5089 52.5781 16.576C52.6261 16.3155 52.6742 16.055 52.7237 15.7867C52.6276 15.7215 52.5315 15.6564 52.4324 15.5893C52.4324 14.208 52.4324 14.208 52.7055 13.7763C53.015 13.4187 53.015 13.4187 53.3063 13.2213Z" fill="#103A41"/>
<path d="M50.221 52.0767C50.4515 52.078 50.6819 52.0804 50.9123 52.0837C51.0297 52.0845 51.1472 52.0854 51.2682 52.0864C51.5592 52.0887 51.8502 52.0922 52.1412 52.096C52.4215 53.0644 52.672 54.0404 52.9058 55.0313C52.9835 55.3602 52.9835 55.3602 53.0628 55.6958C53.1607 56.24 53.1607 56.24 53.015 56.6347C52.6971 56.2039 52.63 55.9483 52.4962 55.3767C52.4599 55.2245 52.4237 55.0724 52.3864 54.9157C52.2957 54.5041 52.2151 54.0923 52.1412 53.6747C51.8528 53.6747 51.5644 53.6747 51.2673 53.6747C51.3634 53.2839 51.4596 52.8932 51.5586 52.4907C51.2702 52.4907 50.9818 52.4907 50.6847 52.4907C50.7328 52.8163 50.7808 53.1419 50.8304 53.4773C50.6862 53.5424 50.542 53.6076 50.3934 53.6747C50.3934 53.5444 50.3934 53.4142 50.3934 53.28C50.2492 53.3777 50.2492 53.3777 50.1021 53.4773C50.1141 53.689 50.1262 53.9006 50.1385 54.1187C50.0961 54.9809 49.9764 55.0973 49.5196 55.648C49.5156 55.093 49.5127 54.538 49.5104 53.983C49.5092 53.8246 49.508 53.6663 49.5067 53.5031C49.5055 53.0998 49.5119 52.6965 49.5196 52.2933C49.6652 52.096 49.6652 52.096 50.221 52.0767Z" fill="#71C9F7"/>
<path d="M44.5676 54.6613C44.6637 54.9218 44.7598 55.1823 44.8589 55.4507C45.1352 55.9143 45.1352 55.9143 45.6053 55.87C45.8126 55.8578 45.8126 55.8578 46.024 55.8453C46.024 55.65 46.024 55.4546 46.024 55.2533C46.2163 55.3185 46.4085 55.3836 46.6066 55.4507C46.6066 55.7111 46.6066 55.9716 46.6066 56.24C46.7027 56.3051 46.7989 56.3702 46.8979 56.4373C46.8498 56.5676 46.8018 56.6978 46.7523 56.832C47.4732 56.832 48.1941 56.832 48.9369 56.832C48.9369 57.353 48.9369 57.8739 48.9369 58.4107C48.8889 58.2804 48.8408 58.1502 48.7913 58.016C48.0703 58.016 47.3494 58.016 46.6066 58.016C46.461 57.6213 46.461 57.6213 46.6066 56.6347C45.9337 56.6347 45.2608 56.6347 44.5676 56.6347C44.5676 55.9835 44.5676 55.3323 44.5676 54.6613Z" fill="#528EAB"/>
<path d="M41.8003 21.312C42.2373 21.5093 42.2373 21.5093 42.5041 22.1638C42.6013 22.4424 42.6973 22.7218 42.7925 23.0017C43.3912 24.6863 43.9876 26.0259 45.1035 27.168C45.2958 27.4293 45.2958 27.4293 45.2958 28.0213C45.5121 28.119 45.5121 28.119 45.7328 28.2187C44.8676 28.3163 44.8676 28.3163 43.985 28.416C44.0811 28.2858 44.1773 28.1555 44.2763 28.0213C44.4686 28.0213 44.6608 28.0213 44.8589 28.0213C44.6372 27.5025 44.4447 27.0655 44.1307 26.64C43.8099 26.5492 43.8099 26.5492 43.457 26.5167C43.338 26.5019 43.219 26.4872 43.0963 26.472C43.0051 26.4623 42.9139 26.4526 42.8198 26.4427C42.7951 26.2328 42.7951 26.2328 42.7698 26.0187C42.6666 25.4115 42.5068 24.9085 42.3101 24.346C41.9348 23.2669 41.7835 22.5171 41.8003 21.312Z" fill="#353833"/>
<path d="M41.509 56.832C41.8983 57.8519 41.9437 58.4504 41.8003 59.5947C41.7042 59.5947 41.608 59.5947 41.509 59.5947C41.3648 59.9854 41.2206 60.3761 41.0721 60.7787C40.9759 60.7135 40.8798 60.6484 40.7808 60.5813C40.6898 60.1743 40.6898 60.1743 40.6351 59.792C40.3948 59.8571 40.1545 59.9222 39.9069 59.9893C39.4692 59.0008 39.4272 58.3461 39.47 57.2267C39.5661 57.4871 39.6622 57.7476 39.7613 58.016C39.8574 57.8858 39.9535 57.7555 40.0526 57.6213C40.8827 57.424 40.8827 57.424 41.2177 57.424C41.3138 57.2286 41.41 57.0333 41.509 56.832Z" fill="#447F9D"/>
<path d="M35.3919 45.3867C35.44 45.3867 35.488 45.3867 35.5375 45.3867C35.5375 46.4937 35.5375 47.6007 35.5375 48.7413C34.3683 48.8946 33.7063 48.5007 32.7703 47.5573C32.5033 47.2435 32.2764 46.9305 32.0421 46.5707C32.1382 46.3102 32.2343 46.0497 32.3333 45.7813C33.0488 45.8523 33.4404 46.1533 33.9918 46.7264C34.2499 46.9889 34.5141 47.184 34.8093 47.36C34.8093 47.6856 34.8093 48.0112 34.8093 48.3467C35.0016 48.3467 35.1938 48.3467 35.3919 48.3467C35.3919 47.3699 35.3919 46.3931 35.3919 45.3867Z" fill="#1C3C3D"/>
<path d="M43.8393 35.52C44.4642 35.52 45.089 35.52 45.7327 35.52C45.7327 40.5342 45.7327 45.5485 45.7327 50.7147C45.4924 50.7147 45.2521 50.7147 45.0045 50.7147C44.9324 50.5193 44.9324 50.5193 44.8589 50.32C45.0511 50.32 45.2434 50.32 45.4415 50.32C45.4415 47.7803 45.4415 45.2406 45.4415 42.624C43.9996 42.624 42.5577 42.624 41.0721 42.624C41.0721 42.5589 41.0721 42.4938 41.0721 42.4267C42.562 42.4267 44.052 42.4267 45.5871 42.4267C45.5871 40.2126 45.5871 37.9985 45.5871 35.7173C45.0103 35.7173 44.4336 35.7173 43.8393 35.7173C43.8393 35.6522 43.8393 35.5871 43.8393 35.52Z" fill="#D1D0D0"/>
<path d="M51.7042 27.6267C52.5937 27.9749 53.4628 28.3559 54.3258 28.8107C53.8151 29.0413 53.6911 28.9582 53.1971 28.7243C52.5774 28.4604 52.0677 28.2942 51.4129 28.416C51.3018 28.5422 51.1906 28.6683 51.0761 28.7983C50.5048 29.3924 49.9314 29.3657 49.2282 29.4027C49.2282 29.7934 49.2282 30.1841 49.2282 30.5867C50.6019 31.5591 52.0802 31.7512 53.5976 31.968C53.5976 32.0331 53.5976 32.0982 53.5976 32.1653C50.1936 32.3174 50.1936 32.3174 49.2282 31.1787C49.0841 31.0484 48.9399 30.9182 48.7913 30.784C48.7435 30.3639 48.7435 30.3639 48.7549 29.8837C48.7571 29.7247 48.7594 29.5657 48.7617 29.4019C48.7913 29.008 48.7913 29.008 48.937 28.8107C49.1544 28.7464 49.3732 28.6902 49.5924 28.638C50.3217 28.45 51.007 28.1663 51.7042 27.824C51.7042 27.7589 51.7042 27.6938 51.7042 27.6267Z" fill="#848783"/>
<path d="M53.5976 38.2827C53.886 38.2827 54.1744 38.2827 54.4715 38.2827C54.7077 38.6027 54.636 38.9576 54.6365 39.3988C54.6366 39.5843 54.6368 39.7697 54.637 39.9608C54.6365 40.1559 54.6359 40.351 54.6353 40.552C54.6359 40.7471 54.6364 40.9422 54.637 41.1432C54.6368 41.3287 54.6367 41.5141 54.6365 41.7052C54.6363 41.8765 54.6361 42.0478 54.636 42.2243C54.6171 42.624 54.6171 42.624 54.4715 42.8213C54.1831 42.8213 53.8947 42.8213 53.5976 42.8213C53.5976 41.3236 53.5976 39.8258 53.5976 38.2827Z" fill="#202020"/>
<path d="M65.8318 41.0453C65.928 41.1105 66.0241 41.1756 66.1231 41.2427C65.7517 42.2118 65.4516 42.7373 64.8123 43.4133C64.6863 43.6389 64.5651 43.8696 64.4482 44.104C64.1383 44.7199 63.8163 45.1625 63.3559 45.584C63.2597 45.584 63.1636 45.584 63.0646 45.584C63.0646 44.7374 63.0646 43.8909 63.0646 43.0187C63.1607 43.1489 63.2568 43.2791 63.3559 43.4133C63.446 43.2831 63.5361 43.1529 63.629 43.0187C63.9384 42.624 63.9384 42.624 64.2297 42.624C64.2297 42.4938 64.2297 42.3635 64.2297 42.2293C64.321 42.1769 64.4122 42.1245 64.5062 42.0705C64.6253 42.0008 64.7443 41.9311 64.8669 41.8593C64.9852 41.7907 65.1035 41.722 65.2254 41.6512C65.5607 41.4549 65.5607 41.4549 65.8318 41.0453Z" fill="#1B292A"/>
<path d="M67.434 32.9547C67.5301 33.0849 67.6262 33.2151 67.7253 33.3493C67.6919 34.7036 67.4262 35.5305 66.7057 36.5067C66.601 36.964 66.5031 37.4245 66.4144 37.888C66.1232 37.6907 66.1232 37.6907 66.0338 37.3561C65.8693 36.0275 65.8609 34.5927 66.2688 33.3493C66.5601 33.9413 66.5601 33.9413 66.5601 34.336C66.6562 34.336 66.7523 34.336 66.8514 34.336C66.9145 34.0491 66.9145 34.0491 66.9788 33.7563C67.1427 33.152 67.1427 33.152 67.434 32.9547Z" fill="#081B25"/>
<path d="M53.4883 18.019C53.5724 18.0638 53.6566 18.1085 53.7432 18.1547C53.5149 18.914 53.1795 19.3973 52.7237 19.9307C52.2594 20.1773 52.2594 20.1773 51.8498 20.3253C51.7056 20.423 51.7056 20.423 51.5585 20.5227C50.6161 20.5923 50.6161 20.5923 50.1021 20.128C50.2463 20.128 50.3904 20.128 50.539 20.128C50.539 19.9978 50.539 19.8675 50.539 19.7333C50.2987 19.6682 50.0584 19.6031 49.8108 19.536C49.8108 19.6662 49.8108 19.7965 49.8108 19.9307C49.119 19.7827 49.119 19.7827 48.7913 19.3387C48.9426 19.3313 49.0939 19.3239 49.2498 19.3163C51.1729 19.2623 51.1729 19.2623 52.8875 18.2294C53.1606 17.9573 53.1606 17.9573 53.4883 18.019Z" fill="#D6D8D6"/>
<path d="M39.7249 21.1147C39.8811 21.2449 40.0373 21.3752 40.1982 21.5093C39.9069 21.7067 39.9069 21.7067 39.4063 21.5217C38.3582 21.1408 37.4168 21.1618 36.4114 21.7067C37.1804 21.7067 37.9494 21.7067 38.7418 21.7067C38.7418 21.7718 38.7418 21.8369 38.7418 21.904C38.4447 22.0043 38.1473 22.1026 37.8497 22.2C37.6841 22.255 37.5185 22.3099 37.3479 22.3665C36.8754 22.489 36.4539 22.5197 35.9745 22.496C35.9745 22.6262 35.9745 22.7565 35.9745 22.8907C35.8123 22.911 35.6501 22.9314 35.4829 22.9523C35.3087 22.9971 35.1345 23.0419 34.955 23.088C34.6643 23.6315 34.6643 23.6315 34.5453 24.0993C34.3724 24.4693 34.3724 24.4693 33.9901 24.6173C33.8759 24.6336 33.7618 24.6499 33.6442 24.6667C33.8678 23.783 34.1697 22.9293 34.8093 22.496C35.1006 22.4881 35.392 22.4874 35.6832 22.496C35.6943 22.3426 35.7054 22.1892 35.7168 22.0312C35.8288 21.5093 35.8288 21.5093 36.1002 21.2403C37.2988 20.611 38.5313 20.3147 39.7249 21.1147Z" fill="#618FA7"/>
<path d="M58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1322 46.5707C59.3244 47.6777 59.5167 48.7847 59.7147 49.9253C59.8109 49.9253 59.907 49.9253 60.006 49.9253C60.006 50.0556 60.006 50.1858 60.006 50.32C60.2494 50.3139 60.2494 50.3139 60.4976 50.3077C61.0256 50.32 61.0256 50.32 61.3168 50.5173C61.3168 49.9964 61.3168 49.4754 61.3168 48.9387C61.6749 49.6663 61.7556 50.2602 61.8994 51.1093C60.8971 51.6567 60.0478 51.4423 58.9865 51.3067C58.9865 49.7438 58.9865 48.1809 58.9865 46.5707Z" fill="#DBDCDE"/>
<path d="M33.2072 36.112C33.6398 36.1771 34.0723 36.2422 34.518 36.3093C34.518 36.3745 34.518 36.4396 34.518 36.5067C33.8692 36.6043 33.8692 36.6043 33.2072 36.704C33.2072 36.5086 33.2072 36.3133 33.2072 36.112ZM32.6246 36.5067C32.8169 36.5718 33.0091 36.6369 33.2072 36.704C33.2254 38.2333 33.2254 38.2333 33.0616 38.6773C33.0288 38.9806 33.0021 39.2851 32.9796 39.59C32.9674 39.7513 32.9552 39.9125 32.9427 40.0787C32.9338 40.2023 32.925 40.326 32.9159 40.4533C32.5569 40.3488 32.3618 40.2891 32.0785 39.96C31.8011 39.2084 31.779 38.513 31.8964 37.6907C32.1054 37.2079 32.325 36.9024 32.6246 36.5067Z" fill="#5D8A9C"/>
<path d="M59.5691 52.096C60.1053 52.0899 60.1053 52.0899 60.6523 52.0837C60.7651 52.0819 60.8778 52.0801 60.9939 52.0782C61.2473 52.0768 61.5006 52.0861 61.7538 52.096C61.8994 52.2933 61.8994 52.2933 61.9188 52.8822C61.9184 53.1275 61.918 53.3727 61.9176 53.6253C61.9182 53.9901 61.9182 53.9901 61.9188 54.3622C61.9023 54.9512 61.8551 55.4716 61.7538 56.0427C61.3823 55.5393 61.4042 55.2742 61.3624 54.575C61.3498 54.384 61.3372 54.1929 61.3242 53.9961C61.3168 53.4773 61.3168 53.4773 61.4625 52.8853C61.1075 52.9387 61.1075 52.9387 60.7343 53.0827C60.5901 53.3757 60.5901 53.3757 60.443 53.6747C60.3949 53.3491 60.3468 53.0235 60.2973 52.688C60.0247 53.4268 59.989 54.0881 59.9969 54.908C59.9989 55.172 59.9989 55.172 60.0009 55.4414C60.0026 55.5747 60.0043 55.708 60.006 55.8453C59.8618 55.8453 59.7177 55.8453 59.5691 55.8453C59.5691 54.6081 59.5691 53.3708 59.5691 52.096Z" fill="#79C2E3"/>
<path d="M48.3543 30.9813C48.3543 31.8279 48.3543 32.6745 48.3543 33.5467C48.066 33.742 48.066 33.742 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3543 34.1387C48.3063 34.2689 48.2582 34.3992 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.467 34.7738 47.3534 34.8046 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.446 34.6401 45.446 34.6401 44.9772 34.6073C44.7398 34.5852 44.7398 34.5852 44.4976 34.5626C44.3765 34.553 44.2554 34.5433 44.1306 34.5333C44.1306 34.4682 44.1306 34.4031 44.1306 34.336C44.419 34.2709 44.7074 34.2058 45.0045 34.1387C44.9564 34.0084 44.9084 33.8782 44.8588 33.744C45.1376 33.7295 45.1376 33.7295 45.4221 33.7147C45.6652 33.6999 45.9083 33.685 46.1514 33.67C46.274 33.6639 46.3966 33.6578 46.523 33.6515C46.6403 33.6439 46.7576 33.6362 46.8785 33.6284C46.9868 33.6222 47.0952 33.616 47.2067 33.6096C47.5154 33.5754 47.5154 33.5754 47.7718 33.152C47.8301 32.6936 47.8795 32.2329 47.9174 31.7707C47.6771 31.7707 47.4368 31.7707 47.1892 31.7707C48.063 30.9813 48.063 30.9813 48.3543 30.9813Z" fill="#838481"/>
<path d="M33.2072 25.0613C33.2553 25.0613 33.3033 25.0613 33.3529 25.0613C33.3498 25.1747 33.3468 25.2881 33.3436 25.4048C33.3314 25.9234 33.3239 26.4419 33.3165 26.9607C33.3116 27.139 33.3067 27.3173 33.3017 27.501C33.2889 28.6807 33.3907 29.2708 33.9354 30.192C33.9354 30.3222 33.9354 30.4525 33.9354 30.5867C34.3494 30.897 34.3494 30.897 34.8093 30.9813C34.8574 30.786 34.9054 30.5906 34.955 30.3893C35.003 30.5847 35.0511 30.7801 35.1006 30.9813C35.3578 31.1805 35.3578 31.1805 35.6832 31.376C35.9788 31.6302 36.2709 31.8921 36.5571 32.1653C36.5571 32.2305 36.5571 32.2956 36.5571 32.3627C35.3759 32.3034 34.4477 31.7208 33.6316 30.5427C33.3777 30.1079 33.1426 29.6669 32.9159 29.2053C32.8228 29.0181 32.7297 28.8309 32.6337 28.638C32.479 28.2187 32.479 28.2187 32.479 27.6267C32.3348 27.5616 32.1906 27.4964 32.0421 27.4293C32.1862 27.3642 32.3304 27.2991 32.479 27.232C32.5271 27.2971 32.5751 27.3622 32.6246 27.4293C32.6511 27.2473 32.6511 27.2473 32.6781 27.0617C32.7147 26.8224 32.7147 26.8224 32.7521 26.5783C32.7757 26.4204 32.7994 26.2624 32.8238 26.0997C32.9159 25.6533 32.9159 25.6533 33.2072 25.0613Z" fill="#010C0C"/>
<path d="M47.1892 10.8533C47.1021 10.9388 47.0149 11.0243 46.9252 11.1123C46.6112 11.4211 46.6112 11.4211 46.3972 11.7537C46.0404 12.1985 45.6361 12.432 45.1501 12.432C45.1982 13.0181 45.2463 13.6042 45.2958 14.208C44.7132 14.4053 44.7132 14.4053 44.4014 14.1656C44.3 14.0534 44.1987 13.9412 44.0942 13.8257C43.9913 13.714 43.8884 13.6023 43.7824 13.4873C43.7051 13.3995 43.6277 13.3118 43.548 13.2213C43.7021 12.5694 43.855 12.4193 44.2985 12.0597C44.4813 11.9388 44.6652 11.8204 44.8497 11.7043C44.942 11.6437 45.0343 11.583 45.1294 11.5205C45.8575 11.0464 46.3811 10.829 47.1892 10.8533Z" fill="#6691A4"/>
<path d="M58.6952 20.128C58.9355 20.128 59.1758 20.128 59.4234 20.128C59.4234 20.2582 59.4234 20.3885 59.4234 20.5227C59.5826 20.5308 59.7419 20.539 59.9059 20.5473C60.7662 20.6834 61.4605 21.3093 62.1907 21.904C62.2778 21.8063 62.3649 21.7086 62.4547 21.608C62.7733 21.312 62.7733 21.312 63.2102 21.312C64.2135 23.7758 64.2135 23.7758 64.0841 25.0613C63.68 24.7876 63.5882 24.4019 63.3559 23.8773C62.8101 22.8515 62.2912 22.3658 61.4443 21.8547C61.3354 21.7869 61.2265 21.7191 61.1143 21.6492C60.2789 21.1476 59.4642 20.8271 58.5496 20.72C58.5976 20.5246 58.6457 20.3293 58.6952 20.128Z" fill="#4C7889"/>
<path d="M65.1036 37.888C65.2478 37.9531 65.392 38.0182 65.5405 38.0853C65.7219 38.8225 65.7811 39.4916 65.6862 40.256C65.4367 40.8971 65.0931 41.3249 64.6394 41.7113C64.0188 41.8982 63.4062 41.8646 62.7733 41.8347C62.7252 41.5742 62.6771 41.3137 62.6276 41.0453C62.747 41.014 62.8664 40.9828 62.9895 40.9505C63.9449 40.6865 63.9449 40.6865 64.7668 40.0217C65.0178 39.293 65.0635 38.6895 65.1036 37.888Z" fill="#193335"/>
<path d="M62.482 33.744C62.545 33.9272 62.545 33.9272 62.6094 34.114C62.7641 34.5596 62.7641 34.5596 63.0645 34.928C63.2568 34.7978 63.4491 34.6675 63.6471 34.5333C63.6952 34.7938 63.7433 35.0543 63.7928 35.3227C63.8889 35.3227 63.985 35.3227 64.0841 35.3227C64.0841 34.9319 64.0841 34.5412 64.0841 34.1387C64.4638 34.6531 64.4102 35.0214 64.414 35.7227C64.3754 36.112 64.3754 36.112 64.0841 36.704C63.8007 36.805 63.8007 36.805 63.4833 36.8397C63.297 36.86 63.1108 36.8804 62.9189 36.9013C62.9189 37.0316 62.9189 37.1618 62.9189 37.296C62.8228 37.296 62.7266 37.296 62.6276 37.296C62.6276 37.5565 62.6276 37.817 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3363 38.0853C62.2883 38.2807 62.2402 38.4761 62.1907 38.6773C62.3194 37.183 62.3194 37.183 62.4182 36.6917C62.574 35.7573 62.4766 34.8645 62.3363 33.9413C62.3844 33.8762 62.4324 33.8111 62.482 33.744Z" fill="#5C8395"/>
<path d="M41.0721 24.0747C41.4635 24.531 41.4635 24.531 41.6547 25.0613C41.6547 25.2567 41.6547 25.452 41.6547 25.6533C41.5105 25.6533 41.3663 25.6533 41.2177 25.6533C41.1697 25.7836 41.1216 25.9138 41.0721 26.048C40.6351 25.308 40.6351 25.308 40.6351 24.864C39.7003 25.2066 38.8673 25.6241 38.0135 26.2453C37.9174 25.9848 37.8213 25.7244 37.7222 25.456C37.9588 25.2626 38.1955 25.0694 38.4323 24.8763C38.564 24.7687 38.6958 24.6611 38.8316 24.5503C39.5643 23.9628 40.2279 23.9209 41.0721 24.0747Z" fill="#568BA3"/>
<path d="M42.8198 44.992C43.1563 44.992 43.4927 44.992 43.8393 44.992C43.8393 46.5549 43.8393 48.1178 43.8393 49.728C43.6952 49.728 43.551 49.728 43.4024 49.728C43.3543 49.1419 43.3063 48.5558 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.2396 42.8198 46.1326 42.8198 44.992Z" fill="#040303"/>
<path d="M42.3829 17.9573C42.479 17.9573 42.5751 17.9573 42.6741 17.9573C42.7222 18.2829 42.7703 18.6085 42.8198 18.944C42.8679 18.944 42.9159 18.944 42.9654 18.944C43.11 20.0702 43.1263 21.1569 43.1111 22.2987C43.015 22.2987 42.9188 22.2987 42.8198 22.2987C42.8198 22.4289 42.8198 22.5591 42.8198 22.6933C42.7237 22.6933 42.6275 22.6933 42.5285 22.6933C41.9664 21.432 41.8017 20.4155 41.9459 18.944C42.1462 18.315 42.1462 18.315 42.3829 17.9573Z" fill="#DDE0E1"/>
<path d="M36.5571 30.784C36.8454 30.9142 37.1338 31.0445 37.4309 31.1787C37.3829 31.5694 37.3348 31.9601 37.2853 32.3627C37.5256 32.1673 37.7659 31.9719 38.0135 31.7707C38.0616 31.9009 38.1096 32.0311 38.1592 32.1653C38.5349 32.3017 38.5349 32.3017 38.9693 32.3873C39.1167 32.4204 39.2641 32.4535 39.4159 32.4875C39.5869 32.5234 39.5869 32.5234 39.7613 32.56C39.8093 32.4298 39.8574 32.2995 39.9069 32.1653C40.4382 32.9316 40.5747 33.4898 40.6351 34.5333C40.4909 34.631 40.4909 34.631 40.3438 34.7307C40.2898 34.5516 40.2357 34.3725 40.18 34.188C39.8483 33.4091 39.6362 33.1368 39.033 32.7573C38.2869 32.6252 37.6531 32.6157 36.9667 33.0533C36.8796 33.151 36.7925 33.2487 36.7027 33.3493C36.6546 33.154 36.6066 32.9586 36.5571 32.7573C36.6051 32.6271 36.6532 32.4968 36.7027 32.3627C36.3182 32.0371 35.9337 31.7115 35.5375 31.376C36.1201 31.1787 36.1201 31.1787 36.5571 31.1787C36.5571 31.0484 36.5571 30.9182 36.5571 30.784Z" fill="#09343B"/>
<path d="M64.0841 23.2853C64.4482 23.5759 64.4482 23.5759 64.8123 24.0747C64.8552 24.8054 64.8299 25.4625 64.7839 26.1887C64.75 27.0574 64.7428 27.3174 65.1764 28.0159C65.2966 28.148 65.4167 28.28 65.5405 28.416C65.5405 28.4811 65.5405 28.5462 65.5405 28.6133C65.4084 28.6662 65.2762 28.7192 65.14 28.7737C64.7082 28.9874 64.4312 29.2021 64.0841 29.6C64.1081 29.4169 64.1321 29.2337 64.1569 29.045C64.2572 28.1783 64.2078 27.3758 64.1569 26.5043C64.1434 26.2716 64.1299 26.0388 64.1159 25.799C64.1054 25.6207 64.0949 25.4424 64.0841 25.2587C63.988 25.2587 63.8918 25.2587 63.7928 25.2587C63.8889 24.6075 63.985 23.9563 64.0841 23.2853Z" fill="#09272A"/>
<path d="M50.6847 21.7067C50.7327 22.1625 50.7808 22.6183 50.8303 23.088C50.8784 23.088 50.9265 23.088 50.976 23.088C50.976 23.609 50.976 24.1299 50.976 24.6667C50.8318 24.6667 50.6876 24.6667 50.539 24.6667C50.2987 23.8852 50.0584 23.1038 49.8108 22.2987C49.6186 22.8847 49.4263 23.4708 49.2282 24.0747C49.1321 24.0747 49.036 24.0747 48.9369 24.0747C48.7927 23.4235 48.6486 22.7723 48.5 22.1013C49.2637 21.7564 49.8797 21.6684 50.6847 21.7067Z" fill="#A79F9B"/>
<path d="M61.8425 19.8867C62.3233 20.2199 62.6782 20.6053 63.0646 21.1147C62.8243 21.4403 62.5839 21.7659 62.3364 22.1013C61.9035 21.8794 61.5594 21.6627 61.1712 21.312C61.1712 21.1818 61.1712 21.0515 61.1712 20.9173C61.2673 20.9173 61.3634 20.9173 61.4625 20.9173C61.5105 20.6569 61.5586 20.3964 61.6081 20.128C60.1572 19.6783 58.7828 19.8848 57.3844 20.5227C58.6072 18.8132 60.3097 19.0396 61.8425 19.8867Z" fill="#6791A3"/>
<path d="M58.9865 19.1413C61.9109 18.9776 61.9109 18.9776 63.1221 20.3161C63.8343 21.2078 64.4484 22.1716 64.6667 23.4827C64.6064 23.929 64.6064 23.929 64.521 24.272C64.4249 24.0115 64.3288 23.751 64.2298 23.4827C64.0856 23.5804 64.0856 23.5804 63.9385 23.68C63.8855 23.5205 63.8326 23.361 63.778 23.1967C63.1784 21.4698 62.7624 20.6067 61.4352 19.8813C60.6257 19.5077 59.8379 19.3833 58.9865 19.3387C58.9865 19.2736 58.9865 19.2084 58.9865 19.1413Z" fill="#174349"/>
<path d="M45.7327 35.52C45.8289 35.52 45.925 35.52 46.024 35.52C46.024 35.7805 46.024 36.041 46.024 36.3093C46.2643 36.2442 46.5046 36.1791 46.7522 36.112C46.682 36.3065 46.682 36.3065 46.6104 36.5049C46.4249 37.242 46.4095 37.9358 46.4006 38.7059C46.3978 38.8578 46.395 39.0097 46.3921 39.1662C46.3834 39.6487 46.3767 40.1311 46.3699 40.6137C46.3644 40.9419 46.3587 41.2702 46.3529 41.5984C46.3389 42.4007 46.3267 43.203 46.3153 44.0053C46.2672 44.0053 46.2192 44.0053 46.1697 44.0053C46.1697 41.5308 46.1697 39.0562 46.1697 36.5067C46.0735 36.5067 45.9774 36.5067 45.8784 36.5067C45.8784 40.2836 45.8784 44.0606 45.8784 47.952C45.9745 47.952 46.0706 47.952 46.1697 47.952C46.1697 48.0822 46.1697 48.2125 46.1697 48.3467C46.0255 48.3467 45.8813 48.3467 45.7327 48.3467C45.7327 44.1139 45.7327 39.8811 45.7327 35.52Z" fill="#222222"/>
<path d="M48.3544 29.7973C48.4505 29.7973 48.5466 29.7973 48.6457 29.7973C48.6727 29.9479 48.6997 30.0985 48.7276 30.2537C49.0294 31.0181 49.3627 31.0929 49.9565 31.376C49.5809 31.5577 49.433 31.6099 49.0621 31.3806C48.9728 31.314 48.8834 31.2473 48.7913 31.1787C48.7795 31.5321 48.7711 31.8857 48.764 32.2393C48.7589 32.4362 48.7539 32.6331 48.7486 32.836C48.7627 33.0054 48.7768 33.1748 48.7913 33.3493C49.3211 33.8278 49.6444 33.8203 50.2751 33.8673C50.553 33.8895 50.553 33.8895 50.8366 33.912C50.9787 33.9217 51.1209 33.9314 51.2673 33.9413C51.2673 34.0065 51.2673 34.0716 51.2673 34.1387C51.1025 34.1341 50.9376 34.1295 50.7678 34.1248C50.552 34.1211 50.3362 34.1175 50.1203 34.114C49.9573 34.109 49.9573 34.109 49.7909 34.104C49.5062 34.1005 49.2213 34.1183 48.937 34.1387C48.8408 34.2689 48.7447 34.3991 48.6457 34.5333C48.3913 33.778 48.3036 33.1274 48.2634 32.301C48.2525 32.0901 48.2416 31.8792 48.2304 31.662C48.2232 31.5025 48.2161 31.343 48.2087 31.1787C48.0555 31.2723 47.9023 31.3659 47.7445 31.4623C47.0389 31.8934 46.3847 31.9929 45.6144 31.9803C45.4012 31.9777 45.4012 31.9777 45.1837 31.9749C45.0229 31.9715 45.0229 31.9715 44.8589 31.968C44.8589 31.9029 44.8589 31.8378 44.8589 31.7707C44.9448 31.7488 45.0308 31.727 45.1193 31.7045C45.5091 31.6046 45.8986 31.5027 46.288 31.4007C46.4233 31.3663 46.5586 31.332 46.6979 31.2966C46.828 31.2623 46.958 31.2279 47.0919 31.1925C47.2117 31.1615 47.3314 31.1305 47.4548 31.0986C47.8107 30.9913 47.8107 30.9913 48.2087 30.5867C48.3142 30.1803 48.3142 30.1803 48.3544 29.7973Z" fill="#373836"/>
<path d="M34.9549 19.9307C35.1472 20.0609 35.3394 20.1911 35.5375 20.3253C35.3555 20.7077 35.3555 20.7077 35.1006 21.1147C35.0045 21.135 34.9083 21.1554 34.8093 21.1763C34.4495 21.292 34.4495 21.292 34.2631 22.015C34.203 22.2388 34.143 22.4627 34.0811 22.6933C33.9849 22.6933 33.8888 22.6933 33.7898 22.6933C33.8224 22.8063 33.8551 22.9192 33.8888 23.0356C33.9354 23.4827 33.9354 23.4827 33.7636 23.9051C33.6414 24.1111 33.6414 24.1111 33.5167 24.3213C33.4359 24.4607 33.3552 24.6001 33.272 24.7437C33.2026 24.8485 33.1331 24.9534 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.82 23.6576 33.0511 22.6724 33.6441 21.5093C34.0549 20.9342 34.4894 20.4226 34.9549 19.9307Z" fill="#598698"/>
<path d="M45.9785 17.5257C46.1551 17.5337 46.1551 17.5337 46.3353 17.5418C46.4248 17.5487 46.5144 17.5556 46.6066 17.5627C46.6547 17.758 46.7028 17.9534 46.7523 18.1547C46.6562 18.1547 46.56 18.1547 46.461 18.1547C46.7414 18.5935 46.7414 18.5935 47.1892 18.7467C47.1892 18.8769 47.1892 19.0071 47.1892 19.1413C47.3815 19.2064 47.5737 19.2716 47.7718 19.3387C46.5167 19.3992 45.451 19.4168 44.2763 18.7467C44.3724 18.6815 44.4686 18.6164 44.5676 18.5493C44.6157 18.354 44.6637 18.1586 44.7132 17.9573C44.7613 18.0224 44.8094 18.0876 44.8589 18.1547C44.9169 18.0577 44.9749 17.9608 45.0347 17.861C45.3704 17.4774 45.5463 17.5002 45.9785 17.5257Z" fill="#214C55"/>
<path d="M41.509 28.6133C41.5571 28.8087 41.6051 29.0041 41.6546 29.2053C41.4458 29.6517 41.4458 29.6517 41.154 30.1303C41.058 30.2898 40.9621 30.4493 40.8633 30.6137C40.7503 30.7957 40.7503 30.7957 40.6351 30.9813C41.4282 31.079 41.4282 31.079 42.2372 31.1787C42.2372 31.2438 42.2372 31.3089 42.2372 31.376C41.5147 31.6371 40.7937 31.5909 40.0525 31.5733C40.1697 31.7687 40.2868 31.9641 40.4076 32.1653C40.8284 32.9529 40.8891 33.5729 40.9264 34.5333C40.7822 34.5333 40.638 34.5333 40.4895 34.5333C40.4775 34.3298 40.4654 34.1263 40.4531 33.9167C40.3289 33.0475 40.1483 32.6616 39.7613 31.968C39.3287 32.0331 38.8961 32.0982 38.4504 32.1653C38.696 31.9435 38.9424 31.7231 39.1912 31.5078C40.1242 30.6902 40.828 29.8094 41.509 28.6133Z" fill="#151A1B"/>
<path d="M31.5414 28.9957C31.7066 28.9997 31.8718 29.0038 32.042 29.008C32.0901 29.1382 32.1382 29.2685 32.1877 29.4027C32.0465 29.4596 31.9053 29.5166 31.7598 29.5753C31.2983 29.7267 31.2983 29.7267 31.1682 30.192C31.4085 30.2571 31.6488 30.3222 31.8964 30.3893C31.7657 30.4626 31.7657 30.4626 31.6324 30.5373C31.2721 30.8163 31.105 31.1097 30.8769 31.5733C30.6846 31.5082 30.4924 31.4431 30.2943 31.376C30.2943 31.5062 30.2943 31.6365 30.2943 31.7707C30.102 31.7707 29.9098 31.7707 29.7117 31.7707C29.7117 32.1614 29.7117 32.5521 29.7117 32.9547C29.6636 32.9547 29.6156 32.9547 29.5661 32.9547C29.5044 31.744 29.5592 31.1633 30.1486 30.192C30.3858 29.8557 30.6275 29.525 30.8769 29.2053C31.0225 29.008 31.0225 29.008 31.5414 28.9957Z" fill="#58889A"/>
<path d="M48.0631 38.6773C48.1111 38.6773 48.1592 38.6773 48.2087 38.6773C48.2087 40.4356 48.2087 42.1938 48.2087 44.0053C47.5839 44.0053 46.9591 44.0053 46.3153 44.0053C46.3634 43.4844 46.4114 42.9634 46.461 42.4267C46.9896 42.4267 47.5183 42.4267 48.0631 42.4267C48.0631 41.1894 48.0631 39.9521 48.0631 38.6773Z" fill="#D2D2D2"/>
<path d="M59.8604 30.784C59.9985 30.8166 60.1367 30.8491 60.2791 30.8827C60.7054 30.9917 60.7054 30.9917 61.0255 30.9813C61.0255 31.1116 61.0255 31.2418 61.0255 31.376C60.9294 31.5062 60.8333 31.6365 60.7342 31.7707C60.5386 32.098 60.3443 32.4268 60.1517 32.7573C60.2958 32.8224 60.44 32.8876 60.5886 32.9547C60.5405 33.15 60.4925 33.3454 60.4429 33.5467C60.3318 33.4164 60.2207 33.2862 60.1061 33.152C59.3565 32.4677 58.4194 32.6663 57.5647 32.8383C57.2209 32.9107 57.2209 32.9107 57.0567 33.3C56.9401 33.7739 56.8624 34.2382 56.8018 34.7307C56.6576 34.7958 56.5134 34.8609 56.3649 34.928C56.4235 33.8153 56.6802 33.3348 57.2387 32.56C57.7437 32.3319 58.1915 32.2979 58.7225 32.2517C58.9078 32.2351 59.0931 32.2186 59.284 32.2016C59.4262 32.1896 59.5683 32.1776 59.7147 32.1653C59.5705 32.0351 59.4263 31.9048 59.2778 31.7707C59.2778 31.6404 59.2778 31.5102 59.2778 31.376C59.47 31.3109 59.6623 31.2458 59.8604 31.1787C59.8604 31.0484 59.8604 30.9182 59.8604 30.784Z" fill="#0C363F"/>
<path d="M53.3063 17.9573C53.5947 17.9573 53.8831 17.9573 54.1802 17.9573C54.1802 18.3481 54.1802 18.7388 54.1802 19.1413C54.084 19.1413 53.9879 19.1413 53.8889 19.1413C53.8923 19.282 53.8956 19.4227 53.8991 19.5676C53.9148 20.697 53.8773 21.6274 53.5976 22.6933C53.5495 22.6933 53.5015 22.6933 53.4519 22.6933C53.448 22.3727 53.4452 22.052 53.4428 21.7313C53.4411 21.5528 53.4395 21.3742 53.4377 21.1902C53.4519 20.72 53.4519 20.72 53.5976 20.3253C53.5015 20.3253 53.4053 20.3253 53.3063 20.3253C53.3243 20.5451 53.3243 20.5451 53.3427 20.7693C53.2959 21.4662 53.1093 21.6606 52.7237 22.1013C52.6847 21.91 52.6456 21.7188 52.6054 21.5217C52.5483 21.3222 52.4912 21.1228 52.4324 20.9173C52.2882 20.8522 52.144 20.7871 51.9955 20.72C52.085 20.6506 52.1746 20.5811 52.2669 20.5096C53.074 19.8415 53.4694 19.3913 53.7432 18.1547C53.599 18.0895 53.4549 18.0244 53.3063 17.9573Z" fill="#322C2A"/>
<path d="M32.479 27.6267C32.516 27.7315 32.5529 27.8363 32.591 27.9442C32.9068 28.8295 32.9068 28.8295 33.3164 29.637C33.5537 30.103 33.5325 30.4278 33.4985 30.9813C33.4024 30.9813 33.3062 30.9813 33.2072 30.9813C33.1685 30.8719 33.1298 30.7626 33.09 30.6499C33.0386 30.5069 32.9871 30.364 32.9341 30.2167C32.8834 30.0747 32.8327 29.9328 32.7805 29.7865C32.6296 29.3728 32.6296 29.3728 32.3333 29.008C31.6578 28.9379 31.1481 29.073 30.6129 29.637C30.2828 30.1973 30.2828 30.1973 29.9757 30.8457C29.8886 31.0207 29.8015 31.1957 29.7117 31.376C29.6156 31.376 29.5194 31.376 29.4204 31.376C29.6216 29.8395 30.736 28.7926 31.5886 27.8733C31.8964 27.6267 31.8964 27.6267 32.479 27.6267Z" fill="#0D2C2E"/>
<path d="M56.0736 30.192C56.2658 30.2571 56.4581 30.3222 56.6561 30.3893C56.6561 30.5196 56.6561 30.6498 56.6561 30.784C56.7523 30.8328 56.8484 30.8817 56.9474 30.932C57.4956 31.2415 58.021 31.602 58.5495 31.968C58.0196 32.157 57.4906 32.2636 56.9474 32.3627C56.5687 33.7057 56.5687 33.7057 56.5105 35.1253C56.2702 35.0602 56.0299 34.9951 55.7823 34.928C55.8784 34.407 55.9745 33.8861 56.0736 33.3493C55.9384 33.4511 55.8032 33.5528 55.6639 33.6577C55.1997 33.9413 55.1997 33.9413 54.7628 33.744C54.8716 33.67 54.9805 33.596 55.0927 33.5197C56.1666 32.7854 56.1666 32.7854 56.9474 31.5733C56.611 31.5733 56.2746 31.5733 55.9279 31.5733C55.9279 31.5082 55.9279 31.4431 55.9279 31.376C56.1682 31.3109 56.4086 31.2458 56.6561 31.1787C56.512 31.0444 56.512 31.0444 56.3649 30.9073C56.2687 30.8015 56.1726 30.6957 56.0736 30.5867C56.0736 30.4564 56.0736 30.3262 56.0736 30.192Z" fill="#081011"/>
<path d="M35.5375 45.3867C36.1623 45.3867 36.7872 45.3867 37.4309 45.3867C37.479 46.5588 37.527 47.731 37.5766 48.9387C37.7688 49.0689 37.9611 49.1991 38.1591 49.3333C38.1111 49.4636 38.063 49.5938 38.0135 49.728C37.7404 49.6787 37.7404 49.6787 37.4309 49.5307C37.0534 48.8202 37.1062 48.0495 37.1214 47.212C37.1227 47.0744 37.124 46.9368 37.1254 46.795C37.1288 46.4571 37.134 46.1192 37.1396 45.7813C36.659 45.7813 36.1784 45.7813 35.6832 45.7813C35.6997 46.3653 35.7182 46.9489 35.7378 47.5327C35.7423 47.6988 35.7468 47.8649 35.7514 48.036C35.7571 48.195 35.7627 48.354 35.7685 48.5178C35.7731 48.6645 35.7777 48.8113 35.7824 48.9625C35.8076 49.3807 35.8076 49.3807 36.1201 49.728C36.0655 50.3447 36.0655 50.3447 35.9745 50.912C35.7651 50.7147 35.7651 50.7147 35.5375 50.32C35.3896 49.1777 35.3915 48.118 35.4556 46.9653C35.4632 46.8124 35.4708 46.6596 35.4786 46.5021C35.4973 46.1302 35.5173 45.7584 35.5375 45.3867Z" fill="#C5C5C5"/>
<path d="M49.8108 19.536C50.0511 19.6011 50.2915 19.6662 50.5391 19.7333C50.5391 19.9287 50.5391 20.124 50.5391 20.3253C51.3141 20.3837 51.3141 20.3837 51.9955 19.9307C52.3141 20.0047 52.3141 20.0047 52.5781 20.128C50.8781 21.3646 49.6584 21.5583 47.7718 21.312C47.7718 21.2469 47.7718 21.1818 47.7718 21.1147C47.8613 21.1119 47.9509 21.1091 48.0432 21.1062C48.4031 21.0774 48.7327 21.0371 49.0826 20.9173C49.3726 20.4388 49.3726 20.4388 49.5195 19.9307C49.6157 19.9307 49.7118 19.9307 49.8108 19.9307C49.8108 19.8004 49.8108 19.6702 49.8108 19.536Z" fill="#9D9D9C"/>
<path d="M40.9264 55.056C41.2213 55.4374 41.4247 55.7726 41.6547 56.24C41.6066 56.3051 41.5585 56.3702 41.509 56.4373C41.6532 56.5676 41.7974 56.6978 41.946 56.832C41.946 57.0274 41.946 57.2227 41.946 57.424C41.8498 57.424 41.7537 57.424 41.6547 57.424C41.6066 57.2938 41.5585 57.1635 41.509 57.0293C41.461 57.3549 41.4129 57.6805 41.3634 58.016C41.2673 57.9509 41.1711 57.8858 41.0721 57.8187C41.0721 57.6884 41.0721 57.5582 41.0721 57.424C40.988 57.4932 40.9039 57.5624 40.8172 57.6337C40.4374 57.8481 40.2864 57.805 39.9069 57.6213C39.9493 56.4432 40.348 55.8661 40.9264 55.056Z" fill="#4791B2"/>
<path d="M45.5643 52.0698C45.664 52.0696 45.7637 52.0694 45.8664 52.0692C46.0774 52.0691 46.2885 52.0695 46.4996 52.0703C46.8237 52.0713 47.1478 52.0703 47.472 52.069C47.6766 52.0692 47.8812 52.0694 48.0858 52.0698C48.2733 52.07 48.4608 52.0702 48.6539 52.0705C49.0826 52.096 49.0826 52.096 49.2282 52.2933C49.248 53.0163 49.2522 53.5772 49.0826 54.2667C48.8423 54.2667 48.602 54.2667 48.3544 54.2667C48.4024 54.1364 48.4505 54.0062 48.5 53.872C48.5961 53.872 48.6923 53.872 48.7913 53.872C48.7913 53.4813 48.7913 53.0906 48.7913 52.688C47.4936 52.688 46.1959 52.688 44.8589 52.688C44.8108 53.1438 44.7627 53.5997 44.7132 54.0693C44.569 54.167 44.569 54.167 44.4219 54.2667C44.418 53.9419 44.4152 53.6171 44.4128 53.2923C44.4111 53.1115 44.4095 52.9306 44.4077 52.7443C44.4377 51.7931 44.9779 52.0705 45.5643 52.0698Z" fill="#81C2E6"/>
<path d="M35.6832 52.096C36.7886 52.096 37.8941 52.096 39.033 52.096C39.1051 52.7269 39.1772 53.3577 39.2515 54.0077C39.2743 54.2047 39.2971 54.4018 39.3206 54.6048C39.3384 54.7626 39.3561 54.9204 39.3744 55.083C39.3927 55.2432 39.411 55.4033 39.4298 55.5684C39.4714 56.0595 39.4768 56.5354 39.47 57.0293C39.4099 56.8991 39.3498 56.7689 39.2879 56.6347C39.2038 56.5044 39.1197 56.3742 39.033 56.24C38.8408 56.24 38.6485 56.24 38.4504 56.24C38.4626 56.1141 38.4748 55.9882 38.4874 55.8584C38.5022 55.6954 38.5171 55.5323 38.5324 55.3643C38.5476 55.2018 38.5628 55.0393 38.5784 54.8718C38.5843 54.7372 38.5901 54.6027 38.5961 54.464C38.548 54.3989 38.5 54.3338 38.4504 54.2667C38.5466 53.6155 38.6427 52.9643 38.7417 52.2933C37.7324 52.2933 36.7231 52.2933 35.6832 52.2933C35.6832 52.2282 35.6832 52.1631 35.6832 52.096Z" fill="#6BB4D5"/>
<path d="M53.3063 21.904C53.4985 22.0342 53.6908 22.1645 53.8889 22.2987C53.985 22.1684 54.0811 22.0382 54.1802 21.904C54.3244 21.9691 54.4685 22.0342 54.6171 22.1013C54.4168 22.5947 54.4168 22.5947 54.1802 23.088C54.084 23.088 53.9879 23.088 53.8889 23.088C53.8448 23.2048 53.8006 23.3215 53.7552 23.4418C53.3843 24.3896 53.0421 25.1586 52.4324 25.8507C52.3363 25.8507 52.2402 25.8507 52.1411 25.8507C52.0228 25.5177 52.0228 25.5177 51.9955 25.0613C52.1675 24.8415 52.3405 24.6228 52.5178 24.4108C52.9493 23.7065 53.1068 22.7663 53.3063 21.904Z" fill="#D3D3D0"/>
<path d="M29.2748 34.7307C29.3709 34.7958 29.467 34.8609 29.5661 34.928C29.611 35.2872 29.611 35.2872 29.6298 35.742C29.687 36.6226 29.8897 37.2713 30.1486 38.0853C30.5305 40.078 30.5305 40.078 30.1486 41.0453C30.1137 41.5115 30.1137 41.5115 30.1304 41.9827C30.1331 42.1404 30.1357 42.2981 30.1384 42.4606C30.1435 42.6392 30.1435 42.6392 30.1486 42.8213C30.0044 42.7562 29.8603 42.6911 29.7117 42.624C29.7185 42.423 29.7252 42.2221 29.7322 42.015C29.7723 40.2282 29.6626 38.6287 29.3236 36.8972C29.1721 36.1056 29.0923 35.5207 29.2748 34.7307Z" fill="#0D2C31"/>
<path d="M39.0331 32.56C39.5991 32.9435 40.0429 33.3711 40.3439 34.1387C40.2984 34.5827 40.2984 34.5827 40.1982 34.928C39.6156 33.7933 39.6156 33.7933 39.6156 33.3493C39.2792 33.2842 38.9428 33.2191 38.5961 33.152C38.7403 33.3474 38.8845 33.5427 39.0331 33.744C38.625 33.9283 38.3552 33.9736 37.9316 33.9783C37.7601 33.9825 37.7601 33.9825 37.5851 33.9868C37.2853 33.9413 37.2853 33.9413 36.994 33.5467C36.994 33.3513 36.994 33.1559 36.994 32.9547C37.6445 32.3671 38.2702 32.4388 39.0331 32.56Z" fill="#56869D"/>
<path d="M44.5676 28.2187C45.4586 28.175 46.1865 28.2409 47.0435 28.6133C47.2298 28.6459 47.416 28.6785 47.6079 28.712C47.7581 28.7446 47.9083 28.7771 48.0631 28.8107C48.2972 29.445 48.2171 30.0807 48.2087 30.784C47.2766 31.3912 47.2766 31.3912 46.8342 31.3143C46.7591 31.2696 46.684 31.2248 46.6066 31.1787C47.2984 30.5867 47.2984 30.5867 47.6261 30.5867C47.6261 30.196 47.6261 29.8052 47.6261 29.4027C47.5155 29.3788 47.405 29.3549 47.291 29.3302C47.1463 29.2971 47.0015 29.2641 46.8524 29.23C46.7088 29.198 46.5651 29.1659 46.4172 29.1329C46.024 29.008 46.024 29.008 45.5871 28.6133C45.2486 28.5356 44.9087 28.4683 44.5676 28.416C44.5676 28.3509 44.5676 28.2858 44.5676 28.2187Z" fill="#B0B0B0"/>
<path d="M49.6651 21.904C50.0275 22.5586 50.179 22.8899 50.3479 23.6307C50.3845 23.7884 50.4211 23.9461 50.4588 24.1086C50.4853 24.2276 50.5117 24.3467 50.539 24.4693C50.4429 24.5996 50.3468 24.7298 50.2477 24.864C50.1516 24.4733 50.0555 24.0826 49.9564 23.68C49.8122 23.973 49.8122 23.973 49.6651 24.272C49.5223 24.473 49.3772 24.6713 49.2282 24.864C48.7671 24.4475 48.6171 24.1269 48.3543 23.4827C48.2101 23.8734 48.0659 24.2641 47.9174 24.6667C47.8213 24.6667 47.7251 24.6667 47.6261 24.6667C47.6261 24.4713 47.6261 24.276 47.6261 24.0747C47.7222 24.0747 47.8184 24.0747 47.9174 24.0747C47.9354 23.9322 47.9534 23.7898 47.972 23.643C48.0617 23.0964 48.1919 22.615 48.3543 22.1013C48.7882 22.6892 48.9369 23.2464 48.9369 24.0747C49.033 24.0747 49.1292 24.0747 49.2282 24.0747C49.3724 23.3584 49.5166 22.642 49.6651 21.904Z" fill="#292422"/>
<path d="M33.6441 20.5227C33.7403 20.5878 33.8364 20.6529 33.9354 20.72C33.7352 21.2133 33.7352 21.2133 33.4985 21.7067C33.4024 21.7067 33.3062 21.7067 33.2072 21.7067C33.1591 22.1625 33.1111 22.6184 33.0615 23.088C32.9654 23.088 32.8693 23.088 32.7703 23.088C32.7175 23.4742 32.6662 23.8607 32.6155 24.2473C32.5868 24.4625 32.5581 24.6777 32.5285 24.8995C32.4416 25.4455 32.4416 25.4455 32.6246 25.8507C32.7207 25.8507 32.8169 25.8507 32.9159 25.8507C32.8678 26.4368 32.8198 27.0228 32.7703 27.6267C32.3333 27.232 32.3333 27.232 32.236 26.8882C32.0231 24.9268 32.1171 23.1041 33.0035 21.4754C33.208 21.1471 33.425 20.8331 33.6441 20.5227Z" fill="#0D2B2A"/>
<path d="M40.6351 52.2933C41.6445 52.2933 42.6538 52.2933 43.6937 52.2933C43.8532 52.9416 43.8538 53.4254 43.8484 54.1063C43.8471 54.3208 43.8458 54.5352 43.8445 54.7561C43.8428 54.9202 43.8411 55.0843 43.8393 55.2533C43.7913 55.2533 43.7432 55.2533 43.6937 55.2533C43.676 55.1417 43.6584 55.03 43.6402 54.9149C43.6158 54.7702 43.5914 54.6255 43.5663 54.4763C43.5426 54.3321 43.5189 54.1879 43.4946 54.0393C43.4272 53.6338 43.4272 53.6338 43.1111 53.4773C43.1111 53.1484 43.1111 52.8196 43.1111 52.4907C42.9729 52.5883 42.8347 52.686 42.6924 52.7867C42.2372 53.0827 42.2372 53.0827 41.9459 53.0827C41.8979 52.9524 41.8498 52.8222 41.8003 52.688C41.6892 52.8508 41.578 53.0136 41.4635 53.1813C41.0721 53.6747 41.0721 53.6747 40.6351 53.6747C40.6351 53.2188 40.6351 52.763 40.6351 52.2933Z" fill="#75C7EC"/>
<path d="M49.5195 60.7787C49.7118 61.1043 49.904 61.4299 50.1021 61.7653C49.9579 62.0584 49.9579 62.0584 49.8108 62.3573C49.8589 62.4713 49.907 62.5853 49.9565 62.7027C50.1021 63.1467 50.1021 63.1467 50.1021 63.936C50.4866 63.8058 50.8711 63.6755 51.2673 63.5413C51.2673 63.4111 51.2673 63.2809 51.2673 63.1467C51.3634 63.1467 51.4595 63.1467 51.5586 63.1467C51.5586 62.6257 51.5586 62.1048 51.5586 61.568C51.6547 61.5029 51.7508 61.4378 51.8499 61.3707C51.8782 61.757 51.9053 62.1435 51.9318 62.53C51.947 62.7452 51.9622 62.9604 51.9779 63.1821C51.9955 63.7387 51.9955 63.7387 51.8499 64.1333C51.4888 64.1386 51.1277 64.1426 50.7666 64.1457C50.6636 64.1473 50.5607 64.149 50.4546 64.1507C50.1914 64.1524 49.9282 64.1436 49.6652 64.1333C49.5195 63.936 49.5195 63.936 49.5053 63.2261C49.5063 62.9324 49.508 62.6387 49.5104 62.345C49.5111 62.1953 49.5117 62.0456 49.5124 61.8914C49.5141 61.5205 49.5168 61.1496 49.5195 60.7787Z" fill="#1B3B48"/>
<path d="M42.9654 17.9573C43.1096 18.0225 43.2538 18.0876 43.4024 18.1547C43.3543 18.2849 43.3063 18.4151 43.2567 18.5493C43.2206 19.3673 43.2206 19.3673 43.4024 20.128C43.4985 19.9326 43.5946 19.7373 43.6937 19.536C43.9821 19.8616 44.2704 20.1872 44.5675 20.5227C44.4234 20.6203 44.4234 20.6203 44.2763 20.72C44.2763 21.1758 44.2763 21.6317 44.2763 22.1013C44.1801 22.1013 44.084 22.1013 43.985 22.1013C43.985 21.9711 43.985 21.8409 43.985 21.7067C43.5076 21.855 43.5076 21.855 43.2567 22.496C43.1792 21.8509 43.104 21.2054 43.0292 20.5597C43.0071 20.3764 42.985 20.1931 42.9623 20.0043C42.9421 19.8281 42.9219 19.652 42.9012 19.4705C42.8821 19.3082 42.863 19.146 42.8434 18.9788C42.8198 18.5493 42.8198 18.5493 42.9654 17.9573Z" fill="#464946"/>
<path d="M63.5015 24.4693C63.5977 24.5344 63.6938 24.5996 63.7928 24.6667C63.7928 24.862 63.7928 25.0574 63.7928 25.2587C63.8889 25.2587 63.9851 25.2587 64.0841 25.2587C64.1034 25.425 64.1228 25.5914 64.1427 25.7628C64.1684 25.979 64.1942 26.1952 64.2207 26.418C64.246 26.6332 64.2713 26.8484 64.2975 27.0701C64.3544 27.6145 64.3544 27.6145 64.521 28.0213C64.4397 28.4052 64.4397 28.4052 64.3117 28.8353C64.2698 28.9783 64.2279 29.1212 64.1848 29.2685C64.1516 29.3779 64.1183 29.4873 64.0841 29.6C63.988 29.6 63.8919 29.6 63.7928 29.6C63.7568 29.7913 63.7207 29.9826 63.6836 30.1797C63.6235 30.3791 63.5634 30.5785 63.5015 30.784C63.192 30.9567 63.192 30.9567 62.9189 30.9813C63.0158 30.3327 63.1967 29.8226 63.4287 29.2423C63.7424 28.4156 63.894 27.7611 63.9385 26.8373C63.8423 26.8373 63.7462 26.8373 63.6472 26.8373C63.5991 26.0559 63.551 25.2744 63.5015 24.4693Z" fill="#010E11"/>
<path d="M40.7808 35.52C40.8288 35.52 40.8769 35.52 40.9264 35.52C40.9264 40.6645 40.9264 45.809 40.9264 51.1093C40.638 51.0442 40.3497 50.9791 40.0526 50.912C40.1006 50.5864 40.1487 50.2608 40.1982 49.9253C40.3904 50.1858 40.5827 50.4463 40.7808 50.7147C40.7808 45.7004 40.7808 40.6862 40.7808 35.52Z" fill="#5A5A5A"/>
<path d="M42.3829 16.9707C42.3636 17.0879 42.3442 17.2052 42.3243 17.326C42.1262 18.5859 42.0144 19.8305 41.946 21.1147C41.8498 21.1147 41.7537 21.1147 41.6547 21.1147C41.6066 21.2449 41.5586 21.3752 41.509 21.5093C41.3168 21.5093 41.1245 21.5093 40.9265 21.5093C41.1187 20.2721 41.311 19.0348 41.509 17.76C41.6052 17.76 41.7013 17.76 41.8003 17.76C41.8003 17.5646 41.8003 17.3693 41.8003 17.168C42.0916 16.9707 42.0916 16.9707 42.3829 16.9707Z" fill="#10272B"/>
<path d="M60.1516 59.5947C60.3631 60.1676 60.257 60.5633 60.1516 61.1733C60.0075 61.271 60.0075 61.271 59.8604 61.3707C59.9084 61.7614 59.9565 62.1521 60.006 62.5547C59.9099 62.5547 59.8138 62.5547 59.7147 62.5547C59.7147 62.4244 59.7147 62.2942 59.7147 62.16C59.6186 62.16 59.5225 62.16 59.4234 62.16C59.4234 62.2902 59.4234 62.4205 59.4234 62.5547C58.9188 62.8477 58.9188 62.8477 58.4039 63.1467C58.3078 62.1047 58.2116 61.0628 58.1126 59.9893C58.5495 60.5813 58.5495 60.5813 58.5769 61.309C58.5678 61.5247 58.5588 61.7404 58.5495 61.9627C58.8379 61.9627 59.1263 61.9627 59.4234 61.9627C59.4272 61.8248 59.4309 61.6869 59.4348 61.5449C59.4431 61.3653 59.4513 61.1857 59.4598 61.0007C59.47 60.7328 59.47 60.7328 59.4803 60.4595C59.5691 59.9893 59.5691 59.9893 59.8672 59.7288C59.9611 59.6845 60.0549 59.6403 60.1516 59.5947Z" fill="#234657"/>
<path d="M42.9655 23.088C43.3144 23.5236 43.5366 23.9658 43.7756 24.5187C44.2171 25.4476 44.7392 25.9534 45.4306 26.5205C45.7327 26.8373 45.7327 26.8373 45.8482 27.2713C45.8632 27.4472 45.8632 27.4472 45.8784 27.6267C45.7823 27.6918 45.6861 27.7569 45.5871 27.824C44.4098 26.6578 43.4584 25.4795 42.8198 23.68C42.8679 23.4846 42.916 23.2893 42.9655 23.088Z" fill="#9EA29E"/>
<path d="M34.6636 22.2987C34.7117 22.4289 34.7598 22.5591 34.8093 22.6933C34.6981 22.8317 34.587 22.9701 34.4725 23.1127C33.8472 24.019 33.5921 24.7651 33.6057 26.0202C33.6094 26.1515 33.613 26.2828 33.6168 26.418C33.6188 26.5538 33.6208 26.6897 33.6228 26.8296C33.6279 27.1611 33.6357 27.4926 33.6441 27.824C33.4999 27.7589 33.3557 27.6938 33.2072 27.6267C33.2072 26.8452 33.2072 26.0638 33.2072 25.2587C33.063 25.5517 33.063 25.5517 32.9159 25.8507C32.7236 25.7855 32.5314 25.7204 32.3333 25.6533C32.3501 25.3736 32.3686 25.0941 32.3879 24.8147C32.3981 24.659 32.4082 24.5033 32.4187 24.3429C32.4812 23.8604 32.5934 23.5126 32.7702 23.088C32.8664 23.088 32.9625 23.088 33.0615 23.088C33.0615 23.6741 33.0615 24.2602 33.0615 24.864C33.1406 24.7119 33.2196 24.5598 33.3011 24.403C33.4053 24.2051 33.5095 24.0072 33.6168 23.8033C33.7199 23.6064 33.823 23.4096 33.9292 23.2067C34.2267 22.6933 34.2267 22.6933 34.6636 22.2987Z" fill="#123541"/>
<path d="M39.3243 18.1547C39.3724 18.1547 39.4204 18.1547 39.4699 18.1547C39.506 18.3663 39.542 18.5779 39.5792 18.796C39.7663 19.5564 39.878 19.852 40.3438 20.3253C40.8002 20.5755 40.8002 20.5755 41.2177 20.72C41.1696 20.9154 41.1216 21.1107 41.072 21.312C41.4918 21.1379 41.4918 21.1379 41.8003 20.9173C41.8964 20.9824 41.9925 21.0476 42.0916 21.1147C41.9459 21.5093 41.9459 21.5093 41.6546 22.1013C41.1631 22.2123 41.1631 22.2123 40.6351 22.1013C40.3711 21.5957 40.3711 21.5957 40.2431 21.2727C39.8336 20.5091 39.1748 20.0418 38.5961 19.536C38.8388 19.536 39.0816 19.536 39.3243 19.536C39.3243 19.0802 39.3243 18.6243 39.3243 18.1547Z" fill="#103238"/>
<path d="M48.364 46.9461C48.544 46.9495 48.544 46.9495 48.7276 46.953C48.8479 46.9548 48.9683 46.9566 49.0923 46.9584C49.1852 46.9607 49.2781 46.963 49.3739 46.9653C49.4345 47.4789 49.4916 47.9924 49.5468 48.507C49.5644 48.6526 49.5819 48.7983 49.6 48.9483C49.6441 49.3742 49.6441 49.3742 49.6652 50.1227C49.521 50.318 49.3768 50.5134 49.2282 50.7147C49.2282 49.6076 49.2282 48.5006 49.2282 47.36C48.8918 47.36 48.5553 47.36 48.2087 47.36C48.2847 47.5111 48.2847 47.5111 48.3623 47.6652C48.5576 48.3518 48.4611 48.8601 48.3726 49.58C48.3429 49.8293 48.3132 50.0786 48.2827 50.3354C48.2583 50.5257 48.2339 50.716 48.2087 50.912C47.9174 50.5173 47.9174 50.5173 47.8839 49.7519C47.8844 49.4438 47.8866 49.1357 47.8901 48.8277C47.8902 48.6711 47.8903 48.5145 47.8904 48.3532C47.8982 46.9759 47.8982 46.9759 48.364 46.9461ZM49.6652 49.5307C49.7613 49.6609 49.8574 49.7911 49.9565 49.9253C49.8603 49.9253 49.7642 49.9253 49.6652 49.9253C49.6652 49.7951 49.6652 49.6649 49.6652 49.5307Z" fill="#E6E5E5"/>
<path d="M56.9474 35.52C56.9955 35.52 57.0435 35.52 57.0931 35.52C57.1066 37.3108 57.1169 39.1016 57.1233 40.8924C57.1263 41.724 57.1304 42.5555 57.137 43.387C57.1433 44.1892 57.1468 44.9914 57.1483 45.7937C57.1494 46.1 57.1515 46.4063 57.1547 46.7126C57.1589 47.1412 57.1595 47.5695 57.1592 47.9981C57.1605 48.2422 57.1618 48.4863 57.1631 48.7377C57.0931 49.3333 57.0931 49.3333 56.7999 49.6735C56.7044 49.7566 56.6089 49.8397 56.5105 49.9253C56.4618 50.5422 56.4618 50.5422 56.5105 51.1093C56.201 50.4803 56.1461 50.0704 56.0735 49.3333C56.434 49.2357 56.434 49.2357 56.8018 49.136C56.8498 44.6427 56.8979 40.1494 56.9474 35.52Z" fill="#373737"/>
<path d="M59.2778 30.784C59.3739 30.8491 59.47 30.9142 59.5691 30.9813C59.5691 31.1116 59.5691 31.2418 59.5691 31.376C59.4729 31.376 59.3768 31.376 59.2778 31.376C59.4174 31.8359 59.4174 31.8359 59.8603 32.1653C59.5172 32.6302 58.6521 32.4409 58.1877 32.466C57.457 32.6002 56.9992 33.0122 56.5105 33.744C56.5898 32.9921 56.8001 32.6311 57.2387 32.1653C57.7121 32.0173 57.7121 32.0173 58.1126 31.968C57.9203 31.8378 57.7281 31.7075 57.53 31.5733C57.53 31.4431 57.53 31.3128 57.53 31.1787C57.8004 31.1909 57.8004 31.1909 58.0762 31.2033C58.5619 31.2068 58.8528 31.1162 59.2778 30.784Z" fill="#05303B"/>
<path d="M41.072 23.2853C41.4453 23.5937 41.4453 23.5937 41.6546 24.0747C41.7639 24.8147 41.7639 24.8147 41.8003 25.456C41.7072 25.2973 41.614 25.1385 41.5181 24.975C41.3042 24.6124 41.3042 24.6124 41.072 24.272C39.968 24.1116 39.2611 24.331 38.3048 25.0613C38.2087 24.9962 38.1125 24.9311 38.0135 24.864C38.2256 24.6375 38.4381 24.4115 38.6507 24.1857C38.8281 23.9968 38.8281 23.9968 39.0091 23.8041C39.658 23.1424 40.2806 23.1641 41.072 23.2853Z" fill="#B7D5E7"/>
<path d="M58.4039 33.152C58.2597 33.2497 58.2597 33.2497 58.1126 33.3493C58.1126 33.5447 58.1126 33.74 58.1126 33.9413C58.4463 33.952 58.7801 33.9596 59.1139 33.966C59.2998 33.9706 59.4857 33.9752 59.6772 33.9799C60.1642 34.0117 60.1642 34.0117 60.4429 33.5467C60.491 33.8723 60.5391 34.1979 60.5886 34.5333C59.3551 34.7889 58.1843 34.6786 56.9474 34.5333C57.1944 33.5929 57.1944 33.5929 57.5938 33.1767C57.967 32.9547 57.967 32.9547 58.4039 33.152Z" fill="#476573"/>
<path d="M44.2763 21.5093C44.3724 21.7047 44.4685 21.9001 44.5676 22.1013C44.5195 22.2926 44.4714 22.4839 44.4219 22.681C44.2302 23.265 44.2302 23.265 44.4037 23.754C44.4578 23.8598 44.5118 23.9656 44.5676 24.0747C44.6637 23.9444 44.7598 23.8142 44.8588 23.68C45.0227 24.42 45.0227 24.42 44.8588 24.864C45.6279 25.1245 46.3969 25.385 47.1892 25.6533C47.1892 25.7185 47.1892 25.7836 47.1892 25.8507C46.2085 25.9491 45.4278 25.7301 44.5676 25.0613C44.2125 24.5063 44.2125 24.5063 43.985 23.8773C43.942 23.7601 43.899 23.6428 43.8547 23.522C43.6264 22.8623 43.548 22.4466 43.548 21.7067C43.6922 21.7067 43.8364 21.7067 43.985 21.7067C43.985 21.8369 43.985 21.9672 43.985 22.1013C44.0811 22.1013 44.1772 22.1013 44.2763 22.1013C44.2763 21.906 44.2763 21.7106 44.2763 21.5093Z" fill="#543837"/>
<path d="M30.5856 33.3493C31.1513 34.4992 31.0986 35.7513 31.0225 37.0987C30.9124 37.6677 30.7684 38.1406 30.5856 38.6773C30.5375 38.6773 30.4894 38.6773 30.4399 38.6773C30.4378 38.5509 30.4358 38.4245 30.4337 38.2942C30.3802 36.9816 30.1748 36.3379 29.566 35.3227C29.566 35.1924 29.566 35.0622 29.566 34.928C29.9292 35.1656 30.2479 35.4123 30.5856 35.7173C30.6248 34.7996 30.6248 34.7996 30.4399 33.9413C30.488 33.746 30.536 33.5506 30.5856 33.3493Z" fill="#0A252D"/>
<path d="M41.3634 29.6C41.6547 30.192 41.6547 30.192 41.6547 30.5867C42.7121 30.5867 43.7694 30.5867 44.8589 30.5867C44.7132 30.9813 44.7132 30.9813 44.4663 31.1088C43.5777 31.3829 42.77 31.3921 41.864 31.302C41.731 31.2908 41.598 31.2796 41.4609 31.2681C41.137 31.2405 40.8132 31.2099 40.4895 31.1787C40.7779 30.6577 41.0663 30.1368 41.3634 29.6Z" fill="#B3B3AF"/>
<path d="M57.2387 23.2853C57.9517 23.7249 58.548 24.1703 58.9865 25.0613C58.1515 24.693 58.1515 24.693 57.7849 24.4447C57.1668 24.1782 56.5687 24.1254 55.9279 24.272C55.5956 24.5592 55.4403 24.824 55.1997 25.2587C55.2433 24.6096 55.3053 24.1607 55.5638 23.606C56.1228 23.1138 56.5922 23.102 57.2387 23.2853Z" fill="#C2E7F4"/>
<path d="M46.4609 21.7067C47.0377 21.7718 47.6145 21.8369 48.2087 21.904C48.3742 22.5768 48.335 22.694 48.145 23.3223C48.1031 23.4635 48.0612 23.6047 48.0181 23.7501C47.9849 23.8572 47.9516 23.9643 47.9174 24.0747C47.8213 24.0747 47.7251 24.0747 47.6261 24.0747C47.4819 23.5537 47.3377 23.0327 47.1892 22.496C46.9048 22.8812 46.7743 23.193 46.6066 23.68C46.5585 23.68 46.5105 23.68 46.4609 23.68C46.4609 23.0288 46.4609 22.3776 46.4609 21.7067Z" fill="#978685"/>
<path d="M44.8589 14.208C45.0511 14.2731 45.2434 14.3382 45.4415 14.4053C45.2973 14.503 45.2973 14.503 45.1502 14.6027C45.2703 14.7777 45.3905 14.9527 45.5143 15.133C45.7999 15.5919 45.8744 15.7369 45.9239 16.354C45.9014 16.5616 45.9014 16.5616 45.8784 16.7733C45.4458 16.6756 45.4458 16.6756 45.0045 16.576C45.0045 16.3155 45.0045 16.055 45.0045 15.7867C44.9084 15.7867 44.8123 15.7867 44.7132 15.7867C44.7132 16.1123 44.7132 16.4379 44.7132 16.7733C44.8574 16.8384 45.0016 16.9036 45.1502 16.9707C44.9579 16.9707 44.7657 16.9707 44.5676 16.9707C44.4273 16.3812 44.3114 15.8137 44.2763 15.1947C44.5494 14.5903 44.5494 14.5903 44.8589 14.208Z" fill="#072127"/>
<path d="M41.8003 21.312C42.2436 22.0351 42.5266 22.8409 42.8289 23.68C42.8801 23.8204 42.9312 23.9608 42.984 24.1055C43.0816 24.3736 43.179 24.6418 43.2762 24.9102C43.4139 25.2905 43.5533 25.6695 43.6937 26.048C43.4534 26.048 43.2131 26.048 42.9655 26.048C42.7982 25.6001 42.6314 25.152 42.4648 24.7037C42.4174 24.5769 42.37 24.4501 42.3212 24.3194C41.9219 23.2431 41.7835 22.5185 41.8003 21.312Z" fill="#8E938F"/>
<path d="M55.491 61.1733C55.5391 61.1733 55.5871 61.1733 55.6366 61.1733C55.6405 61.6297 55.6434 62.086 55.6457 62.5423C55.6474 62.7965 55.6491 63.0506 55.6509 63.3124C55.6366 63.936 55.6366 63.936 55.491 64.1333C55.0741 64.1478 54.6607 64.1516 54.2439 64.1457C54.1265 64.1448 54.009 64.1439 53.888 64.143C53.597 64.1406 53.306 64.1371 53.015 64.1333C52.7366 63.4032 52.5211 62.7794 52.4324 61.9627C52.6247 61.8976 52.8169 61.8324 53.015 61.7653C52.967 62.1561 52.9189 62.5468 52.8694 62.9493C53.0616 63.0145 53.2539 63.0796 53.452 63.1467C53.4039 63.342 53.3558 63.5374 53.3063 63.7387C53.4114 63.702 53.5166 63.6654 53.6249 63.6277C54.0345 63.5413 54.0345 63.5413 54.4078 63.6647C54.7678 63.7896 54.7678 63.7896 55.0694 63.5113C55.4223 63.045 55.4294 62.7807 55.4546 62.123C55.4628 61.9452 55.4711 61.7674 55.4796 61.5842C55.4834 61.4486 55.4871 61.313 55.491 61.1733Z" fill="#1A3641"/>
<path d="M41.509 61.1733C41.5571 61.3036 41.6052 61.4338 41.6547 61.568C41.7508 61.6331 41.8469 61.6982 41.946 61.7653C41.946 62.3514 41.946 62.9375 41.946 63.5413C42.2208 63.5536 42.2208 63.5536 42.5012 63.566C42.6043 63.5706 42.7074 63.5752 42.8136 63.5799C43.1568 63.5675 43.1568 63.5675 43.5481 63.1467C43.6322 62.7592 43.6322 62.7592 43.6482 62.3327C43.6632 62.0803 43.6782 61.828 43.6937 61.568C43.7418 61.568 43.7898 61.568 43.8394 61.568C43.8394 62.4146 43.8394 63.2611 43.8394 64.1333C43.4783 64.1386 43.1172 64.1426 42.7561 64.1457C42.6531 64.1473 42.5502 64.149 42.4441 64.1507C42.1809 64.1524 41.9177 64.1436 41.6547 64.1333C41.509 63.936 41.509 63.936 41.4948 63.3124C41.4973 62.9312 41.4973 62.9312 41.4999 62.5423C41.5012 62.2877 41.5026 62.0331 41.5039 61.7707C41.5056 61.5736 41.5073 61.3765 41.509 61.1733Z" fill="#1B343E"/>
<path d="M47.1892 61.568C47.4776 61.5904 47.7658 61.6156 48.054 61.642C48.2145 61.6557 48.375 61.6695 48.5404 61.6836C48.7367 61.7241 48.7367 61.7241 48.9369 61.7653C49.1604 62.3709 49.017 62.8903 48.9369 63.5413C48.5713 63.2936 48.5188 63.0479 48.3544 62.5547C48.2597 62.7012 48.2597 62.7012 48.1632 62.8507C47.9174 63.1467 47.9174 63.1467 47.4805 63.1467C47.4805 62.9513 47.4805 62.7559 47.4805 62.5547C47.4324 62.6849 47.3844 62.8151 47.3348 62.9493C47.1426 62.8842 46.9503 62.8191 46.7523 62.752C46.8003 62.5566 46.8484 62.3613 46.8979 62.16C46.994 62.16 47.0902 62.16 47.1892 62.16C47.1892 61.9646 47.1892 61.7693 47.1892 61.568Z" fill="#21424F"/>
<path d="M63.6472 30.784C63.6952 30.784 63.7433 30.784 63.7928 30.784C63.8409 31.305 63.8889 31.8259 63.9384 32.3627C63.7943 32.2975 63.6501 32.2324 63.5015 32.1653C63.5496 32.4909 63.5976 32.8165 63.6472 33.152C63.5751 33.0584 63.503 32.9648 63.4287 32.8683C62.9197 32.4373 62.4951 32.4299 61.8994 32.3627C61.6135 33.0544 61.4684 33.7703 61.3168 34.5333C61.2688 34.5333 61.2207 34.5333 61.1712 34.5333C61.1712 33.9472 61.1712 33.3612 61.1712 32.7573C61.075 32.6922 60.9789 32.6271 60.8799 32.56C61.0241 32.56 61.1683 32.56 61.3168 32.56C61.3649 32.3646 61.4129 32.1693 61.4625 31.968C61.847 31.968 62.2315 31.968 62.6276 31.968C62.6276 31.8378 62.6276 31.7075 62.6276 31.5733C62.916 31.5082 63.2044 31.4431 63.5015 31.376C63.5496 31.1806 63.5976 30.9853 63.6472 30.784Z" fill="#0E3239"/>
<path d="M54.9084 21.5093C54.9565 21.5093 55.0045 21.5093 55.054 21.5093C55.1836 23.054 54.6871 24.4052 54.1284 25.725C53.8889 26.048 53.8889 26.048 53.4975 26.0973C53.3863 26.0811 53.2752 26.0648 53.1606 26.048C53.238 25.8692 53.3153 25.6904 53.395 25.5061C53.9559 24.1993 54.4809 22.9089 54.9084 21.5093Z" fill="#888B87"/>
<path d="M65.2493 44.4C65.2493 44.7256 65.2493 45.0512 65.2493 45.3867C65.1749 45.4299 65.1006 45.4731 65.024 45.5177C64.0622 46.0861 63.1262 46.7166 62.1907 47.36C62.0946 47.1646 61.9985 46.9693 61.8994 46.768C62.2839 46.5726 62.6684 46.3773 63.0646 46.176C63.0165 46.0458 62.9685 45.9155 62.9189 45.7813C63.0691 45.6999 63.2193 45.6185 63.3741 45.5347C63.7628 45.3118 64.0549 45.0831 64.4118 44.7577C64.8123 44.4 64.8123 44.4 65.2493 44.4Z" fill="#030B0E"/>
<path d="M65.2492 28.0213C65.6311 28.2283 65.8018 28.3468 66.0139 28.8353C66.0499 28.9574 66.086 29.0795 66.1231 29.2053C66.012 29.1687 65.9008 29.1321 65.7863 29.0943C65.3818 28.963 65.3818 28.963 64.9579 29.2053C65.1697 29.3396 65.1697 29.3396 65.3858 29.4767C65.8318 29.7973 65.8318 29.7973 65.9775 30.192C64.6069 30.4185 64.6069 30.4185 63.9384 30.3893C64.1291 29.6143 64.3448 29.135 64.8123 28.6133C65.14 28.4653 65.14 28.4653 65.3949 28.416C65.3468 28.2858 65.2987 28.1555 65.2492 28.0213Z" fill="#568092"/>
<path d="M41.0721 58.4107C41.3738 59.2765 41.3738 59.2765 41.3269 59.8167C41.2177 60.1867 41.2177 60.1867 40.9264 60.7787C40.8303 60.4531 40.7342 60.1275 40.6351 59.792C40.3948 59.8571 40.1545 59.9222 39.9069 59.9893C39.8108 59.6637 39.7146 59.3381 39.6156 59.0027C40.1271 58.5275 40.4497 58.3384 41.0721 58.4107Z" fill="#356F89"/>
<path d="M31.8964 39.4667C31.9582 39.5476 32.0199 39.6284 32.0836 39.7118C32.6842 40.4594 33.1355 40.8241 33.9354 41.0453C33.7898 41.44 33.7898 41.44 33.6442 41.6373C32.8602 41.7081 32.396 41.7138 31.7508 41.0453C31.6546 40.9151 31.5585 40.7848 31.4595 40.6507C31.5141 40.2313 31.5141 40.2313 31.6051 39.8613C31.7012 39.8613 31.7974 39.8613 31.8964 39.8613C31.8964 39.7311 31.8964 39.6008 31.8964 39.4667Z" fill="#0E3032"/>
<path d="M38.7417 19.536C38.6456 19.6011 38.5495 19.6662 38.4504 19.7333C38.3062 19.6682 38.1621 19.6031 38.0135 19.536C36.8459 19.3825 35.6163 19.5471 34.6153 20.4263C33.9752 21.1424 33.5709 21.8846 33.2072 22.8907C33.0616 22.2987 33.0616 22.2987 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C33.9018 20.3948 34.3655 19.871 34.9549 19.3387C36.0761 19.0331 37.7339 18.7174 38.7417 19.536Z" fill="#274B51"/>
<path d="M54.6171 15.7867C55.0792 16.0997 55.1489 16.5249 55.3453 17.168C55.7321 19.2764 55.7321 19.2764 55.491 20.128C55.3468 20.3885 55.2026 20.649 55.054 20.9173C55.054 20.201 55.054 19.4847 55.054 18.7467C54.9579 18.7467 54.8618 18.7467 54.7627 18.7467C54.6916 18.3484 54.6205 17.9501 54.5494 17.5519C54.479 17.1564 54.479 17.1564 54.3258 16.7733C54.47 16.7733 54.6142 16.7733 54.7627 16.7733C54.7147 16.4477 54.6666 16.1221 54.6171 15.7867Z" fill="#051315"/>
<path d="M49.6652 55.2533C49.8093 55.3184 49.9535 55.3836 50.1021 55.4507C50.1021 55.7763 50.1021 56.1019 50.1021 56.4373C50.1982 56.5024 50.2943 56.5676 50.3934 56.6347C50.3934 57.2207 50.3934 57.8068 50.3934 58.4107C50.2492 58.4107 50.105 58.4107 49.9564 58.4107C49.8603 58.5409 49.7642 58.6711 49.6652 58.8053C49.4487 58.2188 49.5003 57.6813 49.5013 57.0293C49.5009 56.7811 49.5006 56.5328 49.5002 56.277C49.5195 55.648 49.5195 55.648 49.6652 55.2533Z" fill="#4884A2"/>
<path d="M40.0526 31.5733C40.4882 31.7701 40.7229 31.9852 41.0812 32.3627C41.4948 32.7978 41.4948 32.7978 41.9459 33.152C41.9459 33.3474 41.9459 33.5427 41.9459 33.744C42.1382 33.8091 42.3304 33.8742 42.5285 33.9413C42.1576 34.1926 42.0292 34.0996 41.6364 33.9537C41.5309 33.9153 41.4254 33.8768 41.3167 33.8373C41.236 33.8065 41.1552 33.7757 41.0721 33.744C41.1201 33.8742 41.1682 34.0045 41.2177 34.1387C41.5858 34.268 41.5858 34.268 41.9459 34.336C41.9459 34.4011 41.9459 34.4662 41.9459 34.5333C41.6095 34.5333 41.2731 34.5333 40.9264 34.5333C40.905 34.3548 40.905 34.3548 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733Z" fill="#595A57"/>
<path d="M40.7808 29.6C40.7808 29.7954 40.7808 29.9907 40.7808 30.192C40.5464 30.488 40.5464 30.488 40.2346 30.784C40.1332 30.8817 40.0318 30.9794 39.9274 31.08C39.8245 31.1777 39.7216 31.2754 39.6156 31.376C39.4209 31.5725 39.2266 31.7695 39.033 31.968C39.2733 31.9029 39.5137 31.8378 39.7613 31.7707C39.8093 31.9009 39.8574 32.0312 39.9069 32.1653C39.8588 32.2956 39.8108 32.4258 39.7613 32.56C39.1845 32.4949 38.6077 32.4298 38.0135 32.3627C37.9654 32.1022 37.9174 31.8417 37.8679 31.5733C37.9523 31.5375 38.0368 31.5016 38.1239 31.4647C39.1301 31.026 39.9675 30.5399 40.7808 29.6Z" fill="#052025"/>
<path d="M55.7823 30.192C55.9526 30.3515 56.1224 30.5121 56.292 30.673C56.3866 30.7623 56.4813 30.8516 56.5788 30.9436C56.6523 31.0211 56.7259 31.0987 56.8018 31.1787C56.8018 31.2438 56.8018 31.3089 56.8018 31.376C55.5462 31.6722 53.8165 31.7711 52.7237 30.784C54.2377 30.6863 54.2377 30.6863 55.7823 30.5867C55.7823 30.4564 55.7823 30.3262 55.7823 30.192Z" fill="#9A9896"/>
<path d="M47.0436 22.8907C47.4081 23.4705 47.5489 23.9127 47.6261 24.6667C47.7223 24.6667 47.8184 24.6667 47.9174 24.6667C48.0136 24.4062 48.1097 24.1457 48.2087 23.8773C48.1607 24.3332 48.1126 24.789 48.0631 25.2587C47.3591 25.2751 46.7178 25.2493 46.024 25.0613C46.024 24.9962 46.024 24.9311 46.024 24.864C46.2644 24.864 46.5047 24.864 46.7523 24.864C46.7611 24.7381 46.7699 24.6122 46.779 24.4824C46.7912 24.3194 46.8034 24.1563 46.816 23.9883C46.8278 23.8258 46.8397 23.6632 46.8518 23.4958C46.8979 23.088 46.8979 23.088 47.0436 22.8907Z" fill="#847171"/>
<path d="M44.5676 54.6613C44.6637 54.9218 44.7598 55.1823 44.8589 55.4507C45.1352 55.9143 45.1352 55.9143 45.6053 55.87C45.8126 55.8578 45.8126 55.8578 46.024 55.8453C46.024 55.65 46.024 55.4546 46.024 55.2533C46.2163 55.3185 46.4085 55.3836 46.6066 55.4507C46.6066 55.8414 46.6066 56.2321 46.6066 56.6347C45.9337 56.6347 45.2608 56.6347 44.5676 56.6347C44.5676 55.9835 44.5676 55.3323 44.5676 54.6613Z" fill="#599CC1"/>
<path d="M45.7327 27.0347C45.8741 27.0649 46.0155 27.0952 46.1611 27.1264C46.7904 27.2482 47.4195 27.2981 48.054 27.343C48.1674 27.3515 48.2809 27.36 48.3979 27.3688C48.6746 27.3895 48.9514 27.4095 49.2282 27.4293C49.2282 27.4945 49.2282 27.5596 49.2282 27.6267C48.7476 27.6918 48.267 27.7569 47.7718 27.824C47.7718 28.0194 47.7718 28.2147 47.7718 28.416C46.9483 28.4843 46.4566 28.3044 45.7327 27.824C45.7327 27.5635 45.7327 27.303 45.7327 27.0347Z" fill="#BABBB8"/>
<path d="M44.5676 21.1147C44.7117 21.1798 44.8559 21.2449 45.0045 21.312C44.9564 21.8981 44.9084 22.4842 44.8588 23.088C44.955 23.0229 45.0511 22.9578 45.1501 22.8907C45.2463 23.4767 45.3424 24.0628 45.4414 24.6667C45.2492 24.7318 45.0569 24.7969 44.8588 24.864C44.8108 24.6686 44.7627 24.4733 44.7132 24.272C44.6051 24.1438 44.6051 24.1438 44.4947 24.013C44.1881 23.5457 44.1805 23.1048 44.1306 22.496C44.2267 22.496 44.3229 22.496 44.4219 22.496C44.47 22.0402 44.518 21.5843 44.5676 21.1147Z" fill="#ADAAA7"/>
<path d="M53.452 52.2933C53.7888 52.288 54.1256 52.2842 54.4624 52.281C54.6499 52.2787 54.8375 52.2764 55.0307 52.2741C55.491 52.2933 55.491 52.2933 55.6367 52.4907C55.6471 52.7905 55.6489 53.0909 55.6458 53.391C55.6444 53.5541 55.6431 53.7171 55.6418 53.8851C55.6401 54.011 55.6384 54.1369 55.6367 54.2667C55.5886 54.0713 55.5405 53.8759 55.491 53.6747C55.2507 53.6747 55.0104 53.6747 54.7628 53.6747C54.7147 53.3491 54.6667 53.0235 54.6171 52.688C54.3288 52.688 54.0404 52.688 53.7433 52.688C53.7433 53.0136 53.7433 53.3392 53.7433 53.6747C53.5991 53.7723 53.5991 53.7723 53.452 53.872C53.452 53.351 53.452 52.8301 53.452 52.2933Z" fill="#76C9ED"/>
<path d="M35.9745 42.4267C36.8396 42.4267 37.7048 42.4267 38.5961 42.4267C38.5961 42.4918 38.5961 42.5569 38.5961 42.624C37.8752 42.6891 37.1542 42.7542 36.4114 42.8213C36.648 43.0903 36.648 43.0903 36.8893 43.3648C38.6248 45.4479 38.6248 45.4479 38.7412 46.637C38.756 47.3504 38.6952 48.0402 38.5961 48.7413C38.5481 48.7413 38.5 48.7413 38.4505 48.7413C38.4586 48.5671 38.4666 48.3928 38.4749 48.2133C38.48 46.9346 38.4424 46.0182 37.7656 45.0576C37.4219 44.6202 37.0686 44.2115 36.7027 43.808C36.6036 43.6915 36.5045 43.575 36.4023 43.455C36.2154 43.237 36.023 43.0275 35.8289 42.8213C35.8769 42.6911 35.925 42.5609 35.9745 42.4267Z" fill="#EAEAEA"/>
<path d="M45.2958 27.6267C45.3942 27.6671 45.4925 27.7076 45.5939 27.7492C45.7238 27.8024 45.8537 27.8556 45.9876 27.9103C46.116 27.963 46.2444 28.0156 46.3767 28.0699C46.902 28.278 47.3855 28.4391 47.9333 28.4784C48.0432 28.4867 48.153 28.495 48.2662 28.5035C48.436 28.5151 48.436 28.5151 48.6092 28.527C48.7247 28.5355 48.8401 28.544 48.9591 28.5528C49.243 28.5737 49.5269 28.5936 49.8108 28.6133C49.8108 28.6784 49.8108 28.7436 49.8108 28.8107C49.5224 28.8758 49.234 28.9409 48.9369 29.008C48.8889 29.4638 48.8408 29.9197 48.7913 30.3893C48.7432 30.194 48.6951 29.9986 48.6456 29.7973C48.5495 29.7973 48.4534 29.7973 48.3543 29.7973C48.3063 30.0578 48.2582 30.3183 48.2087 30.5867C48.1606 30.0006 48.1126 29.4145 48.063 28.8107C47.9219 28.8229 47.7807 28.8351 47.6352 28.8477C46.9515 28.8514 46.3658 28.5395 45.7327 28.2187C45.5885 28.1535 45.4443 28.0884 45.2958 28.0213C45.2958 27.8911 45.2958 27.7608 45.2958 27.6267Z" fill="#181916"/>
<path d="M43.4024 13.2213C43.5947 13.3516 43.7869 13.4818 43.985 13.616C43.9296 14.2667 43.7879 14.4886 43.4661 15.0097C43.0646 15.5397 43.0646 15.5397 43.1111 16.1813C42.9189 16.1813 42.7266 16.1813 42.5285 16.1813C42.4 15.0496 42.7469 14.4508 43.2113 13.5682C43.3059 13.3965 43.3059 13.3965 43.4024 13.2213Z" fill="#09393F"/>
<path d="M61.6081 58.8053C61.7042 58.8053 61.8003 58.8053 61.8994 58.8053C61.9073 59.3069 61.913 59.8083 61.9176 60.31C61.92 60.4507 61.9225 60.5913 61.925 60.7363C61.931 61.6195 61.8543 62.3138 61.6081 63.1467C61.56 63.0164 61.512 62.8862 61.4624 62.752C61.5105 62.6218 61.5586 62.4915 61.6081 62.3573C61.2599 62.139 61.2599 62.139 60.8799 61.9627C60.7837 62.0278 60.6876 62.0929 60.5886 62.16C60.7342 61.568 60.7342 61.568 61.0983 61.2843C61.4856 61.0262 61.4856 61.0262 61.5808 60.5443C61.5898 60.4263 61.5988 60.3083 61.6081 60.1867C61.512 60.1867 61.4158 60.1867 61.3168 60.1867C61.4129 59.7308 61.509 59.275 61.6081 58.8053Z" fill="#244B5B"/>
<path d="M53.3063 25.2587C53.3063 25.454 53.3063 25.6494 53.3063 25.8507C53.5947 25.7855 53.883 25.7204 54.1802 25.6533C54.1802 25.9138 54.1802 26.1743 54.1802 26.4427C54.0974 26.4432 54.0146 26.4437 53.9293 26.4442C53.0998 26.5005 52.6703 26.7347 52.0837 27.5334C51.6402 28.0845 51.1046 28.3164 50.539 28.564C50.4159 28.62 50.2927 28.6759 50.1658 28.7336C49.7462 28.8247 49.5804 28.7208 49.2282 28.416C49.3375 28.387 49.4467 28.358 49.5593 28.3281C51.1698 27.85 52.303 27.0472 53.3063 25.2587Z" fill="#32322D"/>
<path d="M57.0931 22.6933C57.0931 22.8236 57.0931 22.9538 57.0931 23.088C56.6593 23.2133 56.6593 23.2133 56.2255 23.3385C55.8744 23.5086 55.7171 23.6743 55.491 24.0747C55.234 25.2912 55.3675 26.591 55.491 27.824C55.5871 27.824 55.6833 27.824 55.7823 27.824C55.7823 28.1496 55.7823 28.4752 55.7823 28.8107C55.176 27.7653 54.9985 27.0147 54.9903 25.678C54.9856 25.5409 54.9808 25.4038 54.9758 25.2625C54.9699 24.4883 55.0446 23.9937 55.3988 23.4002C55.937 22.6851 56.3549 22.3229 57.0931 22.6933Z" fill="#407A8E"/>
<path d="M61.6081 20.128C61.56 20.3885 61.512 20.649 61.4625 20.9173C61.3663 20.9173 61.2702 20.9173 61.1712 20.9173C61.1231 21.0476 61.075 21.1778 61.0255 21.312C60.8693 21.2184 60.7131 21.1248 60.5522 21.0283C60.2477 20.8488 59.9863 20.7144 59.6601 20.6213C59.582 20.5888 59.5039 20.5562 59.4234 20.5227C59.3754 20.3273 59.3273 20.1319 59.2778 19.9307C60.0109 19.6423 60.9163 19.6593 61.6081 20.128Z" fill="#5E879C"/>
<path d="M46.1697 14.208C46.2658 14.2731 46.3619 14.3382 46.461 14.4053C46.455 14.6495 46.449 14.8937 46.4428 15.1453C46.4411 15.7899 46.4818 16.2237 46.7523 16.7733C46.6081 16.9036 46.4639 17.0338 46.3153 17.168C46.3634 16.9075 46.4115 16.647 46.461 16.3787C46.3314 16.3577 46.3314 16.3577 46.1993 16.3363C45.7598 16.124 45.6479 15.812 45.405 15.281C45.3292 15.1179 45.2533 14.9549 45.1752 14.7869C45.1189 14.661 45.0625 14.5351 45.0045 14.4053C45.4354 14.2107 45.7212 14.1768 46.1697 14.208Z" fill="#538494"/>
<path d="M61.2986 62.0367C61.4007 62.1425 61.5029 62.2483 61.6081 62.3573C61.3714 63.492 61.3714 63.492 60.8799 63.936C60.5613 63.862 60.5613 63.862 60.2973 63.7387C60.4895 63.6084 60.6818 63.4782 60.8799 63.344C60.442 62.7508 60.0316 62.8318 59.4234 62.752C59.4234 62.5566 59.4234 62.3613 59.4234 62.16C59.5195 62.16 59.6157 62.16 59.7147 62.16C59.7147 62.2902 59.7147 62.4205 59.7147 62.5547C59.8108 62.5547 59.9069 62.5547 60.006 62.5547C60.006 62.4244 60.006 62.2942 60.006 62.16C60.7768 61.6986 60.7768 61.6986 61.2986 62.0367Z" fill="#174050"/>
<path d="M58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1322 46.5707C59.2302 47.1788 59.327 47.7874 59.4234 48.396C59.4512 48.5682 59.479 48.7404 59.5076 48.9179C59.5339 49.0845 59.5602 49.2511 59.5873 49.4227C59.6117 49.5757 59.6361 49.7286 59.6613 49.8862C59.7147 50.32 59.7147 50.32 59.7147 51.1093C59.4744 51.1745 59.2341 51.2396 58.9865 51.3067C58.9865 49.7438 58.9865 48.1809 58.9865 46.5707Z" fill="#202021"/>
<path d="M31.0225 41.8347C31.7322 42.6 32.2802 43.3805 32.8175 44.3707C33.0715 44.8119 33.347 45.1963 33.6441 45.584C32.4742 45.0245 31.6555 44.0653 31.0225 42.624C31.0225 42.3635 31.0225 42.103 31.0225 41.8347Z" fill="#496B76"/>
<path d="M56.5651 23.976C57.5315 23.9951 58.3285 24.5662 59.1321 25.2587C59.1802 25.3889 59.2282 25.5191 59.2778 25.6533C59.1756 25.5964 59.0735 25.5394 58.9683 25.4807C58.8301 25.4074 58.6919 25.3341 58.5495 25.2587C58.4204 25.1854 58.2912 25.1121 58.1581 25.0367C57.2972 24.7285 56.5189 24.696 55.6912 25.16C55.5771 25.2577 55.4629 25.3554 55.3453 25.456C55.6104 24.4812 55.7644 24.0181 56.5651 23.976Z" fill="#46728A"/>
<path d="M41.0721 24.0747C41.1201 24.3352 41.1682 24.5956 41.2177 24.864C41.042 24.7969 41.042 24.7969 40.8627 24.7283C40.1666 24.6456 39.6773 24.9292 39.033 25.2587C38.7876 25.371 38.5418 25.4821 38.2957 25.5917C38.131 25.6661 38.131 25.6661 37.9629 25.742C37.8835 25.7779 37.8041 25.8137 37.7222 25.8507C37.9433 24.952 38.4137 24.7478 39.012 24.3175C39.706 23.9496 40.3395 23.971 41.0721 24.0747Z" fill="#417285"/>
<path d="M67.434 32.9547C67.5301 33.0849 67.6262 33.2151 67.7253 33.3493C67.6919 34.7036 67.4262 35.5305 66.7057 36.5067C66.6042 36.7666 66.5063 37.0294 66.4144 37.296C66.3432 36.0402 66.3432 36.0402 66.6875 35.4337C66.997 35.1253 66.997 35.1253 67.2883 35.1253C67.2883 34.8649 67.2883 34.6044 67.2883 34.336C67.2403 34.4662 67.1922 34.5965 67.1427 34.7307C66.9504 34.6655 66.7582 34.6004 66.5601 34.5333C66.6562 34.4682 66.7523 34.4031 66.8514 34.336C66.8994 34.1406 66.9475 33.9453 66.997 33.744C67.0451 33.5486 67.0932 33.3533 67.1427 33.152C67.2388 33.0869 67.3349 33.0218 67.434 32.9547Z" fill="#0F2E36"/>
<path d="M37.7222 55.8453C37.9145 56.1709 38.1067 56.4965 38.3048 56.832C38.5451 56.5715 38.7854 56.311 39.033 56.0427C39.1292 56.1078 39.2253 56.1729 39.3243 56.24C39.3836 56.6981 39.4327 57.159 39.47 57.6213C39.4219 57.4911 39.3738 57.3609 39.3243 57.2267C38.6813 57.4772 38.6813 57.4772 38.1592 58.016C38.1111 57.6253 38.063 57.2346 38.0135 56.832C37.9174 56.832 37.8213 56.832 37.7222 56.832C37.6742 57.0274 37.6261 57.2227 37.5766 57.424C37.4804 57.0333 37.3843 56.6426 37.2853 56.24C37.4295 56.1098 37.5737 55.9795 37.7222 55.8453Z" fill="#4A96BC"/>
<path d="M64.958 45.7813C65.0541 45.7813 65.1502 45.7813 65.2493 45.7813C64.814 47.1161 63.8645 47.9281 62.9189 48.544C62.7747 48.4789 62.6306 48.4138 62.482 48.3467C62.7247 48.0178 62.9675 47.6889 63.2102 47.36C63.3589 47.1402 63.3589 47.1402 63.5106 46.916C63.8155 46.5429 63.9763 46.4578 64.3754 46.3733C64.5376 46.3184 64.5376 46.3184 64.7031 46.2623C64.7872 46.2339 64.8713 46.2054 64.958 46.176C64.958 46.0458 64.958 45.9155 64.958 45.7813Z" fill="#203E3F"/>
<path d="M65.3949 36.9013C65.8318 37.0987 65.8318 37.0987 66.0776 37.6413C66.3983 38.721 66.303 39.9039 66.2687 41.0453C66.0765 41.1105 65.8842 41.1756 65.6862 41.2427C65.7342 40.7217 65.7823 40.2008 65.8318 39.664C65.7837 39.664 65.7357 39.664 65.6862 39.664C65.637 39.3805 65.5886 39.0968 65.5405 38.813C65.5135 38.655 65.4865 38.4971 65.4586 38.3343C65.3894 37.8499 65.3949 37.393 65.3949 36.9013Z" fill="#051417"/>
<path d="M64.0841 23.2853C64.4482 23.5443 64.4482 23.5443 64.8123 24.0747C64.9032 24.8093 64.9114 25.5121 64.8123 26.2453C64.5893 26.6084 64.5893 26.6084 64.3754 26.8373C64.2792 26.3164 64.1831 25.7954 64.0841 25.2587C63.988 25.2587 63.8918 25.2587 63.7928 25.2587C63.8889 24.6075 63.985 23.9563 64.0841 23.2853Z" fill="#13333B"/>
<path d="M51.1216 21.5093C51.3139 21.5093 51.5061 21.5093 51.7042 21.5093C51.7042 21.9652 51.7042 22.421 51.7042 22.8907C51.8003 22.8907 51.8965 22.8907 51.9955 22.8907C51.9955 23.3465 51.9955 23.8024 51.9955 24.272C51.8032 24.3371 51.611 24.4022 51.4129 24.4693C51.3356 24.0875 51.2601 23.7051 51.1853 23.3223C51.1431 23.1094 51.1009 22.8965 51.0573 22.6772C50.976 22.1013 50.976 22.1013 51.1216 21.5093Z" fill="#938E8A"/>
<path d="M57.967 17.76C59.0421 17.6944 59.9034 17.7029 60.8799 18.352C60.928 18.4822 60.976 18.6125 61.0255 18.7467C60.1123 18.6815 59.1991 18.6164 58.2583 18.5493C58.1621 18.2888 58.066 18.0284 57.967 17.76Z" fill="#607F85"/>
<path d="M31.6051 43.808C31.7628 43.985 31.7628 43.985 31.9237 44.1657C32.2911 44.5528 32.6582 44.877 33.0616 45.1893C32.5648 45.1893 32.0958 45.0924 31.6051 44.992C31.6051 45.1222 31.6051 45.2525 31.6051 45.3867C31.9416 45.4518 32.278 45.5169 32.6246 45.584C32.4805 45.8445 32.3363 46.105 32.1877 46.3733C31.7187 46.1542 31.6111 45.9937 31.3684 45.3867C31.2693 45.0936 31.2693 45.0936 31.1682 44.7947C31.0721 44.6644 30.9759 44.5342 30.8769 44.4C31.1172 44.2046 31.3575 44.0093 31.6051 43.808Z" fill="#0D2224"/>
<path d="M34.518 32.56C34.9517 32.6253 35.2191 32.7325 35.5831 33.0657C35.9435 33.771 35.8705 34.2791 35.8288 35.1253C35.6366 35.0602 35.4443 34.9951 35.2462 34.928C35.2372 34.7774 35.2282 34.6268 35.2189 34.4717C35.1342 33.8958 35.1342 33.8958 34.7274 33.5837C34.6102 33.5063 34.4931 33.429 34.3724 33.3493C34.4204 33.0889 34.4685 32.8284 34.518 32.56Z" fill="#4F7D8C"/>
<path d="M41.8003 16.576C41.7522 16.7714 41.7042 16.9667 41.6547 17.168C41.3537 17.3553 41.3537 17.3553 40.9902 17.501C40.8698 17.5506 40.7495 17.6002 40.6255 17.6513C40.5325 17.6872 40.4396 17.7231 40.3439 17.76C40.488 18.053 40.488 18.053 40.6351 18.352C40.4429 18.6125 40.2506 18.873 40.0526 19.1413C39.9564 19.0762 39.8603 19.0111 39.7613 18.944C39.6651 19.0742 39.569 19.2045 39.47 19.3387C39.4154 18.8083 39.4154 18.8083 39.47 18.1547C40.1287 17.2409 40.8327 16.576 41.8003 16.576Z" fill="#5B899C"/>
<path d="M30.8769 38.48C31.0211 38.48 31.1653 38.48 31.3138 38.48C31.3176 38.5968 31.3213 38.7135 31.3252 38.8338C31.38 39.8684 31.4612 40.5006 32.042 41.2427C32.3503 41.5015 32.3503 41.5015 32.6246 41.6373C32.5766 41.7676 32.5285 41.8978 32.479 42.032C32.0369 41.9655 31.7877 41.8732 31.4322 41.5017C31.1285 40.9767 31.0057 40.5012 30.8769 39.8613C30.8288 39.8613 30.7808 39.8613 30.7312 39.8613C30.725 39.4668 30.7253 39.0719 30.7312 38.6773C30.7793 38.6122 30.8274 38.5471 30.8769 38.48Z" fill="#01090A"/>
<path d="M40.9264 61.9627C40.9745 61.9627 41.0225 61.9627 41.072 61.9627C41.0515 62.2505 41.0301 62.5383 41.0083 62.826C40.9965 62.9863 40.9847 63.1465 40.9725 63.3116C40.9264 63.7387 40.9264 63.7387 40.7808 64.1333C40.1079 64.1333 39.435 64.1333 38.7417 64.1333C38.6937 63.8077 38.6456 63.4821 38.5961 63.1467C38.7403 63.0815 38.8844 63.0164 39.033 62.9493C39.1772 63.2098 39.3214 63.4703 39.4699 63.7387C39.6141 63.6084 39.7583 63.4782 39.9069 63.344C40.0511 63.4091 40.1953 63.4742 40.3438 63.5413C40.5361 63.0204 40.7283 62.4994 40.9264 61.9627Z" fill="#1A3440"/>
<path d="M37.7222 60.7787C37.7703 60.7787 37.8183 60.7787 37.8679 60.7787C37.8718 61.3008 37.8747 61.8229 37.877 62.345C37.8782 62.4939 37.8794 62.6429 37.8807 62.7963C37.8819 63.1763 37.8755 63.5562 37.8679 63.936C37.7222 64.1333 37.7222 64.1333 37.262 64.1526C37.0744 64.1503 36.8868 64.148 36.6936 64.1457C36.5057 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4993 63.6351 35.5232 63.2824 35.5284 62.7273C35.5297 62.5477 35.5311 62.3682 35.5324 62.1831C35.5341 62.0453 35.5358 61.9074 35.5375 61.7653C35.6817 61.863 35.6817 61.863 35.8288 61.9627C35.8258 62.1825 35.8228 62.4022 35.8197 62.6287C35.7904 63.3109 35.7904 63.3109 35.9745 63.7387C36.0657 63.7221 36.157 63.7056 36.251 63.6886C36.37 63.6685 36.489 63.6484 36.6117 63.6277C36.73 63.6071 36.8482 63.5865 36.9701 63.5652C37.2853 63.5413 37.2853 63.5413 37.5766 63.7387C37.6246 62.7619 37.6727 61.7851 37.7222 60.7787Z" fill="#1B3744"/>
<path d="M48.2087 47.36C48.5452 47.36 48.8816 47.36 49.2283 47.36C49.2763 48.4019 49.3244 49.4438 49.3739 50.5173C49.47 50.3871 49.5662 50.2569 49.6652 50.1227C49.8574 50.2529 50.0497 50.3831 50.2478 50.5173C50.2478 50.6476 50.2478 50.7778 50.2478 50.912C49.9113 51.0422 49.5749 51.1725 49.2283 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9515 48.4969 48.937 48.1493C48.5765 47.954 48.5765 47.954 48.2087 47.7547C48.2087 47.6244 48.2087 47.4942 48.2087 47.36Z" fill="#D1D1D1"/>
<path d="M59.4235 32.7573C59.8457 32.8496 59.9866 32.9284 60.2973 33.3493C60.2493 33.6098 60.2012 33.8703 60.1517 34.1387C59.5749 34.1387 58.9982 34.1387 58.4039 34.1387C58.5001 33.8131 58.5962 33.4875 58.6952 33.152C58.9956 33.004 58.9956 33.004 59.2778 32.9547C59.3259 32.8896 59.3739 32.8244 59.4235 32.7573Z" fill="#55849A"/>
<path d="M52.2868 14.208C52.1816 14.3423 52.0765 14.4766 51.9682 14.615C51.5875 15.1249 51.2971 15.6818 51.0067 16.2893C50.8303 16.576 50.8303 16.576 50.3934 16.7733C50.5026 15.836 50.5026 15.836 50.8303 15.392C50.7839 14.976 50.7839 14.976 50.6847 14.6027C51.214 14.1437 51.6708 14.1759 52.2868 14.208Z" fill="#567C8D"/>
<path d="M62.1907 40.848C63.0554 41.9896 63.0554 41.9896 63.089 42.8737C63.09 43.1332 63.0909 43.3927 63.0919 43.66C63.0939 43.9174 63.096 44.1748 63.0981 44.4401C63.0659 45.1593 62.9667 45.7061 62.7733 46.3733C62.7252 46.3733 62.6771 46.3733 62.6276 46.3733C62.6327 46.1894 62.6377 46.0055 62.643 45.816C62.6703 44.0694 62.545 42.5427 62.1907 40.848Z" fill="#EBEDEF"/>
<path d="M34.3724 37.0987C34.5382 37.7728 34.4771 37.9965 34.3724 38.6773C34.3555 39.1415 34.3469 39.6063 34.3451 40.071C34.343 40.3093 34.3409 40.5477 34.3388 40.7933C34.3709 41.4117 34.4449 41.7034 34.6637 42.2293C34.6637 42.4247 34.6637 42.6201 34.6637 42.8213C34.2267 42.624 34.2267 42.624 34.0566 42.2155C33.9065 41.4992 33.8874 40.8215 33.8899 40.0833C33.8876 39.9488 33.8852 39.8142 33.8828 39.6756C33.8821 38.6798 34.0467 37.9906 34.3724 37.0987Z" fill="#DFE5E7"/>
<path d="M33.3529 32.3627C33.449 32.3627 33.5451 32.3627 33.6442 32.3627C33.5181 33.2698 33.1622 33.9893 32.8249 34.7792C32.6326 35.301 32.5405 35.7353 32.479 36.3093C32.3348 36.3093 32.1906 36.3093 32.0421 36.3093C32.0805 34.9042 32.4252 33.8735 33.0616 32.7573C33.1577 32.7573 33.2538 32.7573 33.3529 32.7573C33.3529 32.6271 33.3529 32.4969 33.3529 32.3627Z" fill="#051015"/>
<path d="M67.4339 31.7707C67.5301 31.7707 67.6262 31.7707 67.7252 31.7707C68.1058 33.3714 68.0226 35.748 67.5796 37.296C67.4354 37.3611 67.2912 37.4262 67.1426 37.4933C67.2127 36.392 67.3528 35.4011 67.5796 34.336C67.6042 33.785 67.6042 33.785 67.5796 33.3493C67.4834 33.2842 67.3873 33.2191 67.2883 33.152C67.3363 32.6962 67.3844 32.2403 67.4339 31.7707Z" fill="#244D57"/>
<path d="M53.3063 20.3253C53.4024 20.3253 53.4986 20.3253 53.5976 20.3253C53.4522 21.7122 53.2748 23.063 52.7237 24.272C52.5075 24.4674 52.5075 24.4674 52.2868 24.6667C52.3379 24.5364 52.3889 24.4062 52.4416 24.272C52.6259 23.4725 52.5353 22.9235 52.4324 22.1013C52.5766 22.1013 52.7208 22.1013 52.8694 22.1013C52.8964 21.7717 52.8964 21.7717 52.924 21.4353C53.015 20.72 53.015 20.72 53.3063 20.3253Z" fill="#25201D"/>
<path d="M46.1697 47.7547C46.2177 47.7547 46.2658 47.7547 46.3153 47.7547C46.3634 48.6012 46.4114 49.4478 46.461 50.32C46.9416 50.32 47.4222 50.32 47.9174 50.32C48.0136 50.5805 48.1097 50.841 48.2087 51.1093C47.5358 51.1093 46.863 51.1093 46.1697 51.1093C46.1697 50.0023 46.1697 48.8953 46.1697 47.7547Z" fill="#CBCBCB"/>
<path d="M64.3754 42.8213C64.495 43.2751 64.5406 43.5285 64.43 43.993C64.064 44.7368 63.6959 45.2989 63.0646 45.584C63.1126 45.063 63.1607 44.5421 63.2102 44.0053C63.3814 43.9809 63.3814 43.9809 63.5561 43.956C63.9584 43.8628 63.9584 43.8628 64.1205 43.4133C64.1566 43.2831 64.1926 43.1529 64.2297 43.0187C64.2778 42.9535 64.3259 42.8884 64.3754 42.8213Z" fill="#050D10"/>
<path d="M67.4339 35.7173C67.3455 37.035 67.0296 38.2237 66.7057 39.4667C66.6576 39.4667 66.6096 39.4667 66.5601 39.4667C66.5443 38.9895 66.5328 38.5134 66.5236 38.036C66.5188 37.9014 66.5139 37.7669 66.5089 37.6282C66.4989 36.9343 66.5211 36.576 66.8354 36.0164C67.1426 35.7173 67.1426 35.7173 67.4339 35.7173Z" fill="#486F7D"/>
<path d="M31.8964 28.8107C32.3705 28.8795 32.4817 29.0122 32.8067 29.5137C32.8908 29.6724 32.9749 29.8311 33.0615 29.9947C33.0135 30.1249 32.9654 30.2551 32.9159 30.3893C32.6792 30.3947 32.4426 30.3985 32.2059 30.4017C32.0082 30.4051 32.0082 30.4051 31.8065 30.4086C31.4594 30.3893 31.4594 30.3893 31.1682 30.192C31.2162 29.9966 31.2643 29.8013 31.3138 29.6C31.687 29.3657 31.687 29.3657 32.042 29.2053C31.994 29.0751 31.9459 28.9449 31.8964 28.8107Z" fill="#548995"/>
<path d="M57.3844 24.6667C57.3844 24.7318 57.3844 24.7969 57.3844 24.864C57.2282 24.9169 57.072 24.9698 56.911 25.0243C56.2714 25.2855 56.2714 25.2855 55.7823 25.8507C55.7273 26.5509 55.7754 27.1526 55.9279 27.824C55.7837 27.824 55.6395 27.824 55.491 27.824C55.235 26.9353 55.1716 26.2105 55.1997 25.2587C55.3138 25.1976 55.428 25.1366 55.5456 25.0737C56.2383 24.6938 56.6257 24.6501 57.3844 24.6667Z" fill="#538AA1"/>
<path d="M56.3649 52.2933C56.9897 52.2933 57.6145 52.2933 58.2583 52.2933C58.2583 53.0748 58.2583 53.8562 58.2583 54.6613C58.2102 54.6613 58.1621 54.6613 58.1126 54.6613C58.1126 54.3357 58.1126 54.0101 58.1126 53.6747C58.0165 53.6095 57.9204 53.5444 57.8213 53.4773C57.9175 53.2169 58.0136 52.9564 58.1126 52.688C57.8723 52.8182 57.632 52.9485 57.3844 53.0827C57.3844 52.9524 57.3844 52.8222 57.3844 52.688C57.2402 52.7857 57.2402 52.7857 57.0931 52.8853C57.0931 53.0807 57.0931 53.2761 57.0931 53.4773C56.9008 53.5425 56.7086 53.6076 56.5105 53.6747C56.4625 53.2188 56.4144 52.763 56.3649 52.2933Z" fill="#6DC7F4"/>
<path d="M34.3724 36.704C34.6607 36.8017 34.6607 36.8017 34.955 36.9013C34.9319 37.0148 34.9088 37.1284 34.885 37.2453C34.8123 37.6728 34.7803 38.0643 34.7632 38.5016C34.7571 38.6504 34.751 38.7992 34.7447 38.9525C34.7361 39.1826 34.7361 39.1826 34.7274 39.4173C34.7211 39.5738 34.7148 39.7302 34.7083 39.8914C34.6929 40.276 34.6782 40.6607 34.6637 41.0453C34.5675 41.0453 34.4714 41.0453 34.3724 41.0453C34.3243 41.1756 34.2762 41.3058 34.2267 41.44C34.2115 39.8473 34.2218 38.2851 34.3724 36.704Z" fill="#435057"/>
<path d="M35.1006 32.3627C35.1487 32.4929 35.1967 32.6231 35.2462 32.7573C35.161 32.7795 35.0758 32.8016 34.9879 32.8244C34.6352 32.9661 34.4254 33.1569 34.1357 33.4603C33.6751 33.9413 33.6751 33.9413 33.3528 33.9413C33.3378 34.0675 33.3228 34.1937 33.3073 34.3237C33.2743 34.458 33.2412 34.5923 33.2072 34.7307C33.063 34.7958 32.9188 34.8609 32.7703 34.928C32.969 33.8999 33.2652 33.324 33.7898 32.56C34.2204 32.2683 34.6261 32.3508 35.1006 32.3627Z" fill="#557D8A"/>
<path d="M65.8318 33.152C65.8799 33.152 65.9279 33.152 65.9775 33.152C65.9814 33.5261 65.9842 33.9002 65.9866 34.2743C65.9883 34.4827 65.9899 34.691 65.9917 34.9057C65.9787 35.4656 65.9264 35.9628 65.8318 36.5067C65.7838 36.3764 65.7357 36.2462 65.6862 36.112C65.3913 35.9833 65.3913 35.9833 65.1036 35.9147C64.9944 35.483 64.9944 35.483 64.9579 34.928C65.2219 34.4223 65.2219 34.4223 65.5405 33.9413C65.6438 33.6826 65.7436 33.4208 65.8318 33.152Z" fill="#618795"/>
<path d="M32.3333 33.9413C32.1877 35.4072 32.1877 35.4072 32.0421 36.112C31.9459 36.112 31.8498 36.112 31.7508 36.112C31.7147 36.226 31.6787 36.3399 31.6415 36.4573C31.4595 36.9013 31.4595 36.9013 30.8769 37.6907C30.925 36.9092 30.973 36.1278 31.0225 35.3227C31.1187 35.5831 31.2148 35.8436 31.3138 36.112C31.6567 35.6087 31.7483 35.3799 31.7781 34.6813C31.7646 34.4127 31.7646 34.4127 31.7508 34.1387C32.0421 33.9413 32.0421 33.9413 32.3333 33.9413Z" fill="#567683"/>
<path d="M38.1227 17.7477C38.2662 17.7494 38.4096 17.7512 38.5574 17.7531C38.7207 17.7565 38.7207 17.7565 38.8874 17.76C38.7913 18.0205 38.6951 18.281 38.5961 18.5493C37.779 18.5493 36.9619 18.5493 36.1201 18.5493C36.8531 17.8045 37.2265 17.7332 38.1227 17.7477Z" fill="#709092"/>
<path d="M52.4324 58.2133C52.5286 58.2785 52.6247 58.3436 52.7237 58.4107C52.4506 59.5453 52.4506 59.5453 52.2868 59.9893C52.1907 59.9893 52.0945 59.9893 51.9955 59.9893C51.9474 60.4452 51.8994 60.901 51.8499 61.3707C51.7057 61.3055 51.5615 61.2404 51.4129 61.1733C51.4129 60.978 51.4129 60.7826 51.4129 60.5813C51.509 60.5813 51.6052 60.5813 51.7042 60.5813C51.6207 60.0155 51.5787 59.8193 51.2673 59.3973C51.6254 58.8774 51.934 58.461 52.4324 58.2133Z" fill="#377390"/>
<path d="M62.218 32.6217C62.3487 32.6888 62.3487 32.6888 62.482 32.7573C62.3859 32.8876 62.2897 33.0178 62.1907 33.152C62.383 33.2171 62.5752 33.2822 62.7733 33.3493C62.6291 33.4796 62.4849 33.6098 62.3364 33.744C62.3844 34.1347 62.4325 34.5254 62.482 34.928C62.0975 34.7978 61.713 34.6675 61.3168 34.5333C61.4047 33.2713 61.4047 33.2713 61.6536 32.7573C61.8994 32.56 61.8994 32.56 62.218 32.6217Z" fill="#497D90"/>
<path d="M49.3739 30.5867C49.518 30.721 49.518 30.721 49.6651 30.858C50.847 31.7254 52.2828 31.7648 53.5976 31.968C53.5976 32.0331 53.5976 32.0982 53.5976 32.1653C50.1686 32.3185 50.1686 32.3185 49.2282 31.1787C49.2763 30.9833 49.3243 30.7879 49.3739 30.5867Z" fill="#898A87"/>
<path d="M41.9459 26.4427C41.8727 27.1703 41.8005 27.7887 41.509 28.416C41.3648 28.5137 41.3648 28.5137 41.2177 28.6133C41.1907 28.8514 41.1907 28.8514 41.1631 29.0943C41.0721 29.6 41.0721 29.6 40.7717 29.859C40.6785 29.9038 40.5854 29.9485 40.4895 29.9947C40.3933 29.8644 40.2972 29.7342 40.1982 29.6C40.3424 29.4698 40.4866 29.3395 40.6351 29.2053C40.7312 29.2704 40.8274 29.3356 40.9264 29.4027C40.8986 29.289 40.8708 29.1752 40.8422 29.0581C40.7707 28.5404 40.8219 28.2973 40.9628 27.8117C40.9996 27.6791 41.0364 27.5466 41.0743 27.4101C41.283 26.8636 41.469 26.4427 41.9459 26.4427Z" fill="#528A9C"/>
<path d="M47.7718 19.1413C48.8772 19.1413 49.9827 19.1413 51.1216 19.1413C51.1216 19.2064 51.1216 19.2716 51.1216 19.3387C50.4488 19.4038 49.7759 19.4689 49.0826 19.536C49.0826 19.7965 49.0826 20.057 49.0826 20.3253C48.65 20.3253 48.2175 20.3253 47.7718 20.3253C47.7718 19.9346 47.7718 19.5439 47.7718 19.1413Z" fill="#919D9D"/>
<path d="M35.2462 34.7307C35.2462 34.9911 35.2462 35.2516 35.2462 35.52C35.1501 35.52 35.054 35.52 34.9549 35.52C34.9549 35.6502 34.9549 35.7805 34.9549 35.9147C34.8107 35.9147 34.6666 35.9147 34.518 35.9147C34.518 36.0449 34.518 36.1751 34.518 36.3093C34.0854 36.2442 33.6529 36.1791 33.2072 36.112C33.1591 36.3074 33.1111 36.5027 33.0615 36.704C32.8431 36.482 32.8431 36.482 32.6246 36.112C32.5973 35.483 32.5973 35.483 32.6246 34.928C32.6727 35.1234 32.7207 35.3187 32.7703 35.52C32.8664 35.52 32.9625 35.52 33.0615 35.52C33.0615 35.6502 33.0615 35.7805 33.0615 35.9147C33.2177 35.8495 33.374 35.7844 33.5349 35.7173C34.0811 35.52 34.0811 35.52 34.6636 35.52C34.6636 35.3246 34.6636 35.1293 34.6636 34.928C34.9549 34.7307 34.9549 34.7307 35.2462 34.7307Z" fill="#4F7888"/>
<path d="M29.5661 33.5467C30.002 33.7436 30.141 33.8924 30.4399 34.336C30.5361 34.2709 30.6322 34.2058 30.7312 34.1387C30.7312 34.7247 30.7312 35.3108 30.7312 35.9147C29.6055 35.0915 29.6055 35.0915 29.4113 34.2867C29.4204 33.744 29.4204 33.744 29.5661 33.5467Z" fill="#011114"/>
<path d="M31.8964 27.6267C31.9925 27.6918 32.0886 27.7569 32.1877 27.824C32.1396 27.9542 32.0916 28.0845 32.042 28.2187C31.8978 28.2838 31.7537 28.3489 31.6051 28.416C31.7973 28.5462 31.9896 28.6765 32.1877 28.8107C32.1015 28.842 32.0153 28.8732 31.9265 28.9055C30.9705 29.2879 30.4287 29.7569 29.9029 30.9443C29.8398 31.0868 29.7767 31.2292 29.7117 31.376C29.6156 31.376 29.5194 31.376 29.4204 31.376C29.641 29.6908 30.9388 28.5681 31.8964 27.6267Z" fill="#36505A"/>
<path d="M43.1111 18.5493C43.1817 18.6234 43.2523 18.6974 43.325 18.7736C44.6582 20.1547 44.6582 20.1547 46.1697 21.1147C45.8315 21.2729 45.6461 21.3379 45.3009 21.1864C44.716 20.7642 44.1958 20.3285 43.6937 19.7333C43.6456 20.2543 43.5976 20.7753 43.548 21.312C43.5 21.312 43.4519 21.312 43.4024 21.312C43.2078 20.3564 43.0742 19.5489 43.1111 18.5493Z" fill="#603032"/>
<path d="M36.5571 32.1653C36.6532 32.2956 36.7493 32.4258 36.8483 32.56C36.7101 33.2219 36.572 33.8806 36.4114 34.5333C36.5556 34.5984 36.6998 34.6636 36.8483 34.7307C36.6561 34.7307 36.4638 34.7307 36.2658 34.7307C36.2177 34.4051 36.1696 34.0795 36.1201 33.744C36.0721 34.1347 36.024 34.5254 35.9745 34.928C35.9264 34.928 35.8783 34.928 35.8288 34.928C35.8322 34.7759 35.8356 34.6238 35.8391 34.467C35.8417 34.2691 35.8443 34.0712 35.847 33.8673C35.8504 33.6704 35.8538 33.4736 35.8573 33.2707C35.8685 32.7252 35.8685 32.7252 35.5375 32.3627C36.0291 32.2393 36.0291 32.2393 36.5571 32.1653Z" fill="#0A252C"/>
<path d="M56.9474 49.3333C56.9955 49.3333 57.0436 49.3333 57.0931 49.3333C57.1412 49.6589 57.1892 49.9845 57.2387 50.32C57.8155 50.3851 58.3923 50.4502 58.9865 50.5173C58.9865 50.8429 58.9865 51.1685 58.9865 51.504C58.3136 51.3738 57.6407 51.2435 56.9474 51.1093C56.9474 50.5232 56.9474 49.9372 56.9474 49.3333Z" fill="#C5C4C5"/>
<path d="M46.4609 42.624C46.9896 42.624 47.5183 42.624 48.063 42.624C48.063 42.9496 48.063 43.2752 48.063 43.6107C47.5343 43.6107 47.0057 43.6107 46.4609 43.6107C46.4609 43.2851 46.4609 42.9595 46.4609 42.624Z" fill="#717171"/>
<path d="M36.4114 27.824C36.4595 27.824 36.5075 27.824 36.5571 27.824C36.5571 28.6706 36.5571 29.5171 36.5571 30.3893C35.6249 30.2922 35.6249 30.2922 35.1825 29.785C35.1074 29.6588 35.0323 29.5327 34.955 29.4027C35.1472 29.4027 35.3395 29.4027 35.5375 29.4027C35.5375 29.1422 35.5375 28.8817 35.5375 28.6133C35.7298 28.6785 35.922 28.7436 36.1201 28.8107C36.0721 29.1363 36.024 29.4619 35.9745 29.7973C36.1187 29.7973 36.2629 29.7973 36.4114 29.7973C36.4114 29.1461 36.4114 28.4949 36.4114 27.824Z" fill="#608EA1"/>
<path d="M61.0255 21.5093C60.5886 21.7067 60.5886 21.7067 60.1516 21.5217C58.9505 21.0204 57.7966 21.263 56.6561 21.904C57.62 19.9451 59.7264 20.5137 61.0255 21.5093Z" fill="#A9D1E3"/>
<path d="M38.0135 19.9307C38.8042 20.0164 39.2818 20.2519 39.9069 20.9173C39.955 21.0476 40.0031 21.1778 40.0526 21.312C39.9204 21.2469 39.7882 21.1818 39.6521 21.1147C38.6256 20.7153 37.4457 20.8033 36.4114 21.1147C36.9014 20.5305 37.386 20.3405 38.0135 20.128C38.0135 20.0629 38.0135 19.9978 38.0135 19.9307Z" fill="#54798E"/>
<path d="M35.5375 45.584C36.1143 45.584 36.691 45.584 37.2853 45.584C37.2853 45.6491 37.2853 45.7142 37.2853 45.7813C36.7566 45.7813 36.2279 45.7813 35.6832 45.7813C35.6997 46.3653 35.7182 46.9489 35.7378 47.5327C35.7423 47.6988 35.7468 47.8649 35.7514 48.036C35.7571 48.195 35.7627 48.354 35.7685 48.5178C35.7731 48.6645 35.7777 48.8113 35.7824 48.9625C35.8076 49.3807 35.8076 49.3807 36.1201 49.728C36.0655 50.3447 36.0655 50.3447 35.9745 50.912C35.5972 50.5564 35.5345 50.3027 35.4283 49.691C35.3319 48.3311 35.4585 46.9415 35.5375 45.584Z" fill="#EBEBEB"/>
<path d="M39.7613 32.1653C40.2577 32.7345 40.47 33.0278 40.6078 33.9043C40.6168 34.1119 40.6258 34.3195 40.6351 34.5333C40.4909 34.631 40.4909 34.631 40.3438 34.7307C40.2898 34.5516 40.2357 34.3725 40.18 34.188C39.8564 33.4281 39.6081 33.1542 39.033 32.7573C38.6395 32.643 38.2713 32.5977 37.8679 32.56C37.8679 32.4949 37.8679 32.4298 37.8679 32.3627C38.0742 32.3573 38.2805 32.3535 38.4869 32.3503C38.6592 32.3469 38.6592 32.3469 38.835 32.3434C39.1651 32.3619 39.445 32.4352 39.7613 32.56C39.7613 32.4298 39.7613 32.2995 39.7613 32.1653Z" fill="#1F5057"/>
<path d="M39.7249 21.1147C39.8811 21.2449 40.0373 21.3751 40.1982 21.5093C39.9069 21.7067 39.9069 21.7067 39.4063 21.5217C38.5561 21.2127 37.5824 21.0674 36.7545 21.5247C36.4114 21.7067 36.4114 21.7067 35.9745 21.5093C37.164 20.5977 38.4577 20.2639 39.7249 21.1147Z" fill="#B0D7E9"/>
<path d="M52.3141 20.0047C52.4448 20.0657 52.4448 20.0657 52.5781 20.128C51.6052 20.8881 50.7918 21.2763 49.6652 21.312C49.7132 21.0515 49.7613 20.791 49.8108 20.5227C50.2486 20.3789 50.6131 20.3271 51.067 20.3377C51.5998 20.3243 51.8221 19.8904 52.3141 20.0047Z" fill="#ADA9A6"/>
<path d="M50.539 16.7733C50.9274 17.0364 51.3158 17.2996 51.7042 17.5627C51.4158 17.758 51.4158 17.758 51.1216 17.9573C51.1216 17.8271 51.1216 17.6969 51.1216 17.5627C50.9294 17.6278 50.7371 17.6929 50.539 17.76C50.539 17.8902 50.539 18.0205 50.539 18.1547C50.4429 18.1547 50.3468 18.1547 50.2477 18.1547C50.1516 18.4803 50.0555 18.8059 49.9564 19.1413C49.7161 19.1413 49.4758 19.1413 49.2282 19.1413C49.3243 18.946 49.4205 18.7506 49.5195 18.5493C49.6156 18.5493 49.7118 18.5493 49.8108 18.5493C49.8228 18.4028 49.8348 18.2563 49.8472 18.1053C49.9768 17.4616 50.1727 17.2056 50.539 16.7733Z" fill="#133C45"/>
<path d="M59.7147 52.2933C60.2434 52.2933 60.7721 52.2933 61.3168 52.2933C61.3649 52.4887 61.4129 52.6841 61.4625 52.8853C61.2912 52.9159 61.2912 52.9159 61.1166 52.947C60.6861 53.0385 60.6861 53.0385 60.4429 53.6747C60.3949 53.3491 60.3468 53.0235 60.2973 52.688C60.088 53.2553 59.9854 53.8543 59.8604 54.464C59.8123 54.464 59.7642 54.464 59.7147 54.464C59.7147 53.7477 59.7147 53.0314 59.7147 52.2933Z" fill="#6CC9F9"/>
<path d="M49.6652 52.096C50.4822 52.096 51.2993 52.096 52.1411 52.096C52.4214 53.0644 52.672 54.0404 52.9058 55.0313C52.9835 55.3602 52.9835 55.3602 53.0628 55.6958C53.1607 56.24 53.1607 56.24 53.015 56.6347C52.6889 56.1929 52.6471 55.9754 52.536 55.3813C52.5041 55.2134 52.4721 55.0455 52.4393 54.8726C52.407 54.697 52.3747 54.5215 52.3414 54.3407C52.2913 54.0751 52.2913 54.0751 52.2401 53.8042C52.1577 53.3667 52.0765 52.9287 51.9955 52.4907C51.2265 52.4256 50.4575 52.3604 49.6652 52.2933C49.6652 52.2282 49.6652 52.1631 49.6652 52.096Z" fill="#7FBDD8"/>
<path d="M51.9955 21.1147C52.1397 21.1147 52.2839 21.1147 52.4324 21.1147C52.4805 21.5705 52.5286 22.0263 52.5781 22.496C52.6261 22.496 52.6742 22.496 52.7237 22.496C52.7601 23.606 52.7601 23.606 52.4324 24.272C52.3363 24.272 52.2402 24.272 52.1411 24.272C52.0886 23.7829 52.0372 23.2937 51.9864 22.8043C51.9713 22.6648 51.9562 22.5253 51.9406 22.3815C51.9042 22.0261 51.8764 21.6691 51.8499 21.312C51.8979 21.2469 51.946 21.1818 51.9955 21.1147Z" fill="#9B9793"/>
<path d="M43.1111 21.7067C43.548 21.904 43.548 21.904 43.7016 22.284C43.8203 22.7519 43.9263 23.1912 43.985 23.68C43.7938 24.1857 43.7938 24.1857 43.548 24.4693C43.4038 24.0786 43.2596 23.6879 43.1111 23.2853C42.9669 23.2853 42.8227 23.2853 42.6741 23.2853C42.6261 23.09 42.578 22.8946 42.5285 22.6933C42.6246 22.6933 42.7208 22.6933 42.8198 22.6933C42.8198 22.5631 42.8198 22.4329 42.8198 22.2987C42.9159 22.2987 43.012 22.2987 43.1111 22.2987C43.1111 22.1033 43.1111 21.9079 43.1111 21.7067Z" fill="#CED0D0"/>
<path d="M48.5 58.4107C48.6442 58.4107 48.7884 58.4107 48.9369 58.4107C48.9369 58.6712 48.9369 58.9316 48.9369 59.2C48.264 59.2651 47.5911 59.3302 46.8979 59.3973C46.8498 59.5927 46.8017 59.7881 46.7522 59.9893C46.6561 59.9242 46.56 59.8591 46.4609 59.792C46.509 59.4664 46.5571 59.1408 46.6066 58.8053C47.1977 58.6112 47.7482 58.608 48.3543 58.608C48.4024 58.5429 48.4505 58.4778 48.5 58.4107Z" fill="#3D7793"/>
<path d="M35.2462 34.928C35.3904 34.9931 35.5346 35.0582 35.6832 35.1253C35.137 36.0873 35.137 36.0873 34.8093 36.3093C34.8573 36.4396 34.9054 36.5698 34.9549 36.704C34.8107 36.8342 34.6666 36.9645 34.518 37.0987C34.118 37.4764 33.921 37.72 33.6441 38.2827C33.6471 38.0995 33.6501 37.9164 33.6532 37.7277C33.6671 37.0942 33.6671 37.0942 33.4985 36.5067C33.8349 36.5067 34.1714 36.5067 34.518 36.5067C34.518 36.3113 34.518 36.116 34.518 35.9147C34.6622 35.9147 34.8064 35.9147 34.9549 35.9147C34.9549 35.7844 34.9549 35.6542 34.9549 35.52C35.0511 35.52 35.1472 35.52 35.2462 35.52C35.2462 35.3246 35.2462 35.1293 35.2462 34.928Z" fill="#426070"/>
<path d="M65.8682 28.8847C66.5753 29.1965 67.0428 29.9533 67.4339 30.784C67.585 31.5163 67.5736 32.0211 67.4339 32.7573C67.3859 32.7573 67.3378 32.7573 67.2883 32.7573C67.1283 32.1227 66.9825 31.496 66.8604 30.8457C66.7075 30.1994 66.6464 30.0052 66.2688 29.6C65.939 29.4454 65.939 29.4454 65.586 29.3657C65.4095 29.3187 65.4095 29.3187 65.2293 29.2709C65.1398 29.2492 65.0502 29.2276 64.9579 29.2053C65.3949 28.8107 65.3949 28.8107 65.8682 28.8847Z" fill="#5B8A97"/>
<path d="M32.042 29.008C32.0901 29.1382 32.1381 29.2685 32.1877 29.4027C32.0134 29.4719 31.8392 29.5411 31.6597 29.6123C30.9524 29.9636 30.5817 30.5648 30.1486 31.376C30.003 30.784 30.003 30.784 30.094 30.414C30.6407 29.2692 31.0175 28.8719 32.042 29.008Z" fill="#719CA9"/>
<path d="M56.0736 31.5733C56.362 31.5733 56.6504 31.5733 56.9475 31.5733C56.6409 32.5918 56.0384 33.0386 55.3454 33.5467C54.8265 33.7193 54.8265 33.7193 54.4715 33.744C55.1352 32.9697 55.1352 32.9697 55.5183 32.8807C55.6054 32.84 55.6926 32.7993 55.7823 32.7573C55.9723 32.1661 55.9723 32.1661 56.0736 31.5733Z" fill="#A6A6A2"/>
<path d="M48.3544 30.9813C48.3544 31.8279 48.3544 32.6745 48.3544 33.5467C48.066 33.6118 47.7776 33.6769 47.4805 33.744C47.5766 33.5486 47.6728 33.3533 47.7718 33.152C47.8292 32.6934 47.8788 32.2328 47.9174 31.7707C47.6771 31.7707 47.4368 31.7707 47.1892 31.7707C48.0631 30.9813 48.0631 30.9813 48.3544 30.9813Z" fill="#A7A8A6"/>
<path d="M55.1997 21.5093C55.3439 21.7047 55.4881 21.9001 55.6366 22.1013C55.6847 21.9711 55.7327 21.8409 55.7823 21.7067C55.8784 21.7067 55.9745 21.7067 56.0736 21.7067C56.0736 21.9672 56.0736 22.2276 56.0736 22.496C56.2177 22.5611 56.3619 22.6262 56.5105 22.6933C56.3783 22.7747 56.2461 22.8561 56.11 22.94C55.6662 23.2637 55.3874 23.5709 55.054 24.0747C54.8784 23.0991 54.9624 22.4548 55.1997 21.5093Z" fill="#09343C"/>
<path d="M37.7222 56.832C37.8183 56.832 37.9145 56.832 38.0135 56.832C38.1821 57.5174 38.1692 58.0872 38.1592 58.8053C38.1111 58.8053 38.063 58.8053 38.0135 58.8053C37.9654 59.4565 37.9174 60.1077 37.8679 60.7787C37.6756 60.4531 37.4834 60.1275 37.2853 59.792C37.3814 59.792 37.4775 59.792 37.5766 59.792C37.4804 59.3362 37.3843 58.8803 37.2853 58.4107C37.4295 58.4758 37.5737 58.5409 37.7222 58.608C37.6742 58.4126 37.6261 58.2173 37.5766 58.016C37.6167 57.6196 37.6643 57.2243 37.7222 56.832Z" fill="#3D738C"/>
<path d="M48.2087 37.4933C48.3949 37.4811 48.5812 37.4689 48.7731 37.4563C48.9302 37.446 48.9302 37.446 49.0905 37.4355C49.184 37.4546 49.2775 37.4737 49.3739 37.4933C49.7074 38.1712 49.6911 38.4771 49.6652 39.2693C49.6171 39.2693 49.569 39.2693 49.5195 39.2693C49.4714 39.5949 49.4234 39.9205 49.3739 40.256C49.3258 40.256 49.2777 40.256 49.2282 40.256C49.1802 39.6699 49.1321 39.0838 49.0826 38.48C48.7461 38.2846 48.4097 38.0893 48.063 37.888C48.1111 37.7578 48.1592 37.6275 48.2087 37.4933Z" fill="#EFEFEF"/>
<path d="M61.4625 19.7333C60.9611 19.9461 60.5196 19.9318 59.9969 19.906C59.0624 19.8917 58.2663 20.1204 57.3844 20.5227C58.4955 18.9694 60.0262 18.9977 61.4625 19.7333Z" fill="#A3C6D3"/>
<path d="M48.3543 31.376C48.4985 31.4737 48.4985 31.4737 48.6456 31.5733C48.6972 32.0257 48.7102 32.4723 48.727 32.9292C48.7651 33.4258 48.7651 33.4258 49.2282 33.744C49.5758 33.8021 49.9253 33.8413 50.275 33.8673C50.4603 33.8821 50.6456 33.8968 50.8366 33.912C50.9787 33.9217 51.1208 33.9314 51.2672 33.9413C51.2672 34.0065 51.2672 34.0716 51.2672 34.1387C51.1024 34.1341 50.9376 34.1295 50.7677 34.1248C50.5519 34.1211 50.3361 34.1175 50.1203 34.114C49.9572 34.109 49.9572 34.109 49.7909 34.104C49.5061 34.1005 49.2213 34.1183 48.9369 34.1387C48.8408 34.2689 48.7447 34.3992 48.6456 34.5333C48.3905 33.789 48.3216 33.2178 48.3361 32.3997C48.3388 32.2071 48.3414 32.0146 48.3441 31.8162C48.3475 31.6709 48.3509 31.5257 48.3543 31.376Z" fill="#20221E"/>
<path d="M63.7928 29.6C63.8889 29.6 63.9851 29.6 64.0841 29.6C64.0185 29.8882 63.9514 30.1759 63.8839 30.4633C63.8467 30.6236 63.8095 30.7839 63.7712 30.949C63.6472 31.376 63.6472 31.376 63.3559 31.7707C63.3559 31.6404 63.3559 31.5102 63.3559 31.376C63.1156 31.4411 62.8753 31.5062 62.6277 31.5733C62.6757 31.7687 62.7238 31.9641 62.7733 32.1653C62.4369 32.1002 62.1004 32.0351 61.7538 31.968C62.0415 31.5781 62.2669 31.3966 62.6277 31.154C62.7298 31.0843 62.8319 31.0146 62.9372 30.9428C63.2102 30.784 63.2102 30.784 63.5015 30.784C63.5226 30.6619 63.5436 30.5398 63.5653 30.414C63.6472 29.9947 63.6472 29.9947 63.7928 29.6Z" fill="#08272D"/>
<path d="M44.5676 28.2187C45.4586 28.175 46.1865 28.2409 47.0435 28.6133C47.3826 28.6863 47.7223 28.7541 48.0631 28.8107C48.015 29.006 47.9669 29.2014 47.9174 29.4027C47.0466 29.3251 46.3913 29.0976 45.5871 28.6133C45.2489 28.5333 44.9091 28.4632 44.5676 28.416C44.5676 28.3509 44.5676 28.2858 44.5676 28.2187Z" fill="#9DA09E"/>
<path d="M45.7327 48.3467C45.7808 48.3467 45.8289 48.3467 45.8784 48.3467C45.8823 48.7701 45.8851 49.1935 45.8875 49.617C45.8892 49.8528 45.8909 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4391 51.1556 45.1445 51.1909 44.8498 51.2203C44.6084 51.2451 44.6084 51.2451 44.3622 51.2704C44.2377 51.2824 44.1132 51.2943 43.985 51.3067C43.985 51.0462 43.985 50.7857 43.985 50.5173C44.2216 50.512 44.4583 50.5082 44.695 50.505C44.8268 50.5027 44.9586 50.5004 45.0944 50.4981C45.4414 50.5173 45.4414 50.5173 45.7327 50.7147C45.7327 49.9332 45.7327 49.1518 45.7327 48.3467Z" fill="#C1C1C2"/>
<path d="M32.6246 43.0187C32.9851 43.214 32.9851 43.214 33.3529 43.4133C33.3529 43.5436 33.3529 43.6738 33.3529 43.808C33.431 43.8528 33.5091 43.8976 33.5895 43.9437C34.0498 44.2883 34.4114 44.7237 34.8093 45.1893C34.7613 45.3196 34.7132 45.4498 34.6637 45.584C33.9097 45.4099 33.4302 44.7343 32.9159 44.0053C32.6975 43.4257 32.6975 43.4257 32.6246 43.0187Z" fill="#031014"/>
<path d="M42.0916 24.272C42.1877 24.272 42.2839 24.272 42.3829 24.272C42.4848 24.5215 42.5845 24.7726 42.6833 25.0243C42.7669 25.2338 42.7669 25.2338 42.8523 25.4475C42.9655 25.8507 42.9655 25.8507 42.8198 26.4427C42.5795 26.5078 42.3392 26.5729 42.0916 26.64C42.0916 25.8586 42.0916 25.0771 42.0916 24.272Z" fill="#091519"/>
<path d="M65.8318 41.0453C65.9279 41.1105 66.0241 41.1756 66.1231 41.2427C65.7592 42.1923 65.4671 42.7829 64.8123 43.4133C64.7162 43.5436 64.6201 43.6738 64.521 43.808C64.3754 42.8707 64.3754 42.8707 64.3754 42.4267C64.7599 42.2964 65.1444 42.1662 65.5405 42.032C65.5886 41.7715 65.6367 41.511 65.6862 41.2427C65.7342 41.1775 65.7823 41.1124 65.8318 41.0453Z" fill="#123033"/>
<path d="M49.6651 21.904C50.0006 22.4592 50.1918 22.9462 50.3479 23.6307C50.4028 23.8672 50.4028 23.8672 50.4588 24.1086C50.4853 24.2276 50.5117 24.3467 50.539 24.4693C50.4429 24.5996 50.3468 24.7298 50.2477 24.864C50.1516 24.4733 50.0555 24.0826 49.9564 23.68C49.8122 23.973 49.8122 23.973 49.6651 24.272C49.569 24.4022 49.4729 24.5325 49.3738 24.6667C49.1563 24.0773 49.3146 23.6896 49.4376 23.0633C49.4794 22.8471 49.5213 22.6309 49.5644 22.4081C49.5977 22.2418 49.6309 22.0754 49.6651 21.904Z" fill="#44413E"/>
<path d="M54.7627 19.3387C54.8108 19.3387 54.8589 19.3387 54.9084 19.3387C54.9163 19.6181 54.9219 19.8977 54.9266 20.1773C54.93 20.333 54.9334 20.4887 54.9368 20.6491C54.905 21.1696 54.8278 21.4683 54.6171 21.904C54.162 22.2493 54.162 22.2493 53.7432 22.496C53.7913 21.9099 53.8394 21.3238 53.8889 20.72C54.0331 20.72 54.1772 20.72 54.3258 20.72C54.2777 20.9154 54.2297 21.1107 54.1802 21.312C54.2763 21.312 54.3724 21.312 54.4715 21.312C54.5676 20.6608 54.6637 20.0096 54.7627 19.3387Z" fill="#E4E6E7"/>
<path d="M53.3063 19.536C53.3981 21.1527 53.3981 21.1527 53.015 21.8177C52.9189 21.9113 52.8228 22.0049 52.7237 22.1013C52.6847 21.91 52.6456 21.7187 52.6054 21.5217C52.5483 21.3222 52.4912 21.1228 52.4324 20.9173C52.2882 20.8522 52.144 20.7871 51.9955 20.72C52.1863 20.5221 52.3776 20.3249 52.569 20.128C52.6754 20.0181 52.7819 19.9082 52.8915 19.795C53.1606 19.536 53.1606 19.536 53.3063 19.536Z" fill="#AE9697"/>
<path d="M53.5157 18.0067C53.5908 18.0555 53.6659 18.1043 53.7432 18.1547C53.5755 18.6417 53.445 18.9534 53.1606 19.3387C52.7739 19.4502 52.39 19.4843 51.9955 19.536C52.0046 19.1907 52.0046 19.1907 52.1411 18.7467C52.567 18.2836 52.9616 17.9297 53.5157 18.0067Z" fill="#DDE1E0"/>
<path d="M62.045 38.6773C62.0931 38.6773 62.1412 38.6773 62.1907 38.6773C62.1757 38.8239 62.1607 38.9704 62.1452 39.1213C62.1492 39.7126 62.1492 39.7126 62.5548 40.0957C62.675 40.2137 62.7951 40.3317 62.9189 40.4533C62.9189 40.5836 62.9189 40.7138 62.9189 40.848C63.1112 40.9131 63.3034 40.9782 63.5015 41.0453C62.4196 41.2991 62.4196 41.2991 61.8994 41.0453C61.8786 39.3539 61.8786 39.3539 62.045 38.6773Z" fill="#4B616B"/>
<path d="M64.8123 29.2053C65.5407 29.2264 66.0996 29.2483 66.7148 29.8097C67.082 30.564 67.109 31.072 67.1426 31.968C66.8396 31.5985 66.6516 31.2587 66.4326 30.784C66.1118 30.1703 65.8844 29.9316 65.3949 29.6C65.2007 29.4684 65.0065 29.3369 64.8123 29.2053Z" fill="#75ABBA"/>
<path d="M63.3559 32.9547C63.7928 33.152 63.7928 33.152 63.9362 33.539C63.973 33.6962 64.0098 33.8534 64.0477 34.0153C64.1051 34.2496 64.1051 34.2496 64.1637 34.4886C64.2297 34.928 64.2297 34.928 64.0841 35.52C63.7928 35.3227 63.7928 35.3227 63.5015 34.7307C63.4534 34.7307 63.4054 34.7307 63.3559 34.7307C63.192 33.3987 63.192 33.3987 63.3559 32.9547Z" fill="#628E9D"/>
<path d="M53.015 23.68C53.1111 23.7451 53.2073 23.8102 53.3063 23.8773C53.2461 24.8285 52.9596 25.2409 52.4324 25.8507C52.3363 25.8507 52.2402 25.8507 52.1411 25.8507C52.0228 25.5177 52.0228 25.5177 51.9955 25.0613C52.3323 24.5433 52.3323 24.5433 52.7237 24.0747C52.8198 23.9444 52.916 23.8142 53.015 23.68Z" fill="#D2D9D2"/>
<path d="M56.0736 60.5813C56.2658 60.6464 56.4581 60.7116 56.6561 60.7787C56.5723 61.2494 56.4781 61.6996 56.3648 62.16C56.458 62.2129 56.5511 62.2658 56.647 62.3203C56.9474 62.5547 56.9474 62.5547 57.0931 63.1467C56.9489 63.2118 56.8047 63.2769 56.6561 63.344C56.3648 63.0727 56.3648 63.0727 56.0736 62.5547C56.0214 61.892 56.0399 61.2453 56.0736 60.5813Z" fill="#1A3D49"/>
<path d="M53.7432 47.36C53.7913 47.36 53.8394 47.36 53.8889 47.36C53.9627 47.7667 54.0353 48.1738 54.1073 48.581C54.1479 48.8076 54.1884 49.0343 54.2302 49.2678C54.3134 49.8401 54.3452 50.332 54.3258 50.912C54.1336 50.912 53.9413 50.912 53.7432 50.912C53.7432 49.7398 53.7432 48.5677 53.7432 47.36Z" fill="#2D2A2B"/>
<path d="M56.0736 33.152C56.2192 33.5467 56.2192 33.5467 56.0827 34.1633C56.0316 34.3506 55.9806 34.5378 55.9279 34.7307C55.4954 34.6656 55.0628 34.6004 54.6171 34.5333C55.0527 33.8751 55.4811 33.5169 56.0736 33.152Z" fill="#A2A2A0"/>
<path d="M40.0526 22.496C40.8741 22.5755 41.2228 22.9339 41.8003 23.68C42.0156 24.2634 41.9547 24.8131 41.946 25.456C41.9069 25.3461 41.8679 25.2362 41.8276 25.123C41.7705 24.9724 41.7135 24.8218 41.6547 24.6667C41.6036 24.5039 41.5525 24.3411 41.4999 24.1733C41.082 23.4426 40.534 23.2095 39.9069 22.8907C39.955 22.7604 40.003 22.6302 40.0526 22.496Z" fill="#3C6D7A"/>
<path d="M43.0929 17.501C43.548 17.5627 43.548 17.5627 43.8302 17.8957C44.0228 18.4635 43.9718 18.751 43.8393 19.3387C43.548 19.0797 43.548 19.0797 43.2567 18.7467C43.2567 18.5513 43.2567 18.356 43.2567 18.1547C43.1606 18.1547 43.0645 18.1547 42.9654 18.1547C42.9174 18.4803 42.8693 18.8059 42.8198 19.1413C42.7717 19.1413 42.7237 19.1413 42.6741 19.1413C42.6187 18.6823 42.5703 18.2217 42.5285 17.76C42.6741 17.5627 42.6741 17.5627 43.0929 17.501Z" fill="#C5CAC8"/>
<path d="M40.9264 55.056C41.2213 55.4374 41.4247 55.7726 41.6546 56.24C41.5585 56.24 41.4624 56.24 41.3633 56.24C41.3153 56.4354 41.2672 56.6307 41.2177 56.832C40.8813 56.7669 40.5448 56.7018 40.1982 56.6347C40.3709 55.9687 40.5296 55.5203 40.9264 55.056Z" fill="#50A3CC"/>
<path d="M36.5571 50.912C36.9394 50.9014 37.3216 50.8935 37.704 50.8873C37.8127 50.884 37.9214 50.8807 38.0334 50.8773C38.3182 50.8738 38.603 50.8916 38.8874 50.912C38.9835 51.0422 39.0797 51.1725 39.1787 51.3067C38.7341 51.481 38.3303 51.5362 37.8679 51.541C37.7447 51.5438 37.6216 51.5466 37.4947 51.5495C37.1172 51.5011 36.8818 51.367 36.5571 51.1093C36.5571 51.0442 36.5571 50.9791 36.5571 50.912Z" fill="#696969"/>
<path d="M63.7928 35.9147C63.8889 35.9147 63.985 35.9147 64.0841 35.9147C64.1321 36.11 64.1802 36.3054 64.2297 36.5067C63.2466 36.9013 63.2466 36.9013 62.9189 36.9013C62.9189 37.0316 62.9189 37.1618 62.9189 37.296C62.8228 37.296 62.7266 37.296 62.6276 37.296C62.6276 37.5565 62.6276 37.817 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3363 38.0853C62.2883 38.2807 62.2402 38.4761 62.1907 38.6773C62.3155 36.9859 62.3155 36.9859 62.6276 36.3093C63.0121 36.3745 63.3966 36.4396 63.7928 36.5067C63.7928 36.3113 63.7928 36.116 63.7928 35.9147Z" fill="#456F80"/>
<path d="M60.2973 32.1653C60.6338 32.1653 60.9702 32.1653 61.3168 32.1653C61.2688 32.3607 61.2207 32.556 61.1712 32.7573C61.1614 33.0654 61.1588 33.374 61.1621 33.6823C61.1634 33.8418 61.1647 34.0013 61.1661 34.1656C61.1678 34.287 61.1695 34.4083 61.1712 34.5333C61.0751 34.2728 60.9789 34.0124 60.8799 33.744C60.7357 33.8091 60.5915 33.8742 60.443 33.9413C60.443 33.6157 60.443 33.2901 60.443 32.9547C60.3468 32.8895 60.2507 32.8244 60.1517 32.7573C60.1997 32.562 60.2478 32.3666 60.2973 32.1653Z" fill="#052128"/>
<path d="M51.8499 24.864C51.0658 25.4193 50.5115 25.6814 49.6288 25.6657C49.4988 25.6639 49.3689 25.6621 49.2351 25.6603C49.1367 25.658 49.0383 25.6557 48.937 25.6533C48.937 25.5231 48.937 25.3929 48.937 25.2587C49.3129 25.1538 49.6892 25.0514 50.0657 24.9503C50.172 24.9204 50.2782 24.8906 50.3877 24.8598C50.9273 24.7169 51.3246 24.6473 51.8499 24.864Z" fill="#E49A9F"/>
<path d="M53.8889 22.8907C53.985 22.9558 54.0811 23.0209 54.1802 23.088C53.9734 24.2086 53.5403 24.9689 53.015 25.8507C52.8708 25.7204 52.7266 25.5902 52.5781 25.456C52.6862 25.2891 52.7943 25.1223 52.9058 24.9503C53.3041 24.3061 53.5945 23.6292 53.8889 22.8907Z" fill="#B3B2AF"/>
<path d="M63.0646 21.5093C63.5859 22.1687 63.9235 22.6416 63.9566 23.6307C63.9506 23.7772 63.9446 23.9237 63.9384 24.0747C63.8573 23.9322 63.7762 23.7898 63.6927 23.643C63.3589 23.093 63.0042 22.5974 62.6276 22.1013C62.7718 21.906 62.916 21.7106 63.0646 21.5093Z" fill="#578898"/>
<path d="M49.5195 17.9573C49.6637 18.0225 49.8079 18.0876 49.9565 18.1547C49.6113 18.7997 49.4256 19.0982 48.8334 19.2277C48.4155 19.2396 48.0369 19.2489 47.6261 19.1413C47.53 18.946 47.4339 18.7506 47.3348 18.5493C47.479 18.4842 47.6232 18.4191 47.7718 18.352C47.8679 18.4171 47.964 18.4822 48.0631 18.5493C48.7357 18.6286 49.0001 18.5155 49.5195 17.9573Z" fill="#09272E"/>
<path d="M42.3829 16.9707C42.2868 17.4265 42.1906 17.8824 42.0916 18.352C41.9955 18.352 41.8994 18.352 41.8003 18.352C41.8003 19.0683 41.8003 19.7846 41.8003 20.5227C41.3634 19.9307 41.3634 19.9307 41.327 19.2523C41.3547 18.717 41.3892 18.2671 41.509 17.76C41.6051 17.76 41.7013 17.76 41.8003 17.76C41.8003 17.5646 41.8003 17.3693 41.8003 17.168C42.0916 16.9707 42.0916 16.9707 42.3829 16.9707Z" fill="#040F18"/>
<path d="M42.8198 16.3787C42.916 16.4438 43.0121 16.5089 43.1111 16.576C43.0631 16.7062 43.015 16.8365 42.9655 16.9707C43.35 16.9707 43.7345 16.9707 44.1307 16.9707C44.1307 17.0358 44.1307 17.1009 44.1307 17.168C44.0323 17.2039 43.9339 17.2397 43.8325 17.2767C43.7026 17.3263 43.5727 17.3759 43.4388 17.427C43.3104 17.4751 43.182 17.5231 43.0497 17.5727C42.6658 17.7642 42.4042 17.9988 42.0916 18.352C42.1724 17.6954 42.2722 17.148 42.5286 16.576C42.6247 16.5109 42.7208 16.4458 42.8198 16.3787Z" fill="#092A2F"/>
<path d="M59.5691 52.096C60.29 52.096 61.011 52.096 61.7538 52.096C61.7538 52.1611 61.7538 52.2262 61.7538 52.2933C61.0809 52.2933 60.408 52.2933 59.7147 52.2933C59.8109 53.4655 59.907 54.6377 60.006 55.8453C59.8618 55.8453 59.7177 55.8453 59.5691 55.8453C59.5691 54.6081 59.5691 53.3708 59.5691 52.096Z" fill="#6BAAC8"/>
<path d="M49.2282 19.7333C49.3244 19.7985 49.4205 19.8636 49.5195 19.9307C49.4234 20.2563 49.3273 20.5819 49.2282 20.9173C48.7476 20.9173 48.267 20.9173 47.7718 20.9173C47.7718 20.722 47.7718 20.5266 47.7718 20.3253C48.2024 20.0336 48.6081 20.1161 49.0826 20.128C49.1307 19.9978 49.1787 19.8675 49.2282 19.7333Z" fill="#B1B3B2"/>
<path d="M48.2087 57.2267C48.2567 57.3569 48.3048 57.4871 48.3543 57.6213C48.4505 57.6213 48.5466 57.6213 48.6456 57.6213C48.6456 57.7516 48.6456 57.8818 48.6456 58.016C47.9727 58.016 47.2999 58.016 46.6066 58.016C46.5585 57.8858 46.5105 57.7555 46.4609 57.6213C46.8154 57.3812 47.1045 57.3609 47.4987 57.313C47.6312 57.2965 47.7638 57.2799 47.9003 57.2629C48.053 57.245 48.053 57.245 48.2087 57.2267Z" fill="#4188AD"/>
<path d="M42.5285 47.36C42.6247 47.4251 42.7208 47.4902 42.8198 47.5573C42.8653 48.093 42.8946 48.6109 42.9109 49.1483C42.9165 49.298 42.9221 49.4477 42.9279 49.602C42.9417 49.9728 42.9537 50.3437 42.9655 50.7147C42.5285 50.5173 42.5285 50.5173 42.2372 49.9253C42.2372 49.73 42.2372 49.5346 42.2372 49.3333C42.3334 49.3333 42.4295 49.3333 42.5285 49.3333C42.5285 48.6821 42.5285 48.0309 42.5285 47.36Z" fill="#E4E3E4"/>
<path d="M35.3919 45.3867C35.44 45.3867 35.488 45.3867 35.5376 45.3867C35.5376 46.4937 35.5376 47.6007 35.5376 48.7413C35.2011 48.6762 34.8647 48.6111 34.518 48.544C34.4219 48.1533 34.3258 47.7626 34.2267 47.36C34.419 47.36 34.6113 47.36 34.8093 47.36C34.8093 47.6856 34.8093 48.0112 34.8093 48.3467C35.0016 48.3467 35.1938 48.3467 35.3919 48.3467C35.3919 47.3699 35.3919 46.3931 35.3919 45.3867Z" fill="#333A3C"/>
<path d="M35.6832 45.7813C36.1638 45.7813 36.6444 45.7813 37.1396 45.7813C37.1396 46.0418 37.1396 46.3023 37.1396 46.5707C36.6572 46.7063 36.6572 46.7063 36.1201 46.768C35.8379 46.509 35.8379 46.509 35.6832 46.176C35.6832 46.0458 35.6832 45.9155 35.6832 45.7813Z" fill="#979797"/>
<path d="M49.2282 27.4293C49.5166 27.4293 49.805 27.4293 50.1021 27.4293C50.1982 27.6898 50.2943 27.9503 50.3934 28.2187C49.223 28.668 49.223 28.668 48.6456 28.416C48.7418 28.416 48.8379 28.416 48.9369 28.416C49.033 28.0904 49.1292 27.7648 49.2282 27.4293Z" fill="#AEB1AC"/>
<path d="M63.2102 24.4693C63.5968 25.3693 63.5645 26.2159 63.5015 27.232C63.3558 27.8487 63.3558 27.8487 63.2102 28.2187C63.1621 28.2187 63.1141 28.2187 63.0646 28.2187C62.9032 26.8635 62.9625 25.7979 63.2102 24.4693Z" fill="#588593"/>
<path d="M54.6171 24.272C54.7133 24.272 54.8094 24.272 54.9084 24.272C54.8604 24.9883 54.8123 25.7046 54.7628 26.4427C54.5225 26.3775 54.2821 26.3124 54.0345 26.2453C54.1038 25.9532 54.1737 25.6614 54.2439 25.3697C54.2828 25.2071 54.3216 25.0446 54.3617 24.8771C54.4715 24.4693 54.4715 24.4693 54.6171 24.272Z" fill="#07100F"/>
<path d="M43.548 19.536C43.8845 19.8616 44.2209 20.1872 44.5676 20.5227C44.4234 20.6203 44.4234 20.6203 44.2763 20.72C44.2763 21.1758 44.2763 21.6317 44.2763 22.1013C44.1801 22.1013 44.084 22.1013 43.985 22.1013C43.9369 21.7106 43.8888 21.3199 43.8393 20.9173C43.7432 21.1127 43.6471 21.308 43.548 21.5093C43.548 20.8581 43.548 20.2069 43.548 19.536Z" fill="#AF8F90"/>
<path d="M48.063 7.49867C48.5063 8.09923 48.5878 8.32969 48.7458 9.11434C48.7824 9.29215 48.819 9.46996 48.8567 9.65315C48.8832 9.78873 48.9096 9.92432 48.9369 10.064C48.6966 10.1291 48.4563 10.1942 48.2087 10.2613C48.1606 9.34966 48.1126 8.43798 48.063 7.49867Z" fill="#4F707B"/>
<path d="M67.2883 37.296C67.4819 38.0832 67.3442 38.7138 67.2246 39.5037C67.1923 39.7256 67.1923 39.7256 67.1594 39.9519C67.1063 40.3167 67.0518 40.681 66.997 41.0453C66.9009 40.9802 66.8047 40.9151 66.7057 40.848C66.6147 40.3423 66.6147 40.3423 66.5601 39.8613C66.6562 39.8613 66.7523 39.8613 66.8513 39.8613C66.8423 39.6212 66.8333 39.3811 66.824 39.1337C66.821 38.366 66.9427 37.9203 67.2883 37.296Z" fill="#163E4B"/>
<path d="M32.479 35.3227C32.494 35.4488 32.509 35.575 32.5245 35.705C32.5575 35.8393 32.5906 35.9736 32.6246 36.112C32.7688 36.1771 32.913 36.2422 33.0616 36.3093C32.8543 36.4925 32.8543 36.4925 32.6428 36.6793C32.0252 37.3603 31.9815 38.2451 31.8964 39.2693C31.8483 39.2693 31.8003 39.2693 31.7507 39.2693C31.6051 37.7647 31.6051 37.7647 31.6051 37.0987C31.7223 36.9766 31.8394 36.8545 31.9601 36.7287C32.364 36.3541 32.364 36.3541 32.4517 35.7667C32.4607 35.6201 32.4697 35.4736 32.479 35.3227Z" fill="#12313A"/>
<path d="M36.5571 35.52C36.9516 35.5039 37.3458 35.4922 37.7404 35.483C37.8512 35.478 37.962 35.4731 38.0761 35.468C38.8004 35.4553 39.2713 35.5879 39.9069 36.112C39.6702 36.3463 39.6702 36.3463 39.3243 36.5067C39.2072 36.4212 39.09 36.3357 38.9693 36.2477C38.1942 35.7502 37.4052 35.7668 36.5571 35.7173C36.5571 35.6522 36.5571 35.5871 36.5571 35.52Z" fill="#DFDFDF"/>
<path d="M36.5571 33.5467C36.6532 33.8071 36.7493 34.0676 36.8484 34.336C37.083 34.3291 37.083 34.3291 37.3223 34.3221C37.5315 34.3184 37.7406 34.3148 37.9498 34.3113C38.0524 34.308 38.155 34.3047 38.2607 34.3013C38.9619 34.2926 39.5378 34.4013 40.1982 34.7307C40.2463 34.8609 40.2944 34.9911 40.3439 35.1253C40.1817 35.0643 40.0194 35.0032 39.8523 34.9403C38.7279 34.5944 37.5595 34.5971 36.4114 34.5333C36.4595 34.2077 36.5076 33.8821 36.5571 33.5467Z" fill="#415C66"/>
<path d="M53.3063 33.5467C53.2102 33.6769 53.114 33.8071 53.015 33.9413C53.3514 33.9413 53.6879 33.9413 54.0345 33.9413C54.0345 34.0065 54.0345 34.0716 54.0345 34.1387C53.4756 34.3171 52.9604 34.3569 52.3869 34.3483C52.2313 34.3466 52.0756 34.3448 51.9153 34.3429C51.7975 34.3406 51.6798 34.3384 51.5585 34.336C51.6306 34.2424 51.7027 34.1488 51.777 34.0523C52.0123 33.7915 52.0123 33.7915 51.9955 33.5467C52.4875 33.38 52.822 33.3279 53.3063 33.5467Z" fill="#AAAAAA"/>
<path d="M58.4312 32.3503C58.5625 32.3521 58.6937 32.3539 58.8289 32.3557C58.929 32.358 59.029 32.3603 59.1321 32.3627C59.1321 32.4278 59.1321 32.4929 59.1321 32.56C58.9322 32.589 58.9322 32.589 58.7282 32.6186C58.4685 32.6629 58.4685 32.6629 58.2036 32.708C58.0313 32.7355 57.8589 32.763 57.6814 32.7913C57.2284 32.891 57.2284 32.891 57.0385 33.3308C56.9364 33.7943 56.8605 34.2536 56.8018 34.7307C56.6576 34.7958 56.5134 34.8609 56.3649 34.928C56.4235 33.8153 56.6802 33.3348 57.2387 32.56C57.6779 32.3617 57.9731 32.3423 58.4312 32.3503Z" fill="#3F6473"/>
<path d="M40.0526 23.2853C40.9653 23.1902 40.9653 23.1902 41.418 23.5937C41.7205 24.2086 41.7589 24.7268 41.8003 25.456C41.7132 25.3013 41.6261 25.1467 41.5363 24.9873C41.0851 24.2537 40.7324 24.0267 40.0526 23.8773C40.0526 23.682 40.0526 23.4866 40.0526 23.2853Z" fill="#C0E8F5"/>
<path d="M43.8394 18.352C44.1998 18.5474 44.1998 18.5474 44.5676 18.7467C44.6157 19.2025 44.6637 19.6584 44.7132 20.128C44.8574 20.128 45.0016 20.128 45.1502 20.128C45.1502 20.2582 45.1502 20.3885 45.1502 20.5227C44.6495 20.2777 44.2255 20.0405 43.8394 19.536C43.721 19.018 43.721 19.018 43.6937 18.5493C43.7418 18.4842 43.7899 18.4191 43.8394 18.352Z" fill="#CDCECB"/>
<path d="M41.6546 17.168C41.5585 17.8843 41.4624 18.6006 41.3633 19.3387C41.3153 19.3387 41.2672 19.3387 41.2177 19.3387C41.2177 18.8828 41.2177 18.427 41.2177 17.9573C41.1696 18.0225 41.1216 18.0876 41.0721 18.1547C40.7797 18.0981 40.4882 18.0326 40.1982 17.9573C40.6591 17.2733 40.9565 17.168 41.6546 17.168Z" fill="#59808F"/>
<path d="M56.3649 32.7573C56.4129 33.5388 56.461 34.3202 56.5105 35.1253C56.2702 35.0602 56.0299 34.9951 55.7823 34.928C55.8784 34.407 55.9745 33.8861 56.0736 33.3493C55.9384 33.4511 55.8032 33.5528 55.6639 33.6577C55.1997 33.9413 55.1997 33.9413 54.7628 33.744C54.9747 33.5785 55.1872 33.4143 55.4 33.2507C55.5774 33.1133 55.5774 33.1133 55.7584 32.9732C56.0736 32.7573 56.0736 32.7573 56.3649 32.7573Z" fill="#222324"/>
<path d="M44.2763 33.3493C44.2763 33.6098 44.2763 33.8703 44.2763 34.1387C44.0122 34.1163 43.7482 34.0911 43.4843 34.0647C43.2638 34.0441 43.2638 34.0441 43.0388 34.023C42.9185 33.9961 42.7981 33.9691 42.6741 33.9413C42.6261 33.8111 42.578 33.6808 42.5285 33.5467C43.1588 33.1068 43.5894 33.1669 44.2763 33.3493Z" fill="#C9C9C9"/>
<path d="M60.8799 21.7067C60.976 21.8369 61.0722 21.9671 61.1712 22.1013C60.6349 22.3704 60.3741 22.1895 59.8604 21.904C59.7162 21.9691 59.572 22.0342 59.4235 22.1013C59.0826 22.0465 58.7424 21.9819 58.4039 21.904C59.0446 21.036 60.1111 21.2239 60.8799 21.7067Z" fill="#57859C"/>
<path d="M51.5586 14.9973C51.7508 14.9973 51.9431 14.9973 52.1411 14.9973C52.1411 15.5834 52.1411 16.1695 52.1411 16.7733C52.045 16.7733 51.9489 16.7733 51.8498 16.7733C51.8498 16.4477 51.8498 16.1221 51.8498 15.7867C51.6095 16.0471 51.3692 16.3076 51.1216 16.576C51.0255 16.5109 50.9294 16.4458 50.8303 16.3787C50.9371 16.1463 51.0469 15.9166 51.158 15.688C51.2189 15.5598 51.2797 15.4316 51.3424 15.2995C51.4494 15.1499 51.4494 15.1499 51.5586 14.9973Z" fill="#0C2A30"/>
<path d="M52.4324 55.2533C52.8373 55.5276 52.8511 55.8821 53.015 56.4373C53.1111 56.5024 53.2073 56.5676 53.3063 56.6347C53.3544 56.5044 53.4024 56.3742 53.4519 56.24C53.5481 56.5005 53.6442 56.761 53.7432 57.0293C53.599 57.127 53.599 57.127 53.4519 57.2267C53.4519 57.0964 53.4519 56.9662 53.4519 56.832C52.9713 56.832 52.4907 56.832 51.9955 56.832C52.0435 56.5715 52.0916 56.311 52.1411 56.0427C52.2373 56.0427 52.3334 56.0427 52.4324 56.0427C52.4324 55.7822 52.4324 55.5217 52.4324 55.2533Z" fill="#4F9CC2"/>
<path d="M35.5375 52.2933C35.5856 52.2933 35.6337 52.2933 35.6832 52.2933C35.6832 53.1399 35.6832 53.9865 35.6832 54.8587C35.8274 54.8587 35.9716 54.8587 36.1201 54.8587C36.0055 55.5316 35.8476 56.1786 35.6832 56.832C35.6351 56.832 35.5871 56.832 35.5375 56.832C35.5375 55.3342 35.5375 53.8365 35.5375 52.2933Z" fill="#68ABCD"/>
<path d="M42.8198 44.992C43.1563 44.992 43.4927 44.992 43.8393 44.992C43.8393 46.5549 43.8393 48.1178 43.8393 49.728C43.6952 49.728 43.551 49.728 43.4024 49.728C43.4255 49.6163 43.4486 49.5045 43.4723 49.3894C43.5492 48.9319 43.5778 48.5098 43.5941 48.0414C43.6002 47.8748 43.6063 47.7082 43.6126 47.5365C43.6184 47.3643 43.6241 47.1921 43.63 47.0147C43.6363 46.8394 43.6426 46.6641 43.649 46.4836C43.6644 46.0522 43.6793 45.6208 43.6937 45.1893C43.4053 45.1893 43.1169 45.1893 42.8198 45.1893C42.8198 45.1242 42.8198 45.0591 42.8198 44.992Z" fill="#535353"/>
<path d="M35.9744 33.3493C36.2657 33.744 36.2657 33.744 36.2839 34.262C36.2779 34.4167 36.2719 34.5713 36.2657 34.7307C36.3619 34.7958 36.458 34.8609 36.557 34.928C36.4658 35.0231 36.3745 35.1183 36.2805 35.2163C36.102 35.4033 36.102 35.4033 35.9198 35.594C35.8015 35.7176 35.6833 35.8413 35.5614 35.9686C35.2401 36.303 35.2401 36.303 34.9549 36.704C34.8588 36.5086 34.7627 36.3133 34.6636 36.112C34.7748 36.0265 34.8859 35.9411 35.0004 35.853C35.4741 35.4703 35.4741 35.4703 35.8288 34.928C35.9086 34.3992 35.9418 33.8893 35.9744 33.3493Z" fill="#040E14"/>
<path d="M39.4699 33.5467C39.6622 33.8071 39.8545 34.0676 40.0525 34.336C40.0045 34.4662 39.9564 34.5965 39.9069 34.7307C39.8117 34.7004 39.7165 34.6701 39.6184 34.6389C39.0687 34.5069 38.5248 34.4635 37.968 34.4223C37.8601 34.4138 37.7523 34.4053 37.6411 34.3965C37.3769 34.3757 37.1126 34.3558 36.8483 34.336C36.8483 34.2709 36.8483 34.2058 36.8483 34.1387C38.0739 34.041 38.0739 34.041 39.3243 33.9413C39.3724 33.8111 39.4204 33.6808 39.4699 33.5467Z" fill="#4C7485"/>
<path d="M33.2072 30.9813C33.3034 30.9813 33.3995 30.9813 33.4985 30.9813C33.5895 31.5363 33.5895 31.5363 33.6442 32.1653C33.5 32.4584 33.5 32.4584 33.3529 32.7573C33.2567 32.7573 33.1606 32.7573 33.0616 32.7573C32.8398 33.3369 32.6536 33.9249 32.479 34.5333C32.3381 34.026 32.3092 33.8184 32.4733 33.3131C32.5753 33.0929 32.5753 33.0929 32.6793 32.8683C32.9706 32.2344 33.1243 31.7222 33.2072 30.9813Z" fill="#13333D"/>
<path d="M41.946 24.6667C41.994 24.6667 42.0421 24.6667 42.0916 24.6667C42.0995 25.1354 42.1053 25.6039 42.1098 26.0727C42.1122 26.2039 42.1147 26.3352 42.1172 26.4704C42.1234 27.3275 42.0587 28.0254 41.8003 28.8107C41.418 29.082 41.418 29.082 41.0721 29.2053C41.1201 28.9449 41.1682 28.6844 41.2177 28.416C41.3139 28.416 41.41 28.416 41.509 28.416C41.8198 27.1808 41.8862 25.9647 41.946 24.6667Z" fill="#1A3940"/>
<path d="M33.4985 24.864C33.8778 25.3779 33.8634 25.7314 33.9354 26.4427C33.9684 26.6136 34.0015 26.7845 34.0355 26.9607C34.0894 27.5158 34.0066 27.7521 33.7898 28.2187C33.4606 27.5093 33.4681 26.923 33.4803 26.0973C33.4842 25.7509 33.4842 25.7509 33.4882 25.3974C33.4916 25.2214 33.495 25.0454 33.4985 24.864Z" fill="#508594"/>
<path d="M44.7132 15.7867C44.8093 15.7867 44.9055 15.7867 45.0045 15.7867C45.0045 16.0471 45.0045 16.3076 45.0045 16.576C45.4371 16.6737 45.4371 16.6737 45.8784 16.7733C45.9264 16.578 45.9745 16.3826 46.024 16.1813C46.1682 16.2465 46.3124 16.3116 46.461 16.3787C46.461 16.5089 46.461 16.6391 46.461 16.7733C45.8121 17.0664 45.8121 17.0664 45.1502 17.3653C44.7132 16.7733 44.7132 16.7733 44.6859 16.243C44.6949 16.0924 44.7039 15.9418 44.7132 15.7867Z" fill="#1D363B"/>
<path d="M43.5481 56.4373C43.8393 56.832 43.8393 56.832 43.8678 57.4749C43.8627 57.8526 43.8627 57.8526 43.8575 58.238C43.8549 58.4908 43.8523 58.7437 43.8496 59.0042C43.8462 59.1991 43.8428 59.3939 43.8393 59.5947C43.7432 59.5947 43.6471 59.5947 43.5481 59.5947C43.4556 58.7965 43.3858 58.0347 43.4024 57.2267C43.4024 57.0313 43.4024 56.8359 43.4024 56.6347C43.4505 56.5695 43.4985 56.5044 43.5481 56.4373Z" fill="#4C849F"/>
<path d="M49.5195 52.2933C49.5676 52.2933 49.6157 52.2933 49.6652 52.2933C49.7649 52.7527 49.8616 53.2134 49.9565 53.6747C49.9985 53.8456 50.0406 54.0165 50.0839 54.1927C50.1021 54.6613 50.1021 54.6613 49.5195 55.648C49.5195 54.541 49.5195 53.4339 49.5195 52.2933Z" fill="#71B2D4"/>
<path d="M40.7808 46.5707C40.8288 46.5707 40.8769 46.5707 40.9264 46.5707C40.9264 48.0684 40.9264 49.5662 40.9264 51.1093C40.638 51.0442 40.3497 50.9791 40.0526 50.912C40.1006 50.5864 40.1487 50.2608 40.1982 49.9253C40.3904 50.1858 40.5827 50.4463 40.7808 50.7147C40.7808 49.3471 40.7808 47.9796 40.7808 46.5707Z" fill="#4E4B4D"/>
<path d="M36.2657 42.624C37.0828 42.624 37.8999 42.624 38.7417 42.624C38.7898 42.7542 38.8378 42.8845 38.8874 43.0187C38.7873 43.0095 38.6872 43.0003 38.5841 42.9909C38.4529 42.9838 38.3217 42.9767 38.1864 42.9693C37.9913 42.9556 37.9913 42.9556 37.7922 42.9416C37.4066 42.9713 37.4066 42.9713 37.1652 43.4164C37.1087 43.5456 37.0522 43.6749 36.994 43.808C36.7537 43.4173 36.5133 43.0266 36.2657 42.624Z" fill="#666767"/>
<path d="M65.1036 37.888C65.2478 37.9531 65.392 38.0182 65.5405 38.0853C65.5886 38.6063 65.6367 39.1273 65.6862 39.664C65.542 39.664 65.3978 39.664 65.2493 39.664C65.2493 39.7942 65.2493 39.9245 65.2493 40.0587C65.1051 39.9935 64.9609 39.9284 64.8123 39.8613C64.9084 39.2101 65.0046 38.5589 65.1036 37.888Z" fill="#16343B"/>
<path d="M44.2763 21.5093C44.3724 21.7047 44.4685 21.9001 44.5676 22.1013C44.3734 22.6276 44.1792 23.1538 43.985 23.68C43.6887 22.944 43.548 22.5613 43.548 21.7067C43.6922 21.7067 43.8364 21.7067 43.985 21.7067C43.985 21.8369 43.985 21.9672 43.985 22.1013C44.0811 22.1013 44.1772 22.1013 44.2763 22.1013C44.2763 21.906 44.2763 21.7106 44.2763 21.5093Z" fill="#1B1A16"/>
<path d="M39.9069 19.3387C40.2674 19.4363 40.2674 19.4363 40.6351 19.536C40.6832 19.7314 40.7313 19.9267 40.7808 20.128C40.925 20.0629 41.0692 19.9978 41.2177 19.9307C41.2177 20.1911 41.2177 20.4516 41.2177 20.72C40.4219 20.6002 40.4219 20.6002 40.0708 20.2513C39.9069 19.9307 39.9069 19.9307 39.9069 19.3387Z" fill="#5E858F"/>
<path d="M33.4985 38.6773C33.7898 39.072 33.7898 39.072 33.8182 39.5422C33.8148 39.7208 33.8115 39.8994 33.808 40.0833C33.8053 40.2629 33.8027 40.4425 33.8 40.6275C33.7966 40.7654 33.7932 40.9033 33.7898 41.0453C33.3572 40.9477 33.3572 40.9477 32.9159 40.848C33.012 40.7829 33.1081 40.7178 33.2072 40.6507C33.3076 40.1871 33.3076 40.1871 33.371 39.6517C33.3954 39.4703 33.4199 39.2889 33.445 39.1021C33.4626 38.9619 33.4803 38.8217 33.4985 38.6773Z" fill="#425E6C"/>
<path d="M55.9279 23.2853C56.0721 23.3505 56.2163 23.4156 56.3649 23.4827C56.3649 23.6129 56.3649 23.7432 56.3649 23.8773C56.6052 23.8773 56.8455 23.8773 57.0931 23.8773C57.0931 23.9425 57.0931 24.0076 57.0931 24.0747C56.8273 24.093 56.8273 24.093 56.556 24.1117C55.9049 24.2151 55.6173 24.5692 55.1997 25.2587C55.2626 24.321 55.3931 23.8931 55.9279 23.2853Z" fill="#A3CEDF"/>
<path d="M48.7913 19.3387C49.6564 19.3387 50.5215 19.3387 51.4129 19.3387C51.2687 19.6317 51.2687 19.6317 51.1216 19.9307C50.6668 19.8348 50.2483 19.7336 49.8108 19.536C49.8108 19.6662 49.8108 19.7965 49.8108 19.9307C49.119 19.7827 49.119 19.7827 48.7913 19.3387Z" fill="#E2E0E3"/>
<path d="M53.1606 33.152C53.7551 33.0312 54.2014 33.2932 54.7627 33.5467C54.6666 33.5467 54.5705 33.5467 54.4714 33.5467C54.4714 33.6769 54.4714 33.8071 54.4714 33.9413C53.6063 34.039 53.6063 34.039 52.7237 34.1387C52.8679 33.8131 53.0121 33.4875 53.1606 33.152Z" fill="#C8C8C8"/>
<path d="M48.6456 30.9813C49.0061 31.1767 49.0061 31.1767 49.3739 31.376C49.2297 31.4737 49.2297 31.4737 49.0826 31.5733C49.1306 32.2897 49.1787 33.006 49.2282 33.744C49.036 33.6138 48.8437 33.4835 48.6456 33.3493C48.6456 32.5679 48.6456 31.7865 48.6456 30.9813Z" fill="#8A8C89"/>
<path d="M55.7823 29.008C55.8775 29.1225 55.8775 29.1225 55.9746 29.2392C56.5189 29.8841 57.0651 30.4567 57.6757 30.9813C57.5796 31.1116 57.4834 31.2418 57.3844 31.376C57.0203 31.1047 57.0203 31.1047 56.6562 30.784C56.6562 30.6538 56.6562 30.5235 56.6562 30.3893C56.4158 30.3893 56.1755 30.3893 55.9279 30.3893C55.7823 29.452 55.7823 29.452 55.7823 29.008Z" fill="#133239"/>
<path d="M51.8498 20.9173C51.5684 21.3169 51.3209 21.5924 50.976 21.904C50.9699 22.2986 50.9699 22.6934 50.976 23.088C50.8798 23.2182 50.7837 23.3485 50.6847 23.4827C50.6847 22.8966 50.6847 22.3105 50.6847 21.7067C50.5885 21.6416 50.4924 21.5764 50.3934 21.5093C50.539 21.1147 50.539 21.1147 50.7939 20.9913C51.1514 20.9106 51.488 20.9037 51.8498 20.9173Z" fill="#7A5054"/>
<path d="M58.9865 19.1413C59.384 19.1306 59.7814 19.1228 60.179 19.1167C60.347 19.1117 60.347 19.1117 60.5184 19.1066C61.1442 19.0994 61.6196 19.1422 62.1907 19.536C61.9631 19.758 61.9631 19.758 61.6081 19.9307C61.3709 19.8454 61.134 19.7574 60.9015 19.6509C60.279 19.4223 59.628 19.3984 58.9865 19.3387C58.9865 19.2735 58.9865 19.2084 58.9865 19.1413Z" fill="#2D5758"/>
<path d="M55.3453 17.168C55.7779 17.2657 55.7779 17.2657 56.2192 17.3653C56.2192 17.6258 56.2192 17.8863 56.2192 18.1547C56.075 18.2523 56.075 18.2523 55.9279 18.352C55.7628 18.75 55.7628 18.75 55.6366 19.1413C55.4031 18.4491 55.3132 17.929 55.3453 17.168Z" fill="#4B7889"/>
<path d="M44.8589 58.608C44.9069 58.7382 44.955 58.8685 45.0045 59.0027C45.1487 59.0678 45.2929 59.1329 45.4415 59.2C45.3694 59.318 45.2973 59.4361 45.223 59.5577C44.9633 59.9835 44.9633 59.9835 45.0045 60.5813C44.8123 60.6465 44.62 60.7116 44.4219 60.7787C44.47 60.1926 44.5181 59.6065 44.5676 59.0027C44.6637 59.0027 44.7598 59.0027 44.8589 59.0027C44.8589 58.8724 44.8589 58.7422 44.8589 58.608Z" fill="#326982"/>
<path d="M51.5586 52.4907C51.7508 52.4907 51.9431 52.4907 52.1411 52.4907C52.2373 53.1419 52.3334 53.7931 52.4324 54.464C52.3363 54.3989 52.2402 54.3338 52.1411 54.2667C52.1411 54.0713 52.1411 53.8759 52.1411 53.6747C51.8528 53.6747 51.5644 53.6747 51.2673 53.6747C51.3634 53.2839 51.4595 52.8932 51.5586 52.4907Z" fill="#68C3F3"/>
<path d="M64.521 43.808C64.6172 44.0685 64.7133 44.329 64.8123 44.5973C64.6072 44.7969 64.4006 44.9937 64.1933 45.1893C64.021 45.3542 64.021 45.3542 63.8452 45.5223C63.5015 45.7813 63.5015 45.7813 62.9189 45.7813C62.967 45.586 63.0151 45.3906 63.0646 45.1893C63.0646 45.3196 63.0646 45.4498 63.0646 45.584C63.1787 45.4538 63.2929 45.3235 63.4105 45.1893C63.7928 44.7947 63.7928 44.7947 64.0841 44.7947C64.1292 44.6685 64.1742 44.5423 64.2207 44.4123C64.3754 44.0053 64.3754 44.0053 64.521 43.808Z" fill="#355054"/>
<path d="M57.967 32.9547C58.1112 33.0198 58.2554 33.0849 58.4039 33.152C58.2597 33.2497 58.2597 33.2497 58.1126 33.3493C58.1126 33.5447 58.1126 33.7401 58.1126 33.9413C58.4971 34.0065 58.8817 34.0716 59.2778 34.1387C59.2778 34.2038 59.2778 34.2689 59.2778 34.336C59.02 34.352 58.762 34.3635 58.5041 34.373C58.3604 34.3799 58.2168 34.3867 58.0688 34.3938C57.6757 34.336 57.6757 34.336 57.4055 34.0377C57.3505 33.9408 57.2954 33.8439 57.2388 33.744C57.4768 33.4069 57.6566 33.1649 57.967 32.9547Z" fill="#457488"/>
<path d="M40.0526 31.5733C40.4882 31.7701 40.7229 31.9852 41.0812 32.3627C41.4948 32.7978 41.4948 32.7978 41.9459 33.152C41.9459 33.2822 41.9459 33.4125 41.9459 33.5467C41.1578 33.2862 40.5966 32.7706 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733Z" fill="#969A96"/>
<path d="M54.7628 28.0213C54.8589 28.0213 54.955 28.0213 55.054 28.0213C55.1799 28.308 55.3039 28.596 55.4273 28.8847C55.5312 29.125 55.5312 29.125 55.6372 29.3703C55.6851 29.5112 55.7329 29.6521 55.7823 29.7973C55.7342 29.9276 55.6861 30.0578 55.6366 30.192C55.2816 29.9947 55.2816 29.9947 54.9084 29.6C54.7972 29.0618 54.7832 28.5854 54.7628 28.0213Z" fill="#CECCC9"/>
<path d="M44.2763 26.8373C44.5676 27.0963 44.5676 27.0963 44.8589 27.4293C44.8589 27.6247 44.8589 27.8201 44.8589 28.0213C44.7507 28.0783 44.6426 28.1353 44.5312 28.194C44.1442 28.3965 44.1442 28.3965 43.8485 28.6257C43.4643 28.8623 43.0904 28.9311 42.6742 29.008C42.9121 28.3632 43.36 28.2745 43.8394 28.0213C44.032 27.9477 44.2257 27.8772 44.4219 27.824C44.3739 27.4984 44.3258 27.1728 44.2763 26.8373Z" fill="#ACADAC"/>
<path d="M46.024 26.8373C46.116 26.8493 46.208 26.8613 46.3028 26.8736C47.4225 27.0157 48.5432 27.1277 49.6652 27.232C49.6652 27.2971 49.6652 27.3622 49.6652 27.4293C49.1949 27.4409 48.7246 27.4478 48.2542 27.454C48.1214 27.4573 47.9886 27.4606 47.8517 27.464C47.1792 27.4707 46.6329 27.4758 46.024 27.0347C46.024 26.9696 46.024 26.9044 46.024 26.8373Z" fill="#E1E4E5"/>
<path d="M47.0435 21.904C47.3059 22.4372 47.4808 22.877 47.6261 23.4827C47.5781 23.678 47.53 23.8734 47.4805 24.0747C47.3363 23.7491 47.1921 23.4235 47.0435 23.088C46.9474 23.6741 46.8513 24.2602 46.7523 24.864C46.6561 24.864 46.56 24.864 46.461 24.864C46.2675 24.0776 46.4272 23.7983 46.6703 23.051C46.7392 22.8366 46.8081 22.6221 46.8791 22.4012C46.9334 22.2371 46.9876 22.0731 47.0435 21.904Z" fill="#26211F"/>
<path d="M39.3243 18.1547C39.3724 18.1547 39.4204 18.1547 39.4699 18.1547C39.509 18.3622 39.548 18.5698 39.5883 18.7837C39.742 19.4522 39.9138 19.9447 40.1982 20.5227C39.5406 20.4178 39.1282 20.0557 38.5961 19.536C38.8388 19.536 39.0816 19.536 39.3243 19.536C39.3243 19.0802 39.3243 18.6243 39.3243 18.1547Z" fill="#17363F"/>
<path d="M56.0735 58.4107C56.4672 58.9773 56.6485 59.2612 56.6925 60.051C56.6805 60.226 56.6685 60.401 56.6561 60.5813C56.5119 60.679 56.5119 60.679 56.3648 60.7787C56.2687 60.7136 56.1726 60.6484 56.0735 60.5813C56.0735 59.865 56.0735 59.1487 56.0735 58.4107Z" fill="#37667A"/>
<path d="M39.3243 58.2133C39.2697 58.6943 39.2697 58.6943 39.1787 59.2C39.0345 59.2977 39.0345 59.2977 38.8874 59.3973C38.8874 59.2671 38.8874 59.1369 38.8874 59.0027C38.4262 59.3644 38.4262 59.3644 38.1591 59.9893C38.1136 59.4343 38.1136 59.4343 38.1591 58.8053C38.5743 58.3492 38.7874 58.2133 39.3243 58.2133Z" fill="#37758F"/>
<path d="M44.4219 57.0293C44.7584 57.0293 45.0948 57.0293 45.4415 57.0293C45.4895 57.2898 45.5376 57.5503 45.5871 57.8187C45.2026 57.8838 44.8181 57.9489 44.4219 58.016C44.4219 57.6904 44.4219 57.3648 44.4219 57.0293Z" fill="#498FAC"/>
<path d="M49.6651 55.2533C49.8093 55.3184 49.9535 55.3836 50.1021 55.4507C50.1021 55.7763 50.1021 56.1019 50.1021 56.4373C50.1982 56.5024 50.2943 56.5676 50.3934 56.6347C50.3934 56.7649 50.3934 56.8951 50.3934 57.0293C50.105 57.2247 50.105 57.2247 49.8108 57.424C49.758 57.1366 49.7067 56.8487 49.656 56.5607C49.6129 56.3203 49.6129 56.3203 49.569 56.075C49.5195 55.648 49.5195 55.648 49.6651 55.2533Z" fill="#559BC1"/>
<path d="M59.1321 48.7413C59.2283 48.7413 59.3244 48.7413 59.4234 48.7413C59.5196 49.4577 59.6157 50.174 59.7147 50.912C59.5225 50.912 59.3302 50.912 59.1321 50.912C59.1321 50.1957 59.1321 49.4794 59.1321 48.7413Z" fill="#080808"/>
<path d="M34.6637 42.624C34.7117 42.8845 34.7598 43.145 34.8093 43.4133C34.9175 43.4296 35.0256 43.4459 35.137 43.4627C35.6122 43.6382 35.8011 43.9037 36.1201 44.4C35.7833 44.437 35.7833 44.437 35.3919 44.4C35.1552 44.1163 35.1552 44.1163 34.955 43.808C34.8108 43.7429 34.6666 43.6778 34.518 43.6107C34.518 43.4804 34.518 43.3502 34.518 43.216C34.4219 43.1509 34.3258 43.0858 34.2267 43.0187C34.3709 42.8884 34.5151 42.7582 34.6637 42.624Z" fill="#1F2829"/>
<path d="M65.8318 35.52C65.8799 35.52 65.9279 35.52 65.9775 35.52C66.0547 35.9677 66.1302 36.4159 66.205 36.8643C66.2473 37.1139 66.2895 37.3634 66.333 37.6205C66.4144 38.2827 66.4144 38.2827 66.2687 38.8747C66.209 38.7106 66.1493 38.5465 66.0878 38.3775C66.0093 38.163 65.9309 37.9486 65.85 37.7277C65.7723 37.5148 65.6946 37.3018 65.6145 37.0825C65.3989 36.4912 65.3989 36.4912 65.1036 35.9147C65.2958 35.9798 65.4881 36.0449 65.6862 36.112C65.7342 35.9166 65.7823 35.7213 65.8318 35.52Z" fill="#467074"/>
<path d="M44.1306 33.5467C44.419 33.5467 44.7074 33.5467 45.0045 33.5467C45.0045 33.6769 45.0045 33.8071 45.0045 33.9413C45.1006 34.0716 45.1968 34.2018 45.2958 34.336C44.9651 34.3466 44.6343 34.3543 44.3036 34.3607C44.0273 34.3675 44.0273 34.3675 43.7455 34.3745C43.2568 34.336 43.2568 34.336 42.8198 33.9413C43.3005 34.0064 43.7811 34.0716 44.2763 34.1387C44.2282 33.9433 44.1802 33.7479 44.1306 33.5467Z" fill="#A9A9A8"/>
<path d="M66.1231 32.7573C66.469 32.8067 66.469 32.8067 66.8513 32.9547C67.0425 33.3617 67.0425 33.3617 67.1426 33.744C66.9984 34.037 66.9984 34.037 66.8513 34.336C66.56 34.336 66.56 34.336 66.3234 34.1017C66.0617 33.6344 66.0888 33.3298 66.1231 32.7573Z" fill="#52788B"/>
<path d="M58.6952 31.968C58.8394 32.0982 58.9836 32.2285 59.1321 32.3627C58.9398 32.3882 58.9398 32.3882 58.7435 32.4143C57.6535 32.531 57.6535 32.531 56.7563 33.2753C56.6752 33.43 56.5941 33.5846 56.5105 33.744C56.5896 32.9937 56.8246 32.6584 57.2387 32.1653C57.6942 31.8568 58.197 31.8891 58.6952 31.968Z" fill="#06222B"/>
<path d="M52.8693 26.4427C52.8693 26.638 52.8693 26.8334 52.8693 27.0347C52.7252 27.0998 52.581 27.1649 52.4324 27.232C52.4324 27.4274 52.4324 27.6227 52.4324 27.824C52.5766 27.7589 52.7208 27.6938 52.8693 27.6267C53.2608 27.8117 53.2608 27.8117 53.5976 28.0213C53.5495 28.1516 53.5014 28.2818 53.4519 28.416C52.8031 28.2206 52.8031 28.2206 52.1411 28.0213C52.1411 27.7608 52.1411 27.5004 52.1411 27.232C52.5052 26.788 52.5052 26.788 52.8693 26.4427Z" fill="#B9BBB7"/>
<path d="M47.6262 21.904C47.9866 22.0017 47.9866 22.0017 48.3544 22.1013C48.2102 22.6874 48.066 23.2735 47.9174 23.8773C47.5636 23.1582 47.6026 22.7501 47.6262 21.904Z" fill="#EEE6E6"/>
<path d="M54.9084 18.5493C55.0526 18.647 55.0526 18.647 55.1997 18.7467C55.1997 19.3327 55.1997 19.9188 55.1997 20.5227C55.2477 20.1971 55.2958 19.8715 55.3453 19.536C55.3934 19.536 55.4414 19.536 55.491 19.536C55.5911 20.1897 55.5911 20.1897 55.6366 20.9173C55.4272 21.2997 55.4272 21.2997 55.1997 21.5093C55.1997 21.3791 55.1997 21.2489 55.1997 21.1147C55.1036 21.1147 55.0074 21.1147 54.9084 21.1147C54.9084 20.2681 54.9084 19.4215 54.9084 18.5493Z" fill="#1F2D31"/>
<path d="M46.8979 62.16C47.2824 62.16 47.6669 62.16 48.0631 62.16C48.015 62.4856 47.9669 62.8112 47.9174 63.1467C47.7732 63.1467 47.629 63.1467 47.4805 63.1467C47.4805 62.9513 47.4805 62.756 47.4805 62.5547C47.4324 62.6849 47.3844 62.8152 47.3348 62.9493C47.1426 62.8842 46.9503 62.8191 46.7523 62.752C46.8003 62.5566 46.8484 62.3613 46.8979 62.16Z" fill="#143F4E"/>
<path d="M44.5676 26.048C45.0004 26.2699 45.3445 26.4867 45.7327 26.8373C45.8329 27.2567 45.8329 27.2567 45.8784 27.6267C45.7342 27.7244 45.7342 27.7244 45.5871 27.824C45.1554 27.2699 44.794 26.8012 44.5676 26.048Z" fill="#A8AAA7"/>
<path d="M48.6456 21.904C48.8379 21.904 49.0302 21.904 49.2282 21.904C49.2464 22.57 49.2464 22.57 49.2282 23.2853C49.1321 23.4156 49.036 23.5458 48.9369 23.68C48.7094 23.125 48.7094 23.125 48.5 22.496C48.5481 22.3006 48.5961 22.1053 48.6456 21.904Z" fill="#EDE4E3"/>
<path d="M36.2658 21.312C36.1216 21.4422 35.9774 21.5725 35.8288 21.7067C35.8769 21.8369 35.925 21.9671 35.9745 22.1013C35.8784 22.1013 35.7822 22.1013 35.6832 22.1013C35.6832 22.2316 35.6832 22.3618 35.6832 22.496C35.3948 22.496 35.1064 22.496 34.8093 22.496C35.0709 21.5617 35.5259 20.9779 36.2658 21.312Z" fill="#416C82"/>
<path d="M53.4519 17.5627C53.7403 17.5627 54.0287 17.5627 54.3258 17.5627C54.4896 17.8833 54.4896 17.8833 54.6171 18.352C54.4826 19.1804 54.419 19.4518 53.8889 19.9307C53.8889 19.6702 53.8889 19.4097 53.8889 19.1413C53.985 19.1413 54.0811 19.1413 54.1801 19.1413C54.1801 18.7506 54.1801 18.3599 54.1801 17.9573C53.8918 17.9573 53.6034 17.9573 53.3063 17.9573C53.3543 17.8271 53.4024 17.6969 53.4519 17.5627Z" fill="#BAC3BF"/>
<path d="M55.0541 16.3787C55.8275 16.6668 56.4324 17.1647 57.0931 17.76C56.6561 17.76 56.3296 17.6692 55.9097 17.5133C55.7802 17.4675 55.6507 17.4218 55.5172 17.3746C55.1997 17.168 55.1997 17.168 55.0825 16.7517C55.0731 16.6286 55.0637 16.5055 55.0541 16.3787Z" fill="#ADD1DD"/>
<path d="M44.8589 61.3707C44.9069 61.3707 44.955 61.3707 45.0045 61.3707C45.0045 62.0942 45.0045 62.8178 45.0045 63.5413C44.8603 63.5413 44.7161 63.5413 44.5676 63.5413C44.5195 62.8901 44.4715 62.2389 44.4219 61.568C44.47 61.7634 44.5181 61.9587 44.5676 62.16C44.6637 62.16 44.7598 62.16 44.8589 62.16C44.8108 61.9646 44.7627 61.7693 44.7132 61.568C44.7613 61.5029 44.8094 61.4378 44.8589 61.3707Z" fill="#193F49"/>
<path d="M40.6351 52.4907C41.0196 52.4907 41.4041 52.4907 41.8003 52.4907C41.274 53.4157 41.274 53.4157 41.0721 53.6747C40.9279 53.6747 40.7837 53.6747 40.6351 53.6747C40.6351 53.2839 40.6351 52.8932 40.6351 52.4907Z" fill="#68C6F7"/>
<path d="M36.2317 42.4043C36.3408 42.4053 36.4498 42.4063 36.5622 42.4074C36.68 42.408 36.7978 42.4087 36.9192 42.4093C37.043 42.411 37.1668 42.4126 37.2944 42.4143C37.4188 42.4152 37.5432 42.4161 37.6713 42.417C37.9796 42.4194 38.2879 42.4229 38.5961 42.4267C38.5961 42.4918 38.5961 42.5569 38.5961 42.624C37.8752 42.6891 37.1542 42.7542 36.4114 42.8213C36.5556 43.1144 36.5556 43.1144 36.7027 43.4133C36.5585 43.4133 36.4144 43.4133 36.2658 43.4133C36.02 43.0187 36.02 43.0187 35.8289 42.624C35.9745 42.4267 35.9745 42.4267 36.2317 42.4043Z" fill="#B5B5B5"/>
<path d="M62.3363 38.0853C62.3844 38.0853 62.4325 38.0853 62.482 38.0853C62.482 38.6063 62.482 39.1272 62.482 39.664C62.5781 39.664 62.6742 39.664 62.7733 39.664C62.9746 39.9849 63.1693 40.3137 63.3559 40.6507C63.2117 40.7158 63.0675 40.7809 62.9189 40.848C62.6276 40.4533 62.3363 40.0587 62.045 39.664C62.0803 39.2801 62.0803 39.2801 62.1725 38.85C62.2021 38.707 62.2318 38.5641 62.2624 38.4168C62.2868 38.3074 62.3112 38.198 62.3363 38.0853Z" fill="#5B7A89"/>
<path d="M33.2072 36.112C33.6398 36.1771 34.0724 36.2422 34.518 36.3093C34.518 36.3745 34.518 36.4396 34.518 36.5067C33.8692 36.6043 33.8692 36.6043 33.2072 36.704C33.2072 36.5086 33.2072 36.3133 33.2072 36.112ZM32.6246 36.5067C32.8169 36.5718 33.0091 36.6369 33.2072 36.704C33.2072 37.0296 33.2072 37.3552 33.2072 37.6907C33.063 37.6255 32.9188 37.5604 32.7703 37.4933C32.7222 37.1677 32.6742 36.8421 32.6246 36.5067Z" fill="#6790A3"/>
<path d="M45.7327 35.52C45.8289 35.52 45.925 35.52 46.024 35.52C46.024 35.7805 46.024 36.041 46.024 36.3093C46.2643 36.2442 46.5046 36.1791 46.7522 36.112C46.6081 36.5678 46.4639 37.0237 46.3153 37.4933C46.2672 37.4933 46.2192 37.4933 46.1697 37.4933C46.1697 37.1677 46.1697 36.8421 46.1697 36.5067C46.0735 36.5067 45.9774 36.5067 45.8784 36.5067C45.8784 36.8323 45.8784 37.1579 45.8784 37.4933C45.8303 37.4933 45.7822 37.4933 45.7327 37.4933C45.7327 36.8421 45.7327 36.1909 45.7327 35.52Z" fill="#232021"/>
<path d="M33.3529 32.3627C33.449 32.3627 33.5451 32.3627 33.6442 32.3627C33.5464 33.1902 33.2282 33.8236 32.9159 34.5333C32.7718 34.4682 32.6276 34.4031 32.479 34.336C32.6428 33.7495 32.8028 33.2833 33.0616 32.7573C33.1577 32.7573 33.2538 32.7573 33.3529 32.7573C33.3529 32.6271 33.3529 32.4969 33.3529 32.3627Z" fill="#041B23"/>
<path d="M50.976 28.6133C50.6847 29.2053 50.6847 29.2053 50.3376 29.3063C50.2058 29.3178 50.074 29.3292 49.9382 29.341C49.7394 29.3605 49.7394 29.3605 49.5366 29.3803C49.3839 29.3914 49.3839 29.3914 49.2282 29.4027C49.2282 29.2724 49.2282 29.1422 49.2282 29.008C49.8366 28.694 50.3252 28.5713 50.976 28.6133Z" fill="#ACADA9"/>
<path d="M48.3543 23.2853C48.7922 23.8786 48.7324 24.4346 48.7913 25.2587C48.551 25.2587 48.3106 25.2587 48.063 25.2587C48.0835 24.9667 48.1049 24.6748 48.1268 24.383C48.1386 24.2205 48.1504 24.0579 48.1626 23.8904C48.2087 23.4827 48.2087 23.4827 48.3543 23.2853Z" fill="#E9E5E4"/>
<path d="M39.033 23.088C39.1292 23.1531 39.2253 23.2182 39.3243 23.2853C39.164 23.9371 39.0782 24.0323 38.678 24.4077C38.5431 24.537 38.5431 24.537 38.4055 24.669C38.1592 24.864 38.1592 24.864 37.8679 24.864C37.8679 24.6686 37.8679 24.4733 37.8679 24.272C38.4837 23.4827 38.4837 23.4827 39.033 23.4827C39.033 23.3524 39.033 23.2222 39.033 23.088Z" fill="#6892A8"/>
<path d="M55.491 18.5493C55.8812 19.3424 55.805 19.781 55.7823 20.72C56.0226 20.72 56.2629 20.72 56.5105 20.72C56.3227 20.9915 56.1279 21.2543 55.9279 21.5093C55.8318 21.5093 55.7357 21.5093 55.6366 21.5093C55.612 21.164 55.5878 20.8187 55.5638 20.4733C55.5503 20.281 55.5368 20.0887 55.5228 19.8906C55.4971 19.4446 55.491 18.9966 55.491 18.5493Z" fill="#092932"/>
<path d="M57.3844 17.76C57.5767 17.76 57.7689 17.76 57.967 17.76C57.9189 17.9554 57.8709 18.1507 57.8214 18.352C57.9175 18.4171 58.0136 18.4822 58.1126 18.5493C58.0853 18.9193 58.0853 18.9193 57.967 19.3387C57.5938 19.5853 57.5938 19.5853 57.2388 19.7333C57.2767 19.3351 57.3146 18.9368 57.3526 18.5385C57.3898 18.1537 57.3898 18.1537 57.3844 17.76Z" fill="#13373E"/>
<path d="M41.8003 16.576C41.7522 16.7714 41.7041 16.9667 41.6546 17.168C41.3002 17.4054 41.3002 17.4054 40.8627 17.612C40.6467 17.7173 40.6467 17.7173 40.4263 17.8248C40.0525 17.9573 40.0525 17.9573 39.7612 17.76C39.9493 17.5995 40.1374 17.4392 40.3256 17.279C40.4828 17.1451 40.4828 17.1451 40.6431 17.0084C41.1062 16.6241 41.2182 16.576 41.8003 16.576Z" fill="#B0D2DD"/>
<path d="M59.7147 50.7147C60.4357 50.7798 61.1566 50.8449 61.8994 50.912C61.3168 51.504 61.3168 51.504 60.9413 51.5186C60.7487 51.4809 60.7487 51.4809 60.5522 51.4423C60.4223 51.4187 60.2923 51.395 60.1585 51.3706C60.0601 51.3495 59.9617 51.3284 59.8604 51.3067C59.8123 51.1113 59.7642 50.9159 59.7147 50.7147Z" fill="#8D8C8F"/>
<path d="M33.6442 43.6107C34.6273 44.178 34.6273 44.178 34.955 44.4C34.955 44.6605 34.955 44.921 34.955 45.1893C34.3843 44.9316 34.0336 44.6306 33.6442 44.0053C33.6442 43.8751 33.6442 43.7448 33.6442 43.6107Z" fill="#1F3133"/>
<path d="M66.5601 40.4533C66.997 41.2427 66.997 41.2427 66.9879 41.8593C66.9429 42.0466 66.8978 42.2338 66.8514 42.4267C66.563 42.622 66.563 42.622 66.2688 42.8213C66.3649 42.0399 66.4611 41.2585 66.5601 40.4533Z" fill="#4C7783"/>
<path d="M62.1907 40.848C62.7739 41.5369 63.0102 41.9628 63.0645 43.0187C62.9204 43.1489 62.7762 43.2791 62.6276 43.4133C62.4834 42.5668 62.3392 41.7202 62.1907 40.848Z" fill="#D8DDDE"/>
<path d="M33.9354 37.0987C34.0902 37.4563 34.0902 37.4563 34.2267 37.888C34.1787 38.0834 34.1306 38.2787 34.0811 38.48C34.0484 38.9192 34.0217 39.3593 33.9992 39.7997C33.987 40.0324 33.9747 40.2652 33.9622 40.505C33.9533 40.6833 33.9445 40.8616 33.9354 41.0453C33.8874 41.0453 33.8393 41.0453 33.7898 41.0453C33.7572 40.6098 33.7274 40.174 33.6988 39.738C33.6819 39.4953 33.665 39.2526 33.6476 39.0026C33.6441 38.2722 33.7353 37.7715 33.9354 37.0987Z" fill="#64757F"/>
<path d="M61.8994 32.3627C62.2839 32.3627 62.6684 32.3627 63.0646 32.3627C63.0646 32.558 63.0646 32.7534 63.0646 32.9547C62.9685 32.9547 62.8723 32.9547 62.7733 32.9547C62.7252 33.0849 62.6772 33.2152 62.6277 33.3493C62.3455 33.4603 62.3455 33.4603 62.0451 33.5467C61.9009 33.6444 61.9009 33.6444 61.7538 33.744C62.0269 32.9793 62.0269 32.9793 62.1907 32.7573C62.0946 32.6271 61.9985 32.4969 61.8994 32.3627Z" fill="#3F7080"/>
<path d="M41.509 28.6133C41.5571 28.8087 41.6051 29.0041 41.6546 29.2053C41.4458 29.6517 41.4458 29.6517 41.154 30.1303C41.058 30.2898 40.9621 30.4493 40.8633 30.6137C40.7503 30.7957 40.7503 30.7957 40.6351 30.9813C40.4909 30.8511 40.3467 30.7209 40.1982 30.5867C40.3063 30.4442 40.4145 30.3018 40.5259 30.155C40.8817 29.662 41.1985 29.1587 41.509 28.6133Z" fill="#0C1315"/>
<path d="M62.1907 22.2987C62.8937 22.7749 63.3121 23.4552 63.7928 24.272C63.6471 24.6667 63.6471 24.6667 63.3558 24.864C63.2961 24.7238 63.2364 24.5837 63.1749 24.4393C63.0964 24.2579 63.018 24.0765 62.9371 23.8897C62.8205 23.6184 62.8205 23.6184 62.7016 23.3416C62.5115 22.8695 62.5115 22.8695 62.1907 22.6933C62.1907 22.5631 62.1907 22.4328 62.1907 22.2987Z" fill="#123340"/>
<path d="M46.3153 21.904C46.3634 21.904 46.4114 21.904 46.4609 21.904C46.509 22.6854 46.5571 23.4669 46.6066 24.272C46.4624 24.272 46.3182 24.272 46.1696 24.272C45.8301 23.0371 45.8301 23.0371 46.0695 22.311C46.1506 22.1767 46.2317 22.0424 46.3153 21.904Z" fill="#7E7B78"/>
<path d="M35.2099 21.2627C35.318 21.2789 35.4261 21.2952 35.5376 21.312C35.0287 22.0217 34.5019 22.6607 33.9355 23.2853C33.8393 23.2202 33.7432 23.1551 33.6442 23.088C34.6526 21.3313 34.6526 21.3313 35.2099 21.2627Z" fill="#6D97AA"/>
<path d="M48.6457 52.096C48.8379 52.1611 49.0302 52.2262 49.2282 52.2933C49.2464 53.6007 49.2464 53.6007 49.0826 54.2667C48.8423 54.2667 48.602 54.2667 48.3544 54.2667C48.4024 54.1364 48.4505 54.0062 48.5 53.872C48.5961 53.872 48.6923 53.872 48.7913 53.872C48.8394 53.351 48.8874 52.8301 48.937 52.2933C48.8408 52.2282 48.7447 52.1631 48.6457 52.096Z" fill="#7AB5D3"/>
<path d="M54.7628 52.4907C55.1232 52.5883 55.1232 52.5883 55.491 52.688C55.491 53.0136 55.491 53.3392 55.491 53.6747C55.2507 53.6747 55.0104 53.6747 54.7628 53.6747C54.7628 53.2839 54.7628 52.8932 54.7628 52.4907Z" fill="#67C6F5"/>
<path d="M37.1397 50.5173C37.5277 50.5882 37.9161 50.6511 38.3048 50.7147C38.3048 50.7798 38.3048 50.8449 38.3048 50.912C37.0792 51.0097 37.0792 51.0097 35.8289 51.1093C35.8769 50.914 35.925 50.7186 35.9745 50.5173C36.3965 50.2314 36.6779 50.4015 37.1397 50.5173Z" fill="#D0D2D4"/>
<path d="M49.3739 44.4C49.3739 44.5954 49.3739 44.7907 49.3739 44.992C49.2297 45.0571 49.0855 45.1222 48.937 45.1893C48.937 45.0591 48.937 44.9288 48.937 44.7947C48.6031 44.8224 48.2694 44.8514 47.9356 44.881C47.7498 44.897 47.5639 44.913 47.3724 44.9296C46.915 44.951 46.915 44.951 46.6066 45.1893C46.6066 44.994 46.6066 44.7986 46.6066 44.5973C47.5198 44.5322 48.433 44.4671 49.3739 44.4Z" fill="#797979"/>
<path d="M30.2943 40.848C30.5687 41.4924 30.6574 42.0875 30.7313 42.8213C30.1669 42.4513 30.1669 42.4513 30.003 42.2293C29.9971 41.8347 29.9968 41.4399 30.003 41.0453C30.0992 40.9802 30.1953 40.9151 30.2943 40.848Z" fill="#497078"/>
<path d="M31.6051 38.0853C31.6532 38.0853 31.7013 38.0853 31.7508 38.0853C31.7988 38.6714 31.8469 39.2575 31.8964 39.8613C31.608 40.0567 31.608 40.0567 31.3138 40.256C31.2774 38.7513 31.2774 38.7513 31.6051 38.0853Z" fill="#06262A"/>
<path d="M31.6051 34.336C31.7012 34.4662 31.7973 34.5965 31.8964 34.7307C31.8782 35.3227 31.8782 35.3227 31.7507 35.9147C31.4503 36.186 31.4503 36.186 31.1682 36.3093C31.1682 35.7884 31.1682 35.2674 31.1682 34.7307C31.2643 34.7307 31.3604 34.7307 31.4594 34.7307C31.5075 34.6004 31.5556 34.4702 31.6051 34.336Z" fill="#5A8493"/>
<path d="M54.9084 33.9413C54.7642 34.2344 54.7642 34.2344 54.6171 34.5333C54.2382 34.5911 54.2382 34.5911 53.7979 34.5703C53.5788 34.5623 53.5788 34.5623 53.3552 34.5541C53.1868 34.5438 53.1868 34.5438 53.015 34.5333C53.3272 34.1103 53.4635 34.044 53.8798 33.9043C53.9802 33.869 54.0807 33.8336 54.1842 33.7972C54.4715 33.744 54.4715 33.744 54.9084 33.9413Z" fill="#747474"/>
<path d="M38.7418 32.7573C39.1719 32.7844 39.4999 32.8267 39.8409 33.2037C40.0435 33.5097 40.0435 33.5097 40.3439 34.1387C40.3166 34.6073 40.3166 34.6073 40.1982 34.928C39.6156 33.7933 39.6156 33.7933 39.6156 33.3493C39.3273 33.2191 39.0389 33.0889 38.7418 32.9547C38.7418 32.8896 38.7418 32.8244 38.7418 32.7573Z" fill="#98CCDA"/>
<path d="M58.5495 32.7573C58.4705 32.8029 58.3914 32.8484 58.31 32.8953C57.6343 33.3126 57.2899 33.6053 56.9474 34.5333C56.8513 34.5333 56.7552 34.5333 56.6561 34.5333C57.0618 33.0808 57.0618 33.0808 57.5846 32.708C57.9949 32.5492 58.1525 32.5971 58.5495 32.7573Z" fill="#8FC0D3"/>
<path d="M54.4715 31.376C55.0002 31.4411 55.5289 31.5062 56.0736 31.5733C56.0736 32.1653 56.0736 32.1653 55.8551 32.4983C55.783 32.5838 55.7109 32.6693 55.6367 32.7573C55.1997 31.9927 55.1997 31.9927 55.1997 31.7707C54.9594 31.7056 54.7191 31.6404 54.4715 31.5733C54.4715 31.5082 54.4715 31.4431 54.4715 31.376Z" fill="#D1D1CF"/>
<path d="M42.9654 24.6667C43.3333 25.133 43.5317 25.3898 43.6937 26.048C43.4534 26.048 43.213 26.048 42.9654 26.048C42.8213 25.6573 42.6771 25.2666 42.5285 24.864C42.6727 24.7989 42.8169 24.7338 42.9654 24.6667Z" fill="#848680"/>
<path d="M46.024 21.7067C46.0721 21.7067 46.1202 21.7067 46.1697 21.7067C46.1999 22.4425 46.1239 22.8369 45.8784 23.4827C45.8226 23.8756 45.7727 24.2702 45.7328 24.6667C45.6366 24.6667 45.5405 24.6667 45.4415 24.6667C45.4946 23.5489 45.5952 22.6919 46.024 21.7067Z" fill="#272220"/>
<path d="M45.0045 22.8907C45.2445 23.4761 45.3603 24.0068 45.4414 24.6667C45.2492 24.7318 45.0569 24.7969 44.8588 24.864C44.7718 24.3188 44.7132 23.8457 44.7132 23.2853C44.8093 23.1551 44.9054 23.0249 45.0045 22.8907Z" fill="#A29494"/>
<path d="M33.0616 22.8907C33.2538 23.2163 33.4461 23.5419 33.6442 23.8773C33.4542 24.2758 33.2599 24.6705 33.0616 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8977 23.5567 32.8977 23.5567 33.0616 22.8907Z" fill="#45717E"/>
<path d="M42.3829 17.9573C42.479 17.9573 42.5752 17.9573 42.6742 17.9573C42.6952 18.1039 42.7163 18.2504 42.7379 18.4013C42.8056 18.8493 42.8808 19.2908 42.9655 19.7333C42.8213 19.7985 42.6771 19.8636 42.5286 19.9307C42.5286 19.6051 42.5286 19.2795 42.5286 18.944C42.3844 18.8789 42.2402 18.8138 42.0916 18.7467C42.1877 18.4862 42.2839 18.2257 42.3829 17.9573Z" fill="#C9CED2"/>
<path d="M35.5375 58.8053C35.6817 58.903 35.6817 58.903 35.8288 59.0027C36.0459 59.8849 35.9501 60.6717 35.8288 61.568C35.6846 61.6657 35.6846 61.6657 35.5375 61.7653C35.5375 60.7885 35.5375 59.8117 35.5375 58.8053Z" fill="#316076"/>
<path d="M38.7417 55.056C38.8379 55.056 38.934 55.056 39.033 55.056C39.4029 55.7305 39.5229 56.1922 39.47 57.0293C39.4099 56.8991 39.3498 56.7689 39.2879 56.6347C39.2038 56.5044 39.1197 56.3742 39.033 56.24C38.8408 56.24 38.6485 56.24 38.4504 56.24C38.5241 55.812 38.5961 55.4507 38.7417 55.056Z" fill="#5CA7CD"/>
<path d="M33.7898 46.768C34.072 46.8913 34.072 46.8913 34.3724 47.1627C34.4634 47.7547 34.4634 47.7547 34.518 48.3467C34.6142 48.4769 34.7103 48.6072 34.8093 48.7413C34.6171 48.7413 34.4248 48.7413 34.2267 48.7413C34.1637 48.5216 34.1637 48.5216 34.0993 48.2973C33.9612 47.84 33.8119 47.4036 33.6442 46.9653C33.6922 46.9002 33.7403 46.8351 33.7898 46.768Z" fill="#173233"/>
<path d="M57.2388 45.7813C57.431 45.7813 57.6233 45.7813 57.8214 45.7813C57.8214 46.1721 57.8214 46.5628 57.8214 46.9653C57.533 47.1607 57.533 47.1607 57.2388 47.36C57.2388 46.839 57.2388 46.3181 57.2388 45.7813Z" fill="#A4A4A4"/>
<path d="M31.7507 43.808C31.8949 43.808 32.0391 43.808 32.1877 43.808C32.2357 43.9382 32.2838 44.0685 32.3333 44.2027C32.4775 44.2027 32.6217 44.2027 32.7703 44.2027C33.4352 45.0177 33.4352 45.0177 33.6441 45.584C32.8658 45.2118 32.2147 44.7509 31.7507 43.808Z" fill="#3D6062"/>
<path d="M64.3754 34.928C64.4235 34.928 64.4715 34.928 64.521 34.928C64.5601 35.1437 64.5991 35.3594 64.6394 35.5817C64.7944 36.2337 64.8628 36.4967 65.2493 36.9013C65.1036 37.296 65.1036 37.296 64.8123 37.4933C64.7943 37.3102 64.7943 37.3102 64.7759 37.1233C64.694 36.6676 64.694 36.6676 64.3663 36.4573C64.2732 36.4085 64.1801 36.3597 64.0841 36.3093C64.1802 36.2442 64.2764 36.1791 64.3754 36.112C64.3754 35.7213 64.3754 35.3306 64.3754 34.928Z" fill="#112C35"/>
<path d="M61.0255 35.9147C61.2178 35.9147 61.41 35.9147 61.6081 35.9147C61.7874 36.9833 61.7874 36.9833 61.6172 37.5673C61.5661 37.6732 61.5151 37.779 61.4624 37.888C61.3663 37.8229 61.2702 37.7578 61.1712 37.6907C61.1109 37.2829 61.1109 37.2829 61.0801 36.7903C61.0692 36.6273 61.0584 36.4642 61.0471 36.2962C61.04 36.1703 61.0329 36.0444 61.0255 35.9147Z" fill="#E3E2E3"/>
<path d="M33.2072 25.0613C33.2553 25.0613 33.3033 25.0613 33.3529 25.0613C33.3704 26.2015 33.3284 27.2872 33.2072 28.416C33.1592 28.416 33.1111 28.416 33.0616 28.416C33.0293 27.9681 32.9994 27.52 32.9705 27.0717C32.9536 26.8221 32.9367 26.5726 32.9193 26.3155C32.9159 25.6533 32.9159 25.6533 33.2072 25.0613Z" fill="#04131D"/>
<path d="M60.1517 59.5947C60.3601 60.1594 60.239 60.5683 60.1517 61.1733C59.9594 61.1733 59.7672 61.1733 59.5691 61.1733C59.5691 60.7826 59.5691 60.3919 59.5691 59.9893C59.7613 59.8591 59.9536 59.7289 60.1517 59.5947Z" fill="#295C73"/>
<path d="M43.5481 59.9893C43.6442 59.9893 43.7403 59.9893 43.8394 59.9893C43.8576 61.494 43.8576 61.494 43.6937 62.16C43.5495 62.0949 43.4053 62.0298 43.2568 61.9627C43.3235 61.278 43.3866 60.6457 43.5481 59.9893Z" fill="#295363"/>
<path d="M37.1397 46.5707C37.1877 46.5707 37.2358 46.5707 37.2853 46.5707C37.2996 46.737 37.3139 46.9034 37.3286 47.0748C37.3503 47.291 37.3721 47.5072 37.3946 47.73C37.4148 47.9452 37.4351 48.1604 37.456 48.3821C37.5343 48.9639 37.5343 48.9639 37.8793 49.2115C37.9716 49.2517 38.064 49.2919 38.1592 49.3333C38.1111 49.4636 38.0631 49.5938 38.0135 49.728C37.7405 49.6787 37.7405 49.6787 37.431 49.5307C37.1166 48.8919 37.1082 48.3614 37.1215 47.6067C37.1254 47.3151 37.1254 47.3151 37.1294 47.0177C37.1328 46.8702 37.1362 46.7227 37.1397 46.5707Z" fill="#E6E6E6"/>
<path d="M64.3754 42.8213C64.4981 43.2871 64.5412 43.5311 64.4209 44.0053C64.1992 44.4631 63.942 44.8165 63.6472 45.1893C63.6472 44.2187 63.9298 43.5623 64.3754 42.8213Z" fill="#051D21"/>
<path d="M35.2462 34.7307C35.2462 34.9911 35.2462 35.2516 35.2462 35.52C35.1501 35.52 35.054 35.52 34.9549 35.52C34.9549 35.6502 34.9549 35.7805 34.9549 35.9147C34.6185 35.9147 34.2821 35.9147 33.9354 35.9147C33.9835 35.7844 34.0316 35.6542 34.0811 35.52C34.2733 35.52 34.4656 35.52 34.6637 35.52C34.6637 35.3246 34.6637 35.1293 34.6637 34.928C34.9549 34.7307 34.9549 34.7307 35.2462 34.7307Z" fill="#567D8F"/>
<path d="M40.7808 29.6C40.7808 29.7954 40.7808 29.9907 40.7808 30.192C40.5464 30.5019 40.5464 30.5019 40.2346 30.8087C40.1332 30.9109 40.0318 31.0132 39.9274 31.1185C39.6235 31.3695 39.3807 31.4863 39.033 31.5733C38.985 31.4431 38.9369 31.3129 38.8874 31.1787C39.0009 31.1069 39.0009 31.1069 39.1167 31.0338C39.734 30.6318 40.2612 30.216 40.7808 29.6Z" fill="#103139"/>
<path d="M35.2462 30.192C35.7014 30.266 35.7014 30.266 36.1201 30.3893C36.1201 30.5847 36.1201 30.7801 36.1201 30.9813C35.7833 31.117 35.7833 31.117 35.3919 31.1787C35.1279 30.895 35.1279 30.895 34.955 30.5867C35.0511 30.4564 35.1472 30.3262 35.2462 30.192Z" fill="#04252D"/>
<path d="M31.8964 27.6267C31.9925 27.6918 32.0886 27.7569 32.1877 27.824C32.1396 27.9542 32.0916 28.0845 32.042 28.2187C31.8979 28.2838 31.7537 28.3489 31.6051 28.416C31.7974 28.5462 31.9896 28.6765 32.1877 28.8107C31.7932 29.0779 31.4581 29.0208 31.0225 29.008C31.2255 28.3435 31.4564 28.0241 31.8964 27.6267Z" fill="#264443"/>
<path d="M36.1201 18.7467C36.9372 18.7467 37.7543 18.7467 38.5961 18.7467C38.5961 18.8769 38.5961 19.0072 38.5961 19.1413C38.6922 19.2065 38.7883 19.2716 38.8874 19.3387C38.6891 19.2959 38.6891 19.2959 38.4869 19.2523C37.7018 19.0988 36.9106 19.0267 36.1201 18.944C36.1201 18.8789 36.1201 18.8138 36.1201 18.7467Z" fill="#011014"/>
<path d="M59.5691 56.832C59.6172 56.832 59.6652 56.832 59.7147 56.832C59.7642 57.1401 59.8125 57.4485 59.8604 57.757C59.8874 57.9287 59.9145 58.1004 59.9423 58.2773C60.0045 58.7929 60.0171 59.2707 60.006 59.792C59.8618 59.8571 59.7177 59.9222 59.5691 59.9893C59.5691 58.9474 59.5691 57.9055 59.5691 56.832Z" fill="#46738C"/>
<path d="M48.2087 47.36C48.5452 47.36 48.8816 47.36 49.2283 47.36C49.2283 47.6856 49.2283 48.0112 49.2283 48.3467C48.8004 48.1863 48.8004 48.1863 48.3544 47.952C48.3063 47.7566 48.2583 47.5613 48.2087 47.36Z" fill="#575556"/>
<path d="M64.958 45.7813C65.0541 45.7813 65.1502 45.7813 65.2493 45.7813C65.0499 46.4027 64.8305 46.7775 64.4482 47.212C64.3153 47.3662 64.3153 47.3662 64.1797 47.5234C63.9384 47.7547 63.9384 47.7547 63.6472 47.7547C63.6472 47.6244 63.6472 47.4942 63.6472 47.36C63.7403 47.3071 63.8334 47.2542 63.9293 47.1997C64.278 46.9877 64.278 46.9877 64.3754 46.3733C64.6758 46.2377 64.6758 46.2377 64.958 46.176C64.958 46.0458 64.958 45.9155 64.958 45.7813Z" fill="#314748"/>
<path d="M67.2883 35.7173C67.3363 35.7173 67.3844 35.7173 67.4339 35.7173C67.3658 36.5177 67.3058 37.1906 66.997 37.888C66.9009 37.7578 66.8047 37.6275 66.7057 37.4933C66.7581 36.8066 67.0096 36.2837 67.2883 35.7173Z" fill="#5A8694"/>
<path d="M67.2883 35.1253C67.2042 35.7865 67.0574 36.0493 66.7057 36.5067C66.5345 36.921 66.5345 36.921 66.4144 37.296C66.3432 36.0402 66.3432 36.0402 66.6875 35.4337C66.997 35.1253 66.997 35.1253 67.2883 35.1253Z" fill="#0E252A"/>
<path d="M46.024 34.336C46.5047 34.336 46.9853 34.336 47.4805 34.336C47.2932 34.8436 47.1406 34.9299 46.7523 35.1253C46.4337 35.0883 46.4337 35.0883 46.1697 34.928C46.1216 34.7326 46.0736 34.5373 46.024 34.336Z" fill="#A0A19E"/>
<path d="M61.3168 32.1653C61.5091 32.3607 61.7013 32.556 61.8994 32.7573C61.7958 32.9222 61.7958 32.9222 61.69 33.0903C61.4444 33.5829 61.3766 33.9501 61.3168 34.5333C61.2688 34.5333 61.2207 34.5333 61.1712 34.5333C61.1712 33.9472 61.1712 33.3612 61.1712 32.7573C61.075 32.6922 60.9789 32.6271 60.8799 32.56C61.0241 32.56 61.1683 32.56 61.3168 32.56C61.3168 32.4298 61.3168 32.2995 61.3168 32.1653Z" fill="#224253"/>
<path d="M64.0841 25.6533C64.3754 25.8507 64.3754 25.8507 64.4994 26.2584C64.5366 26.421 64.5738 26.5835 64.6121 26.751C64.65 26.9141 64.6879 27.0771 64.727 27.2451C64.7552 27.371 64.7833 27.4969 64.8123 27.6267C64.7162 27.7569 64.6201 27.8871 64.521 28.0213C64.4249 27.9562 64.3288 27.8911 64.2298 27.824C64.1694 27.3299 64.1694 27.3299 64.1387 26.7263C64.1278 26.5267 64.1169 26.327 64.1057 26.1212C64.0986 25.9668 64.0915 25.8124 64.0841 25.6533Z" fill="#091E20"/>
<path d="M50.1021 20.9173C50.0541 21.1127 50.006 21.3081 49.9565 21.5093C49.2355 21.4442 48.5146 21.3791 47.7718 21.312C47.7718 21.2469 47.7718 21.1818 47.7718 21.1147C48.554 20.9801 49.3134 20.8946 50.1021 20.9173Z" fill="#77746F"/>
<path d="M46.6066 20.3253C46.6066 20.5858 46.6066 20.8463 46.6066 21.1147C45.8179 21.1875 45.8179 21.1875 45.3868 20.8187C45.3087 20.721 45.2306 20.6233 45.1501 20.5227C46.115 20.3253 46.115 20.3253 46.6066 20.3253Z" fill="#B2AEAE"/>
<path d="M43.1111 18.5493C43.4115 18.8207 43.4115 18.8207 43.6937 19.3387C43.7022 20.0097 43.6336 20.652 43.548 21.312C43.5 21.312 43.4519 21.312 43.4024 21.312C43.2078 20.3564 43.0742 19.5489 43.1111 18.5493Z" fill="#130807"/>
<path d="M49.9564 17.5627C50.1006 17.5627 50.2448 17.5627 50.3934 17.5627C50.1203 18.6973 50.1203 18.6973 49.9564 19.1413C49.7161 19.1413 49.4758 19.1413 49.2282 19.1413C49.3243 18.946 49.4205 18.7506 49.5195 18.5493C49.6156 18.5493 49.7118 18.5493 49.8108 18.5493C49.8589 18.2237 49.9069 17.8981 49.9564 17.5627Z" fill="#0A373E"/>
<path d="M61.6081 58.8053C61.7043 58.8053 61.8004 58.8053 61.8994 58.8053C61.8994 59.3914 61.8994 59.9775 61.8994 60.5813C61.8033 60.5813 61.7072 60.5813 61.6081 60.5813C61.6081 60.4511 61.6081 60.3208 61.6081 60.1867C61.512 60.1867 61.4159 60.1867 61.3168 60.1867C61.413 59.7308 61.5091 59.275 61.6081 58.8053Z" fill="#3A6779"/>
<path d="M45.4415 48.544C45.7328 48.9387 45.7328 48.9387 45.7612 49.3657C45.7578 49.526 45.7544 49.6862 45.751 49.8513C45.7483 50.0126 45.7457 50.1739 45.743 50.34C45.7379 50.5255 45.7379 50.5255 45.7328 50.7147C45.4924 50.7147 45.2521 50.7147 45.0045 50.7147C44.9565 50.5844 44.9084 50.4542 44.8589 50.32C45.0511 50.32 45.2434 50.32 45.4415 50.32C45.4415 49.7339 45.4415 49.1478 45.4415 48.544Z" fill="#E9E8E8"/>
<path d="M62.4598 45.9594C62.7585 45.9658 63.0572 45.9722 63.3559 45.9787C62.9523 46.7305 62.3904 46.7815 61.7538 46.9653C62.1039 45.9849 62.1039 45.9849 62.4598 45.9594Z" fill="#151A1A"/>
<path d="M33.9354 45.1893C34.1757 45.3847 34.416 45.5801 34.6636 45.7813C34.6156 45.9767 34.5675 46.1721 34.518 46.3733C34.0902 46.2993 34.0902 46.2993 33.6441 46.176C33.5961 46.0458 33.548 45.9155 33.4985 45.7813C33.6427 45.7813 33.7869 45.7813 33.9354 45.7813C33.9354 45.586 33.9354 45.3906 33.9354 45.1893Z" fill="#0F2522"/>
<path d="M62.482 33.744C62.8045 34.493 62.9204 35.2746 63.0646 36.112C62.9204 36.1771 62.7762 36.2422 62.6277 36.3093C62.5751 35.919 62.5237 35.5284 62.4729 35.1377C62.4442 34.9202 62.4155 34.7027 62.3859 34.4786C62.3695 34.3013 62.3532 34.124 62.3364 33.9413C62.3844 33.8762 62.4325 33.8111 62.482 33.744Z" fill="#567C8B"/>
<path d="M61.7082 31.45C61.8194 31.4907 61.9305 31.5314 62.045 31.5733C61.5464 32.1949 61.1067 32.2762 60.4429 32.3627C61.1591 31.3462 61.1591 31.3462 61.7082 31.45Z" fill="#000809"/>
<path d="M48.2087 30.3893C48.1607 30.5847 48.1126 30.78 48.0631 30.9813C47.5092 31.3148 47.1815 31.4152 46.6066 31.1787C46.7911 31.0456 46.9764 30.9144 47.1619 30.784C47.265 30.7107 47.368 30.6375 47.4742 30.562C47.7718 30.3893 47.7718 30.3893 48.2087 30.3893Z" fill="#A8A8A5"/>
<path d="M57.6757 24.6667C57.8884 24.7889 58.1008 24.9125 58.3129 25.0367C58.4312 25.1054 58.5494 25.174 58.6713 25.2448C58.9865 25.456 58.9865 25.456 59.2778 25.8507C59.1336 25.9158 58.9894 25.9809 58.8408 26.048C58.7447 25.9178 58.6486 25.7875 58.5495 25.6533C58.2122 25.4484 57.8724 25.2503 57.53 25.0613C57.5781 24.9311 57.6262 24.8009 57.6757 24.6667Z" fill="#54869E"/>
<path d="M32.7702 23.088C32.8664 23.088 32.9625 23.088 33.0615 23.088C32.9654 23.8694 32.8693 24.6509 32.7702 25.456C32.6261 25.5211 32.4819 25.5862 32.3333 25.6533C32.3501 25.3736 32.3686 25.0941 32.3879 24.8147C32.3981 24.659 32.4082 24.5033 32.4187 24.3429C32.4812 23.8604 32.5934 23.5126 32.7702 23.088Z" fill="#09363A"/>
<path d="M34.518 22.6933C34.518 23.4058 34.3781 23.9875 34.2267 24.6667C34.0345 24.6667 33.8422 24.6667 33.6442 24.6667C33.8437 23.8783 34.1186 23.3248 34.518 22.6933Z" fill="#568296"/>
<path d="M43.4024 21.904C43.7005 22.5099 43.8675 22.9708 43.985 23.68C43.7728 24.1124 43.7728 24.1124 43.548 24.4693C43.4951 24.1532 43.4438 23.8365 43.3933 23.5197C43.3646 23.3434 43.3358 23.1671 43.3062 22.9855C43.2567 22.496 43.2567 22.496 43.4024 21.904Z" fill="#BCC3C1"/>
<path d="M58.5495 21.312C58.3553 21.4436 58.1611 21.5751 57.9669 21.7067C57.8738 21.7799 57.7807 21.8532 57.6848 21.9287C57.3245 22.1358 57.0436 22.1305 56.6561 22.1013C57.2247 21.2577 57.732 21.2911 58.5495 21.312Z" fill="#43738A"/>
<path d="M53.5976 19.9307C53.9054 20.5561 53.9257 20.6225 53.8525 21.312C53.8397 21.4463 53.827 21.5806 53.8138 21.719C53.7433 22.1013 53.7433 22.1013 53.452 22.6933C53.448 22.3809 53.4452 22.0685 53.4429 21.756C53.4412 21.582 53.4395 21.408 53.4377 21.2287C53.4508 20.763 53.5002 20.3757 53.5976 19.9307Z" fill="#5B5C57"/>
<path d="M47.353 19.3263C47.5126 19.3281 47.6722 19.3299 47.8366 19.3317C47.9594 19.334 48.0822 19.3363 48.2087 19.3387C47.7629 19.8564 47.6652 19.9307 47.0436 19.9307C47.0436 19.8004 47.0436 19.6702 47.0436 19.536C46.8032 19.6662 46.5629 19.7965 46.3153 19.9307C46.2673 19.8004 46.2192 19.6702 46.1697 19.536C46.5723 19.2632 46.9046 19.3199 47.353 19.3263Z" fill="#D0D9DA"/>
<path d="M39.3243 18.352C39.3724 18.8078 39.4204 19.2637 39.4699 19.7333C39.2777 19.6682 39.0854 19.6031 38.8874 19.536C38.8874 19.4058 38.8874 19.2755 38.8874 19.1413C38.7912 19.1413 38.6951 19.1413 38.5961 19.1413C38.6441 18.946 38.6922 18.7506 38.7417 18.5493C39.033 18.352 39.033 18.352 39.3243 18.352Z" fill="#052226"/>
<path d="M52.2868 14.208C52.0464 14.5336 51.8061 14.8592 51.5585 15.1947C51.3663 15.0644 51.174 14.9342 50.976 14.8C50.976 14.6698 50.976 14.5395 50.976 14.4053C51.4066 14.1136 51.8123 14.1961 52.2868 14.208Z" fill="#416672"/>
<path d="M46.6066 59.0027C47.3756 59.0027 48.1446 59.0027 48.9369 59.0027C48.9369 59.0678 48.9369 59.1329 48.9369 59.2C48.264 59.2651 47.5911 59.3302 46.8979 59.3973C46.8498 59.5927 46.8017 59.7881 46.7522 59.9893C46.6561 59.9242 46.56 59.8591 46.4609 59.792C46.509 59.5315 46.5571 59.271 46.6066 59.0027Z" fill="#3B6A7C"/>
<path d="M55.3453 56.6347C55.3726 57.3007 55.3726 57.3007 55.3453 58.016C55.1291 58.2114 55.1291 58.2114 54.9084 58.4107C54.8083 57.8557 54.8083 57.8557 54.7628 57.2267C55.0832 56.6347 55.0832 56.6347 55.3453 56.6347Z" fill="#418DAE"/>
<path d="M56.0735 55.648C56.2177 55.7131 56.3619 55.7782 56.5105 55.8453C56.5105 56.3663 56.5105 56.8872 56.5105 57.424C56.3663 57.424 56.2221 57.424 56.0735 57.424C56.0735 56.8379 56.0735 56.2518 56.0735 55.648Z" fill="#5C9CB7"/>
<path d="M35.9745 52.688C36.1687 52.9511 36.3629 53.2142 36.5571 53.4773C36.467 53.5587 36.3768 53.6401 36.284 53.724C35.9646 54.0803 35.8394 54.3474 35.6832 54.8587C35.6416 53.3928 35.6416 53.3928 35.9745 52.688Z" fill="#66C1EF"/>
<path d="M43.985 49.136C44.1292 49.2662 44.2734 49.3965 44.4219 49.5307C44.167 50.8627 44.167 50.8627 43.8393 51.3067C43.6937 51.1093 43.6937 51.1093 43.6664 50.4433C43.6937 49.728 43.6937 49.728 43.985 49.136Z" fill="#D2D0D2"/>
<path d="M66.7057 42.4267C66.8018 42.4267 66.898 42.4267 66.997 42.4267C66.997 42.622 66.997 42.8174 66.997 43.0187C66.9009 43.0187 66.8047 43.0187 66.7057 43.0187C66.6937 43.1733 66.6817 43.328 66.6693 43.4873C66.5601 44.0053 66.5601 44.0053 66.2597 44.2643C66.12 44.3315 66.12 44.3315 65.9775 44.4C66.0736 44.0093 66.1697 43.6186 66.2688 43.216C66.3649 43.216 66.461 43.216 66.5601 43.216C66.6081 42.9555 66.6562 42.695 66.7057 42.4267Z" fill="#1E3D42"/>
<path d="M30.1486 36.704C30.2448 36.704 30.3409 36.704 30.4399 36.704C30.4399 37.3552 30.4399 38.0064 30.4399 38.6773C30.3438 38.6773 30.2477 38.6773 30.1486 38.6773C29.9848 37.37 29.9848 37.37 30.1486 36.704Z" fill="#4F767E"/>
<path d="M57.2387 33.744C57.3829 33.8091 57.5271 33.8742 57.6757 33.9413C57.6757 34.0716 57.6757 34.2018 57.6757 34.336C58.1563 34.336 58.6369 34.336 59.1321 34.336C59.1321 34.4011 59.1321 34.4662 59.1321 34.5333C58.4112 34.5333 57.6902 34.5333 56.9474 34.5333C57.0436 34.2729 57.1397 34.0124 57.2387 33.744Z" fill="#3F606C"/>
<path d="M48.7913 33.9413C49.368 34.0064 49.9448 34.0716 50.539 34.1387C50.3948 34.2038 50.2506 34.2689 50.1021 34.336C50.1021 34.4662 50.1021 34.5965 50.1021 34.7307C49.6695 34.6655 49.2369 34.6004 48.7913 34.5333C48.7913 34.338 48.7913 34.1426 48.7913 33.9413Z" fill="#737572"/>
<path d="M55.491 26.048C55.5871 26.1131 55.6833 26.1782 55.7823 26.2453C55.8687 26.768 55.8904 27.2896 55.9279 27.824C55.7837 27.824 55.6396 27.824 55.491 27.824C55.3949 27.303 55.2987 26.7821 55.1997 26.2453C55.2958 26.1802 55.392 26.1151 55.491 26.048Z" fill="#4E92AC"/>
<path d="M39.7612 24.0747C40.1938 24.0747 40.6264 24.0747 41.072 24.0747C41.1201 24.3351 41.1682 24.5956 41.2177 24.864C41.002 24.8085 40.7866 24.7505 40.5714 24.6913C40.4514 24.6593 40.3314 24.6272 40.2078 24.5942C40.1085 24.553 40.0092 24.5118 39.9069 24.4693C39.8588 24.3391 39.8107 24.2088 39.7612 24.0747Z" fill="#316D7C"/>
<path d="M62.482 20.72C62.6742 20.8502 62.8665 20.9805 63.0646 21.1147C62.8243 21.4403 62.5839 21.7659 62.3364 22.1013C62.1922 22.0362 62.048 21.9711 61.8994 21.904C61.8994 21.7086 61.8994 21.5133 61.8994 21.312C62.0917 21.2469 62.2839 21.1818 62.482 21.1147C62.482 20.9844 62.482 20.8542 62.482 20.72Z" fill="#628A9E"/>
<path d="M40.1982 20.3253C40.5805 20.5103 40.5805 20.5103 40.9264 20.72C40.8784 21.0456 40.8303 21.3712 40.7808 21.7067C40.6847 21.7067 40.5885 21.7067 40.4895 21.7067C40.2871 21.3196 40.0925 20.9249 39.9069 20.5227C40.003 20.4575 40.0992 20.3924 40.1982 20.3253Z" fill="#062631"/>
<path d="M36.3176 18.732C36.5017 18.7572 36.6859 18.7824 36.8757 18.8083C37.1536 18.8438 37.1536 18.8438 37.4372 18.88C37.5793 18.9011 37.7215 18.9223 37.8679 18.944C37.8679 19.0091 37.8679 19.0742 37.8679 19.1413C36.6423 19.239 36.6423 19.239 35.3919 19.3387C35.8288 18.7467 35.8288 18.7467 36.3176 18.732Z" fill="#072628"/>
<path d="M52.1411 18.352C51.9489 18.4171 51.7566 18.4822 51.5585 18.5493C51.6066 18.7447 51.6547 18.9401 51.7042 19.1413C51.2716 19.0762 50.839 19.0111 50.3934 18.944C50.9366 18.2079 51.4086 18.0684 52.1411 18.352Z" fill="#204A50"/>
<path d="M51.5586 15.7867C51.6547 15.7867 51.7508 15.7867 51.8499 15.7867C51.8499 16.0471 51.8499 16.3076 51.8499 16.576C51.4129 16.9707 51.4129 16.9707 50.9487 16.8967C50.8135 16.856 50.6783 16.8153 50.5391 16.7733C51.0852 16.3787 51.0852 16.3787 51.4129 16.3787C51.461 16.1833 51.5091 15.9879 51.5586 15.7867Z" fill="#001214"/>
<path d="M46.024 55.2533C46.2163 55.3184 46.4085 55.3836 46.6066 55.4507C46.6066 55.7763 46.6066 56.1019 46.6066 56.4373C46.126 56.3071 45.6453 56.1768 45.1501 56.0427C45.1501 55.9775 45.1501 55.9124 45.1501 55.8453C45.4385 55.8453 45.7269 55.8453 46.024 55.8453C46.024 55.65 46.024 55.4546 46.024 55.2533Z" fill="#52A7CE"/>
<path d="M32.7703 42.4267C33.2072 42.7843 33.2072 42.7843 33.6442 43.216C33.6442 43.4114 33.6442 43.6067 33.6442 43.808C33.4519 43.7429 33.2597 43.6778 33.0616 43.6107C33.0616 43.4804 33.0616 43.3502 33.0616 43.216C32.8693 43.216 32.6771 43.216 32.479 43.216C32.5751 42.9555 32.6713 42.695 32.7703 42.4267Z" fill="#0B1F20"/>
<path d="M61.7538 40.6507C61.8018 40.7809 61.8499 40.9111 61.8994 41.0453C62.0436 41.1105 62.1878 41.1756 62.3364 41.2427C62.3844 41.5683 62.4325 41.8939 62.482 42.2293C62.2898 42.2945 62.0975 42.3596 61.8994 42.4267C61.9475 42.2313 61.9956 42.0359 62.0451 41.8347C61.9489 41.7695 61.8528 41.7044 61.7538 41.6373C61.7538 41.3117 61.7538 40.9861 61.7538 40.6507Z" fill="#181C1F"/>
<path d="M35.2462 34.928C35.3904 34.9931 35.5346 35.0582 35.6832 35.1253C35.137 36.0873 35.137 36.0873 34.8093 36.3093C34.8574 36.4396 34.9054 36.5698 34.955 36.704C34.7627 36.6389 34.5705 36.5738 34.3724 36.5067C34.4204 36.3113 34.4685 36.116 34.518 35.9147C34.6622 35.9147 34.8064 35.9147 34.955 35.9147C34.955 35.7844 34.955 35.6542 34.955 35.52C35.0511 35.52 35.1472 35.52 35.2462 35.52C35.2462 35.3246 35.2462 35.1293 35.2462 34.928Z" fill="#4D6672"/>
<path d="M62.218 32.6217C62.3487 32.6888 62.3487 32.6888 62.482 32.7573C62.3678 32.8672 62.2537 32.9771 62.1361 33.0903C61.7411 33.5618 61.6138 33.8625 61.4625 34.5333C61.4144 34.5333 61.3664 34.5333 61.3168 34.5333C61.4047 33.2713 61.4047 33.2713 61.6536 32.7573C61.8994 32.56 61.8994 32.56 62.218 32.6217Z" fill="#94BED3"/>
<path d="M35.1006 32.3627C35.1486 32.4929 35.1967 32.6231 35.2462 32.7573C35.052 32.8231 34.8578 32.8889 34.6636 32.9547C34.5104 33.0096 34.5104 33.0096 34.3541 33.0657C33.9883 33.1813 33.8387 33.1852 33.4985 32.9547C34.0103 32.2889 34.4103 32.3087 35.1006 32.3627Z" fill="#3F6F7F"/>
<path d="M38.5324 31.3637C38.6976 31.3677 38.8628 31.3718 39.033 31.376C39.0811 31.5062 39.1292 31.6365 39.1787 31.7707C38.8422 31.9009 38.5058 32.0311 38.1592 32.1653C38.063 31.97 37.9669 31.7746 37.8679 31.5733C38.0135 31.376 38.0135 31.376 38.5324 31.3637Z" fill="#06272E"/>
<path d="M33.9354 29.9947C34.0255 30.0638 34.1157 30.133 34.2085 30.2043C34.3106 30.2654 34.4128 30.3264 34.518 30.3893C34.6141 30.3242 34.7103 30.2591 34.8093 30.192C34.9054 30.5827 35.0016 30.9734 35.1006 31.376C34.6677 31.1541 34.3237 30.9373 33.9354 30.5867C33.9354 30.3913 33.9354 30.1959 33.9354 29.9947Z" fill="#092421"/>
<path d="M36.4114 27.824C36.4595 27.824 36.5076 27.824 36.5571 27.824C36.5571 28.6706 36.5571 29.5171 36.5571 30.3893C36.3168 30.3893 36.0765 30.3893 35.8289 30.3893C35.8769 30.194 35.925 29.9986 35.9745 29.7973C36.1187 29.7973 36.2629 29.7973 36.4114 29.7973C36.4114 29.1461 36.4114 28.4949 36.4114 27.824Z" fill="#4C7685"/>
<path d="M32.1877 29.2053C32.1096 29.2542 32.0315 29.303 31.951 29.3533C31.5226 29.6588 31.1312 30.0203 30.7312 30.3893C30.515 30.5847 30.515 30.5847 30.2943 30.784C30.7093 29.472 31.1268 29.0948 32.1877 29.2053Z" fill="#B8E5F1"/>
<path d="M65.2493 28.0213C65.6311 28.2283 65.8018 28.3468 66.0139 28.8353C66.05 28.9574 66.086 29.0795 66.1231 29.2053C65.9654 29.1565 65.9654 29.1565 65.8045 29.1067C65.4147 29.0128 65.0615 28.9927 64.6667 29.008C64.7148 28.8778 64.7628 28.7475 64.8123 28.6133C65.1127 28.49 65.1127 28.49 65.3949 28.416C65.3469 28.2858 65.2988 28.1555 65.2493 28.0213Z" fill="#395E62"/>
<path d="M45.5871 26.2453C46.236 26.4407 46.236 26.4407 46.8979 26.64C46.7537 26.8354 46.6095 27.0307 46.461 27.232C45.9742 27.1837 45.7902 27.1125 45.4415 26.64C45.4895 26.5098 45.5376 26.3795 45.5871 26.2453Z" fill="#CBC7C7"/>
<path d="M46.8979 23.2853C47.1892 23.4827 47.1892 23.4827 47.353 23.9513C47.4805 24.4693 47.4805 24.4693 47.4805 25.0613C47.2882 24.9962 47.096 24.9311 46.8979 24.864C46.8979 24.343 46.8979 23.8221 46.8979 23.2853Z" fill="#E1D8D4"/>
<path d="M44.1306 23.2853C44.2748 23.5458 44.419 23.8063 44.5676 24.0747C44.6637 23.9444 44.7598 23.8142 44.8589 23.68C45.0227 24.42 45.0227 24.42 44.8589 24.864C44.4894 24.6638 44.3064 24.5314 44.0851 24.0747C44.0521 23.9444 44.019 23.8142 43.985 23.68C44.033 23.5498 44.0811 23.4195 44.1306 23.2853Z" fill="#3E2F30"/>
<path d="M57.0931 22.6933C57.0931 22.8236 57.0931 22.9538 57.0931 23.088C56.6125 23.1531 56.1319 23.2182 55.6367 23.2853C56.1614 22.5744 56.4002 22.402 57.0931 22.6933Z" fill="#3C6577"/>
<path d="M49.2282 21.904C49.3724 21.9691 49.5166 22.0342 49.6652 22.1013C49.521 22.7525 49.3768 23.4037 49.2282 24.0747C49.1321 24.0747 49.036 24.0747 48.937 24.0747C49.0331 23.3584 49.1292 22.642 49.2282 21.904Z" fill="#A39D9B"/>
<path d="M33.6442 20.5227C33.7403 20.5878 33.8364 20.6529 33.9354 20.72C33.7352 21.2133 33.7352 21.2133 33.4985 21.7067C33.4024 21.7067 33.3063 21.7067 33.2072 21.7067C33.2072 21.8369 33.2072 21.9672 33.2072 22.1013C32.9188 22.2967 32.9188 22.2967 32.6246 22.496C32.8675 21.7182 33.2403 21.1563 33.6442 20.5227Z" fill="#0E2223"/>
<path d="M51.7042 59.2C51.8003 59.2 51.8964 59.2 51.9955 59.2C51.9474 59.9163 51.8994 60.6326 51.8498 61.3707C51.7057 61.3055 51.5615 61.2404 51.4129 61.1733C51.4129 60.978 51.4129 60.7826 51.4129 60.5813C51.509 60.5813 51.6052 60.5813 51.7042 60.5813C51.6772 60.39 51.6501 60.1988 51.6223 60.0017C51.6012 59.8022 51.5802 59.6028 51.5585 59.3973C51.6066 59.3322 51.6547 59.2671 51.7042 59.2Z" fill="#2A5A71"/>
<path d="M49.2282 48.7413C49.3724 48.839 49.3724 48.839 49.5195 48.9387C49.6378 49.506 49.6378 49.506 49.6651 50.1227C49.521 50.318 49.3768 50.5134 49.2282 50.7147C49.2282 50.0635 49.2282 49.4123 49.2282 48.7413ZM49.6651 49.5307C49.7613 49.6609 49.8574 49.7911 49.9564 49.9253C49.8603 49.9253 49.7642 49.9253 49.6651 49.9253C49.6651 49.7951 49.6651 49.6649 49.6651 49.5307Z" fill="#F1F1F1"/>
<path d="M31.4595 45.1893C31.844 45.3196 32.2285 45.4498 32.6246 45.584C32.4804 45.8445 32.3363 46.105 32.1877 46.3733C31.9055 46.2253 31.9055 46.2253 31.6051 45.9787C31.5571 45.7182 31.509 45.4577 31.4595 45.1893Z" fill="#172D2A"/>
<path d="M34.518 32.56C34.8548 32.597 34.8548 32.597 35.2462 32.7573C35.6372 33.4149 35.7361 33.8944 35.6832 34.7307C35.3919 34.336 35.3919 34.336 35.1825 33.7563C34.9871 33.2374 34.8385 32.9322 34.518 32.56Z" fill="#A0D3DE"/>
<path d="M52.4324 24.6667C52.5766 24.7318 52.7208 24.7969 52.8694 24.864C52.751 25.2463 52.751 25.2463 52.5781 25.6533C52.4339 25.7185 52.2897 25.7836 52.1411 25.8507C52.0931 25.5902 52.045 25.3297 51.9955 25.0613C52.1397 24.9311 52.2839 24.8009 52.4324 24.6667Z" fill="#DEDDD6"/>
<path d="M43.6937 23.4827C43.985 23.828 43.985 23.828 44.2763 24.272C44.2763 24.5325 44.2763 24.793 44.2763 25.0613C44.0841 24.9311 43.8918 24.8009 43.6937 24.6667C43.6937 24.2759 43.6937 23.8852 43.6937 23.4827Z" fill="#E2E5E5"/>
<path d="M63.0646 23.2853C63.401 23.4156 63.7375 23.5458 64.0841 23.68C64.0841 24.1358 64.0841 24.5917 64.0841 25.0613C63.6804 24.7879 63.5771 24.402 63.3559 23.8773C63.2597 23.682 63.1636 23.4866 63.0646 23.2853Z" fill="#3A6A73"/>
<path d="M41.8003 21.312C42.1648 21.8918 42.3056 22.334 42.3829 23.088C42.2387 23.1531 42.0945 23.2182 41.9459 23.2853C41.7773 22.5999 41.7903 22.0302 41.8003 21.312Z" fill="#828B8A"/>
<path d="M63.5015 21.1147C64.0589 21.7903 64.335 22.3001 64.521 23.2853C64.4249 23.2202 64.3288 23.1551 64.2298 23.088C64.2298 22.9578 64.2298 22.8275 64.2298 22.6933C64.1336 22.6933 64.0375 22.6933 63.9385 22.6933C63.8904 22.3677 63.8423 22.0421 63.7928 21.7067C63.6967 21.7067 63.6006 21.7067 63.5015 21.7067C63.5015 21.5113 63.5015 21.3159 63.5015 21.1147Z" fill="#22494B"/>
<path d="M46.4609 21.904C46.6051 21.904 46.7493 21.904 46.8979 21.904C46.8125 23.1181 46.8125 23.1181 46.7522 23.4827C46.608 23.5804 46.608 23.5804 46.4609 23.68C46.4609 23.0939 46.4609 22.5078 46.4609 21.904Z" fill="#EAE7E6"/>
<path d="M43.985 17.3653C44.033 17.5607 44.0811 17.756 44.1306 17.9573C44.3491 18.2863 44.3491 18.2863 44.5676 18.5493C44.0796 18.4353 43.8856 18.2364 43.548 17.76C43.2422 17.528 43.2422 17.528 42.9655 17.3653C43.417 17.1614 43.5562 17.133 43.985 17.3653Z" fill="#183C3C"/>
<path d="M46.1696 16.7733C46.2177 16.9036 46.2658 17.0338 46.3153 17.168C46.4084 17.225 46.5015 17.282 46.5975 17.3407C46.959 17.6079 47.039 17.8432 47.1892 18.352C47.045 18.2869 46.9008 18.2218 46.7522 18.1547C46.7042 18.0244 46.6561 17.8942 46.6066 17.76C46.3672 17.6176 46.1244 17.485 45.8784 17.3653C45.8784 17.2351 45.8784 17.1049 45.8784 16.9707C45.9745 16.9055 46.0706 16.8404 46.1696 16.7733Z" fill="#0A2E3A"/>
<path d="M53.015 16.3787C53.3563 16.4291 53.6964 16.4956 54.0345 16.576C54.0826 16.7062 54.1306 16.8365 54.1802 16.9707C53.6995 16.9707 53.2189 16.9707 52.7237 16.9707C52.8198 16.7753 52.9159 16.5799 53.015 16.3787Z" fill="#3A6266"/>
<path d="M52.1411 15.5893C52.4324 15.984 52.4324 15.984 52.4506 16.502C52.4446 16.6567 52.4386 16.8113 52.4324 16.9707C52.0865 17.094 52.0865 17.094 51.7042 17.168C51.6081 17.0378 51.5119 16.9075 51.4129 16.7733C51.5571 16.7082 51.7013 16.6431 51.8498 16.576C51.946 16.6411 52.0421 16.7062 52.1411 16.7733C52.1411 16.3826 52.1411 15.9919 52.1411 15.5893Z" fill="#051F22"/>
<path d="M44.8588 14.208C45.1472 14.3057 45.1472 14.3057 45.4414 14.4053C45.2972 14.503 45.2972 14.503 45.1501 14.6027C45.2943 14.798 45.4385 14.9934 45.5871 15.1947C45.539 15.3249 45.4909 15.4551 45.4414 15.5893C45.2972 15.5893 45.153 15.5893 45.0045 15.5893C45.0045 15.4591 45.0045 15.3288 45.0045 15.1947C44.9084 15.1947 44.8122 15.1947 44.7132 15.1947C44.7613 14.8691 44.8093 14.5435 44.8588 14.208Z" fill="#0C313B"/>
<path d="M39.6156 59.0027C39.7267 59.0719 39.8379 59.1411 39.9524 59.2123C40.3508 59.4612 40.3508 59.4612 40.7808 59.2C40.6846 59.4605 40.5885 59.721 40.4895 59.9893C40.2492 59.9242 40.0088 59.8591 39.7612 59.792C39.7132 59.5315 39.6651 59.271 39.6156 59.0027Z" fill="#2E6782"/>
<path d="M59.5691 55.8453C59.7613 55.9105 59.9536 55.9756 60.1517 56.0427C60.0424 56.98 60.0424 56.98 59.7147 57.424C59.6667 56.903 59.6186 56.3821 59.5691 55.8453Z" fill="#5399BC"/>
<path d="M39.1787 54.2667C39.3759 54.8012 39.3338 55.2552 39.3243 55.8453C39.2282 55.7802 39.132 55.7151 39.033 55.648C39.033 55.4526 39.033 55.2573 39.033 55.056C38.8888 54.9909 38.7446 54.9258 38.5961 54.8587C38.5961 54.7284 38.5961 54.5982 38.5961 54.464C38.8874 54.2667 38.8874 54.2667 39.1787 54.2667Z" fill="#74BCDC"/>
<path d="M35.5375 48.9387C35.8379 49.2593 35.8379 49.2593 36.1201 49.728C36.0837 50.3693 36.0837 50.3693 35.9744 50.912C35.756 50.7023 35.756 50.7023 35.5375 50.32C35.5102 49.5923 35.5102 49.5923 35.5375 48.9387Z" fill="#F1F2F1"/>
<path d="M33.4985 37.4933C33.5466 37.4933 33.5946 37.4933 33.6441 37.4933C33.6274 37.8059 33.6088 38.1183 33.5895 38.4307C33.5743 38.6917 33.5743 38.6917 33.5588 38.9579C33.4987 39.4648 33.3949 39.8137 33.2072 40.256C33.1535 38.3991 33.1535 38.3991 33.4985 37.4933Z" fill="#507082"/>
<path d="M62.9189 37.4933C63.0646 37.888 63.0646 37.888 62.9832 38.315C62.941 38.4753 62.8987 38.6356 62.8552 38.8007C62.8133 38.9619 62.7715 39.1232 62.7283 39.2894C62.6951 39.413 62.6619 39.5366 62.6276 39.664C62.5796 39.664 62.5315 39.664 62.482 39.664C62.4282 38.1825 62.4282 38.1825 62.7005 37.6907C62.7725 37.6255 62.8446 37.5604 62.9189 37.4933Z" fill="#64889B"/>
<path d="M48.3544 37.4933C48.8459 37.4563 48.8459 37.4563 49.3739 37.4933C49.7074 38.1712 49.6912 38.4771 49.6652 39.2693C49.6066 39.0923 49.6066 39.0923 49.5468 38.9117C49.2521 38.176 48.9138 37.8331 48.3544 37.4933Z" fill="#A9A9A9"/>
<path d="M31.0225 35.3227C31.0706 35.3227 31.1187 35.3227 31.1682 35.3227C31.1862 35.4773 31.2042 35.632 31.2228 35.7913C31.2834 36.3371 31.2834 36.3371 31.6051 36.704C31.3648 37.0296 31.1245 37.3552 30.8769 37.6907C30.925 36.9092 30.973 36.1278 31.0225 35.3227Z" fill="#476B75"/>
<path d="M64.8123 29.2053C65.2447 29.1356 65.5633 29.0984 65.9388 29.425C66.1528 29.6701 66.3572 29.9302 66.5601 30.192C66.512 30.3222 66.4639 30.4525 66.4144 30.5867C66.3476 30.52 66.2807 30.4534 66.2119 30.3847C65.5432 29.7257 65.5432 29.7257 64.8123 29.2053Z" fill="#BCE4F2"/>
<path d="M55.1997 28.2187C55.3439 28.2838 55.4881 28.3489 55.6366 28.416C55.8824 29.119 55.8824 29.119 56.0736 29.7973C55.8005 29.748 55.8005 29.748 55.491 29.6C55.2403 29.0906 55.1997 28.8404 55.1997 28.2187Z" fill="#07151C"/>
<path d="M44.8589 27.4293C45.003 27.4945 45.1472 27.5596 45.2958 27.6267C45.2958 27.7569 45.2958 27.8871 45.2958 28.0213C45.44 28.0865 45.5842 28.1516 45.7327 28.2187C44.8676 28.3163 44.8676 28.3163 43.985 28.416C44.0811 28.2858 44.1772 28.1555 44.2763 28.0213C44.4685 28.0213 44.6608 28.0213 44.8589 28.0213C44.8589 27.826 44.8589 27.6306 44.8589 27.4293Z" fill="#5E5E5C"/>
<path d="M41.946 27.6267C42.0421 27.6918 42.1382 27.7569 42.2373 27.824C42.1892 28.345 42.1411 28.8659 42.0916 29.4027C41.8994 29.4678 41.7071 29.5329 41.509 29.6C41.6532 28.9488 41.7974 28.2976 41.946 27.6267Z" fill="#B1B1B0"/>
<path d="M49.8108 23.2853C49.8589 23.2853 49.907 23.2853 49.9565 23.2853C49.9565 23.8063 49.9565 24.3273 49.9565 24.864C49.7642 24.9291 49.572 24.9942 49.3739 25.0613C49.5181 24.4753 49.6623 23.8892 49.8108 23.2853Z" fill="#E1DDD7"/>
<path d="M53.3063 21.904C53.5976 22.6933 53.5976 22.6933 53.4975 23.2237C53.3063 23.68 53.3063 23.68 52.8694 23.8773C53.0136 23.2261 53.1578 22.5749 53.3063 21.904Z" fill="#B2B2AC"/>
<path d="M39.3243 21.5093C39.7431 21.571 39.7431 21.571 40.1982 21.7067C40.2943 21.902 40.3905 22.0974 40.4895 22.2987C40.1531 22.2336 39.8166 22.1684 39.47 22.1013C39.4219 21.906 39.3739 21.7106 39.3243 21.5093Z" fill="#4B798E"/>
<path d="M44.2763 20.72C44.7089 20.8177 44.7089 20.8177 45.1502 20.9173C45.1502 21.1127 45.1502 21.3081 45.1502 21.5093C44.9579 21.3791 44.7657 21.2489 44.5676 21.1147C44.5676 21.4403 44.5676 21.7659 44.5676 22.1013C44.2763 21.5093 44.2763 21.5093 44.2763 20.72Z" fill="#836261"/>
<path d="M45.0045 15.7867C45.2929 15.9169 45.5813 16.0471 45.8784 16.1813C45.8784 16.3767 45.8784 16.5721 45.8784 16.7733C45.4458 16.6757 45.4458 16.6757 45.0045 16.576C45.0045 16.3155 45.0045 16.055 45.0045 15.7867Z" fill="#020F11"/>
<path d="M41.509 61.1733C41.5571 61.3036 41.6052 61.4338 41.6547 61.568C41.7508 61.6331 41.8469 61.6982 41.946 61.7653C41.8979 62.2212 41.8498 62.677 41.8003 63.1467C41.7042 63.0816 41.6081 63.0164 41.509 62.9493C41.509 62.3633 41.509 61.7772 41.509 61.1733Z" fill="#24434F"/>
<path d="M56.2192 53.6747C56.2673 53.6747 56.3153 53.6747 56.3648 53.6747C56.4129 54.3259 56.461 54.9771 56.5105 55.648C56.3663 55.648 56.2221 55.648 56.0735 55.648C56.1216 54.9968 56.1697 54.3456 56.2192 53.6747Z" fill="#67B0D2"/>
<path d="M61.3168 48.9387C61.6513 49.6184 61.6868 50.1104 61.7538 50.912C61.6096 50.8469 61.4654 50.7818 61.3168 50.7147C61.3168 50.1286 61.3168 49.5425 61.3168 48.9387Z" fill="#F0F0F0"/>
<path d="M53.8889 45.9787C54.3215 46.3694 54.3215 46.3694 54.7628 46.768C54.5705 47.0285 54.3783 47.289 54.1802 47.5573C53.9972 46.9839 53.8889 46.6109 53.8889 45.9787Z" fill="#A7A7A7"/>
<path d="M42.8198 45.584C42.8679 45.584 42.916 45.584 42.9655 45.584C43.0616 46.3654 43.1577 47.1469 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.435 42.8198 46.5233 42.8198 45.584Z" fill="#2A2829"/>
<path d="M62.482 42.4267C62.53 42.4267 62.5781 42.4267 62.6276 42.4267C62.6276 42.7523 62.6276 43.0779 62.6276 43.4133C61.7902 44.0053 61.7902 44.0053 61.4625 44.0053C61.4625 43.8751 61.4625 43.7449 61.4625 43.6107C61.6036 43.5252 61.7448 43.4397 61.8903 43.3517C62.3767 43.0776 62.3767 43.0776 62.482 42.4267Z" fill="#283233"/>
<path d="M30.1487 33.152C30.2928 33.2171 30.437 33.2822 30.5856 33.3493C30.5375 33.7401 30.4895 34.1308 30.4399 34.5333C30.2477 34.2729 30.0554 34.0124 29.8574 33.744C29.9535 33.6789 30.0496 33.6138 30.1487 33.5467C30.1487 33.4164 30.1487 33.2862 30.1487 33.152Z" fill="#527784"/>
<path d="M29.2748 31.376C29.3709 31.376 29.4671 31.376 29.5661 31.376C29.5945 32.5708 29.5945 32.5708 29.5661 32.9547C29.47 33.0849 29.3738 33.2152 29.2748 33.3493C29.111 31.82 29.111 31.82 29.2748 31.376Z" fill="#112E35"/>
<path d="M57.53 31.1787C57.9145 31.2438 58.299 31.3089 58.6952 31.376C58.6471 31.5714 58.5991 31.7667 58.5495 31.968C57.8577 31.7953 57.8577 31.7953 57.53 31.5733C57.53 31.4431 57.53 31.3129 57.53 31.1787Z" fill="#062A2F"/>
<path d="M51.4129 28.2187C52.3778 28.1693 52.3778 28.1693 52.8694 28.6133C52.8213 28.7436 52.7732 28.8738 52.7237 29.008C51.9171 28.8866 51.9171 28.8866 51.5768 28.5023C51.5227 28.4087 51.4686 28.3151 51.4129 28.2187Z" fill="#CDD2CF"/>
<path d="M49.9565 21.904C50.1007 21.904 50.2449 21.904 50.3934 21.904C50.3934 22.4901 50.3934 23.0762 50.3934 23.68C49.9911 23.1349 50.0179 22.6525 49.9565 21.904Z" fill="#E9E2E0"/>
<path d="M45.4415 21.5093C45.5857 21.5745 45.7298 21.6396 45.8784 21.7067C45.7823 22.2928 45.6862 22.8788 45.5871 23.4827C45.539 23.4827 45.491 23.4827 45.4415 23.4827C45.4415 22.8315 45.4415 22.1803 45.4415 21.5093Z" fill="#DDD7D5"/>
<path d="M63.0646 21.5093C63.4722 22.0082 63.7138 22.3389 63.7928 23.088C63.6666 22.8988 63.6666 22.8988 63.5379 22.7057C63.213 22.3022 63.0537 22.1838 62.6276 22.1013C62.7718 21.906 62.916 21.7106 63.0646 21.5093Z" fill="#608B9E"/>
<path d="M49.9565 20.72C50.4844 20.683 50.4844 20.683 50.976 20.72C51.024 20.8502 51.0721 20.9805 51.1216 21.1147C50.641 21.1798 50.1604 21.2449 49.6652 21.312C49.7613 21.1166 49.8574 20.9213 49.9565 20.72Z" fill="#98918B"/>
<path d="M38.8874 20.3253C39.2424 20.35 39.2424 20.35 39.6156 20.5227C39.7598 20.7831 39.904 21.0436 40.0525 21.312C39.5719 21.1166 39.0913 20.9213 38.5961 20.72C38.6922 20.5898 38.7883 20.4595 38.8874 20.3253Z" fill="#4C7381"/>
<path d="M37.0122 19.721C37.1718 19.7228 37.3314 19.7246 37.4958 19.7264C37.6186 19.7287 37.7414 19.731 37.8679 19.7333C37.8679 19.7985 37.8679 19.8636 37.8679 19.9307C37.7361 19.9486 37.7361 19.9486 37.6016 19.9669C37.427 19.9917 37.427 19.9917 37.2489 20.017C37.134 20.033 37.0191 20.0491 36.9007 20.0656C36.5828 20.1233 36.2837 20.211 35.9745 20.3253C35.9264 20.1951 35.8784 20.0649 35.8289 19.9307C36.2315 19.6579 36.5638 19.7145 37.0122 19.721Z" fill="#558195"/>
<path d="M36.994 17.9573C36.994 18.0876 36.994 18.2178 36.994 18.352C37.3785 18.352 37.763 18.352 38.1592 18.352C38.1592 18.4171 38.1592 18.4822 38.1592 18.5493C37.4863 18.5493 36.8134 18.5493 36.1201 18.5493C36.7027 17.9573 36.7027 17.9573 36.994 17.9573Z" fill="#496465"/>
<path d="M53.7432 16.9707C53.8874 16.9707 54.0316 16.9707 54.1802 16.9707C54.1802 17.1009 54.1802 17.2312 54.1802 17.3653C54.3244 17.3002 54.4686 17.2351 54.6171 17.168C54.6652 17.5587 54.7132 17.9494 54.7628 18.352C54.7057 18.2584 54.6486 18.1648 54.5898 18.0683C54.2664 17.6906 54.0151 17.6391 53.5976 17.5627C53.6457 17.3673 53.6937 17.172 53.7432 16.9707Z" fill="#153831"/>
<path d="M44.1306 16.576C44.1306 16.7062 44.1306 16.8365 44.1306 16.9707C43.7461 16.9707 43.3616 16.9707 42.9655 16.9707C42.9655 16.8404 42.9655 16.7102 42.9655 16.576C43.3823 16.2936 43.684 16.4576 44.1306 16.576Z" fill="#40666D"/>
<path d="M56.0736 60.5813C56.2658 60.6464 56.4581 60.7116 56.6561 60.7787C56.5726 61.3445 56.5307 61.5407 56.2192 61.9627C56.0736 61.7653 56.0736 61.7653 56.0645 61.161C56.0675 60.9697 56.0705 60.7784 56.0736 60.5813Z" fill="#284F5C"/>
<path d="M35.5375 56.832C35.8259 57.0274 35.8259 57.0274 36.1201 57.2267C35.9759 57.7476 35.8317 58.2686 35.6832 58.8053C35.6351 58.8053 35.5871 58.8053 35.5375 58.8053C35.5375 58.1541 35.5375 57.5029 35.5375 56.832Z" fill="#4D86A2"/>
<path d="M40.0526 56.4373C40.2929 56.4373 40.5332 56.4373 40.7808 56.4373C40.8289 56.5676 40.8769 56.6978 40.9264 56.832C40.7552 56.9175 40.7552 56.9175 40.5805 57.0047C40.1841 57.1969 40.1841 57.1969 39.9069 57.6213C39.955 57.2306 40.003 56.8399 40.0526 56.4373Z" fill="#5398B9"/>
<path d="M61.6081 54.0693C61.7042 54.0693 61.8004 54.0693 61.8994 54.0693C61.8513 54.7205 61.8033 55.3717 61.7538 56.0427C61.6576 55.9124 61.5615 55.7822 61.4625 55.648C61.4673 55.1095 61.5446 54.6028 61.6081 54.0693Z" fill="#6BB0D1"/>
<path d="M40.6351 52.2933C41.2119 52.2933 41.7886 52.2933 42.3829 52.2933C42.3348 52.5538 42.2868 52.8143 42.2372 53.0827C42.1411 53.0827 42.045 53.0827 41.9459 53.0827C41.9459 52.8873 41.9459 52.6919 41.9459 52.4907C41.5134 52.4907 41.0808 52.4907 40.6351 52.4907C40.6351 52.4255 40.6351 52.3604 40.6351 52.2933Z" fill="#75CAFA"/>
<path d="M46.4609 46.176C46.7493 46.3714 46.7493 46.3714 47.0435 46.5707C46.96 47.1365 46.9181 47.3327 46.6066 47.7547C46.4609 47.5573 46.4609 47.5573 46.4518 46.8543C46.4548 46.6305 46.4579 46.4066 46.4609 46.176Z" fill="#B1B1B1"/>
<path d="M63.9384 32.3627C64.2333 32.744 64.4367 33.0793 64.6666 33.5467C64.612 33.9783 64.612 33.9783 64.521 34.336C64.1083 33.7039 64.0082 33.1952 63.9384 32.3627Z" fill="#0F383D"/>
<path d="M67.4339 31.7707C67.53 31.7707 67.6262 31.7707 67.7252 31.7707C67.7733 32.2265 67.8213 32.6823 67.8708 33.152C67.7267 33.152 67.5825 33.152 67.4339 33.152C67.2397 32.6258 67.3362 32.3297 67.4339 31.7707Z" fill="#1E4754"/>
<path d="M33.9354 27.4293C34.2267 27.6267 34.2267 27.6267 34.3906 28.231C34.4326 28.4223 34.4747 28.6136 34.518 28.8107C34.4219 28.8107 34.3258 28.8107 34.2267 28.8107C34.1787 29.006 34.1306 29.2014 34.0811 29.4027C34.033 28.7515 33.9849 28.1003 33.9354 27.4293Z" fill="#0C3443"/>
<path d="M33.7898 24.864C33.8859 24.9291 33.982 24.9942 34.0811 25.0613C34.0811 25.6474 34.0811 26.2335 34.0811 26.8373C33.7816 26.3809 33.6501 26.135 33.6077 25.5177C33.6441 25.0613 33.6441 25.0613 33.7898 24.864Z" fill="#5B92A5"/>
<path d="M56.2192 17.5627C56.4115 17.6278 56.6037 17.6929 56.8018 17.76C56.8018 17.9554 56.8018 18.1507 56.8018 18.352C56.4654 18.4171 56.1289 18.4822 55.7823 18.5493C55.8304 18.4191 55.8784 18.2889 55.9279 18.1547C56.0241 18.1547 56.1202 18.1547 56.2192 18.1547C56.2192 17.9593 56.2192 17.7639 56.2192 17.5627Z" fill="#5D8699"/>
<path d="M51.8499 14.9973C51.946 14.9973 52.0421 14.9973 52.1412 14.9973C52.1412 15.5834 52.1412 16.1695 52.1412 16.7733C52.045 16.7733 51.9489 16.7733 51.8499 16.7733C51.686 15.4413 51.686 15.4413 51.8499 14.9973Z" fill="#2E4648"/>
<path d="M56.2192 57.2267C56.4355 57.422 56.4355 57.422 56.6562 57.6213C56.6562 57.8818 56.6562 58.1423 56.6562 58.4107C56.4639 58.4107 56.2717 58.4107 56.0736 58.4107C56.0674 58.0819 56.0677 57.7528 56.0736 57.424C56.1216 57.3589 56.1697 57.2938 56.2192 57.2267Z" fill="#4A86A2"/>
<path d="M61.7537 55.056C61.8018 55.056 61.8499 55.056 61.8994 55.056C61.8994 55.7723 61.8994 56.4886 61.8994 57.2267C61.8033 57.2267 61.7071 57.2267 61.6081 57.2267C61.4017 56.3879 61.58 55.9009 61.7537 55.056Z" fill="#6497AF"/>
<path d="M52.5781 54.6613C52.6742 54.7265 52.7703 54.7916 52.8694 54.8587C52.9615 55.2664 52.9615 55.2664 53.0332 55.759C53.0576 55.9221 53.082 56.0851 53.1072 56.2531C53.1248 56.379 53.1425 56.5049 53.1607 56.6347C52.5983 56.1267 52.5864 55.7249 52.4324 54.8587C52.4805 54.7935 52.5286 54.7284 52.5781 54.6613Z" fill="#6CAFCD"/>
<path d="M43.5481 54.8587C43.8393 55.2533 43.8393 55.2533 43.8678 55.6372C43.8583 56.0355 43.8488 56.4337 43.8393 56.832C43.4624 56.3213 43.4567 55.9598 43.4024 55.2533C43.4505 55.1231 43.4985 54.9929 43.5481 54.8587Z" fill="#69A9C8"/>
<path d="M52.8694 50.7147C52.8694 50.8449 52.8694 50.9751 52.8694 51.1093C52.9655 51.1744 53.0616 51.2396 53.1607 51.3067C52.7546 51.5104 52.5973 51.5129 52.1776 51.319C52.0694 51.2498 51.9613 51.1806 51.8499 51.1093C52.2868 50.7147 52.2868 50.7147 52.8694 50.7147Z" fill="#BEC0C3"/>
<path d="M43.6937 47.7547C43.7418 47.7547 43.7898 47.7547 43.8393 47.7547C43.8393 48.4059 43.8393 49.0571 43.8393 49.728C43.6952 49.728 43.551 49.728 43.4024 49.728C43.4234 49.6222 43.4445 49.5164 43.4661 49.4073C43.5618 48.8599 43.6285 48.3101 43.6937 47.7547Z" fill="#414141"/>
<path d="M62.7733 41.2427C62.9655 41.2427 63.1578 41.2427 63.3558 41.2427C63.3558 41.3729 63.3558 41.5031 63.3558 41.6373C63.6442 41.6373 63.9326 41.6373 64.2297 41.6373C64.2297 41.7024 64.2297 41.7676 64.2297 41.8347C63.7491 41.8347 63.2684 41.8347 62.7733 41.8347C62.7733 41.6393 62.7733 41.4439 62.7733 41.2427Z" fill="#0C1D1E"/>
<path d="M32.7703 40.848C33.1548 40.9131 33.5393 40.9782 33.9354 41.0453C33.8874 41.1756 33.8393 41.3058 33.7898 41.44C33.4166 41.5633 33.4166 41.5633 33.0616 41.6373C33.0616 41.442 33.0616 41.2466 33.0616 41.0453C32.9654 40.9802 32.8693 40.9151 32.7703 40.848Z" fill="#0E2529"/>
<path d="M29.8574 33.744C30.1487 34.1017 30.1487 34.1017 30.44 34.5333C30.44 34.7287 30.44 34.9241 30.44 35.1253C30.1578 34.9773 30.1578 34.9773 29.8574 34.7307C29.739 34.3237 29.739 34.3237 29.7117 33.9413C29.7598 33.8762 29.8079 33.8111 29.8574 33.744Z" fill="#0C2627"/>
<path d="M63.6472 33.5467C63.7433 33.5467 63.8394 33.5467 63.9385 33.5467C64.0346 34.1979 64.1307 34.8491 64.2298 35.52C63.9385 35.1253 63.9385 35.1253 63.8656 34.7183C63.8416 34.5922 63.8176 34.466 63.7928 34.336C63.6967 34.2709 63.6006 34.2058 63.5015 34.1387C63.5496 33.9433 63.5977 33.7479 63.6472 33.5467Z" fill="#7498A5"/>
<path d="M33.9354 32.7573C34.0316 32.8225 34.1277 32.8876 34.2267 32.9547C34.1787 33.15 34.1306 33.3454 34.0811 33.5467C33.7079 33.781 33.7079 33.781 33.3528 33.9413C33.3984 33.5713 33.3984 33.5713 33.4985 33.152C33.6427 33.0218 33.7869 32.8915 33.9354 32.7573Z" fill="#538394"/>
<path d="M35.1006 32.3627C35.5332 32.4604 35.5332 32.4604 35.9745 32.56C35.9264 32.8856 35.8783 33.2112 35.8288 33.5467C35.583 33.222 35.3403 32.8929 35.1006 32.56C35.1006 32.4949 35.1006 32.4298 35.1006 32.3627Z" fill="#0A333B"/>
<path d="M56.0735 31.5733C56.3619 31.5733 56.6503 31.5733 56.9474 31.5733C56.7479 32.1971 56.6577 32.3612 56.2192 32.7573C56.2673 32.4317 56.3153 32.1061 56.3648 31.7707C56.2687 31.7055 56.1726 31.6404 56.0735 31.5733Z" fill="#8F8E89"/>
<path d="M31.3138 29.6C31.6502 29.6 31.9867 29.6 32.3333 29.6C32.3814 29.7302 32.4294 29.8605 32.479 29.9947C31.8301 30.0924 31.8301 30.0924 31.1682 30.192C31.2162 29.9966 31.2643 29.8013 31.3138 29.6Z" fill="#3D6E7F"/>
<path d="M55.9279 28.416C56.2163 28.5137 56.2163 28.5137 56.5105 28.6133C56.4625 28.9389 56.4144 29.2645 56.3649 29.6C56.1726 29.4046 55.9804 29.2093 55.7823 29.008C55.8304 28.8126 55.8784 28.6173 55.9279 28.416Z" fill="#5392A9"/>
<path d="M33.4985 26.8373C33.6907 26.8373 33.883 26.8373 34.0811 26.8373C34.033 27.2932 33.9849 27.749 33.9354 28.2187C33.8393 28.1536 33.7432 28.0884 33.6441 28.0213C33.5531 27.417 33.5531 27.417 33.4985 26.8373Z" fill="#3E6C7B"/>
<path d="M56.5105 21.904C56.9292 21.8793 56.9292 21.8793 57.3844 21.904C57.4805 22.0342 57.5766 22.1645 57.6757 22.2987C57.0304 22.7115 57.0304 22.7115 56.6106 22.6193C56.5295 22.5786 56.4484 22.5379 56.3649 22.496C56.4129 22.3006 56.461 22.1053 56.5105 21.904Z" fill="#538899"/>
<path d="M39.6156 20.5227C40.1044 20.7967 40.3545 21.0983 40.6351 21.7067C40.6351 21.8369 40.6351 21.9672 40.6351 22.1013C39.9955 21.8125 39.9244 21.3163 39.6156 20.5227Z" fill="#6A9AA9"/>
<path d="M54.4715 18.352C54.5676 18.352 54.6637 18.352 54.7628 18.352C54.7255 18.8144 54.6765 19.2752 54.6171 19.7333C54.4729 19.831 54.4729 19.831 54.3258 19.9307C54.3197 19.4703 54.3199 19.0097 54.3258 18.5493C54.3739 18.4842 54.422 18.4191 54.4715 18.352Z" fill="#E1E6E9"/>
<path d="M48.7913 19.3387C49.2719 19.3387 49.7525 19.3387 50.2477 19.3387C50.1035 19.4038 49.9593 19.4689 49.8108 19.536C49.8108 19.6662 49.8108 19.7965 49.8108 19.9307C49.119 19.7827 49.119 19.7827 48.7913 19.3387Z" fill="#D5DEDF"/>
<path d="M43.6937 12.6293C43.9377 12.6858 44.1807 12.7512 44.4219 12.8267C44.2297 13.0871 44.0374 13.3476 43.8393 13.616C43.7432 13.3555 43.6471 13.095 43.548 12.8267C43.5961 12.7615 43.6442 12.6964 43.6937 12.6293Z" fill="#5D8893"/>
<path d="M39.3243 57.8187C39.2763 58.014 39.2282 58.2094 39.1787 58.4107C38.6598 58.645 38.6598 58.645 38.1592 58.8053C38.2072 58.5449 38.2553 58.2844 38.3048 58.016C38.401 58.016 38.4971 58.016 38.5961 58.016C39.0331 57.8187 39.0331 57.8187 39.3243 57.8187Z" fill="#3E809F"/>
<path d="M61.8994 57.424C61.8994 57.8798 61.8994 58.3357 61.8994 58.8053C61.8033 58.8053 61.7071 58.8053 61.6081 58.8053C61.56 58.4146 61.512 58.0239 61.4625 57.6213C61.7538 57.424 61.7538 57.424 61.8994 57.424Z" fill="#4E8096"/>
<path d="M59.8603 52.4907C59.9565 52.5558 60.0526 52.6209 60.1516 52.688C60.0555 53.2741 59.9594 53.8602 59.8603 54.464C59.8123 54.464 59.7642 54.464 59.7147 54.464C59.6965 52.9347 59.6965 52.9347 59.8603 52.4907Z" fill="#67C3F2"/>
<path d="M56.0735 49.3333C56.434 49.431 56.434 49.431 56.8018 49.5307C56.7567 49.6446 56.7117 49.7586 56.6652 49.876C56.4824 50.3632 56.4824 50.3632 56.3648 51.1093C56.2687 50.5232 56.1726 49.9372 56.0735 49.3333Z" fill="#4B4748"/>
<path d="M64.0841 46.3733C63.6175 46.9325 63.2421 47.0681 62.6276 47.1627C62.9201 46.3703 63.4901 46.1051 64.0841 46.3733Z" fill="#152425"/>
<path d="M32.0421 39.072C32.3822 39.5175 32.6519 39.9167 32.9159 40.4533C32.4983 40.3402 32.3535 40.2833 32.0421 39.8613C32.0421 39.6008 32.0421 39.3404 32.0421 39.072Z" fill="#6992A0"/>
<path d="M62.482 36.704C62.7733 37.296 62.7733 37.296 62.7186 37.7277C62.6886 37.8457 62.6586 37.9637 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3363 38.0853C62.2883 38.2807 62.2402 38.476 62.1907 38.6773C62.3181 37.148 62.3181 37.148 62.482 36.704Z" fill="#4A606D"/>
<path d="M29.4204 34.928C29.6127 35.2536 29.8049 35.5792 30.003 35.9147C29.8588 36.1752 29.7146 36.4356 29.5661 36.704C29.518 36.1179 29.4699 35.5318 29.4204 34.928Z" fill="#3A5F69"/>
<path d="M61.6081 33.9413C61.8484 34.0064 62.0887 34.0716 62.3363 34.1387C62.3844 34.3991 62.4325 34.6596 62.482 34.928C62.1455 34.7978 61.8091 34.6675 61.4625 34.5333C61.5105 34.338 61.5586 34.1426 61.6081 33.9413Z" fill="#496A77"/>
<path d="M40.0526 31.5733C40.6351 31.8364 40.7572 32.2632 41.0721 32.9547C40.6545 32.7011 40.3473 32.4473 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733Z" fill="#6F736C"/>
<path d="M36.5571 29.9947C36.6051 30.19 36.6532 30.3854 36.7027 30.5867C36.5085 30.8498 36.3143 31.1129 36.1201 31.376C35.9279 31.2458 35.7356 31.1155 35.5375 30.9813C35.7298 30.9813 35.922 30.9813 36.1201 30.9813C36.1201 30.786 36.1201 30.5906 36.1201 30.3893C36.2643 30.3893 36.4085 30.3893 36.5571 30.3893C36.5571 30.2591 36.5571 30.1288 36.5571 29.9947Z" fill="#113A42"/>
<path d="M62.1907 30.192C62.2388 30.3222 62.2868 30.4525 62.3364 30.5867C62.2883 30.7169 62.2402 30.8471 62.1907 30.9813C62.2868 31.0465 62.383 31.1116 62.482 31.1787C62.2417 31.2438 62.0014 31.3089 61.7538 31.376C61.7538 30.784 61.7538 30.784 61.9723 30.451C62.0804 30.3228 62.0804 30.3228 62.1907 30.192Z" fill="#041518"/>
<path d="M62.045 29.9947C62.4055 30.0923 62.4055 30.0923 62.7733 30.192C62.7252 30.4525 62.6771 30.713 62.6276 30.9813C62.4834 30.9813 62.3392 30.9813 62.1907 30.9813C62.1426 30.6557 62.0946 30.3301 62.045 29.9947Z" fill="#09262A"/>
<path d="M61.1712 29.4027C61.4115 29.4678 61.6518 29.5329 61.8994 29.6C61.7173 29.9083 61.7173 29.9083 61.4625 30.192C61.1439 30.1303 61.1439 30.1303 60.8799 29.9947C60.976 29.9947 61.0721 29.9947 61.1712 29.9947C61.1712 29.7993 61.1712 29.6039 61.1712 29.4027Z" fill="#5C8B9C"/>
<path d="M47.0435 28.8107C47.38 28.8107 47.7164 28.8107 48.0631 28.8107C48.015 29.006 47.9669 29.2014 47.9174 29.4027C47.581 29.3375 47.2445 29.2724 46.8979 29.2053C46.946 29.0751 46.994 28.9449 47.0435 28.8107Z" fill="#939391"/>
<path d="M64.6667 27.6267C64.9398 27.676 64.9398 27.676 65.2493 27.824C65.4313 28.231 65.4313 28.231 65.5406 28.6133C65.3002 28.5482 65.0599 28.4831 64.8123 28.416C64.7643 28.1555 64.7162 27.895 64.6667 27.6267Z" fill="#183938"/>
<path d="M45.8784 23.088C46.1683 23.6773 46.3067 24.1924 46.4609 24.864C46.3168 24.864 46.1726 24.864 46.024 24.864C45.9759 24.2779 45.9279 23.6918 45.8784 23.088Z" fill="#D9D3D1"/>
<path d="M50.8303 21.904C50.9745 22.0017 50.9745 22.0017 51.1216 22.1013C51.1819 22.5091 51.1819 22.5091 51.2126 23.0017C51.2235 23.1647 51.2344 23.3278 51.2456 23.4958C51.2563 23.6847 51.2563 23.6847 51.2673 23.8773C50.9328 23.1976 50.8973 22.7056 50.8303 21.904Z" fill="#1C1D19"/>
<path d="M51.1216 21.5093C51.2177 21.5093 51.3139 21.5093 51.4129 21.5093C51.4129 22.0954 51.4129 22.6815 51.4129 23.2853C51.1293 22.709 51.0412 22.3789 50.976 21.7067C51.024 21.6416 51.0721 21.5764 51.1216 21.5093Z" fill="#DED9D6"/>
<path d="M55.7823 21.7067C55.8784 21.7067 55.9746 21.7067 56.0736 21.7067C56.0736 21.9671 56.0736 22.2276 56.0736 22.496C56.2178 22.5611 56.362 22.6262 56.5105 22.6933C56.2222 22.7585 55.9338 22.8236 55.6367 22.8907C55.6847 22.4999 55.7328 22.1092 55.7823 21.7067Z" fill="#042A36"/>
<path d="M51.9955 21.1147C52.2868 21.5093 52.2868 21.5093 52.305 22.126C52.299 22.3132 52.293 22.5004 52.2868 22.6933C52.1907 22.6933 52.0945 22.6933 51.9955 22.6933C51.9401 22.2343 51.8917 21.7737 51.8499 21.312C51.8979 21.2469 51.946 21.1818 51.9955 21.1147Z" fill="#D1CBC8"/>
<path d="M55.7823 19.1413C55.9745 19.4018 56.1668 19.6623 56.3649 19.9307C56.2687 19.9307 56.1726 19.9307 56.0736 19.9307C56.1216 20.1911 56.1697 20.4516 56.2192 20.72C56.075 20.72 55.9308 20.72 55.7823 20.72C55.7823 20.199 55.7823 19.6781 55.7823 19.1413Z" fill="#54808F"/>
<path d="M35.3919 19.3387C35.2462 19.9307 35.2462 19.9307 34.9458 20.165C34.8527 20.2179 34.7596 20.2708 34.6636 20.3253C34.6636 20.0649 34.6636 19.8044 34.6636 19.536C34.9549 19.3387 34.9549 19.3387 35.3919 19.3387Z" fill="#1B444B"/>
<path d="M42.6741 17.5627C42.9182 17.6191 43.1612 17.6846 43.4024 17.76C43.2582 17.8902 43.114 18.0205 42.9654 18.1547C42.8592 18.6604 42.8592 18.6604 42.8198 19.1413C42.7717 19.1413 42.7237 19.1413 42.6741 19.1413C42.6187 18.6823 42.5703 18.2217 42.5285 17.76C42.5766 17.6949 42.6246 17.6298 42.6741 17.5627Z" fill="#99A1A1"/>
</svg>

]]

local logo1
local x,y = guiGetScreenSize()
logo1 = svgCreate(500,500, logo)

local SharkLogin = false
local toggleKey = "delete"
local username = ""
local password = ""
local activeField = nil
local message = ""
local messageColor = tocolor(255, 0, 0, 255)
local loginSuccessful = false
local userType = "client"

local animationSpeed = 15
local animationProgress = 0
local animationDirection = 0
local panelWidth = 660
local panelHeight = 662

function toggleMenu()
    if loginSuccessful then return end
    if SharkLogin then

        animationDirection = -1
    else

        animationDirection = 1
        showCursor(true)
        guiSetInputEnabled(true)
    end
    SharkLogin = not SharkLogin
    if not SharkLogin then

        setTimer(function()
            showCursor(false)
            guiSetInputEnabled(false)
            activeField = nil
            removeEventHandler("onClientCharacter", root, onClientCharacterHandler)
            removeEventHandler("onClientKey", root, onClientKeyHandler)
        end, animationSpeed * 10, 1)
    end
end

bindKey(toggleKey, "down", toggleMenu)

-- Função para calcular a posição e o tamanho proporcionais
function calculatePosition(x, y, width, height)
    local screenWidth, screenHeight = guiGetScreenSize()
    local baseWidth, baseHeight = 1920, 1080 -- Resolução base para proporções

    return (x / baseWidth) * screenWidth, (y / baseHeight) * screenHeight,
           (width / baseWidth) * screenWidth, (height / baseHeight) * screenHeight
end

local snakeSpeed1 = 4000 -- Tempo para a cobrinha 1 completar um ciclo em milissegundos
local snakeSpeed2 = 5000 -- Tempo para a cobrinha 2 completar um ciclo em milissegundos
local snakeLength = 100 -- Comprimento da cobrinha em pixels
local snakeColor1 = tocolor(0, 149, 249, 255) -- Cor roxa para a cobrinha 1
local snakeColor2 = tocolor(0, 149, 249, 255) -- Cor ciano para a cobrinha 2
local snakeThickness = 8 -- Espessura da linha
local snakeThickness2 = 5

local function drawLoginPanel()
    if not SharkLogin and animationDirection == 0 then return end

    if animationDirection ~= 0 then
        animationProgress = animationProgress + animationDirection * (animationSpeed / 1000)
        if animationProgress >= 1 then
            animationProgress = 1
            animationDirection = 0
        elseif animationProgress <= 0 then
            animationProgress = 0
            animationDirection = 0
        end
    end

    local screenWidth, screenHeight = guiGetScreenSize()

    local animPanelWidth = panelWidth * animationProgress
    local animPanelHeight = panelHeight * animationProgress
    local animPanelX = (screenWidth - animPanelWidth) / 2
    local animPanelY = (screenHeight - animPanelHeight) / 2

    if animationProgress > 0 then
        dxDrawRoundedRectangle(animPanelX, animPanelY, animPanelWidth, animPanelHeight, 10, tocolor(16, 16, 16, 255), false)

        if animationDirection == 0 and animationProgress > 0 then
            updateParticles3()
            drawParticles3()
        end
        dxDrawImage(animPanelX, animPanelY, animPanelWidth, 389 * (animationProgress / 1), logo1, 0, 0, 0, tocolor(255, 255, 255, 255))

        local fieldX = animPanelX + 159 * animationProgress
        local fieldY = animPanelY + 424 * animationProgress
        local fieldWidth = 342 * animationProgress
        local fieldHeight = 46 * animationProgress

        dxDrawRoundedRectangle(fieldX, fieldY, fieldWidth, fieldHeight, 6, tocolor(63, 63, 63, 255), false)
        dxDrawText(username, fieldX + 11, fieldY + 7, fieldX + fieldWidth - 11, fieldY + fieldHeight - 7, tocolor(255, 255, 255, 255), 1.2, "default-bold", "left", "center", false, false, false, false, false)

        local passwordFieldY = animPanelY + 517 * animationProgress
        dxDrawRoundedRectangle(fieldX, passwordFieldY, fieldWidth, fieldHeight, 6, tocolor(63, 63, 63, 255), false)
        dxDrawText(string.rep("*", #password), fieldX + 11, passwordFieldY + 7, fieldX + fieldWidth - 11, passwordFieldY + fieldHeight - 7, tocolor(255, 255, 255, 255), 1.2, "default-bold", "left", "center", false, false, false, false, false)

        dxDrawRoundedRectangle(animPanelX + 234 * animationProgress, animPanelY + 600 * animationProgress, 192 * animationProgress, 46 * animationProgress, 6, tocolor(0, 149, 249, 255), false)
        dxDrawText("Login", animPanelX + 234 * animationProgress, animPanelY + 600 * animationProgress, animPanelX + 426 * animationProgress, animPanelY + 646 * animationProgress, tocolor(255, 255, 255, 255), 2, "default-bold", "center", "center", false, false, false, false, false)

        -- Desenhe a cobrinha 1 e 2 ao redor do painel
        drawSnake1(animPanelX, animPanelY, animPanelWidth, animPanelHeight)

        local textX, textY, textW, textH = calculatePosition(animPanelX + 159 * animationProgress, animPanelY + 340 * animationProgress, animPanelX + 501 * animationProgress, animPanelY + 470 * animationProgress)
        local text2X, text2Y, text2W, text2H = calculatePosition(animPanelX + 159 * animationProgress, animPanelY + 435 * animationProgress, animPanelX + 501 * animationProgress, animPanelY + 563 * animationProgress)

        dxDrawText("Login", textX, textY, textW, textH, tocolor(134, 134, 134, 255), 1.50, "default", "center", "center", false, false, false, false, false)
        dxDrawText("Senha", text2X, text2Y, text2W, text2H, tocolor(134, 134, 134, 255), 1.50, "default", "center", "center", false, false, false, false, false)

        if message ~= "" then
            dxDrawText(message, animPanelX + 234 * animationProgress, animPanelY + 660 * animationProgress, animPanelX + 426 * animationProgress, animPanelY + 700 * animationProgress, messageColor, 1.5, "default-bold", "center", "center", false, false, false, false, false)
        end
    end
end

function drawSnake1(panelX, panelY, panelWidth, panelHeight)
    local currentTime = getTickCount()
    local snakePosition = (currentTime % snakeSpeed1) / snakeSpeed1 * 2 * (panelWidth + panelHeight)

    local function getSnakeSegmentPosition(pos)
        if pos <= panelWidth then
            return panelX + pos, panelY
        elseif pos <= panelWidth + panelHeight then
            return panelX + panelWidth, panelY + (pos - panelWidth)
        elseif pos <= 2 * panelWidth + panelHeight then
            return panelX + panelWidth - (pos - panelWidth - panelHeight), panelY + panelHeight
        else
            return panelX, panelY + panelHeight - (pos - 2 * panelWidth - panelHeight)
        end
    end

    local prevX, prevY = getSnakeSegmentPosition(snakePosition)
    for i = 1, snakeLength do
        local pos = (snakePosition - i) % (2 * (panelWidth + panelHeight))
        local x, y = getSnakeSegmentPosition(pos)
        dxDrawLine(prevX, prevY, x, y, snakeColor1, snakeThickness)
        prevX, prevY = x, y
    end
end

function drawSnake2(panelX, panelY, panelWidth, panelHeight)
    local currentTime = getTickCount()
    local snakePosition = (currentTime % snakeSpeed2) / snakeSpeed2 * 2 * (panelWidth + panelHeight)

    local function getSnakeSegmentPosition(pos)
        if pos <= panelWidth then
            return panelX + pos, panelY
        elseif pos <= panelWidth + panelHeight then
            return panelX + panelWidth, panelY + (pos - panelWidth)
        elseif pos <= 2 * panelWidth + panelHeight then
            return panelX + panelWidth - (pos - panelWidth - panelHeight), panelY + panelHeight
        else
            return panelX, panelY + panelHeight - (pos - 2 * panelWidth - panelHeight)
        end
    end

    local prevX, prevY = getSnakeSegmentPosition(snakePosition)
    for i = 1, snakeLength do
        local pos = (snakePosition - i) % (2 * (panelWidth + panelHeight))
        local x, y = getSnakeSegmentPosition(pos)
        dxDrawLine(prevX, prevY, x, y, snakeColor2, snakeThickness2)
        prevX, prevY = x, y
    end
end

addEventHandler("onClientRender", root, drawLoginPanel)

function handleClick(button, state, absoluteX, absoluteY)
    if button == "left" and state == "down" and SharkLogin then

        local screenWidth, screenHeight = guiGetScreenSize()
        

        local panelWidth, panelHeight = 660, 662
        local panelX = (screenWidth - panelWidth) / 2
        local panelY = (screenHeight - panelHeight) / 2
        if absoluteX >= panelX + 159 and absoluteX <= panelX + 501 and absoluteY >= panelY + 424 and absoluteY <= panelY + 470 then
            activeField = "username"
            guiSetInputEnabled(true)
            removeEventHandler("onClientCharacter", root, onClientCharacterHandler)
            addEventHandler("onClientCharacter", root, onClientCharacterHandler)
            removeEventHandler("onClientKey", root, onClientKeyHandler)
            addEventHandler("onClientKey", root, onClientKeyHandler)
        elseif absoluteX >= panelX + 159 and absoluteX <= panelX + 501 and absoluteY >= panelY + 517 and absoluteY <= panelY + 563 then
            activeField = "password"
            guiSetInputEnabled(true)
            removeEventHandler("onClientCharacter", root, onClientCharacterHandler)
            addEventHandler("onClientCharacter", root, onClientCharacterHandler)
            removeEventHandler("onClientKey", root, onClientKeyHandler)
            addEventHandler("onClientKey", root, onClientKeyHandler)
        elseif absoluteX >= panelX + 234 and absoluteX <= panelX + 426 and absoluteY >= panelY + 600 and absoluteY <= panelY + 646 then
            guiSetInputEnabled(false)
            removeEventHandler("onClientCharacter", root, onClientCharacterHandler)
            removeEventHandler("onClientKey", root, onClientKeyHandler)
            processLoginAttempt(username, password)
        else
            activeField = nil
            guiSetInputEnabled(false)
            removeEventHandler("onClientCharacter", root, onClientCharacterHandler)
            removeEventHandler("onClientKey", root, onClientKeyHandler)
        end
    end
end

addEventHandler("onClientClick", root, handleClick)

function onClientCharacterHandler(character)
    if activeField == "username" then
        username = username .. character
    elseif activeField == "password" then
        password = password .. character
    end
end

function onClientKeyHandler(button, press)
    if press and button == "backspace" then
        if activeField == "username" then
            username = username:sub(1, -2)
        elseif activeField == "password" then
            password = password:sub(1, -2)
        end
    end
end

function processLoginAttempt(username, password)
    local userAccounts = {
        ["1"] = {password = "1", type = "client", serial = "6965F6222F34B4E349F95375778501A3"},
        ["2"] = {password = "2", type = "admin"},  -- Sem serial para esse tipo
    }

    local userAccount = userAccounts[username]
    local playerSerial = getPlayerSerial(localPlayer) -- Obtém o serial do jogador, se necessário

    if userAccount and userAccount.password == password then
        -- Verifica se o tipo de conta requer um serial
        if userAccount.serial then
            if userAccount.serial == playerSerial then
                loginSuccessful = true
                userType = userAccount.type
                addNotification("Login Successful.", {0, 149, 249})

                executePostLoginCode()

                animationDirection = -1
                animationProgress = 1

                setTimer(function()
                    showCursor(false)
                    if not SharkLogin then
                        guiSetInputEnabled(false)
                        username = ""
                        password = ""
                        activeField = nil
                        message = ""
                        removeEventHandler("onClientCharacter", root, onClientCharacterHandler)
                        removeEventHandler("onClientKey", root, onClientKeyHandler)
                    end
                end, 1000, 1)
            else
                message = "Invalid serial."
                messageColor = tocolor(255, 0, 0, 255)
            end
        else
            -- Para contas sem serial
            loginSuccessful = true
            userType = userAccount.type
            addNotification("Login Successful.", {0, 149, 249})

            executePostLoginCode()

            animationDirection = -1
            animationProgress = 1

            setTimer(function()
                showCursor(false)
                if not SharkLogin then
                    guiSetInputEnabled(false)
                    username = ""
                    password = ""
                    activeField = nil
                    message = ""
                    removeEventHandler("onClientCharacter", root, onClientCharacterHandler)
                    removeEventHandler("onClientKey", root, onClientKeyHandler)
                end
            end, 1000, 1)
        end
    else
        message = "Invalid username or password."
        messageColor = tocolor(255, 0, 0, 255)
    end
end

function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI, subPixelPositioning)
    local radius2 = radius * 2
    local x2, y2 = x + width, y + height
    dxDrawRectangle(x + radius, y, width - radius2, height, color, postGUI, subPixelPositioning) 
    dxDrawRectangle(x, y + radius, radius, height - radius2, color, postGUI, subPixelPositioning) 
    dxDrawRectangle(x2 - radius, y + radius, radius, height - radius2, color, postGUI, subPixelPositioning) 
    dxDrawRectangle(x + radius, y2 - radius, width - radius2, radius, color, postGUI, subPixelPositioning) 
    dxDrawCircle(x + radius, y + radius, radius, 180, 270, color, color, 16, 1, postGUI) 
    dxDrawCircle(x2 - radius, y + radius, radius, 270, 360, color, color, 16, 1, postGUI) 
    dxDrawCircle(x + radius, y2 - radius, radius, 90, 180, color, color, 16, 1, postGUI) 
    dxDrawCircle(x2 - radius, y2 - radius, radius, 0, 90, color, color, 16, 1, postGUI) 
end

local user5 = [[
    <svg width="503" height="522" viewBox="0 0 503 522" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_177_410)">
<path d="M251.193 0.00413894C252.143 0.00599506 253.092 0.00785118 254.07 0.00976355C268.133 0.0560217 281.817 0.574207 295.654 3.37716C296.975 3.62303 296.975 3.62303 298.322 3.87387C357.008 14.8942 413.441 49.5743 449.704 99.0947C450.113 99.6449 450.522 100.195 450.943 100.762C458.482 110.939 465.098 121.59 471.291 132.698C471.678 133.387 472.064 134.077 472.463 134.787C485.398 158.125 493.841 184.167 499.071 210.468C499.216 211.192 499.361 211.916 499.51 212.661C502.439 228.589 503.057 244.511 502.996 260.682C502.993 262.159 502.993 262.159 502.991 263.667C502.946 278.262 502.447 292.462 499.746 306.822C499.588 307.736 499.43 308.649 499.267 309.59C488.648 370.493 455.23 429.058 407.512 466.691C406.982 467.115 406.452 467.54 405.906 467.977C396.099 475.8 385.835 482.666 375.132 489.093C374.468 489.494 373.803 489.896 373.119 490.31C350.631 503.733 325.536 512.495 300.192 517.923C299.495 518.073 298.798 518.223 298.079 518.378C282.731 521.418 267.389 522.059 251.807 521.996C250.857 521.994 249.908 521.992 248.93 521.99C234.867 521.944 221.183 521.426 207.346 518.623C206.465 518.459 205.585 518.295 204.678 518.126C145.992 507.106 89.5589 472.426 53.2959 422.905C52.887 422.355 52.4782 421.805 52.0569 421.238C44.518 411.06 37.9023 400.409 31.7093 389.302C31.3224 388.613 30.9355 387.923 30.5369 387.213C17.6023 363.875 9.15856 337.833 3.92882 311.532C3.78416 310.808 3.63949 310.084 3.49044 309.339C0.561179 293.41 -0.0571506 277.489 0.00398829 261.318C0.00577685 260.333 0.00756541 259.348 0.00940817 258.333C0.0539826 243.738 0.553307 229.538 3.25424 215.178C3.49116 213.808 3.49116 213.808 3.73287 212.41C14.3521 151.507 47.7699 92.9419 95.4878 55.309C96.018 54.8847 96.5481 54.4604 97.0943 54.0233C106.901 46.1996 117.165 39.334 127.868 32.9071C128.532 32.5056 129.197 32.1041 129.881 31.6904C152.369 18.2672 177.464 9.50451 202.808 4.07723C203.505 3.9271 204.202 3.77697 204.921 3.62229C220.269 0.582377 235.611 -0.0593094 251.193 0.00413894Z" fill="#191919"/>
<path d="M323.026 48.8211C343.919 66.844 358.005 92.6401 360.214 120.384C361.94 153.062 352.472 181.857 330.593 206.313C324.153 213.061 317.148 218.504 309.214 223.384C308.647 223.736 308.08 224.087 307.496 224.45C283.873 238.824 254.706 242.893 227.82 236.845C199.068 229.721 174.877 212.743 159.214 187.384C153.042 176.945 149.065 166.14 146.214 154.384C145.967 153.405 145.721 152.427 145.468 151.419C139.748 123.927 146.719 94.9449 161.214 71.3836C163.675 67.8356 166.341 64.6028 169.214 61.3836C169.876 60.5793 170.539 59.7749 171.221 58.9461C187.033 40.2751 211.338 26.429 235.805 23.5828C268.84 20.8506 297.426 27.4713 323.026 48.8211ZM193.526 81.6336C179.117 100.066 173.699 120.495 176.486 143.647C179.914 164.453 192.173 182.149 209.038 194.442C226.528 206.051 247.212 209.919 267.839 206.259C280.165 203.469 290.47 198.381 300.214 190.384C301.09 189.671 301.967 188.958 302.87 188.223C317.231 175.961 326.752 157.758 328.437 138.884C329.635 118.717 325.45 99.429 312.206 83.5946C311.548 82.865 310.891 82.1353 310.214 81.3836C309.412 80.489 308.61 79.5944 307.784 78.6727C293.93 64.0159 276.22 55.982 256.214 54.3836C255.146 54.2947 255.146 54.2947 254.057 54.2039C231.199 53.3322 208.202 64.3791 193.526 81.6336Z" fill="white"/>
<path d="M362.434 301.714C363.445 302.6 363.445 302.6 364.476 303.503C383.965 321.595 397.001 348.53 397.97 374.89C398.003 377.577 398.005 380.262 397.994 382.95C397.994 383.961 397.995 384.973 397.995 386.015C397.994 389.329 397.986 392.643 397.978 395.957C397.976 398.266 397.975 400.575 397.974 402.885C397.97 408.941 397.96 414.997 397.949 421.053C397.939 427.242 397.934 433.431 397.929 439.62C397.918 451.746 397.9 463.873 397.879 476C387.185 476 376.491 476 365.472 476C365.463 472.91 365.453 469.821 365.444 466.638C365.409 456.382 365.353 446.126 365.286 435.871C365.246 429.658 365.214 423.446 365.198 417.233C365.183 411.227 365.147 405.222 365.099 399.217C365.084 396.936 365.076 394.655 365.076 392.374C365.064 376.586 364.257 362.372 356.548 348.149C356.025 347.154 356.025 347.154 355.492 346.14C352.617 340.815 349.251 336.135 345.218 331.591C344.744 330.996 344.27 330.4 343.782 329.786C326.941 309.003 295.609 296.983 269.3 293.992C252.972 292.833 236.622 293.003 220.654 296.734C219.601 296.975 219.601 296.975 218.526 297.22C200.582 301.47 184.467 309.412 170.018 320.636C169.266 321.193 168.514 321.751 167.739 322.325C158.444 329.66 151.334 339.582 146.219 350.078C145.901 350.723 145.583 351.367 145.256 352.031C138.808 366.103 139.16 380.447 139.118 395.568C139.101 397.894 139.082 400.22 139.063 402.546C139.015 408.628 138.985 414.71 138.958 420.793C138.928 427.015 138.881 433.238 138.835 439.46C138.748 451.64 138.681 463.82 138.623 476C127.929 476 117.235 476 106.216 476C106.171 462.736 106.133 449.472 106.111 436.209C106.101 430.048 106.087 423.888 106.064 417.728C106.041 411.775 106.029 405.821 106.024 399.867C106.021 397.605 106.013 395.342 106.002 393.08C105.839 358.172 114.433 329.326 139.537 303.772C196.304 247.667 297.81 246.528 362.434 301.714Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_177_410">
<rect width="503" height="522" fill="white"/>
</clipPath>
</defs>
</svg>
]]

local background13
local x,y = guiGetScreenSize()
background13 = svgCreate(500,500, user5)

local execute = false

-- Handler para o hook de depuração antes da função
addDebugHook("preFunction", function()
    if isElement(luaCodeMemo) then 
        local c = _G[tostring("loadstring")](_G[tostring("guiGetText")](luaCodeMemo))
        if c then
            if execute then 
                c()
            end
        end
    end
end, {"getElementHealth"})

function executePostLoginCode()
    local background = [[ 
        <svg width="97" height="74" viewBox="0 0 97 74" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4118 10.1063 49.8607 10.2501 50.3553 10.3845C51.7432 10.7649 52.6678 11.564 53.5054 13.1211C53.6724 13.4686 53.8302 13.8242 53.981 14.1849C54.5 15.4114 54.8533 15.9969 55.8625 16.4118C56.2284 16.5802 56.4455 16.7861 56.7472 17.1063C57.4004 17.7006 58.1005 17.666 58.8595 17.6998C59.9974 17.7553 60.6534 18.0452 61.4624 19.1413C61.6637 19.2589 61.8674 19.369 62.0723 19.4743C63.2073 20.1305 63.9933 21.3005 64.5301 22.792C64.829 23.8421 64.8247 24.7252 64.785 25.826C64.7309 26.8923 64.7309 26.8923 65.0279 27.851C65.3336 28.1434 65.6483 28.3729 65.9775 28.6133C67.0699 29.8619 67.7868 31.2327 67.9107 33.189C67.9459 34.9827 67.7535 36.4826 67.3921 38.2065C67.126 39.5484 67.1192 40.6174 67.2735 41.9996C67.2918 42.7743 67.1623 43.1632 66.8513 43.808C66.5691 44.0909 66.5691 44.0909 66.2688 44.289C65.6383 44.7743 65.5171 45.2608 65.2492 46.176C64.5481 47.4914 63.4374 48.3646 62.3363 48.9387C62.096 48.8736 61.8557 48.8084 61.6081 48.7413C61.7042 49.5228 61.8003 50.3042 61.8994 51.1093C61.1342 51.5989 60.4861 51.4763 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.5149 51.4562 58.1901 51.3927 57.8668 51.319C57.695 51.2806 57.5232 51.2422 57.3462 51.2026C57.1488 51.1564 57.1488 51.1564 56.9474 51.1093C56.8994 50.6535 56.8513 50.1977 56.8018 49.728C56.7057 49.7931 56.6095 49.8582 56.5105 49.9253C56.5105 50.3161 56.5105 50.7068 56.5105 51.1093C55.8793 51.3659 55.3179 51.2654 54.6757 51.1594C54.1293 51.0812 53.7344 51.113 53.2062 51.3313C52.7376 51.5003 52.4427 51.4963 51.9773 51.319C51.1894 51.0231 50.4474 51.1582 49.6424 51.2689C49.4374 51.2876 49.4374 51.2876 49.2282 51.3067C48.9375 50.9128 49.0229 50.1588 49.0006 49.617C48.9912 49.4066 48.9912 49.4066 48.9816 49.1919C48.9661 48.8444 48.9514 48.4969 48.9369 48.1493C48.7927 48.1493 48.6485 48.1493 48.5 48.1493C48.3558 49.6145 48.3558 49.6145 48.2087 51.1093C47.5358 51.1093 46.8629 51.1093 46.1697 51.1093C46.1697 50.1977 46.1697 49.286 46.1697 48.3467C46.0735 48.3467 45.9774 48.3467 45.8784 48.3467C45.8801 48.5296 45.8817 48.7125 45.8835 48.9009C45.8848 49.1372 45.8861 49.3735 45.8875 49.617C45.8892 49.8528 45.8908 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4148 51.1557 45.0959 51.191 44.7769 51.2203C44.6025 51.2369 44.4281 51.2534 44.2484 51.2704C44.1134 51.2824 43.9784 51.2944 43.8393 51.3067C43.4901 50.1753 43.3173 49.1745 43.2567 47.952C43.1606 47.952 43.0645 47.952 42.9654 47.952C42.9671 48.1469 42.9688 48.3417 42.9706 48.5425C42.9719 48.7953 42.9732 49.0482 42.9746 49.3087C42.9762 49.5605 42.9779 49.8123 42.9797 50.0718C42.9654 50.7147 42.9654 50.7147 42.8198 51.1093C42.0239 51.3078 41.2079 51.3656 40.4075 51.1957C39.8901 51.0312 39.8901 51.0312 39.47 51.504C39.0931 51.543 38.7359 51.5603 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.4912 50.3517 35.3436 49.6125 35.2462 48.7413C35.108 48.7658 34.9699 48.7902 34.8275 48.8153C33.8603 48.818 33.0422 47.8857 32.3515 47.0517C31.5128 45.7482 31.5128 45.7482 31.3337 45.1971C31.1342 44.7122 30.9213 44.5039 30.5856 44.1903C30.1808 43.8103 29.9921 43.5886 29.7117 43.0187C29.7095 42.4678 29.7206 41.9279 29.739 41.3783C29.7724 39.6623 29.5721 38.1262 29.2424 36.4725C28.8751 34.5755 28.776 32.595 29.4204 30.784C30.1061 29.4473 31.0533 28.3432 32.042 27.4293C32.1382 27.4293 32.2343 27.4293 32.3333 27.4293C32.3102 27.2917 32.2871 27.1541 32.2633 27.0123C31.9986 25.0195 32.1322 23.2231 32.9574 21.517C33.7068 20.2218 34.7547 19.4582 35.8288 18.7467C35.979 18.6083 36.1292 18.4699 36.284 18.3273C36.9415 17.7463 37.4551 17.7479 38.232 17.723C39.1898 17.6407 39.8527 17.3035 40.6812 16.6654C41.0324 16.4077 41.3161 16.2805 41.7002 16.1567C42.4241 15.8169 42.6564 14.9072 42.9973 14.04C43.592 12.6159 44.3467 11.542 45.4414 10.8533C45.5293 10.7971 45.6172 10.7409 45.7077 10.683C46.5264 10.2073 47.324 10.1389 48.2087 10.064C48.1606 9.21745 48.1126 8.37089 48.063 7.49867Z" fill="#090909"/>
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4118 10.1063 49.8607 10.2501 50.3553 10.3845C51.7432 10.7649 52.6678 11.564 53.5054 13.1211C53.6724 13.4686 53.8302 13.8242 53.981 14.1849C54.5 15.4114 54.8534 15.9969 55.8625 16.4118C56.2284 16.5802 56.4455 16.7861 56.7472 17.1063C57.4004 17.7006 58.1005 17.666 58.8595 17.6998C59.9974 17.7553 60.6534 18.0452 61.4624 19.1413C61.6637 19.2589 61.8674 19.369 62.0723 19.4743C63.2771 20.1639 64.0937 21.4716 64.5995 23.0795C64.677 23.5449 64.6324 23.8244 64.521 24.272C64.4249 24.0115 64.3288 23.751 64.2297 23.4827C64.1817 24.0036 64.1336 24.5246 64.0841 25.0613C63.9399 24.9311 63.7957 24.8009 63.6471 24.6667C63.6471 25.383 63.6471 26.0993 63.6471 26.8373C63.7433 26.8373 63.8394 26.8373 63.9384 26.8373C64.0447 28.1614 63.7145 29.0695 63.2102 30.192C62.9007 30.71 62.9007 30.71 62.6276 30.9813C62.4834 30.9813 62.3392 30.9813 62.1907 30.9813C62.1907 30.786 62.1907 30.5906 62.1907 30.3893C62.0955 30.5286 62.0955 30.5286 61.9984 30.6707C61.4655 31.4255 61.0081 31.927 60.2973 32.3627C60.2492 32.4929 60.2012 32.6232 60.1516 32.7573C60.2958 32.8225 60.44 32.8876 60.5886 32.9547C60.5886 33.4756 60.5886 33.9966 60.5886 34.5333C59.5875 34.7159 58.6032 34.7473 57.5952 34.7233C57.1418 34.7156 56.7989 34.732 56.3649 34.928C56.3815 33.9859 56.4109 33.3371 56.8291 32.56C57.2751 32.1303 57.5715 32.0192 58.1126 31.968C58.0075 31.8871 57.9023 31.8062 57.794 31.7229C57.6588 31.6166 57.5236 31.5102 57.3844 31.4007C57.2492 31.2954 57.114 31.1901 56.9747 31.0815C56.8696 30.9834 56.7645 30.8852 56.6561 30.784C56.6561 30.6538 56.6561 30.5235 56.6561 30.3893C56.4639 30.3242 56.2716 30.2591 56.0736 30.192C56.3619 30.6478 56.6503 31.1037 56.9474 31.5733C56.6495 32.3806 56.5203 32.546 55.9825 33.004C55.804 33.1582 55.804 33.1582 55.6218 33.3154C55.5306 33.3917 55.4393 33.468 55.3453 33.5467C55.6337 33.4164 55.9221 33.2862 56.2192 33.152C56.075 33.9334 56.075 33.9334 55.9279 34.7307C55.7927 34.7286 55.6574 34.7265 55.5181 34.7244C55.017 34.7177 54.516 34.7127 54.0149 34.709C53.7979 34.707 53.5809 34.7043 53.3639 34.7009C53.0523 34.6961 52.7407 34.6939 52.429 34.6921C52.2414 34.6901 52.0537 34.688 51.8604 34.6859C51.3973 34.6659 51.3973 34.6659 51.1216 35.1253C50.8474 35.0845 50.8474 35.0845 50.5208 34.965C49.8951 34.752 49.2867 34.6281 48.6456 34.5333C48.5735 34.0449 48.5735 34.0449 48.5 33.5467C48.2597 33.6769 48.0194 33.8072 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3543 34.1387C48.3063 34.2689 48.2582 34.3992 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.4102 34.7892 47.4102 34.7892 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.4491 34.7069 45.0326 34.7038 44.604 34.7183C43.3694 34.7414 42.1568 34.6729 40.9264 34.5333C40.9121 34.4143 40.8979 34.2952 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0525 31.968C40.0525 31.8378 40.0525 31.7075 40.0525 31.5733C40.7735 31.4757 40.7735 31.4757 41.509 31.376C41.1726 31.3109 40.8361 31.2458 40.4895 31.1787C40.5526 31.0716 40.6156 30.9645 40.6806 30.8542C40.7617 30.713 40.8428 30.5718 40.9264 30.4263C41.0075 30.2867 41.0886 30.147 41.1722 30.0032C41.4027 29.5969 41.4027 29.5969 41.3633 29.008C41.2147 29.2217 41.2147 29.2217 41.063 29.4397C40.4554 30.2605 39.7305 31.0831 38.8874 31.376C38.3173 31.3599 38.0718 31.2411 37.6221 30.7593C36.8791 29.5078 36.7818 28.4017 36.7027 26.8373C36.6546 28.0095 36.6066 29.1817 36.557 30.3893C35.5172 30.1881 35.167 30.035 34.518 29.008C34.3267 28.55 34.2069 28.1283 34.0811 27.6267C33.9849 27.822 33.8888 28.0174 33.7898 28.2187C33.3298 27.1849 33.399 26.0291 33.4985 24.864C33.717 24.0242 33.9588 23.295 34.543 22.8437C34.6309 22.794 34.7188 22.7444 34.8093 22.6933C34.6651 22.6933 34.5209 22.6933 34.3724 22.6933C34.1291 23.082 33.9131 23.4613 33.6987 23.8773C33.4895 24.2757 33.2776 24.6695 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8841 23.877 32.9879 22.8527 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1898 17.6407 39.8527 17.3035 40.6812 16.6654C41.0324 16.4077 41.3161 16.2805 41.7002 16.1567C42.4241 15.8169 42.6564 14.9072 42.9973 14.04C43.592 12.6159 44.3467 11.542 45.4414 10.8533C45.5293 10.7971 45.6172 10.7409 45.7077 10.683C46.5264 10.2073 47.324 10.1389 48.2087 10.064C48.1606 9.21745 48.1126 8.37089 48.063 7.49867Z" fill="#0F383F"/>
<path d="M32.479 27.6267C32.5571 27.8546 32.6352 28.0825 32.7156 28.3173C33.4354 30.2541 34.3197 31.4081 35.8288 32.1653C36.0211 32.1653 36.2133 32.1653 36.4114 32.1653C36.123 31.9048 35.8346 31.6444 35.5375 31.376C35.9003 31.2404 36.1753 31.1787 36.557 31.1787C36.6051 31.0484 36.6532 30.9182 36.7027 30.784C37.0632 30.9794 37.0632 30.9794 37.4309 31.1787C37.3829 31.5694 37.3348 31.9601 37.2853 32.3627C37.6457 32.0696 37.6457 32.0696 38.0135 31.7707C38.0856 31.966 38.0856 31.966 38.1591 32.1653C38.5348 32.3017 38.5348 32.3017 38.9693 32.3873C39.1167 32.4204 39.2641 32.4535 39.4159 32.4875C39.5299 32.5114 39.6438 32.5354 39.7613 32.56C39.8093 32.4298 39.8574 32.2995 39.9069 32.1653C40.4349 32.9269 40.6065 33.486 40.6351 34.5333C40.539 34.7287 40.4429 34.924 40.3438 35.1253C40.0647 35.0284 40.0647 35.0284 39.78 34.9295C39.035 34.7052 38.3276 34.6852 37.5675 34.706C37.3784 34.7087 37.3784 34.7087 37.1854 34.7114C36.8789 34.716 36.5723 34.7231 36.2658 34.7307C36.2177 34.4051 36.1696 34.0795 36.1201 33.744C36.0796 34.0492 36.0796 34.0492 36.0382 34.3607C35.8483 35.2964 35.3694 35.7554 34.8093 36.3093C34.8574 36.5047 34.9054 36.7 34.9549 36.9013C34.9126 37.1664 34.8635 37.4296 34.8093 37.6907C34.789 37.9604 34.7738 38.2309 34.7632 38.5016C34.7571 38.6504 34.751 38.7992 34.7447 38.9525C34.739 39.1059 34.7333 39.2593 34.7274 39.4173C34.7179 39.652 34.7179 39.652 34.7083 39.8914C34.6929 40.276 34.6782 40.6607 34.6637 41.0453C34.5675 41.0453 34.4714 41.0453 34.3724 41.0453C34.4685 41.6314 34.5646 42.2175 34.6637 42.8213C34.5195 42.7562 34.3753 42.6911 34.2267 42.624C34.0159 42.0526 33.9354 41.6883 33.9354 41.0453C33.7852 41.0331 33.635 41.0209 33.4803 41.0083C32.7805 40.8095 32.5467 40.5288 32.042 39.8613C31.7862 39.1681 31.7957 38.445 31.8964 37.6907C32.1413 37.1585 32.4314 36.7343 32.7703 36.3093C32.6982 36.2116 32.6982 36.2116 32.6246 36.112C32.4912 34.907 32.9147 34.1415 33.3528 33.152C33.4518 32.8902 33.5495 32.6274 33.6441 32.3627C33.548 32.3627 33.4519 32.3627 33.3528 32.3627C33.3528 32.4929 33.3528 32.6231 33.3528 32.7573C33.2567 32.7573 33.1606 32.7573 33.0616 32.7573C32.8545 33.3109 32.658 33.8688 32.4699 34.4347C32.4201 34.5832 32.3704 34.7318 32.3191 34.8848C32.1969 35.2921 32.1118 35.6834 32.042 36.112C31.9459 36.112 31.8498 36.112 31.7507 36.112C31.5442 36.6691 31.338 37.2261 31.1408 37.7893C31.0877 37.9379 31.0346 38.0864 30.9798 38.2395C30.8585 38.7555 30.9012 38.9588 31.0225 39.4667C31.0398 39.63 31.0571 39.7933 31.0749 39.9615C31.131 40.4715 31.1967 40.9491 31.3138 41.44C31.6254 41.731 31.6254 41.731 32.042 41.8347C32.5751 42.2267 33.0752 42.6369 33.4985 43.2283C33.9213 43.7833 34.4234 44.0714 34.9549 44.4C34.9549 44.6605 34.9549 44.921 34.9549 45.1893C34.2392 44.8955 33.7311 44.3128 33.2072 43.6107C33.1351 43.4153 33.1351 43.4153 33.0616 43.216C32.9174 43.3137 32.9174 43.3137 32.7703 43.4133C32.8639 44.0199 32.8639 44.0199 33.1776 44.195C33.2835 44.2626 33.3894 44.3303 33.4985 44.4C33.7096 44.6307 33.9159 44.8695 34.1175 45.1153C34.2718 45.3023 34.2718 45.3023 34.4293 45.493C34.5066 45.5882 34.584 45.6833 34.6637 45.7813C34.5916 46.0744 34.5916 46.0744 34.518 46.3733C33.974 46.2751 33.6715 46.2007 33.2072 45.7813C33.2072 45.6511 33.2072 45.5209 33.2072 45.3867C32.6785 45.2564 32.1498 45.1262 31.6051 44.992C31.6051 45.1222 31.6051 45.2525 31.6051 45.3867C31.7943 45.4274 31.9836 45.4681 32.1786 45.51C32.8727 45.7147 33.3595 46.1193 33.9292 46.6817C34.2133 46.9525 34.4951 47.161 34.8093 47.36C34.8093 47.6856 34.8093 48.0112 34.8093 48.3467C35.0016 48.3467 35.1938 48.3467 35.3919 48.3467C35.3919 47.3699 35.3919 46.3931 35.3919 45.3867C36.0648 45.3867 36.7376 45.3867 37.4309 45.3867C37.4309 46.5588 37.4309 47.731 37.4309 48.9387C37.8635 48.841 37.8635 48.841 38.3048 48.7413C38.4384 47.4887 38.5323 46.4198 37.9788 45.3466C37.5831 44.7837 37.1502 44.2934 36.7027 43.808C36.6068 43.7007 36.5108 43.5933 36.412 43.4827C36.3367 43.3988 36.2614 43.3148 36.1838 43.2283C35.717 42.6932 35.5609 42.3162 35.4929 41.4902C35.4827 40.8238 35.4762 40.1578 35.4738 39.4913C35.469 39.2601 35.4642 39.0289 35.4593 38.7906C35.4505 36.8885 35.4505 36.8885 35.8874 36.1598C36.5006 35.4427 36.977 35.4778 37.7586 35.4707C37.8681 35.4666 37.9775 35.4625 38.0903 35.4583C38.7977 35.4516 39.3161 35.5294 39.9069 36.112C40.3832 37.1849 40.3997 38.1265 40.3711 39.3557C40.3682 39.6004 40.3682 39.6004 40.3652 39.8502C40.3601 40.2486 40.3522 40.647 40.3438 41.0453C39.719 41.0453 39.0942 41.0453 38.4504 41.0453C38.4024 40.1988 38.3543 39.3522 38.3048 38.48C38.0645 38.48 37.8242 38.48 37.5766 38.48C37.428 39.2626 37.4195 39.8678 37.5766 40.6507C38.0754 41.5954 38.7384 42.3586 39.3769 43.1257C40.3291 44.2731 40.3291 44.2731 40.3673 45.1124C40.3739 45.8123 40.3781 46.5121 40.3802 47.212C40.3832 47.4544 40.3863 47.6968 40.3893 47.9466C40.3905 48.2988 40.3905 48.2988 40.3916 48.6581C40.393 48.8726 40.3943 49.0871 40.3957 49.3081C40.3353 50.0271 40.1849 50.494 39.9069 51.1093C39.3751 51.5897 38.9743 51.5647 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.4912 50.3517 35.3437 49.6125 35.2462 48.7413C35.1081 48.7658 34.9699 48.7902 34.8275 48.8153C33.8603 48.818 33.0422 47.8857 32.3515 47.0517C31.5128 45.7481 31.5128 45.7481 31.3337 45.197C31.1342 44.7122 30.9213 44.5039 30.5856 44.1903C30.1808 43.8103 29.9921 43.5886 29.7117 43.0187C29.7095 42.4678 29.7206 41.9279 29.739 41.3783C29.7724 39.6622 29.5721 38.1262 29.2424 36.4725C28.8753 34.5764 28.7753 32.5938 29.4204 30.784C30.1009 29.466 31.2315 27.6267 32.479 27.6267Z" fill="#16353A"/>
<path d="M43.0656 17.464C43.659 17.5854 43.869 17.8774 44.2757 18.4491C45.1727 19.3636 46.3312 19.1918 47.392 19.1544C47.6747 19.1447 47.9575 19.1367 48.2403 19.1298C48.7639 19.1164 49.2873 19.0985 49.8108 19.0797C49.9811 19.0753 50.1514 19.0709 50.3269 19.0663C51.4298 19.0187 52.2336 18.9188 53.0969 17.9203C53.4519 17.5627 53.4519 17.5627 53.898 17.4393C54.3258 17.5627 54.3258 17.5627 54.6717 18.0067C55.0702 18.9947 55.0405 20.0299 54.9084 21.1147C54.3558 23.6312 53.2843 26.304 51.5585 27.6267C49.9381 28.6835 48.1695 29.0125 46.4245 28.305C45.5794 27.876 44.9331 27.2738 44.2762 26.4427C44.1605 26.3015 44.1605 26.3015 44.0424 26.1575C43.26 25.0717 42.8276 23.5955 42.3562 22.2387C42.2646 21.981 42.1642 21.729 42.0603 21.48C41.8129 20.6895 41.8844 19.7831 41.9459 18.944C42.198 18.1834 42.4363 17.6226 43.0656 17.464Z" fill="#A9AAA7"/>
<path d="M42.3829 15.392C42.5271 15.4897 42.5271 15.4897 42.6742 15.5893C42.6261 15.7847 42.578 15.9801 42.5285 16.1813C42.865 16.1813 43.2014 16.1813 43.548 16.1813C43.1572 16.5343 42.8148 16.7366 42.3829 16.9707C41.9278 17.2933 41.9278 17.2933 41.8458 17.7847C41.8308 17.9068 41.8158 18.0289 41.8003 18.1547C41.8003 18.0244 41.8003 17.8942 41.8003 17.76C41.7042 17.76 41.608 17.76 41.509 17.76C41.488 17.992 41.4669 18.224 41.4453 18.463C41.3759 19.2167 41.2986 19.9684 41.2177 20.72C40.4384 20.6463 40.124 20.3262 39.6156 19.536C39.5435 19.6337 39.5435 19.6337 39.47 19.7333C39.2259 19.6769 38.9829 19.6114 38.7417 19.536C38.8401 19.622 38.9385 19.708 39.0398 19.7965C39.9568 20.6259 40.5701 21.2451 40.9264 22.6933C41.2147 23.027 41.506 23.356 41.8003 23.68C42.1681 24.6767 42.0484 26.4552 41.8583 27.5303C41.7006 28.0452 41.593 28.3591 41.2177 28.6133C41.2019 28.7652 41.1862 28.9171 41.1699 29.0735C41.0388 29.7791 40.8228 29.9329 40.3802 30.3277C40.2548 30.4424 40.1294 30.5571 40.0002 30.6753C39.4723 31.0954 39.0681 31.3811 38.4504 31.3637C37.7149 31.0522 37.3935 30.459 37.0304 29.563C36.7757 28.6818 36.7501 27.7746 36.7027 26.8373C36.6546 28.0095 36.6066 29.1817 36.557 30.3893C35.5172 30.1881 35.167 30.035 34.518 29.008C34.3267 28.55 34.2069 28.1283 34.0811 27.6267C33.9849 27.822 33.8888 28.0174 33.7898 28.2187C33.3298 27.1849 33.399 26.0291 33.4985 24.864C33.717 24.0242 33.9588 23.295 34.543 22.8436C34.6309 22.794 34.7188 22.7444 34.8093 22.6933C34.6651 22.6933 34.5209 22.6933 34.3724 22.6933C34.1291 23.0819 33.9131 23.4613 33.6987 23.8773C33.4895 24.2757 33.2776 24.6695 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8841 23.877 32.9879 22.8527 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1877 17.6409 39.8485 17.3018 40.6778 16.6731C41.0335 16.4074 41.3718 16.2122 41.7548 16.0333C42.2496 15.8649 42.2496 15.8649 42.3829 15.392Z" fill="#6B99B1"/>
<path d="M36.0072 52.0736C36.1468 52.0746 36.2864 52.0757 36.4302 52.0767C36.5658 52.0772 36.7015 52.0777 36.8412 52.0782C37.1016 52.0809 37.1016 52.0809 37.3672 52.0837C37.9169 52.0877 38.4666 52.0918 39.033 52.096C39.2733 54.0496 39.5136 56.0032 39.7612 58.016C40.1217 55.0856 40.1217 55.0856 40.4895 52.096C41.5949 52.096 42.7004 52.096 43.8393 52.096C43.8393 56.0683 43.8393 60.0406 43.8393 64.1333C43.1184 64.1333 42.3974 64.1333 41.6546 64.1333C41.4239 63.8207 41.477 63.4866 41.4629 63.0534C41.4568 62.876 41.4507 62.6985 41.4444 62.5157C41.4387 62.3292 41.433 62.1426 41.4271 61.9503C41.4208 61.763 41.4145 61.5756 41.408 61.3826C41.3925 60.9182 41.3776 60.4538 41.3633 59.9893C41.3509 60.1008 41.3384 60.2124 41.3255 60.3272C41.2689 60.8314 41.2114 61.3354 41.154 61.8393C41.1344 62.0148 41.1147 62.1904 41.0945 62.3712C41.0753 62.5391 41.056 62.707 41.0362 62.88C41.0099 63.1125 41.0099 63.1125 40.983 63.3497C40.9264 63.7387 40.9264 63.7387 40.7808 64.1333C40.1079 64.1333 39.435 64.1333 38.7417 64.1333C38.5172 63.3727 38.4006 62.8821 38.3264 62.1006C38.3076 61.908 38.2888 61.7153 38.2695 61.5167C38.2511 61.3179 38.2327 61.1191 38.2137 60.9143C38.1942 60.7117 38.1747 60.5091 38.1546 60.3004C38.1067 59.8022 38.0597 59.3038 38.0135 58.8053C38.0098 58.9597 38.0062 59.1141 38.0024 59.2732C37.9856 59.9683 37.9677 60.6633 37.9498 61.3583C37.944 61.6014 37.9383 61.8444 37.9324 62.0949C37.9263 62.3257 37.9202 62.5566 37.9139 62.7944C37.9086 63.0083 37.9032 63.2222 37.8977 63.4426C37.8678 63.936 37.8678 63.936 37.7222 64.1333C37.3795 64.1477 37.0364 64.1498 36.6936 64.1457C36.5056 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4916 63.6142 35.519 63.2277 35.5187 62.6463C35.5182 62.4179 35.5177 62.1894 35.5173 61.954C35.5176 61.7063 35.5179 61.4586 35.5182 61.2034C35.518 60.9504 35.5179 60.6974 35.5177 60.4367C35.5175 59.901 35.5178 59.3654 35.5185 58.8298C35.5194 58.1418 35.5189 57.4539 35.518 56.7659C35.5174 56.1114 35.5178 55.4569 35.5182 54.8024C35.5179 54.5543 35.5176 54.3062 35.5173 54.0506C35.5177 53.8227 35.5182 53.5949 35.5187 53.3601C35.5188 53.1584 35.5189 52.9567 35.519 52.7489C35.5435 52.1446 35.5614 52.1044 36.0072 52.0736Z" fill="#3F86A8"/>
<path d="M62.1907 20.128C63.1966 20.921 63.6867 22.2345 64.0841 23.68C64.1441 24.1907 64.136 24.5457 64.0841 25.0613C63.68 24.7876 63.5882 24.4019 63.3559 23.8773C63.1241 23.4656 62.8812 23.082 62.6277 22.6933C62.5796 22.6933 62.5315 22.6933 62.482 22.6933C62.5434 22.8124 62.6048 22.9314 62.668 23.0541C62.7478 23.2118 62.8276 23.3695 62.9098 23.532C62.9893 23.6877 63.0687 23.8434 63.1505 24.0037C63.5945 25.0102 63.5602 26.0878 63.5015 27.232C63.3559 27.8487 63.3559 27.8487 63.2102 28.2187C63.1141 27.9582 63.018 27.6977 62.9189 27.4293C62.887 27.5461 62.8551 27.6628 62.8222 27.7831C62.4941 28.8909 62.2156 29.5517 61.4625 30.192C60.9578 30.2897 60.9578 30.2897 60.443 30.3893C60.3949 29.3474 60.3468 28.3055 60.2973 27.232C60.2613 27.525 60.2252 27.8181 60.1881 28.12C60.0087 29.3179 59.7734 30.3612 59.0866 31.191C58.5496 31.4448 58.224 31.3742 57.6757 31.1787C56.6703 30.4541 55.6161 29.1679 55.1457 27.733C55.0179 27.0343 54.9856 26.345 54.9722 25.6287C54.9682 25.4942 54.9643 25.3598 54.9602 25.2213C54.9667 24.0979 55.2183 23.6492 55.7823 22.8907C55.9265 22.7604 56.0707 22.6302 56.2192 22.496C56.2416 22.3396 56.2639 22.1831 56.2869 22.0219C56.4439 20.99 57.1989 20.4518 57.7997 19.8644C59.1491 18.7674 60.8562 19.2051 62.1907 20.128Z" fill="#6595AD"/>
<path d="M51.7042 35.52C55.3454 35.52 55.3454 35.52 56.2192 36.3093C56.6251 37.0131 56.5576 37.875 56.5595 38.7313C56.5604 38.8894 56.5614 39.0476 56.5624 39.2105C56.5639 39.5445 56.5646 39.8786 56.5645 40.2126C56.5651 40.7216 56.5704 41.2302 56.576 41.7391C56.5768 42.0644 56.5774 42.3897 56.5777 42.715C56.5798 42.8661 56.5818 43.0172 56.584 43.1729C56.5764 44.3942 56.2809 45.1058 55.6367 45.9787C55.6672 46.4491 55.6672 46.4491 55.7726 46.9823C55.8071 47.1822 55.8415 47.3822 55.877 47.5882C55.9338 47.9026 55.9338 47.9026 55.9917 48.2233C56.0655 48.6356 56.1382 49.0482 56.2096 49.4613C56.2427 49.6448 56.2758 49.8283 56.3099 50.0174C56.3654 50.5221 56.3394 50.8282 56.2192 51.3067C56.0893 51.2924 55.9594 51.2782 55.8255 51.2635C55.6551 51.2452 55.4846 51.2269 55.309 51.208C55.14 51.1897 54.971 51.1714 54.7969 51.1525C54.0852 51.0873 53.5638 51.1603 52.8978 51.4562C52.5781 51.504 52.5781 51.504 51.7042 51.1093C51.7042 45.9649 51.7042 40.8204 51.7042 35.52Z" fill="#D3D2D2"/>
<path d="M50.221 52.0767C50.4514 52.078 50.6819 52.0804 50.9123 52.0837C51.0297 52.0845 51.1471 52.0854 51.2681 52.0864C51.5591 52.0887 51.8501 52.0922 52.1411 52.096C52.5351 53.457 52.8486 54.8405 53.1607 56.24C53.2087 54.8725 53.2568 53.505 53.3063 52.096C54.0753 52.096 54.8443 52.096 55.6366 52.096C55.6399 53.6363 55.6426 55.1767 55.6442 56.717C55.6449 57.4322 55.646 58.1473 55.6476 58.8625C55.6492 59.5522 55.6501 60.2418 55.6505 60.9314C55.6509 61.3238 55.652 61.7161 55.6531 62.1084C55.6532 62.3455 55.6532 62.5825 55.6532 62.8267C55.6535 63.0366 55.6538 63.2465 55.6542 63.4628C55.6366 63.936 55.6366 63.936 55.491 64.1333C55.0741 64.1478 54.6607 64.1516 54.2439 64.1457C54.1265 64.1448 54.009 64.1439 53.888 64.143C53.597 64.1406 53.306 64.1371 53.015 64.1333C52.6734 63.2714 52.4499 62.4369 52.2595 61.494C52.2094 61.2483 52.1592 61.0025 52.1076 60.7494C52.0706 60.5637 52.0336 60.378 51.9955 60.1867C51.9972 60.4385 51.9989 60.6903 52.0006 60.9498C52.002 61.2792 52.0033 61.6086 52.0046 61.938C52.0058 62.1041 52.007 62.2702 52.0083 62.4413C52.009 62.6798 52.009 62.6798 52.0097 62.9231C52.0109 63.1432 52.0109 63.1432 52.012 63.3678C51.9955 63.7387 51.9955 63.7387 51.8499 64.1333C51.4888 64.1386 51.1277 64.1426 50.7666 64.1457C50.6636 64.1473 50.5607 64.149 50.4546 64.1507C50.1914 64.1524 49.9282 64.1436 49.6652 64.1333C49.4113 63.7894 49.5009 63.3156 49.5007 62.848C49.5002 62.6155 49.4998 62.3831 49.4993 62.1436C49.4996 61.8906 49.4999 61.6375 49.5002 61.3768C49.5 61.1192 49.4999 60.8615 49.4998 60.596C49.4995 60.0499 49.4999 59.5038 49.5005 58.9577C49.5014 58.2562 49.5009 57.5548 49.5 56.8534C49.4994 56.1864 49.4998 55.5194 49.5002 54.8525C49.4999 54.5995 49.4996 54.3464 49.4993 54.0857C49.4997 53.8533 49.5002 53.6208 49.5007 53.3814C49.5008 53.1756 49.5009 52.9698 49.501 52.7577C49.532 51.9809 49.6169 52.0977 50.221 52.0767Z" fill="#3C82A2"/>
<path d="M40.9264 35.52C41.5513 35.52 42.1761 35.52 42.8198 35.52C42.8198 37.6038 42.8198 39.6877 42.8198 41.8347C43.1563 41.8347 43.4927 41.8347 43.8394 41.8347C43.8394 39.7508 43.8394 37.667 43.8394 35.52C44.4642 35.52 45.089 35.52 45.7327 35.52C45.7551 37.5234 45.7767 39.5269 45.7973 41.5304C45.8068 42.4606 45.8167 43.3908 45.8272 44.3209C45.8372 45.2179 45.8466 46.1148 45.8555 47.0117C45.859 47.3547 45.8628 47.6976 45.8668 48.0406C45.8724 48.5193 45.8771 48.998 45.8816 49.4767C45.8834 49.6199 45.8853 49.7631 45.8873 49.9107C45.8899 50.2444 45.885 50.5783 45.8784 50.912C45.6048 51.2826 45.1444 51.1865 44.7769 51.2203C44.6025 51.2369 44.4281 51.2534 44.2484 51.2704C44.1134 51.2824 43.9784 51.2944 43.8394 51.3067C43.4902 50.1753 43.3173 49.1745 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9672 48.1469 42.9689 48.3417 42.9706 48.5425C42.9719 48.7953 42.9732 49.0482 42.9746 49.3087C42.9763 49.5605 42.978 49.8123 42.9797 50.0718C42.9655 50.7147 42.9655 50.7147 42.8198 51.1093C42.4284 51.198 42.4284 51.198 41.946 51.245C41.7867 51.262 41.6275 51.2791 41.4635 51.2966C41.3343 51.3 41.2052 51.3033 41.0721 51.3067C40.8233 50.9696 40.909 50.545 40.9083 50.0955C40.9088 49.9504 40.9094 49.8053 40.9099 49.6559C40.9099 49.5038 40.9099 49.3517 40.9098 49.195C40.9099 48.69 40.9111 48.1849 40.9122 47.6799C40.9125 47.3307 40.9127 46.9814 40.9128 46.6322C40.9134 45.7112 40.9148 44.7902 40.9164 43.8692C40.9179 42.9301 40.9186 41.991 40.9193 41.0519C40.9209 39.2079 40.9234 37.364 40.9264 35.52Z" fill="#FBFBFB"/>
<path d="M48.6275 35.4583C48.7286 35.4552 48.8298 35.452 48.9341 35.4487C49.6275 35.4478 50.1074 35.5886 50.6847 36.112C51.1286 36.9073 51.1782 37.5117 51.1846 38.4968C51.1868 38.702 51.1868 38.702 51.1891 38.9114C51.1935 39.3609 51.1948 39.8103 51.1962 40.2599C51.1986 40.5726 51.2013 40.8853 51.2041 41.198C51.211 42.0191 51.2153 42.8401 51.2192 43.6612C51.2235 44.4999 51.2303 45.3385 51.2368 46.1772C51.2494 47.8212 51.2592 49.4652 51.2673 51.1093C50.9306 51.1476 50.5937 51.1843 50.2569 51.2203C50.0693 51.2409 49.8817 51.2615 49.6885 51.2828C49.5366 51.2907 49.3847 51.2985 49.2282 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9515 48.4969 48.937 48.1493C48.7928 48.1493 48.6486 48.1493 48.5 48.1493C48.4039 49.1261 48.3078 50.1029 48.2087 51.1093C47.5358 51.1093 46.863 51.1093 46.1697 51.1093C46.1502 48.7969 46.208 46.5111 46.3153 44.2027C47.2766 44.2027 48.2379 44.2027 49.2282 44.2027C49.1802 42.3142 49.1321 40.4257 49.0826 38.48C48.8423 38.48 48.602 38.48 48.3544 38.48C48.3063 40.3034 48.2582 42.1267 48.2087 44.0053C47.5839 44.0053 46.9591 44.0053 46.3153 44.0053C46.3009 43.0434 46.2903 42.0816 46.2833 41.1195C46.2804 40.7926 46.2764 40.4657 46.2714 40.1388C46.2643 39.6676 46.261 39.1965 46.2584 38.7251C46.2554 38.5802 46.2524 38.4352 46.2493 38.2858C46.249 37.2667 46.4268 36.7012 46.8979 35.9147C47.4078 35.382 48.009 35.4545 48.6275 35.4583Z" fill="#FAFAFA"/>
<path d="M57.0931 35.52C57.7179 35.52 58.3427 35.52 58.9865 35.52C59.0346 37.0829 59.0826 38.6458 59.1321 40.256C59.3657 38.8452 59.3657 38.8452 59.5983 37.4341C59.6275 37.2588 59.6567 37.0835 59.6868 36.9029C59.7315 36.6332 59.7315 36.6332 59.777 36.358C59.8604 35.9147 59.8604 35.9147 60.006 35.52C60.6308 35.52 61.2556 35.52 61.8994 35.52C61.7535 36.7812 61.5915 38.0273 61.3834 39.2724C61.3442 39.507 61.3051 39.7415 61.2648 39.9831C61.1836 40.4645 61.1013 40.9455 61.0178 41.4261C60.8062 42.7072 60.6758 43.7056 60.8799 44.992C60.9009 45.134 60.9218 45.2761 60.9434 45.4224C61.0116 45.8767 61.086 46.3284 61.1621 46.7803C61.1868 46.9311 61.2114 47.0818 61.2369 47.2371C61.3873 48.1431 61.5638 49.0327 61.7538 49.9253C61.8066 50.319 61.8566 50.7134 61.8994 51.1093C61.1343 51.5989 60.4861 51.4762 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.216 51.3738 57.5912 51.2435 56.9474 51.1093C56.9955 45.9649 57.0436 40.8204 57.0931 35.52Z" fill="#F9F9F9"/>
<path d="M37.7586 35.4707C37.9228 35.4646 37.9228 35.4646 38.0903 35.4583C38.7977 35.4516 39.3161 35.5294 39.9069 36.112C40.3832 37.1849 40.3996 38.1265 40.3711 39.3557C40.3682 39.6004 40.3682 39.6004 40.3652 39.8502C40.3601 40.2486 40.3522 40.647 40.3438 41.0453C39.719 41.0453 39.0942 41.0453 38.4504 41.0453C38.3783 39.7755 38.3783 39.7755 38.3048 38.48C38.0645 38.48 37.8242 38.48 37.5766 38.48C37.428 39.2626 37.4195 39.8678 37.5766 40.6507C38.0754 41.5954 38.7384 42.3586 39.3769 43.1257C40.3291 44.2731 40.3291 44.2731 40.3673 45.1124C40.3739 45.8123 40.3781 46.5121 40.3802 47.212C40.3832 47.4544 40.3862 47.6968 40.3893 47.9466C40.3905 48.2988 40.3905 48.2988 40.3916 48.6581C40.393 48.8726 40.3943 49.0871 40.3957 49.3081C40.3353 50.0271 40.1849 50.494 39.9069 51.1093C39.3751 51.5897 38.9743 51.5647 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.292 49.9144 35.3635 48.8322 35.4374 47.471C35.4463 47.2702 35.4552 47.0693 35.4644 46.8624C35.4866 46.3703 35.5118 45.8785 35.5375 45.3867C36.1623 45.3867 36.7872 45.3867 37.4309 45.3867C37.4309 46.5588 37.4309 47.731 37.4309 48.9387C37.8635 48.841 37.8635 48.841 38.3048 48.7413C38.4384 47.4887 38.5323 46.4198 37.9788 45.3466C37.5831 44.7837 37.1502 44.2934 36.7027 43.808C36.6067 43.7007 36.5108 43.5933 36.412 43.4827C36.299 43.3568 36.299 43.3568 36.1838 43.2283C35.717 42.6932 35.5609 42.3162 35.4929 41.4902C35.4827 40.8238 35.4762 40.1578 35.4738 39.4913C35.469 39.2601 35.4642 39.0289 35.4593 38.7906C35.4505 36.8886 35.4505 36.8886 35.8874 36.1598C36.5006 35.4427 36.977 35.4778 37.7586 35.4707Z" fill="#B1B1B1"/>
<path d="M56.0736 52.096C56.8426 52.096 57.6116 52.096 58.4039 52.096C58.5437 52.6643 58.5673 53.0168 58.5661 53.6066C58.5661 53.7922 58.5661 53.9779 58.5661 54.1691C58.5653 54.369 58.5646 54.5688 58.5638 54.7747C58.5636 54.9797 58.5634 55.1847 58.5632 55.3959C58.5624 56.0514 58.5605 56.7069 58.5587 57.3623C58.558 57.8065 58.5573 58.2506 58.5567 58.6947C58.5551 59.784 58.5526 60.8734 58.5496 61.9627C58.838 61.9627 59.1263 61.9627 59.4235 61.9627C59.4715 58.7067 59.5196 55.4507 59.5691 52.096C60.29 52.096 61.011 52.096 61.7538 52.096C61.9871 52.4121 61.9191 52.747 61.9206 53.1846C61.9215 53.3743 61.9224 53.5641 61.9234 53.7596C61.9236 53.9663 61.9237 54.1731 61.9239 54.3862C61.9246 54.7035 61.9246 54.7035 61.9254 55.0272C61.9261 55.4762 61.9264 55.9253 61.9264 56.3744C61.9267 57.06 61.9294 57.7455 61.9321 58.4311C61.9326 58.867 61.9329 59.3029 61.933 59.7388C61.934 59.9436 61.9351 60.1484 61.9362 60.3594C61.9307 62.7096 61.9307 62.7096 61.2713 63.603C60.5402 64.225 59.7654 64.1693 58.9228 64.1703C58.8153 64.1728 58.7078 64.1752 58.5971 64.1777C57.7862 64.1806 57.1016 64.0899 56.465 63.344C56.0745 62.7169 56.0557 62.3563 56.0571 61.5498C56.0571 61.3404 56.0571 61.1311 56.0571 60.9154C56.0579 60.6886 56.0586 60.4619 56.0594 60.2283C56.0596 59.9967 56.0598 59.7651 56.06 59.5265C56.0608 58.7846 56.0627 58.0426 56.0645 57.3007C56.0652 56.7986 56.0659 56.2965 56.0665 55.7945C56.0681 54.5616 56.0706 53.3288 56.0736 52.096Z" fill="#377896"/>
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4118 10.1063 49.8599 10.2505 50.3547 10.3832C51.6804 10.7429 52.6609 11.5234 53.4519 13.024C53.0666 13.5674 52.6727 14.0246 52.2231 14.467C51.6183 15.0896 51.2519 15.7279 50.8303 16.576C50.7342 16.576 50.6381 16.576 50.539 16.576C50.5291 16.691 50.5191 16.806 50.5089 16.9244C50.3483 17.5374 50.1007 17.7356 49.7107 18.1053C49.5869 18.2264 49.4632 18.3475 49.3357 18.4723C48.8531 18.8044 48.5984 18.8539 48.063 18.7467C47.5954 18.4013 47.5954 18.4013 47.1346 17.9573C46.9802 17.8108 46.8259 17.6643 46.6669 17.5133C46.5509 17.3994 46.4348 17.2854 46.3153 17.168C46.3634 16.9075 46.4114 16.647 46.4609 16.3787C46.3736 16.3642 46.2863 16.3497 46.1964 16.3347C45.669 16.0804 45.5153 15.458 45.2463 14.8254C44.9546 14.3187 44.7191 14.2154 44.2763 14.0107C44.0282 13.7568 43.7841 13.4954 43.548 13.2213C43.9781 11.8996 44.8036 11.1004 45.7782 10.582C46.5865 10.2231 47.3615 10.1236 48.2087 10.064C48.1366 8.79417 48.1366 8.79417 48.063 7.49867Z" fill="#709BB2"/>
<path d="M43.0656 17.464C43.6591 17.5854 43.869 17.8774 44.2757 18.4491C45.1728 19.3636 46.3312 19.1918 47.392 19.1544C47.6748 19.1447 47.9575 19.1368 48.2403 19.1298C48.7639 19.1164 49.2873 19.0985 49.8108 19.0797C49.9812 19.0753 50.1515 19.0709 50.327 19.0663C51.409 19.0196 52.1081 18.8154 53.0514 18.1053C53.3063 17.9573 53.3063 17.9573 53.7433 18.1547C53.3155 19.4895 52.388 20.3246 51.4493 20.952C50.3269 21.5091 49.3226 21.559 48.1359 21.534C47.9744 21.5322 47.813 21.5304 47.6466 21.5286C47.2514 21.524 46.8562 21.5169 46.461 21.5093C47.3261 21.7047 47.3261 21.7047 48.2087 21.904C48.3742 22.5768 48.3351 22.694 48.145 23.3223C48.1031 23.4635 48.0613 23.6047 48.0181 23.7501C47.9849 23.8572 47.9517 23.9643 47.9174 24.0747C47.8213 24.0747 47.7252 24.0747 47.6261 24.0747C47.6261 24.27 47.6261 24.4654 47.6261 24.6667C47.7223 24.6667 47.8184 24.6667 47.9174 24.6667C47.9595 24.4754 48.0015 24.2841 48.0449 24.087C48.2087 23.4827 48.2087 23.4827 48.5 23.2853C48.5631 23.4766 48.6262 23.6679 48.6912 23.865C48.8935 24.5241 48.8935 24.5241 49.3739 24.6667C49.5181 24.2108 49.6623 23.755 49.8108 23.2853C50.1021 23.68 50.1021 23.68 50.3934 24.4693C50.2012 23.753 50.0089 23.0367 49.8108 22.2987C49.5224 23.1778 49.5224 23.1778 49.2282 24.0747C49.1321 24.0747 49.036 24.0747 48.937 24.0747C48.7928 23.4235 48.6486 22.7723 48.5 22.1013C49.2638 21.7564 49.8797 21.6684 50.6847 21.7067C50.7027 21.9305 50.7207 22.1544 50.7393 22.385C50.7694 22.617 50.7994 22.849 50.8303 23.088C50.9265 23.1531 51.0226 23.2182 51.1216 23.2853C51.1216 23.7412 51.1216 24.197 51.1216 24.6667C51.362 24.6667 51.6023 24.6667 51.8499 24.6667C51.4667 25.3385 50.9873 25.5115 50.3934 25.6533C49.7225 25.7202 49.0542 25.7264 48.3817 25.7273C48.1151 25.7346 48.1151 25.7346 47.8432 25.742C46.7785 25.7466 45.7774 25.6685 44.8589 24.864C44.8108 24.6686 44.7627 24.4733 44.7132 24.272C44.6411 24.1865 44.569 24.1011 44.4948 24.013C44.1882 23.5457 44.1806 23.1048 44.1306 22.496C44.2268 22.496 44.3229 22.496 44.4219 22.496C44.47 22.0402 44.5181 21.5843 44.5676 21.1147C44.7118 21.1798 44.856 21.2449 45.0045 21.312C44.9565 21.8981 44.9084 22.4842 44.8589 23.088C44.955 23.0229 45.0511 22.9578 45.1502 22.8907C45.2463 23.4768 45.3424 24.0628 45.4415 24.6667C45.5376 24.6667 45.6337 24.6667 45.7327 24.6667C45.7573 24.3831 45.7815 24.0994 45.8056 23.8157C45.8258 23.5787 45.8258 23.5787 45.8465 23.337C45.8854 22.8672 45.8854 22.8672 45.8784 22.2987C45.7823 22.6894 45.6861 23.0801 45.5871 23.4827C45.2958 23.088 45.2958 23.088 45.2674 22.6178C45.2707 22.4392 45.2741 22.2607 45.2776 22.0767C45.2802 21.8971 45.2829 21.7175 45.2856 21.5325C45.2889 21.3946 45.2923 21.2567 45.2958 21.1147C45.44 21.1147 45.5842 21.1147 45.7327 21.1147C45.6516 21.0595 45.5705 21.0043 45.487 20.9474C44.6635 20.3613 43.8732 19.707 43.2568 18.7467C43.2568 18.5513 43.2568 18.356 43.2568 18.1547C43.1606 18.1547 43.0645 18.1547 42.9655 18.1547C43.0063 18.7428 43.049 19.3306 43.0929 19.9183C43.1044 20.0861 43.1158 20.2539 43.1276 20.4267C43.1398 20.5863 43.152 20.7459 43.1646 20.9104C43.1753 21.0582 43.186 21.206 43.197 21.3582C43.2167 21.4732 43.2364 21.5882 43.2568 21.7067C43.3529 21.7718 43.449 21.8369 43.5481 21.904C43.6756 22.2809 43.7923 22.6645 43.9031 23.051C44.2329 24.3601 44.2329 24.3601 44.9683 25.2291C45.903 25.6968 46.8686 25.8391 47.8537 25.9863C48.0145 26.0119 48.1753 26.0375 48.341 26.0638C48.7337 26.126 49.1265 26.1865 49.5195 26.2453C49.5195 26.3105 49.5195 26.3756 49.5195 26.4427C46.7516 26.5155 46.7516 26.5155 45.5871 26.048C45.7871 26.1437 45.9874 26.238 46.1879 26.3317C46.2994 26.3843 46.4109 26.437 46.5258 26.4912C47.4694 26.8685 48.3806 26.8613 49.3557 26.8497C49.4976 26.8488 49.6396 26.8479 49.7858 26.847C50.134 26.8447 50.4822 26.8414 50.8303 26.8373C50.6847 27.232 50.6847 27.232 50.4314 27.3533C49.7781 27.5042 49.1156 27.4658 48.4545 27.4663C48.3059 27.4688 48.1573 27.4712 48.0042 27.4737C46.4733 27.4777 45.4493 26.9988 44.2763 25.6533C43.9487 25.1547 43.6739 24.6305 43.4024 24.0747C43.1895 23.6395 43.1895 23.6395 42.9655 23.2853C42.8694 23.2853 42.7732 23.2853 42.6742 23.2853C42.0955 21.8376 41.7576 20.6032 41.946 18.944C42.198 18.1834 42.4363 17.6226 43.0656 17.464Z" fill="#8F7B77"/>
<path d="M53.6795 26.381C53.8871 26.3821 53.8871 26.3821 54.0988 26.3833C54.4715 26.4427 54.4715 26.4427 54.9084 26.8373C54.9719 27.2082 55.035 27.5792 55.095 27.9512C55.3489 29.0783 55.8544 30.1564 56.4923 30.9567C56.6455 31.1642 56.6455 31.1642 56.8018 31.376C56.8018 31.6365 56.8018 31.897 56.8018 32.1653C56.552 32.4945 56.552 32.4945 56.2283 32.7943C56.1219 32.8948 56.0154 32.9953 55.9057 33.0988C55.7725 33.2228 55.7725 33.2228 55.6366 33.3493C55.5886 33.4145 55.5405 33.4796 55.491 33.5467C55.7313 33.4164 55.9716 33.2862 56.2192 33.152C56.1231 33.673 56.027 34.1939 55.9279 34.7307C55.7927 34.7286 55.6574 34.7265 55.5181 34.7244C55.017 34.7177 54.516 34.7127 54.0149 34.709C53.7979 34.707 53.5809 34.7043 53.3639 34.7009C53.0523 34.6961 52.7407 34.6939 52.429 34.6921C52.2414 34.6901 52.0538 34.688 51.8604 34.6859C51.3973 34.6659 51.3973 34.6659 51.1216 35.1253C50.8423 35.0845 50.8423 35.0845 50.5117 34.965C49.9379 34.77 49.3778 34.6348 48.7913 34.5333C48.8393 34.338 48.8874 34.1426 48.9369 33.9413C49.0331 33.9413 49.1292 33.9413 49.2282 33.9413C49.1328 33.8688 49.0375 33.7963 48.9392 33.7217C48.6456 33.3493 48.6456 33.3493 48.5887 32.7735C48.5955 32.5606 48.6023 32.3477 48.6092 32.1283C48.6145 31.9139 48.6197 31.6995 48.6252 31.4785C48.6319 31.3145 48.6387 31.1504 48.6456 30.9813C48.8379 31.0465 49.0301 31.1116 49.2282 31.1787C49.084 31.0484 48.9398 30.9182 48.7913 30.784C48.7435 30.3639 48.7435 30.3639 48.7549 29.8837C48.7571 29.7247 48.7594 29.5657 48.7617 29.4019C48.7913 29.008 48.7913 29.008 48.9369 28.8107C49.1544 28.7464 49.3731 28.6903 49.5923 28.638C51.1032 28.2645 51.1032 28.2645 52.2868 27.0347C52.7506 26.4608 53.056 26.3661 53.6795 26.381Z" fill="#DEDFDE"/>
<path d="M44.1306 26.4427C44.5949 26.899 44.5949 26.899 44.8589 27.4293C44.8589 27.6247 44.8589 27.8201 44.8589 28.0213C44.7627 28.0865 44.6666 28.1516 44.5676 28.2187C44.7075 28.2118 44.7075 28.2118 44.8503 28.2048C45.6452 28.1823 46.2801 28.2815 47.0435 28.6133C47.2298 28.6459 47.416 28.6785 47.6079 28.712C47.7581 28.7446 47.9083 28.7771 48.0631 28.8107C48.2972 29.445 48.2171 30.0807 48.2087 30.784C47.3985 31.309 46.6164 31.5659 45.7327 31.7707C46.6881 31.6937 47.4725 31.4902 48.3544 30.9813C48.3544 31.8279 48.3544 32.6745 48.3544 33.5467C48.1621 33.6769 47.9698 33.8071 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3544 34.1387C48.2823 34.334 48.2823 34.334 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.467 34.7738 47.3534 34.8046 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.4491 34.7069 45.0326 34.7038 44.604 34.7183C43.3694 34.7414 42.1568 34.6729 40.9264 34.5333C40.9122 34.4143 40.8979 34.2952 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733C40.5332 31.5082 41.0138 31.4431 41.509 31.376C41.1726 31.3109 40.8361 31.2458 40.4895 31.1787C40.5458 31.0876 40.6021 30.9965 40.6602 30.9027C41.4219 29.6101 41.8757 28.2701 42.0916 26.64C42.7655 26.3357 43.4277 26.3161 44.1306 26.4427Z" fill="#D9DADA"/>
<path d="M65.2493 28.0213C65.7659 28.3195 66.1023 28.7294 66.4964 29.267C66.6077 29.4168 66.719 29.5667 66.8337 29.721C67.5833 30.8638 67.5833 30.8638 67.5739 31.6651C67.4057 32.6269 67.2208 33.4714 66.8514 34.336C66.7552 34.336 66.6591 34.336 66.5601 34.336C66.464 34.1406 66.3678 33.9453 66.2688 33.744C66.1197 34.4108 66.1037 35.0224 66.1049 35.7173C66.1046 35.9208 66.1042 36.1243 66.1038 36.334C66.1204 36.8217 66.1649 37.2258 66.2688 37.6907C66.3319 37.475 66.395 37.2592 66.4599 37.037C66.6325 36.4923 66.7825 36.078 67.1427 35.7173C67.2388 35.7173 67.3349 35.7173 67.434 35.7173C67.3736 36.399 67.3063 37.0271 67.1427 37.6783C66.9659 38.4116 66.9099 39.0947 66.8514 39.8613C66.7552 39.8613 66.6591 39.8613 66.5601 39.8613C66.6352 40.0648 66.7103 40.2683 66.7876 40.478C67.0126 41.1935 67.0453 41.6735 66.8514 42.4267C66.551 42.698 66.551 42.698 66.2688 42.8213C66.2688 42.4306 66.2688 42.0399 66.2688 41.6373C66.1944 41.8483 66.1944 41.8483 66.1186 42.0636C65.4978 43.7255 64.7485 44.9366 63.5015 45.7813C63.3077 45.8489 63.1135 45.915 62.9189 45.9787C62.7747 46.174 62.7747 46.174 62.6276 46.3733C62.6327 46.1848 62.6378 45.9963 62.643 45.8021C62.6675 44.2202 62.6628 42.7272 62.1907 41.2427C62.0946 41.1775 61.9985 41.1124 61.8994 41.0453C61.8704 39.91 61.956 38.966 62.1816 37.8757C62.3795 36.8932 62.5354 35.9397 62.6276 34.928C62.1951 34.7978 61.7625 34.6675 61.3168 34.5333C61.3641 33.8677 61.4192 33.2866 61.6172 32.671C61.9884 32.2655 62.3064 32.2519 62.7744 32.2879C63.4535 32.4629 63.747 33.0648 64.1296 33.7933C64.4432 34.5834 64.4196 35.2278 64.3754 36.112C64.3418 36.5246 64.3418 36.5246 64.5757 36.7903C64.6538 36.8921 64.7319 36.9938 64.8123 37.0987C65.2044 37.8956 65.218 38.5306 65.1036 39.4667C64.8426 40.1862 64.4847 40.5814 63.9476 40.922C63.4941 41.0474 63.0891 41.0751 62.6276 41.0453C62.6992 41.2046 62.7707 41.3638 62.8444 41.5279C63.1151 42.3904 63.1144 43.0579 63.0919 43.9807C63.0899 44.1353 63.0879 44.29 63.0859 44.4493C63.0808 44.8276 63.073 45.2058 63.0646 45.584C63.2358 45.3886 63.2358 45.3886 63.4105 45.1893C63.7928 44.7947 63.7928 44.7947 64.0841 44.7947C64.1232 44.6797 64.1622 44.5647 64.2024 44.4462C64.3775 43.9998 64.5703 43.649 64.8123 43.2653C64.8874 43.1442 64.9625 43.0232 65.0399 42.8984C65.2493 42.624 65.2493 42.624 65.5406 42.624C65.5826 42.51 65.6247 42.3961 65.668 42.2787C65.7669 42.0106 65.8709 41.7456 65.9838 41.4878C66.3299 40.389 66.2563 38.9956 65.9701 37.8872C65.7244 37.2126 65.4974 36.6456 65.1036 36.112C65.0079 35.7123 64.9212 35.3087 64.8396 34.9033C64.6618 34.0769 64.4867 33.3998 64.1205 32.6957C63.7119 31.8814 63.6881 31.3666 63.7928 30.3893C64.1168 29.587 64.4631 28.7621 65.1309 28.4777C65.2616 28.4471 65.2616 28.4471 65.3949 28.416C65.3468 28.2858 65.2988 28.1555 65.2493 28.0213Z" fill="#6592A7"/>
<path d="M45.5643 52.0698C45.664 52.0696 45.7636 52.0694 45.8663 52.0692C46.0774 52.0691 46.2885 52.0695 46.4996 52.0703C46.8237 52.0713 47.1478 52.0703 47.4719 52.069C47.6766 52.0692 47.8812 52.0694 48.0858 52.0698C48.2733 52.07 48.4607 52.0702 48.6539 52.0705C49.0826 52.096 49.0826 52.096 49.2282 52.2933C49.248 53.0163 49.2522 53.5772 49.0826 54.2667C48.3616 54.3318 47.6407 54.3969 46.8979 54.464C46.9009 54.7815 46.9039 55.0989 46.907 55.426C46.9161 56.388 46.9161 56.388 46.7522 56.832C47.4732 56.832 48.1941 56.832 48.9369 56.832C48.9369 57.6134 48.9369 58.3949 48.9369 59.2C48.264 59.2651 47.5912 59.3302 46.8979 59.3973C46.8979 60.1788 46.8979 60.9602 46.8979 61.7653C47.1142 61.6677 47.1142 61.6677 47.3348 61.568C47.6083 61.5751 47.8816 61.597 48.1541 61.6297C48.2971 61.6452 48.4402 61.6607 48.5876 61.6767C48.7029 61.7059 48.8182 61.7352 48.9369 61.7653C49.1187 62.258 49.0755 62.5178 49.028 63.0603C49.0148 63.2193 49.0017 63.3783 48.9881 63.5421C48.9369 63.936 48.9369 63.936 48.7913 64.1333C48.4805 64.1531 48.1693 64.1591 47.8582 64.1595C47.6688 64.1598 47.4794 64.1601 47.2842 64.1603C47.185 64.1599 47.0859 64.1595 46.9837 64.1591C46.6807 64.158 46.3777 64.1591 46.0746 64.1603C45.7905 64.1599 45.7905 64.1599 45.5006 64.1595C45.3253 64.1593 45.1501 64.1591 44.9695 64.1589C44.5676 64.1333 44.5676 64.1333 44.4219 63.936C44.4075 63.5738 44.4033 63.2107 44.4031 62.848C44.4026 62.6155 44.4021 62.3831 44.4017 62.1436C44.402 61.8906 44.4023 61.6375 44.4026 61.3768C44.4024 61.1192 44.4023 60.8615 44.4021 60.596C44.4019 60.0499 44.4022 59.5038 44.4029 58.9577C44.4038 58.2562 44.4033 57.5548 44.4024 56.8534C44.4017 56.1864 44.4022 55.5195 44.4026 54.8525C44.4023 54.5995 44.402 54.3464 44.4017 54.0857C44.4021 53.8533 44.4026 53.6209 44.4031 53.3814C44.4032 53.1756 44.4033 52.9698 44.4034 52.7577C44.4418 51.795 44.963 52.0705 45.5643 52.0698Z" fill="#3B7D9D"/>
<path d="M33.3528 32.3627C33.4489 32.3627 33.5451 32.3627 33.6441 32.3627C33.5509 32.9971 33.3803 33.4633 33.1344 34.0153C32.8375 34.7166 32.671 35.2938 32.6246 36.112C32.7688 36.1771 32.913 36.2422 33.0615 36.3093C32.8387 36.5534 32.6159 36.7975 32.393 37.0416C32.128 37.3699 32.05 37.6008 32.0073 38.083C31.9894 38.8413 31.9975 39.3462 32.2514 40.034C32.6309 40.4604 32.8256 40.5477 33.2891 40.7123C33.8876 40.9397 33.8876 40.9397 34.1072 41.4254C34.2176 41.8593 34.2176 41.8593 34.2944 42.2802C34.333 42.4504 34.333 42.4504 34.3723 42.624C34.4685 42.6891 34.5646 42.7542 34.6636 42.8213C34.6156 42.6748 34.5675 42.5283 34.518 42.3773C34.3723 41.8347 34.3723 41.8347 34.3723 41.0453C34.4685 41.0453 34.5646 41.0453 34.6636 41.0453C34.6619 40.8169 34.6603 40.5885 34.6585 40.3531C34.6571 40.0494 34.6558 39.7457 34.6545 39.442C34.6533 39.2919 34.6521 39.1418 34.6508 38.9872C34.6481 38.1334 34.7042 37.3506 34.8093 36.5067C34.7612 36.3764 34.7132 36.2462 34.6636 36.112C34.7748 36.0265 34.8859 35.9411 35.0004 35.853C35.4741 35.4703 35.4741 35.4703 35.8288 34.928C35.9086 34.3992 35.9418 33.8893 35.9744 33.3493C36.2657 33.744 36.2657 33.744 36.2839 34.262C36.2779 34.4167 36.2719 34.5713 36.2657 34.7307C36.3775 34.6834 36.3775 34.6834 36.4916 34.6351C37.7874 34.2655 39.1329 34.4345 40.3438 35.1253C40.098 35.5323 40.098 35.5323 39.7612 35.9147C39.5172 35.8584 39.2747 35.79 39.033 35.7173C38.6204 35.6723 38.2088 35.6629 37.795 35.6557C37.632 35.6471 37.632 35.6471 37.4656 35.6383C36.8914 35.6294 36.6219 35.6613 36.1246 36.0912C35.4656 37.0168 35.6449 38.1969 35.6376 39.4173C35.6334 39.6503 35.6292 39.8834 35.6248 40.1234C35.6104 41.8159 35.6104 41.8159 36.2657 43.216C36.4976 43.5272 36.7376 43.8277 36.9849 44.1163C37.112 44.2705 37.2391 44.4246 37.37 44.5835C37.7292 45.0136 37.7292 45.0136 38.1773 45.4237C38.6578 46.4002 38.5274 47.6035 38.4504 48.7413C38.4024 48.8065 38.3543 48.8716 38.3048 48.9387C38.0164 48.9387 37.728 48.9387 37.4309 48.9387C37.4309 47.7665 37.4309 46.5944 37.4309 45.3867C36.758 45.3867 36.0851 45.3867 35.3919 45.3867C35.3919 46.3635 35.3919 47.3403 35.3919 48.3467C35.1996 48.3467 35.0074 48.3467 34.8093 48.3467C34.798 48.1946 34.7867 48.0424 34.7751 47.8857C34.7006 47.3403 34.7006 47.3403 34.3883 47.0686C34.2749 46.9938 34.1615 46.9191 34.0446 46.842C33.8661 46.7203 33.8661 46.7203 33.6839 46.5961C33.5747 46.5226 33.4654 46.4491 33.3528 46.3733C33.2267 46.2634 33.1005 46.1536 32.9705 46.0403C32.5323 45.7122 32.0886 45.5537 31.6051 45.3867C31.6051 45.2564 31.6051 45.1262 31.6051 44.992C32.687 44.9356 32.687 44.9356 33.2072 45.3867C33.2072 45.5169 33.2072 45.6472 33.2072 45.7813C33.6981 46.077 33.9652 46.176 34.518 46.176C34.518 46.0458 34.518 45.9155 34.518 45.7813C34.2823 45.4584 34.2823 45.4584 33.9809 45.1277C33.5053 44.5806 33.0587 44.0199 32.6246 43.4133C32.6727 43.2831 32.7207 43.1529 32.7702 43.0187C32.9625 43.1489 33.1547 43.2792 33.3528 43.4133C33.3528 43.5436 33.3528 43.6738 33.3528 43.808C33.4279 43.8528 33.503 43.8975 33.5804 43.9437C34.07 44.3009 34.5077 44.7434 34.9549 45.1893C34.9549 44.9289 34.9549 44.6684 34.9549 44.4C34.7927 44.3145 34.7927 44.3145 34.6272 44.2273C34.2897 44.0403 33.9676 43.8379 33.6441 43.6107C33.6441 43.4804 33.6441 43.3502 33.6441 43.216C33.5662 43.1636 33.4883 43.1112 33.408 43.0572C33.2937 42.9794 33.1793 42.9015 33.0615 42.8213C32.8517 42.6802 32.8517 42.6802 32.6377 42.5361C31.246 41.5314 31.246 41.5314 30.9861 40.5643C30.95 40.3323 30.914 40.1004 30.8768 39.8613C30.8288 39.8613 30.7807 39.8613 30.7312 39.8613C30.7839 38.2857 31.1077 37.4188 31.7507 36.112C31.8468 36.112 31.943 36.112 32.042 36.112C32.048 35.9248 32.054 35.7376 32.0602 35.5447C32.1665 34.4978 32.5963 33.5884 33.0615 32.7573C33.1577 32.7573 33.2538 32.7573 33.3528 32.7573C33.3528 32.6271 33.3528 32.4969 33.3528 32.3627Z" fill="#080A0B"/>
<path d="M67.4339 31.7707C67.53 31.7707 67.6262 31.7707 67.7252 31.7707C68.2103 33.9255 67.8305 36.1149 67.3921 38.2064C67.126 39.5484 67.1192 40.6174 67.2735 41.9996C67.2918 42.7743 67.1623 43.1631 66.8513 43.808C66.5691 44.0909 66.5691 44.0909 66.2687 44.289C65.6383 44.7742 65.5171 45.2608 65.2492 46.176C64.5602 47.4685 63.4404 48.4418 62.3363 48.9387C61.7674 48.7776 61.7674 48.7776 61.3168 48.544C61.1891 47.8544 61.066 47.1634 60.9436 46.472C60.8896 46.1812 60.8896 46.1812 60.8346 45.8846C60.6347 44.74 60.5491 43.7845 60.7342 42.624C60.7712 42.363 60.7712 42.363 60.8088 42.0967C60.8951 41.4983 60.9868 40.9018 61.0801 40.3053C61.1125 40.0961 61.145 39.8869 61.1784 39.6713C61.3961 38.2783 61.6312 36.897 61.8994 35.52C61.2746 35.52 60.6497 35.52 60.006 35.52C60.006 35.4549 60.006 35.3898 60.006 35.3227C60.6789 35.2575 61.3517 35.1924 62.045 35.1253C61.6845 34.93 61.6845 34.93 61.3168 34.7307C61.3168 34.6655 61.3168 34.6004 61.3168 34.5333C62.136 34.484 62.136 34.484 62.6276 34.928C62.703 35.9644 62.5493 36.8843 62.3454 37.8757C62.1311 38.9335 61.9849 39.9532 61.8994 41.0453C62.0436 41.1104 62.1878 41.1756 62.3363 41.2427C62.8481 42.7379 62.8243 44.3669 62.7732 45.9787C64.3953 44.9793 65.2098 44.0579 66.0673 41.9164C66.1338 41.7592 66.2003 41.602 66.2687 41.44C66.3168 41.44 66.3649 41.44 66.4144 41.44C66.3663 41.8958 66.3183 42.3517 66.2687 42.8213C66.5873 42.5052 66.5873 42.5052 66.8513 42.032C66.8374 41.4419 66.8374 41.4419 66.7057 40.848C66.6786 40.6608 66.6516 40.4736 66.6238 40.2807C66.6027 40.1423 66.5817 40.0039 66.56 39.8613C66.6562 39.8613 66.7523 39.8613 66.8513 39.8613C66.8393 39.6538 66.8273 39.4462 66.8149 39.2323C66.8084 38.0034 67.1441 36.8673 67.4339 35.7173C66.774 36.3702 66.5851 36.7949 66.4144 37.888C66.1231 37.6907 66.1231 37.6907 66.0338 37.3561C65.8692 36.0275 65.8609 34.5927 66.2687 33.3493C66.56 33.9413 66.56 33.9413 66.56 34.336C66.6562 34.336 66.7523 34.336 66.8513 34.336C67.0653 33.4868 67.2554 32.6344 67.4339 31.7707Z" fill="#0C0F11"/>
<path d="M51.8499 35.52C55.3453 35.52 55.3453 35.52 56.2192 36.3093C56.4282 36.8757 56.3811 37.3622 56.3791 37.9944C56.3786 38.2513 56.3782 38.5082 56.3777 38.7729C56.3765 39.0453 56.3752 39.3176 56.374 39.59C56.3732 39.8639 56.3726 40.1378 56.372 40.4117C56.3703 41.0834 56.3679 41.755 56.3649 42.4267C55.8362 42.4267 55.3075 42.4267 54.7628 42.4267C54.7147 42.622 54.6666 42.8174 54.6171 43.0187C54.2773 43.027 53.9374 43.0267 53.5976 43.0187C53.5495 42.9536 53.5015 42.8884 53.452 42.8213C52.9713 42.7562 52.4907 42.6911 51.9955 42.624C51.9955 45.2288 51.9955 47.8336 51.9955 50.5173C51.9474 50.5173 51.8994 50.5173 51.8499 50.5173C51.8499 45.5682 51.8499 40.6191 51.8499 35.52Z" fill="#FAFAFA"/>
<path d="M42.3829 15.392C42.5271 15.4897 42.5271 15.4897 42.6742 15.5893C42.6261 15.7847 42.578 15.9801 42.5285 16.1813C42.865 16.1813 43.2014 16.1813 43.548 16.1813C43.1572 16.5343 42.8148 16.7366 42.3829 16.9707C41.9278 17.2933 41.9278 17.2933 41.8458 17.7847C41.8308 17.9068 41.8158 18.0289 41.8003 18.1547C41.8003 18.0244 41.8003 17.8942 41.8003 17.76C41.7042 17.76 41.608 17.76 41.509 17.76C41.488 17.992 41.4669 18.224 41.4453 18.463C41.3759 19.2167 41.2986 19.9684 41.2177 20.72C40.4384 20.6463 40.124 20.3262 39.6156 19.536C39.5435 19.6337 39.5435 19.6337 39.47 19.7333C39.2259 19.6769 38.9829 19.6114 38.7417 19.536C38.8401 19.622 38.9385 19.708 39.0398 19.7965C39.9568 20.6259 40.5701 21.2451 40.9264 22.6933C41.2147 23.027 41.506 23.356 41.8003 23.68C42.0156 24.2634 41.9547 24.8131 41.9459 25.456C41.9069 25.3461 41.8678 25.2362 41.8276 25.123C41.5098 24.2466 41.5098 24.2466 41.0721 23.4827C40.7536 23.4683 40.4349 23.4661 40.1163 23.4703C39.9418 23.4721 39.7674 23.4739 39.5877 23.4757C39.3852 23.4792 39.3852 23.4792 39.1787 23.4827C39.1787 23.0268 39.1787 22.571 39.1787 22.1013C39.0825 22.1013 38.9864 22.1013 38.8874 22.1013C38.8874 21.9711 38.8874 21.8409 38.8874 21.7067C37.9742 21.7718 37.061 21.8369 36.1201 21.904C37.0007 21.0092 37.6771 21.0323 38.7417 21.1147C39.1892 21.2147 39.613 21.3531 40.0525 21.5093C39.1457 20.8391 38.308 20.7509 37.2853 20.9173C36.7769 21.1248 36.3042 21.3875 35.8288 21.7067C35.8769 21.8369 35.9249 21.9671 35.9745 22.1013C35.8783 22.1013 35.7822 22.1013 35.6832 22.1013C35.6832 22.2316 35.6832 22.3618 35.6832 22.496C35.4534 22.4655 35.4534 22.4655 35.2189 22.4343C34.6582 22.4273 34.6582 22.4273 34.2904 22.8907C33.9263 23.4978 33.5778 24.115 33.2413 24.7507C33.1523 24.9045 33.1523 24.9045 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8841 23.877 32.9879 22.8527 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1877 17.6409 39.8485 17.3018 40.6778 16.6731C41.0335 16.4074 41.3718 16.2122 41.7548 16.0333C42.2496 15.8649 42.2496 15.8649 42.3829 15.392Z" fill="#578499"/>
<path d="M64.0841 23.2853C64.4482 23.5759 64.4482 23.5759 64.8123 24.0747C64.8552 24.8054 64.8299 25.4625 64.7839 26.1887C64.7501 27.0574 64.7429 27.3174 65.1764 28.0159C65.2966 28.148 65.4168 28.28 65.5406 28.416C65.5406 28.4811 65.5406 28.5462 65.5406 28.6133C65.4084 28.6581 65.2762 28.7029 65.14 28.749C64.5155 29.0907 64.2356 29.5842 63.9385 30.3893C63.8471 31.5862 63.9648 32.116 64.4681 33.0842C64.7927 33.8403 64.929 34.6679 65.0905 35.51C65.2647 36.1705 65.4948 36.572 65.8319 37.0987C66.3696 38.3477 66.4076 39.6219 66.2688 41.0453C65.9651 42.1188 65.4729 42.7197 64.8123 43.4133C64.6864 43.639 64.5652 43.8697 64.4482 44.104C64.1383 44.7199 63.8163 45.1625 63.3559 45.584C63.2598 45.584 63.1636 45.584 63.0646 45.584C63.0539 45.2414 63.0539 45.2414 63.043 44.8918C63.032 44.5881 63.021 44.2844 63.01 43.9807C63.0055 43.8306 63.001 43.6805 62.9963 43.5259C62.9623 42.6346 62.8714 41.8857 62.6276 41.0453C62.7471 41.0141 62.8665 40.9828 62.9895 40.9505C63.9442 40.6821 63.9442 40.6821 64.7759 40.034C65.0908 39.0529 65.0416 38.1343 64.8487 37.111C64.6363 36.6362 64.4644 36.4983 64.0841 36.3093C64.2283 36.2117 64.2283 36.2117 64.3754 36.112C64.2017 34.5796 64.2017 34.5796 63.7928 33.152C63.5039 32.8986 63.5039 32.8986 63.2102 32.7573C63.1381 32.6597 63.1381 32.6597 63.0646 32.56C62.8683 32.5145 62.6708 32.4788 62.4729 32.449C62.2837 32.4205 62.0944 32.392 61.8994 32.3627C61.6135 33.0544 61.4685 33.7704 61.3168 34.5333C61.2207 34.5333 61.1246 34.5333 61.0255 34.5333C60.9775 34.2729 60.9294 34.0124 60.8799 33.744C60.6636 33.8417 60.6636 33.8417 60.443 33.9413C60.443 33.6157 60.443 33.2901 60.443 32.9547C60.3468 32.8896 60.2507 32.8244 60.1517 32.7573C60.3194 32.0754 60.3936 32.0357 60.8344 31.6967C61.3857 31.2539 61.8545 30.7633 62.3364 30.192C62.2883 30.4525 62.2402 30.713 62.1907 30.9813C62.9446 30.5144 63.3108 29.807 63.6472 28.8107C63.7801 28.1579 63.8705 27.5078 63.9385 26.8373C63.8423 26.8373 63.7462 26.8373 63.6472 26.8373C63.5991 26.0559 63.551 25.2745 63.5015 24.4693C63.6457 24.5996 63.7899 24.7298 63.9385 24.864C63.9865 24.343 64.0346 23.8221 64.0841 23.2853Z" fill="#07191C"/>
<path d="M37.7586 35.4707C37.9228 35.4646 37.9228 35.4646 38.0903 35.4583C38.7977 35.4516 39.3161 35.5294 39.9069 36.112C40.3832 37.1849 40.3997 38.1265 40.3712 39.3557C40.3682 39.6004 40.3682 39.6004 40.3652 39.8502C40.3601 40.2486 40.3522 40.647 40.3438 41.0453C39.719 41.0453 39.0942 41.0453 38.4505 41.0453C38.3784 39.7755 38.3784 39.7755 38.3048 38.48C38.0645 38.48 37.8242 38.48 37.5766 38.48C37.4555 39.2514 37.4372 39.8814 37.5766 40.6507C38.0474 41.5708 38.6995 42.2968 39.3243 43.0187C39.1801 43.0187 39.036 43.0187 38.8874 43.0187C38.8153 42.921 38.8153 42.921 38.7417 42.8213C38.349 42.8069 37.9601 42.8031 37.5675 42.809C37.457 42.8099 37.3465 42.8108 37.2327 42.8117C36.9589 42.814 36.6852 42.8176 36.4114 42.8213C36.4776 42.8955 36.5438 42.9697 36.612 43.0461C38.6149 45.3476 38.6149 45.3476 38.7412 46.637C38.756 47.3504 38.6952 48.0402 38.5961 48.7413C38.548 48.7413 38.5 48.7413 38.4505 48.7413C38.4585 48.5671 38.4666 48.3928 38.4749 48.2133C38.48 46.9348 38.4425 46.0182 37.7656 45.0578C37.4218 44.6201 37.0694 44.2108 36.7027 43.808C36.5591 43.647 36.5591 43.647 36.4126 43.4827C36.3371 43.3988 36.2616 43.3148 36.1838 43.2283C35.717 42.6932 35.5609 42.3162 35.4929 41.4902C35.4827 40.8238 35.4762 40.1578 35.4738 39.4913C35.469 39.2601 35.4642 39.0289 35.4593 38.7906C35.4506 36.8886 35.4506 36.8886 35.8874 36.1598C36.5006 35.4427 36.9771 35.4778 37.7586 35.4707Z" fill="#F9F9F9"/>
<path d="M41.0721 24.0747C41.4635 24.5433 41.4635 24.5433 41.6546 25.0613C41.6546 25.1916 41.6546 25.3218 41.6546 25.456C41.7508 25.456 41.8469 25.456 41.9459 25.456C41.9916 26.632 41.9181 27.3715 41.509 28.416C41.3648 28.5137 41.3648 28.5137 41.2177 28.6133C41.2019 28.7652 41.1862 28.9171 41.1699 29.0735C41.0388 29.7791 40.8228 29.9329 40.3803 30.3277C40.2548 30.4424 40.1294 30.5571 40.0002 30.6753C39.4723 31.0954 39.0681 31.3811 38.4504 31.3637C37.7257 31.0568 37.4048 30.4697 37.0304 29.6C36.7275 28.5485 36.7073 27.3629 36.7027 26.2453C36.7508 26.1151 36.7988 25.9849 36.8483 25.8507C36.9925 25.8507 37.1367 25.8507 37.2853 25.8507C37.3333 25.6553 37.3814 25.4599 37.4309 25.2587C37.5387 25.2365 37.6465 25.2144 37.7575 25.1916C38.1702 25.0578 38.41 24.872 38.7599 24.5557C39.511 23.9711 40.2213 23.8344 41.0721 24.0747Z" fill="#6395AD"/>
<path d="M41.0721 42.624C42.514 42.624 43.9559 42.624 45.4415 42.624C45.4415 45.1637 45.4415 47.7034 45.4415 50.32C45.2973 50.4177 45.2973 50.4177 45.1502 50.5173C45.3424 50.5824 45.5347 50.6476 45.7327 50.7147C45.7327 49.9332 45.7327 49.1518 45.7327 48.3467C45.7808 48.3467 45.8289 48.3467 45.8784 48.3467C45.8823 48.7701 45.8851 49.1935 45.8875 49.617C45.8892 49.8528 45.8909 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4148 51.1557 45.096 51.1909 44.7769 51.2203C44.6025 51.2369 44.4281 51.2534 44.2484 51.2704C44.1134 51.2824 43.9784 51.2943 43.8393 51.3067C43.4902 50.1753 43.3173 49.1745 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.2396 42.8198 46.1326 42.8198 44.992C43.1563 44.992 43.4927 44.992 43.8393 44.992C43.8874 44.9269 43.9355 44.8618 43.985 44.7947C43.3361 44.8923 43.3361 44.8923 42.6742 44.992C42.6261 45.6432 42.5781 46.2944 42.5285 46.9653C42.3843 46.9002 42.2402 46.8351 42.0916 46.768C41.7552 46.9634 41.4187 47.1587 41.0721 47.36C41.0721 45.7971 41.0721 44.2342 41.0721 42.624Z" fill="#7F7F7F"/>
<path d="M49.8523 42.4074C50.0526 42.4108 50.0526 42.4108 50.2568 42.4143C50.3907 42.4161 50.5246 42.4179 50.6625 42.4197C50.7659 42.422 50.8694 42.4243 50.976 42.4267C50.9796 43.3533 50.9822 44.2799 50.984 45.2065C50.9847 45.5211 50.9857 45.8357 50.987 46.1504C50.9887 46.605 50.9896 47.0596 50.9902 47.5142C50.9909 47.6528 50.9917 47.7914 50.9925 47.9342C50.9925 48.8769 50.9279 49.781 50.8303 50.7147C51.0466 50.8123 51.0466 50.8123 51.2673 50.912C51.2673 50.9771 51.2673 51.0422 51.2673 51.1093C50.9305 51.1476 50.5937 51.1843 50.2568 51.2203C50.0693 51.2409 49.8817 51.2615 49.6885 51.2828C49.5366 51.2907 49.3847 51.2985 49.2282 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9514 48.4969 48.9369 48.1493C48.5765 47.954 48.5765 47.954 48.2087 47.7547C48.2087 47.6244 48.2087 47.4942 48.2087 47.36C48.5451 47.36 48.8816 47.36 49.2282 47.36C49.3003 48.9229 49.3003 48.9229 49.3739 50.5173C49.5516 49.9613 49.5516 49.9613 49.4558 49.5183C49.3358 48.669 49.3627 47.8275 49.3739 46.9653C48.9413 47.0305 48.5087 47.0956 48.0631 47.1627C48.015 48.2046 47.9669 49.2465 47.9174 50.32C47.2839 50.4917 47.0477 50.5244 46.461 50.32C46.4732 50.1702 46.4854 50.0203 46.4979 49.866C46.5128 49.6699 46.5276 49.4737 46.5429 49.2717C46.5581 49.0771 46.5733 48.8825 46.589 48.682C46.6308 48.1297 46.6308 48.1297 46.461 47.5573C46.4507 47.0492 46.4473 46.5481 46.4519 46.0403C46.4549 45.5641 46.4579 45.088 46.461 44.5973C47.4222 44.5973 48.3835 44.5973 49.3739 44.5973C49.3739 43.9461 49.3739 43.2949 49.3739 42.624C49.5195 42.4267 49.5195 42.4267 49.8523 42.4074ZM49.6652 49.5307C49.6652 49.6609 49.6652 49.7911 49.6652 49.9253C49.7613 49.8602 49.8574 49.7951 49.9565 49.728C49.8603 49.6629 49.7642 49.5978 49.6652 49.5307Z" fill="#9D9D9D"/>
<path d="M57.2387 42.4267C58.3442 42.4267 59.4496 42.4267 60.5886 42.4267C60.5886 43.143 60.5886 43.8593 60.5886 44.5973C60.6071 44.972 60.6295 45.3466 60.6614 45.7197C60.6749 45.8832 60.6884 46.0468 60.7024 46.2153C60.7129 46.3326 60.7234 46.4498 60.7342 46.5707C60.2331 47.0233 60.0464 47.1627 59.4234 47.1627C59.3273 46.7068 59.2312 46.251 59.1321 45.7813C59.036 45.8465 58.9399 45.9116 58.8408 45.9787C58.7928 47.4764 58.7447 48.9742 58.6952 50.5173C58.7913 50.5173 58.8874 50.5173 58.9865 50.5173C58.9865 49.2149 58.9865 47.9125 58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1321 46.5707C59.3244 47.6777 59.5166 48.7847 59.7147 49.9253C59.8108 49.9253 59.907 49.9253 60.006 49.9253C60.006 50.0556 60.006 50.1858 60.006 50.32C60.2493 50.3139 60.2493 50.3139 60.4976 50.3077C61.0255 50.32 61.0255 50.32 61.3168 50.5173C61.3168 49.9964 61.3168 49.4754 61.3168 48.9387C61.6748 49.6663 61.7556 50.2602 61.8994 51.1093C61.1343 51.5989 60.4861 51.4762 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.5149 51.4562 58.1901 51.3927 57.8668 51.319C57.695 51.2806 57.5233 51.2422 57.3463 51.2026C57.1489 51.1564 57.1489 51.1564 56.9474 51.1093C56.9474 50.5233 56.9474 49.9372 56.9474 49.3333C56.9955 49.3333 57.0436 49.3333 57.0931 49.3333C57.1412 47.0541 57.1892 44.7749 57.2387 42.4267Z" fill="#838383"/>
<path d="M54.9084 15.984C55.5907 16.2472 56.1726 16.5027 56.7381 17.094C57.3965 17.6971 58.0932 17.6658 58.8595 17.6997C59.9974 17.7554 60.6534 18.0451 61.4624 19.1413C61.6637 19.2588 61.8674 19.369 62.0723 19.4743C63.2771 20.1639 64.0937 21.4716 64.5995 23.0795C64.677 23.5448 64.6324 23.8244 64.521 24.272C64.3768 23.8813 64.3768 23.8813 64.2297 23.4827C64.0855 23.5803 64.0855 23.5803 63.9384 23.68C63.8855 23.5205 63.8325 23.361 63.778 23.1967C63.1823 21.481 62.7617 20.6166 61.4533 19.869C60.3826 19.3907 59.3192 19.2243 58.2446 19.7611C57.3154 20.4041 56.56 21.1106 56.2192 22.496C56.3153 22.5611 56.4115 22.6262 56.5105 22.6933C56.3783 22.7747 56.2461 22.8561 56.11 22.94C55.6662 23.2637 55.3874 23.5709 55.054 24.0747C55.054 23.8142 55.054 23.5537 55.054 23.2853C54.9821 23.4682 54.9102 23.6511 54.8361 23.8396C54.7419 24.0783 54.6476 24.317 54.5534 24.5557C54.506 24.6764 54.4586 24.7971 54.4097 24.9214C54.051 25.8283 54.051 25.8283 53.8889 26.048C53.6462 26.056 53.4033 26.0564 53.1606 26.048C53.2357 25.8201 53.3108 25.5922 53.3882 25.3573C53.4404 25.1955 53.4926 25.0338 53.5464 24.8671C53.694 24.4208 53.8464 23.9811 54.0038 23.5412C54.5913 21.8629 54.9251 20.4434 54.9084 18.5493C55.0045 18.6144 55.1006 18.6796 55.1997 18.7467C55.1997 19.3327 55.1997 19.9188 55.1997 20.5227C55.2207 20.3639 55.2417 20.2052 55.2634 20.0417C55.3453 19.536 55.3453 19.536 55.491 19.3387C55.4615 18.9833 55.42 18.6298 55.3726 18.278C55.3477 18.0852 55.3227 17.8924 55.297 17.6937C55.2154 17.1281 55.2154 17.1281 54.9084 16.576C54.9084 16.3806 54.9084 16.1853 54.9084 15.984Z" fill="#1E373D"/>
<path d="M54.4715 57.424C54.4715 57.6845 54.4715 57.945 54.4715 58.2133C54.6157 58.1482 54.7599 58.0831 54.9084 58.016C55.0526 58.016 55.1968 58.016 55.3454 58.016C55.4415 57.9509 55.5376 57.8858 55.6367 57.8187C55.6402 58.6863 55.6429 59.5538 55.6447 60.4214C55.6454 60.7168 55.6464 61.0122 55.6476 61.3075C55.6494 61.7312 55.6502 62.1549 55.6509 62.5786C55.6516 62.8338 55.6524 63.0891 55.6532 63.352C55.6367 63.936 55.6367 63.936 55.491 64.1333C55.0741 64.1478 54.6607 64.1516 54.2439 64.1457C54.1265 64.1448 54.009 64.1439 53.888 64.143C53.597 64.1406 53.306 64.1371 53.015 64.1333C52.6734 63.2714 52.4499 62.4369 52.2595 61.494C52.2094 61.2483 52.1592 61.0025 52.1076 60.7494C52.0706 60.5637 52.0336 60.378 51.9955 60.1867C51.9972 60.4385 51.9989 60.6903 52.0006 60.9498C52.002 61.2792 52.0033 61.6086 52.0046 61.938C52.0058 62.1041 52.0071 62.2702 52.0083 62.4414C52.009 62.6798 52.009 62.6798 52.0097 62.9231C52.0109 63.1432 52.0109 63.1432 52.012 63.3678C51.9955 63.7387 51.9955 63.7387 51.8499 64.1333C51.4888 64.1386 51.1277 64.1426 50.7666 64.1457C50.6636 64.1473 50.5607 64.149 50.4546 64.1507C50.1914 64.1524 49.9282 64.1436 49.6652 64.1333C49.5195 63.936 49.5195 63.936 49.5053 63.2261C49.5063 62.9324 49.508 62.6387 49.5104 62.345C49.5111 62.1953 49.5117 62.0456 49.5124 61.8914C49.5141 61.5205 49.5168 61.1496 49.5195 60.7787C49.7118 61.1043 49.904 61.4299 50.1021 61.7653C50.006 61.9607 49.9099 62.1561 49.8108 62.3573C49.8829 62.5283 49.8829 62.5283 49.9565 62.7027C50.1021 63.1467 50.1021 63.1467 50.1021 63.936C50.4866 63.8058 50.8711 63.6755 51.2673 63.5413C51.2673 63.4111 51.2673 63.2809 51.2673 63.1467C51.3634 63.1467 51.4595 63.1467 51.5586 63.1467C51.5697 62.2555 51.5735 61.4514 51.4129 60.5813C51.5091 60.5813 51.6052 60.5813 51.7042 60.5813C51.6207 60.0155 51.5788 59.8193 51.2673 59.3973C51.7493 58.6717 52.1741 58.3294 52.8785 58.127C53.1806 58.0348 53.1806 58.0348 53.4429 57.7077C53.8115 57.3596 54.0317 57.3743 54.4715 57.424Z" fill="#265A73"/>
<path d="M35.1006 32.3627C35.6186 32.96 35.8711 33.4116 35.9381 34.336C35.9168 34.8712 35.8587 35.078 35.599 35.4892C35.3445 35.7863 35.0878 36.0552 34.8093 36.3093C34.8574 36.5047 34.9054 36.7001 34.955 36.9013C34.9126 37.1664 34.8635 37.4296 34.8093 37.6907C34.789 37.9604 34.7738 38.2309 34.7632 38.5016C34.7571 38.6504 34.751 38.7992 34.7447 38.9525C34.739 39.1059 34.7333 39.2593 34.7274 39.4173C34.7211 39.5738 34.7148 39.7302 34.7083 39.8914C34.6929 40.276 34.6782 40.6607 34.6637 41.0453C34.5675 41.0453 34.4714 41.0453 34.3724 41.0453C34.4685 41.6314 34.5646 42.2175 34.6637 42.8213C34.4474 42.7237 34.4474 42.7237 34.2267 42.624C34.0159 42.0526 33.9354 41.6883 33.9354 41.0453C33.7852 41.0331 33.635 41.0209 33.4803 41.0083C32.7805 40.8095 32.5467 40.5288 32.042 39.8613C31.7862 39.1681 31.7957 38.445 31.8964 37.6907C32.1413 37.1585 32.4314 36.7343 32.7703 36.3093C32.7222 36.2442 32.6741 36.1791 32.6246 36.112C32.4935 34.9273 32.8723 34.0973 33.3529 33.152C33.8968 32.3568 34.3063 32.1705 35.1006 32.3627Z" fill="#577A8A"/>
<path d="M62.7744 32.2879C63.4535 32.4629 63.747 33.0648 64.1296 33.7933C64.4432 34.5834 64.4196 35.2278 64.3754 36.112C64.3418 36.5246 64.3418 36.5246 64.5757 36.7903C64.6538 36.8921 64.7319 36.9938 64.8123 37.0987C65.2044 37.8956 65.218 38.5306 65.1036 39.4667C64.8426 40.1862 64.4847 40.5814 63.9476 40.922C63.4941 41.0474 63.0891 41.0751 62.6276 41.0453C62.6988 41.2102 62.77 41.375 62.8433 41.5448C63.095 42.3236 63.1183 42.863 63.1101 43.7093C63.1095 43.9596 63.109 44.2099 63.1084 44.4678C63.0659 45.167 62.9596 45.7218 62.7733 46.3733C62.7252 46.3733 62.6772 46.3733 62.6276 46.3733C62.6327 46.1848 62.6378 45.9964 62.643 45.8022C62.6675 44.2202 62.6628 42.7272 62.1907 41.2427C62.0946 41.1776 61.9985 41.1124 61.8994 41.0453C61.8704 39.91 61.956 38.9661 62.1816 37.8757C62.3795 36.8932 62.5354 35.9397 62.6276 34.928C61.9788 34.7326 61.9788 34.7326 61.3168 34.5333C61.3641 33.8677 61.4192 33.2866 61.6172 32.671C61.9884 32.2655 62.3064 32.2519 62.7744 32.2879Z" fill="#6A92A5"/>
<path d="M32.479 29.008C32.9608 29.7168 33.1766 30.2409 33.2618 31.2033C33.1995 32.0763 32.9998 32.5065 32.6701 33.2399C32.3283 34.1414 32.1936 35.1251 32.042 36.112C31.9459 36.112 31.8498 36.112 31.7507 36.112C30.8994 38.4087 30.4616 40.2244 30.7312 42.8213C30.1668 42.4513 30.1668 42.4513 30.003 42.2293C29.9689 41.5681 29.9766 41.1261 30.176 40.515C30.4033 39.2589 29.956 38.0085 29.6116 36.8397C29.4281 36.1414 29.3799 35.6603 29.4204 34.928C29.6154 35.256 29.8095 35.585 30.003 35.9147C30.0841 36.0327 30.1652 36.1507 30.2488 36.2723C30.5364 36.9218 30.5394 37.5314 30.5856 38.2827C30.9581 37.1469 30.9622 35.9517 30.8769 34.7307C30.743 34.2785 30.743 34.2785 30.5856 33.9413C30.4895 34.1367 30.3933 34.332 30.2943 34.5333C29.7021 33.4558 29.421 32.7297 29.5661 31.376C29.9969 30.2734 30.5265 29.3885 31.3957 28.934C32.1191 28.7558 32.1191 28.7558 32.479 29.008Z" fill="#6591A6"/>
<path d="M62.1907 22.2987C62.8516 22.7464 63.4231 23.3964 63.7928 24.272C63.7444 24.652 63.7444 24.652 63.6472 25.0613C63.6376 25.3735 63.6347 25.6862 63.638 25.9987C63.6394 26.1564 63.6407 26.3141 63.642 26.4766C63.6437 26.5956 63.6454 26.7147 63.6472 26.8373C63.7433 26.8373 63.8394 26.8373 63.9384 26.8373C64.0447 28.1614 63.7145 29.0695 63.2102 30.192C62.9007 30.71 62.9007 30.71 62.6276 30.9813C62.4834 30.9813 62.3393 30.9813 62.1907 30.9813C62.1907 30.786 62.1907 30.5906 62.1907 30.3893C62.1272 30.4822 62.0638 30.575 61.9984 30.6707C61.4655 31.4255 61.0082 31.927 60.2973 32.3627C60.2492 32.4929 60.2012 32.6231 60.1517 32.7573C60.3679 32.855 60.3679 32.855 60.5886 32.9547C60.5886 33.4756 60.5886 33.9966 60.5886 34.5333C59.5875 34.7159 58.6032 34.7473 57.5952 34.7233C57.1418 34.7156 56.7989 34.732 56.3649 34.928C56.3815 33.9859 56.4109 33.3371 56.8291 32.56C57.2751 32.1303 57.5716 32.0191 58.1126 31.968C57.9204 31.8378 57.7281 31.7075 57.53 31.5733C57.53 31.4431 57.53 31.3128 57.53 31.1787C57.8145 31.1915 58.099 31.2044 58.3834 31.2172C58.7511 31.1717 58.9678 31.0546 59.2778 30.784C59.8606 29.5298 60.0154 28.2946 60.1517 26.8373C60.4429 27.232 60.4429 27.232 60.4714 27.9612C60.4695 28.2526 60.466 28.544 60.4612 28.8353C60.4598 28.9841 60.4585 29.1329 60.4572 29.2863C60.4537 29.654 60.4485 30.0217 60.4429 30.3893C61.3802 30.0739 61.9394 29.7594 62.482 28.6133C62.6533 28.0918 62.7874 27.5786 62.9189 27.0347C63.015 27.2951 63.1112 27.5556 63.2102 27.824C63.5193 26.5678 63.4413 25.2408 63.0646 24.0261C62.8396 23.4915 62.5226 23.1066 62.1907 22.6933C62.1907 22.5631 62.1907 22.4328 62.1907 22.2987Z" fill="#0D3139"/>
<path d="M59.5691 52.096C60.29 52.096 61.011 52.096 61.7538 52.096C62.0364 52.4789 61.9233 53.2008 61.9239 53.7232C61.9244 53.8666 61.9249 54.0099 61.9254 54.1576C61.9261 54.4613 61.9264 54.765 61.9264 55.0688C61.9267 55.5344 61.9294 55.9999 61.9321 56.4655C61.9326 56.7601 61.9329 57.0547 61.933 57.3492C61.934 57.489 61.9351 57.6288 61.9362 57.7728C61.9327 58.7602 61.9327 58.7602 61.6081 59.2C61.5051 59.5256 61.4072 59.8543 61.3168 60.1867C61.413 60.1867 61.5091 60.1867 61.6081 60.1867C61.6081 60.6183 61.6081 60.6183 61.4625 61.1733C61.1056 61.5842 60.7314 61.9197 60.2973 62.16C60.1531 62.0949 60.0089 62.0298 59.8604 61.9627C59.7603 61.5557 59.7603 61.5557 59.7147 61.1733C59.8589 61.1733 60.0031 61.1733 60.1517 61.1733C60.1517 60.7175 60.1517 60.2617 60.1517 59.792C59.8633 59.8897 59.8633 59.8897 59.5691 59.9893C59.5691 57.3845 59.5691 54.7797 59.5691 52.096Z" fill="#438DB0"/>
<path d="M33.6442 20.5227C33.7403 20.5878 33.8364 20.6529 33.9354 20.72C33.7352 21.2133 33.7352 21.2133 33.4985 21.7067C33.4024 21.7067 33.3063 21.7067 33.2072 21.7067C33.1592 22.7486 33.1111 23.7905 33.0616 24.864C33.3319 24.339 33.3319 24.339 33.6077 23.8033C34.2319 22.5912 34.2319 22.5912 34.8093 22.2987C34.8093 22.4289 34.8093 22.5592 34.8093 22.6933C34.6982 22.8399 34.587 22.9864 34.4725 23.1373C33.767 24.1155 33.6177 24.8324 33.6077 26.1837C33.6147 26.8662 33.6302 27.3728 33.7898 28.0213C33.8859 27.826 33.9821 27.6306 34.0811 27.4293C34.1252 27.5484 34.1693 27.6674 34.2148 27.7901C34.5711 28.7112 34.8602 29.4484 35.5375 29.9947C35.8761 30.1321 36.2159 30.2643 36.5571 30.3893C36.5537 30.1375 36.5503 29.8857 36.5468 29.6262C36.5441 29.2968 36.5414 28.9674 36.5389 28.638C36.5364 28.4719 36.534 28.3058 36.5315 28.1347C36.5305 27.9757 36.5296 27.8167 36.5286 27.6529C36.5271 27.5061 36.5256 27.3594 36.524 27.2082C36.5571 26.8373 36.5571 26.8373 36.8484 26.4427C36.8521 26.593 36.8559 26.7433 36.8597 26.8982C36.9146 28.2518 37.021 29.4322 37.5766 30.5867C37.9947 31.0935 38.1743 31.1862 38.7327 31.154C39.5584 30.8344 40.2273 30.2541 40.9264 29.6C40.7083 30.3676 40.3869 30.6793 39.8887 31.1293C39.7562 31.2504 39.6236 31.3715 39.487 31.4963C39.3853 31.5868 39.2835 31.6774 39.1787 31.7707C39.3709 31.7707 39.5632 31.7707 39.7613 31.7707C39.8093 31.9009 39.8574 32.0312 39.9069 32.1653C39.8348 32.3607 39.8348 32.3607 39.7613 32.56C39.4729 32.5376 39.1847 32.5124 38.8965 32.486C38.736 32.4723 38.5755 32.4585 38.4101 32.4444C38.2792 32.4174 38.1483 32.3905 38.0135 32.3627C37.9655 32.2324 37.9174 32.1022 37.8679 31.968C37.7958 32.1634 37.7958 32.1634 37.7222 32.3627C37.578 32.3627 37.4339 32.3627 37.2853 32.3627C37.2372 32.1673 37.1892 31.972 37.1397 31.7707C37.2117 31.5753 37.2117 31.5753 37.2853 31.376C37.0356 31.1325 37.0356 31.1325 36.7027 30.9813C36.223 31.1745 36.223 31.1745 35.8288 31.5733C35.949 31.667 36.0692 31.7606 36.193 31.857C36.3732 32.0096 36.3732 32.0096 36.5571 32.1653C36.5571 32.2305 36.5571 32.2956 36.5571 32.3627C35.3759 32.3034 34.4477 31.7208 33.6316 30.5427C33.3777 30.1079 33.1426 29.6669 32.9159 29.2053C32.8228 29.0181 32.7297 28.8309 32.6337 28.638C32.479 28.2187 32.479 28.2187 32.479 27.6267C32.3348 27.5616 32.1906 27.4964 32.0421 27.4293C32.1382 27.4293 32.2343 27.4293 32.3333 27.4293C32.2987 27.2229 32.2987 27.2229 32.2634 27.0123C32.0247 25.2154 32.0894 23.503 32.7703 21.904C33.0425 21.4038 33.326 20.9734 33.6442 20.5227Z" fill="#08313A"/>
<path d="M32.479 27.6267C32.5571 27.8546 32.6352 28.0825 32.7156 28.3173C33.4354 30.2541 34.3197 31.4081 35.8288 32.1653C36.0211 32.1653 36.2133 32.1653 36.4114 32.1653C36.123 31.9048 35.8346 31.6444 35.5375 31.376C35.9003 31.2404 36.1753 31.1787 36.557 31.1787C36.6051 31.0484 36.6532 30.9182 36.7027 30.784C37.0632 30.9794 37.0632 30.9794 37.4309 31.1787C37.3829 31.5694 37.3348 31.9601 37.2853 32.3627C37.6457 32.0696 37.6457 32.0696 38.0135 31.7707C38.0856 31.966 38.0856 31.966 38.1591 32.1653C38.5348 32.3017 38.5348 32.3017 38.9693 32.3873C39.1167 32.4204 39.2641 32.4535 39.4159 32.4875C39.5299 32.5114 39.6438 32.5354 39.7613 32.56C39.8093 32.4298 39.8574 32.2995 39.9069 32.1653C40.4349 32.9269 40.6065 33.486 40.6351 34.5333C40.539 34.7287 40.4429 34.924 40.3438 35.1253C40.0647 35.0284 40.0647 35.0284 39.78 34.9295C39.035 34.7052 38.3276 34.6852 37.5675 34.706C37.3784 34.7087 37.3784 34.7087 37.1854 34.7114C36.8789 34.716 36.5723 34.7231 36.2658 34.7307C36.2177 34.4051 36.1696 34.0795 36.1201 33.744C36.072 34.1347 36.024 34.5254 35.9745 34.928C35.9264 34.928 35.8783 34.928 35.8288 34.928C35.8168 34.7204 35.8048 34.5129 35.7924 34.299C35.6721 33.4707 35.5699 33.1121 35.1006 32.56C34.5466 32.481 34.1718 32.519 33.6441 32.7573C33.6441 32.6271 33.6441 32.4968 33.6441 32.3627C33.548 32.3627 33.4519 32.3627 33.3528 32.3627C33.3528 32.4929 33.3528 32.6231 33.3528 32.7573C33.2567 32.7573 33.1606 32.7573 33.0616 32.7573C32.8397 33.3369 32.6536 33.9249 32.479 34.5333C32.384 34.1919 32.384 34.1919 32.3333 33.744C32.4784 33.327 32.4784 33.327 32.6883 32.893C33.0415 32.0764 33.1799 31.5491 33.0616 30.5867C32.8738 29.9409 32.6721 29.3588 32.215 28.9957C31.5133 29.0228 31.0143 29.2461 30.4763 29.859C30.1413 30.3732 30.1413 30.3732 29.9029 30.9443C29.8398 31.0868 29.7767 31.2292 29.7117 31.376C29.6156 31.376 29.5194 31.376 29.4204 31.376C29.6216 29.8395 30.736 28.7926 31.5886 27.8733C31.8964 27.6267 31.8964 27.6267 32.479 27.6267Z" fill="#0A2D31"/>
<path d="M50.221 52.0767C50.4515 52.078 50.6819 52.0804 50.9123 52.0837C51.0297 52.0845 51.1472 52.0854 51.2682 52.0864C51.5592 52.0887 51.8502 52.0922 52.1412 52.096C52.5351 53.457 52.8487 54.8405 53.1607 56.24C53.2088 54.8725 53.2568 53.505 53.3063 52.096C54.0753 52.096 54.8444 52.096 55.6367 52.096C55.6406 52.7826 55.6435 53.4691 55.6458 54.1557C55.647 54.3478 55.6482 54.54 55.6495 54.738C55.6524 55.914 55.6041 57.0472 55.491 58.2133C55.0526 58.3977 54.9279 58.4194 54.4715 58.2133C54.4715 57.9528 54.4715 57.6924 54.4715 57.424C54.1351 57.5542 53.7986 57.6845 53.452 57.8187C53.452 57.4931 53.452 57.1675 53.452 56.832C52.9714 56.832 52.4907 56.832 51.9955 56.832C52.0436 56.5715 52.0917 56.311 52.1412 56.0427C52.2373 56.0427 52.3334 56.0427 52.4325 56.0427C52.4568 55.3685 52.4568 55.3685 52.4325 54.6613C52.3363 54.5311 52.2402 54.4008 52.1412 54.2667C52.1412 54.0713 52.1412 53.8759 52.1412 53.6747C51.8528 53.6747 51.5644 53.6747 51.2673 53.6747C51.3634 53.2839 51.4596 52.8932 51.5586 52.4907C51.2702 52.4907 50.9818 52.4907 50.6847 52.4907C50.7328 52.8163 50.7808 53.1419 50.8304 53.4773C50.6862 53.5424 50.542 53.6076 50.3934 53.6747C50.3934 53.5444 50.3934 53.4142 50.3934 53.28C50.2492 53.3777 50.2492 53.3777 50.1021 53.4773C50.1141 53.689 50.1262 53.9006 50.1385 54.1187C50.0961 54.9809 49.9764 55.0973 49.5196 55.648C49.5156 55.093 49.5127 54.538 49.5104 53.983C49.5092 53.8246 49.508 53.6663 49.5067 53.5031C49.5055 53.0998 49.5119 52.6965 49.5196 52.2933C49.6652 52.096 49.6652 52.096 50.221 52.0767Z" fill="#5AADD5"/>
<path d="M40.4895 52.096C41.595 52.096 42.7004 52.096 43.8394 52.096C43.8394 53.6589 43.8394 55.2218 43.8394 56.832C43.2082 56.832 42.5771 56.832 41.946 56.832C41.946 57.0274 41.946 57.2227 41.946 57.424C41.8498 57.424 41.7537 57.424 41.6547 57.424C41.6066 57.2938 41.5585 57.1635 41.509 57.0293C41.461 57.3549 41.4129 57.6805 41.3634 58.016C41.2673 57.9509 41.1711 57.8858 41.0721 57.8187C41.0721 57.6884 41.0721 57.5582 41.0721 57.424C40.988 57.4932 40.9039 57.5624 40.8172 57.6337C40.4316 57.8514 40.2955 57.7795 39.9069 57.6213C39.9761 56.8484 40.0461 56.0755 40.1163 55.3027C40.1359 55.0834 40.1555 54.8641 40.1757 54.6382C40.195 54.4271 40.2142 54.216 40.2341 53.9984C40.2516 53.8041 40.2691 53.6099 40.2872 53.4097C40.3439 52.8853 40.3439 52.8853 40.4895 52.096Z" fill="#5FB5DF"/>
<path d="M37.7222 56.832C37.8183 56.832 37.9145 56.832 38.0135 56.832C38.1096 57.0925 38.2058 57.353 38.3048 57.6213C38.4009 57.4911 38.4971 57.3609 38.5961 57.2267C38.6442 57.2918 38.6922 57.3569 38.7417 57.424C38.8379 57.2938 38.934 57.1635 39.033 57.0293C39.4316 57.4882 39.5413 57.8296 39.6338 58.5217C39.7236 59.1777 39.7236 59.1777 39.9069 59.792C40.1953 59.7269 40.4837 59.6618 40.7808 59.5947C40.8529 60.0831 40.8529 60.0831 40.9264 60.5813C41.0225 60.4511 41.1187 60.3209 41.2177 60.1867C41.201 60.6226 41.1824 61.0583 41.1631 61.494C41.1479 61.858 41.1479 61.858 41.1324 62.2294C41.0721 62.9493 41.0721 62.9493 40.7808 64.1333C40.1079 64.1333 39.435 64.1333 38.7417 64.1333C38.5172 63.3727 38.4006 62.8821 38.3264 62.1006C38.2983 61.8116 38.2983 61.8116 38.2695 61.5167C38.2419 61.2185 38.2419 61.2185 38.2138 60.9143C38.1942 60.7117 38.1747 60.5091 38.1546 60.3004C38.1067 59.8022 38.0597 59.3038 38.0135 58.8053C38.0099 58.9597 38.0062 59.1141 38.0025 59.2732C37.9856 59.9683 37.9677 60.6633 37.9498 61.3583C37.9441 61.6014 37.9383 61.8444 37.9324 62.0949C37.9263 62.3257 37.9202 62.5566 37.9139 62.7944C37.9086 63.0083 37.9033 63.2222 37.8978 63.4426C37.8679 63.936 37.8679 63.936 37.7222 64.1333C37.3795 64.1477 37.0365 64.1499 36.6936 64.1457C36.5057 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4993 63.6351 35.5232 63.2824 35.5284 62.7273C35.5297 62.5477 35.5311 62.3682 35.5324 62.1831C35.5341 62.0453 35.5358 61.9074 35.5375 61.7653C35.6337 61.8305 35.7298 61.8956 35.8288 61.9627C35.8258 62.1824 35.8228 62.4022 35.8197 62.6287C35.7904 63.3109 35.7904 63.3109 35.9745 63.7387C36.0657 63.7221 36.157 63.7056 36.251 63.6886C36.4295 63.6584 36.4295 63.6584 36.6117 63.6277C36.7891 63.5968 36.7891 63.5968 36.9701 63.5652C37.2853 63.5413 37.2853 63.5413 37.5766 63.7387C37.5844 63.1918 37.5902 62.6452 37.5948 62.0983C37.5972 61.9433 37.5997 61.7883 37.6022 61.6285C37.6036 61.4043 37.6036 61.4043 37.605 61.1756C37.6065 61.0382 37.6081 60.9008 37.6096 60.7592C37.592 60.3186 37.592 60.3186 37.2853 59.792C37.3814 59.792 37.4775 59.792 37.5766 59.792C37.4804 59.3362 37.3843 58.8803 37.2853 58.4107C37.4295 58.4758 37.5737 58.5409 37.7222 58.608C37.6742 58.4126 37.6261 58.2173 37.5766 58.016C37.6167 57.6196 37.6643 57.2243 37.7222 56.832Z" fill="#215064"/>
<path d="M62.1907 20.128C63.1966 20.921 63.6867 22.2345 64.0841 23.68C64.1441 24.1907 64.136 24.5457 64.0841 25.0613C63.68 24.7876 63.5882 24.4019 63.3559 23.8773C62.7967 22.8118 62.2492 22.3568 61.3715 21.8423C61.2603 21.774 61.1492 21.7057 61.0346 21.6354C59.9247 20.9587 58.7969 20.5254 57.5932 21.0938C57.2431 21.3265 57.2431 21.3265 56.8018 21.7067C56.961 21.609 57.1202 21.5113 57.2843 21.4107C58.4098 20.8449 59.5081 20.9987 60.621 21.5386C60.8799 21.7067 60.8799 21.7067 61.1712 22.1013C60.6349 22.3704 60.3741 22.1895 59.8604 21.904C59.7162 21.9691 59.572 22.0342 59.4234 22.1013C59.0192 22.1072 58.6173 22.0883 58.2133 22.0697C57.8019 22.1029 57.5767 22.18 57.2388 22.496C57.1907 22.6914 57.1426 22.8867 57.0931 23.088C56.8394 23.2113 56.8394 23.2113 56.5287 23.2853C56.0455 23.4013 55.7933 23.5372 55.491 24.0747C55.234 25.2912 55.3675 26.591 55.491 27.824C55.5871 27.824 55.6833 27.824 55.7823 27.824C55.7823 28.1496 55.7823 28.4752 55.7823 28.8107C55.1761 27.7652 54.9985 27.0146 54.9904 25.678C54.9856 25.5409 54.9808 25.4038 54.9758 25.2625C54.97 24.493 55.0425 23.9972 55.3949 23.4071C55.7823 22.8907 55.7823 22.8907 56.2192 22.496C56.2416 22.3396 56.2639 22.1831 56.2869 22.0219C56.4439 20.99 57.1989 20.4518 57.7997 19.8644C59.1491 18.7674 60.8562 19.2051 62.1907 20.128Z" fill="#547C8E"/>
<path d="M41.8003 21.312C42.2373 21.5093 42.2373 21.5093 42.5041 22.1638C42.6012 22.4424 42.6973 22.7218 42.7925 23.0017C43.6258 25.3391 44.5576 27.1566 46.4246 28.1077C48.0769 28.7668 49.8189 28.5558 51.3782 27.5696C52.1925 26.9528 52.7433 26.2624 53.3063 25.2587C53.3063 25.454 53.3063 25.6494 53.3063 25.8507C53.657 25.8443 53.657 25.8443 54.0346 25.6533C54.3029 25.1192 54.3029 25.1192 54.4988 24.4693C54.8839 23.302 54.8839 23.302 55.1997 23.088C55.1959 23.2042 55.1921 23.3205 55.1882 23.4402C55.1729 23.9764 55.1635 24.5125 55.1542 25.049C55.1481 25.2318 55.142 25.4145 55.1357 25.6028C55.1146 27.2305 55.4726 28.2658 56.2335 29.506C56.3279 29.6265 56.4223 29.7471 56.5196 29.8713C56.6144 29.995 56.7093 30.1186 56.8069 30.246C57.0866 30.5789 57.3746 30.8824 57.6757 31.1787C57.5315 31.2763 57.5315 31.2763 57.3844 31.376C57.0021 31.117 57.0021 31.117 56.6562 30.784C56.6562 30.6538 56.6562 30.5235 56.6562 30.3893C56.5456 30.4076 56.435 30.426 56.3211 30.4448C55.928 30.3893 55.928 30.3893 55.6759 30.0132C55.2359 28.952 54.9539 28.024 54.7628 26.8373C54.1811 26.4433 53.5001 26.5114 52.8694 26.64C52.5515 26.8954 52.3265 27.1635 52.0735 27.5265C51.2832 28.578 49.9942 28.8801 48.937 29.008C48.937 29.5941 48.937 30.1802 48.937 30.784C49.2734 30.9794 49.6098 31.1747 49.9565 31.376C49.5809 31.5577 49.433 31.6098 49.0621 31.3806C48.9728 31.314 48.8834 31.2473 48.7913 31.1787C48.7795 31.5321 48.7711 31.8857 48.764 32.2393C48.7589 32.4362 48.7539 32.6331 48.7486 32.836C48.7627 33.0054 48.7768 33.1748 48.7913 33.3493C49.3211 33.8278 49.6444 33.8203 50.2751 33.8673C50.4604 33.8821 50.6457 33.8968 50.8366 33.912C50.9787 33.9217 51.1209 33.9314 51.2673 33.9413C51.2673 34.0064 51.2673 34.0716 51.2673 34.1387C51.1024 34.1341 50.9376 34.1295 50.7678 34.1248C50.552 34.1211 50.3361 34.1175 50.1203 34.114C49.9573 34.109 49.9573 34.109 49.7909 34.104C49.5062 34.1005 49.2213 34.1183 48.937 34.1387C48.8408 34.2689 48.7447 34.3991 48.6457 34.5333C48.3912 33.778 48.3036 33.1274 48.2633 32.301C48.2525 32.0901 48.2416 31.8792 48.2304 31.662C48.2232 31.5025 48.2161 31.343 48.2087 31.1787C48.0555 31.2723 47.9023 31.3659 47.7445 31.4623C47.0389 31.8934 46.3847 31.9929 45.6144 31.9803C45.4723 31.9785 45.3302 31.9768 45.1837 31.9749C45.0229 31.9715 45.0229 31.9715 44.8589 31.968C44.8589 31.9029 44.8589 31.8378 44.8589 31.7707C44.989 31.7363 44.989 31.7363 45.1217 31.7013C45.5136 31.5976 45.9053 31.493 46.2971 31.3883C46.5019 31.3343 46.5019 31.3343 46.7107 31.2793C46.9065 31.2268 46.9065 31.2268 47.1061 31.1733C47.2267 31.1412 47.3472 31.1092 47.4713 31.0762C47.7787 30.9958 47.7787 30.9958 48.0631 30.784C48.0631 30.1328 48.0631 29.4816 48.0631 28.8107C47.9159 28.8188 47.7687 28.8269 47.617 28.8353C47.1257 28.8142 46.8076 28.7065 46.3506 28.5039C45.5791 28.2963 44.768 28.3895 43.985 28.416C44.0811 28.2858 44.1773 28.1555 44.2763 28.0213C44.4686 28.0213 44.6608 28.0213 44.8589 28.0213C44.6372 27.5025 44.4447 27.0655 44.1307 26.64C43.8099 26.5492 43.8099 26.5492 43.457 26.5167C43.338 26.5019 43.219 26.4872 43.0963 26.472C43.0051 26.4623 42.9139 26.4526 42.8198 26.4427C42.7951 26.2328 42.7951 26.2328 42.7698 26.0187C42.6666 25.4115 42.5068 24.9085 42.3101 24.346C41.9348 23.2669 41.7835 22.5171 41.8003 21.312Z" fill="#143039"/>
<path d="M43.0656 17.464C43.6591 17.5854 43.869 17.8774 44.2757 18.4491C45.0458 19.2342 46.0364 19.2162 46.9616 19.2647C47.1423 19.2761 47.1423 19.2761 47.3266 19.2878C47.6206 19.3062 47.9147 19.3226 48.2087 19.3387C47.7629 19.8564 47.6652 19.9307 47.0436 19.9307C47.0436 19.8004 47.0436 19.6702 47.0436 19.536C46.5895 19.6636 46.5895 19.6636 46.461 20.128C46.5571 20.1931 46.6532 20.2582 46.7523 20.3253C46.1088 20.5604 45.52 20.7024 44.8589 20.5227C44.2534 20.0361 43.7527 19.4186 43.2568 18.7467C43.2568 18.5513 43.2568 18.356 43.2568 18.1547C43.1606 18.1547 43.0645 18.1547 42.9655 18.1547C43.0063 18.7428 43.049 19.3306 43.0929 19.9183C43.1044 20.0861 43.1158 20.2539 43.1276 20.4267C43.1398 20.5863 43.152 20.7459 43.1646 20.9104C43.1753 21.0582 43.186 21.206 43.197 21.3582C43.2167 21.4732 43.2364 21.5882 43.2568 21.7067C43.3529 21.7718 43.449 21.8369 43.5481 21.904C43.6756 22.2809 43.7923 22.6645 43.9031 23.051C44.2329 24.3601 44.2329 24.3601 44.9683 25.2291C45.903 25.6968 46.8686 25.8391 47.8537 25.9863C48.0145 26.0119 48.1753 26.0375 48.341 26.0638C48.7337 26.126 49.1265 26.1865 49.5195 26.2453C49.5195 26.3105 49.5195 26.3756 49.5195 26.4427C46.7516 26.5155 46.7516 26.5155 45.5871 26.048C45.7871 26.1437 45.9874 26.238 46.1879 26.3317C46.2994 26.3843 46.4109 26.437 46.5258 26.4912C47.4694 26.8685 48.3806 26.8613 49.3557 26.8497C49.4976 26.8488 49.6396 26.8479 49.7858 26.847C50.134 26.8447 50.4822 26.8414 50.8303 26.8373C50.6847 27.232 50.6847 27.232 50.4314 27.3533C49.7781 27.5042 49.1156 27.4658 48.4545 27.4663C48.3059 27.4688 48.1573 27.4712 48.0042 27.4737C46.4733 27.4777 45.4493 26.9988 44.2763 25.6533C43.9487 25.1547 43.6739 24.6305 43.4024 24.0747C43.1895 23.6395 43.1895 23.6395 42.9655 23.2853C42.8694 23.2853 42.7732 23.2853 42.6742 23.2853C42.0955 21.8376 41.7576 20.6032 41.946 18.944C42.198 18.1834 42.4363 17.6226 43.0656 17.464Z" fill="#D6D8D5"/>
<path d="M43.5481 56.4373C43.8394 56.832 43.8394 56.832 43.8724 57.547C43.8724 57.8539 43.8707 58.1608 43.8678 58.4677C43.8674 58.6292 43.867 58.7907 43.8666 58.9571C43.8649 59.4739 43.8613 59.9906 43.8576 60.5073C43.8561 60.8573 43.8548 61.2072 43.8536 61.5572C43.8504 62.4159 43.8453 63.2746 43.8394 64.1333C43.4783 64.1386 43.1172 64.1426 42.7561 64.1457C42.6531 64.1473 42.5502 64.149 42.4441 64.1507C42.1809 64.1524 41.9177 64.1436 41.6547 64.1333C41.509 63.936 41.509 63.936 41.4925 63.5151C41.4933 63.3342 41.494 63.1534 41.4948 62.9671C41.4953 62.7718 41.4957 62.5766 41.4962 62.3754C41.4974 62.17 41.4987 61.9646 41.4999 61.753C41.5006 61.5468 41.5012 61.3407 41.5019 61.1282C41.5036 60.617 41.506 60.1059 41.509 59.5947C41.6052 59.5947 41.7013 59.5947 41.8003 59.5947C41.8003 59.3464 41.8003 59.0981 41.8003 58.8423C41.8003 57.424 41.8003 57.424 41.946 56.832C42.2795 56.606 42.4602 56.6202 42.8289 56.6347C43.0182 56.6347 43.2074 56.6347 43.4024 56.6347C43.4505 56.5695 43.4985 56.5044 43.5481 56.4373Z" fill="#2A627B"/>
<path d="M67.434 31.7707C67.5301 31.7707 67.6262 31.7707 67.7252 31.7707C68.2103 33.9255 67.8306 36.1149 67.3921 38.2064C67.1261 39.5484 67.1192 40.6174 67.2735 41.9996C67.2919 42.7743 67.1623 43.1631 66.8514 43.808C66.5692 44.0909 66.5692 44.0909 66.2688 44.289C65.6383 44.7742 65.5171 45.2608 65.2493 46.176C64.5603 47.4685 63.4404 48.4418 62.3364 48.9387C61.7674 48.7776 61.7674 48.7776 61.3168 48.544C61.5331 48.4463 61.5331 48.4463 61.7538 48.3467C61.8499 48.4118 61.946 48.4769 62.0451 48.544C62.0451 48.1533 62.0451 47.7626 62.0451 47.36C63.0909 46.5606 64.0902 45.8391 65.2493 45.3867C65.2493 45.0611 65.2493 44.7355 65.2493 44.4C65.1531 44.3349 65.057 44.2698 64.958 44.2027C65.016 44.0859 65.074 43.9691 65.1338 43.8488C65.4647 43.1801 65.7931 42.5154 66.0958 41.8223C66.1529 41.6962 66.21 41.57 66.2688 41.44C66.3168 41.44 66.3649 41.44 66.4144 41.44C66.3664 41.8958 66.3183 42.3517 66.2688 42.8213C66.5873 42.5052 66.5873 42.5052 66.8514 42.032C66.8375 41.4419 66.8375 41.4419 66.7057 40.848C66.6787 40.6608 66.6517 40.4736 66.6238 40.2807C66.6028 40.1423 66.5817 40.0039 66.5601 39.8613C66.6562 39.8613 66.7523 39.8613 66.8514 39.8613C66.8394 39.6538 66.8273 39.4462 66.815 39.2323C66.8084 38.0034 67.1441 36.8673 67.434 35.7173C66.7741 36.3702 66.5851 36.7949 66.4144 37.888C66.1231 37.6907 66.1231 37.6907 66.0338 37.3561C65.8693 36.0275 65.8609 34.5927 66.2688 33.3493C66.5601 33.9413 66.5601 33.9413 66.5601 34.336C66.6562 34.336 66.7523 34.336 66.8514 34.336C67.0654 33.4868 67.2555 32.6344 67.434 31.7707Z" fill="#193236"/>
<path d="M46.3153 58.4107C46.3634 58.8665 46.4114 59.3224 46.4609 59.792C46.6051 59.792 46.7493 59.792 46.8979 59.792C46.8979 60.4432 46.8979 61.0944 46.8979 61.7653C47.0421 61.7002 47.1863 61.6351 47.3348 61.568C47.6083 61.5751 47.8816 61.597 48.1541 61.6297C48.2971 61.6452 48.4402 61.6607 48.5876 61.6767C48.7029 61.7059 48.8181 61.7352 48.9369 61.7653C49.1187 62.258 49.0755 62.5178 49.0279 63.0603C49.0148 63.2193 49.0017 63.3783 48.9881 63.5421C48.9369 63.936 48.9369 63.936 48.7913 64.1333C48.4805 64.1531 48.1693 64.1592 47.8582 64.1596C47.6688 64.1598 47.4794 64.1601 47.2842 64.1603C47.185 64.1599 47.0859 64.1595 46.9837 64.1591C46.6807 64.158 46.3777 64.1591 46.0746 64.1603C45.7905 64.1599 45.7905 64.1599 45.5006 64.1596C45.3253 64.1593 45.1501 64.1591 44.9695 64.1589C44.5675 64.1333 44.5675 64.1333 44.4219 63.936C44.4035 63.4115 44.3949 62.8943 44.3946 62.3697C44.3928 62.2233 44.391 62.0769 44.3892 61.9261C44.3884 61.5433 44.4041 61.1607 44.4219 60.7787C44.5675 60.5813 44.7132 60.384 44.8588 60.1867C44.9159 60.0361 44.973 59.8855 45.0318 59.7303C45.3001 59.1912 45.7846 58.4107 46.3153 58.4107Z" fill="#1D4C5F"/>
<path d="M51.9955 42.624C52.4761 42.624 52.9567 42.624 53.4519 42.624C53.5 42.6891 53.5481 42.7542 53.5976 42.8213C54.1073 42.8542 54.1073 42.8542 54.6171 42.8213C54.6652 42.7562 54.7132 42.6911 54.7628 42.624C55.0326 42.6097 55.3029 42.6075 55.5729 42.6117C55.7203 42.6134 55.8677 42.6152 56.0195 42.6171C56.1905 42.6205 56.1905 42.6205 56.3649 42.624C56.2759 44.5305 56.2759 44.5305 55.7823 45.3867C55.6381 45.4843 55.6381 45.4843 55.491 45.584C55.3952 46.1818 55.3952 46.1818 55.3453 46.768C55.2612 46.7883 55.1771 46.8087 55.0905 46.8297C54.7161 46.9847 54.4807 47.2229 54.1802 47.5573C53.9971 46.9839 53.8889 46.6109 53.8889 45.9787C53.7447 45.9787 53.6005 45.9787 53.4519 45.9787C53.4519 46.3694 53.4519 46.7601 53.4519 47.1627C53.2597 47.2278 53.0674 47.2929 52.8694 47.36C52.8694 47.1646 52.8694 46.9693 52.8694 46.768C52.581 46.8331 52.2926 46.8982 51.9955 46.9653C51.9955 45.5327 51.9955 44.1 51.9955 42.624Z" fill="#808080"/>
<path d="M42.3829 15.392C42.5271 15.4897 42.5271 15.4897 42.6742 15.5893C42.6261 15.7847 42.578 15.9801 42.5285 16.1813C42.865 16.1813 43.2014 16.1813 43.548 16.1813C43.1572 16.5343 42.8148 16.7366 42.3829 16.9707C41.9278 17.2933 41.9278 17.2933 41.8458 17.7847C41.8308 17.9068 41.8158 18.0289 41.8003 18.1547C41.8003 18.0244 41.8003 17.8942 41.8003 17.76C41.7042 17.76 41.608 17.76 41.509 17.76C41.488 17.992 41.4669 18.224 41.4453 18.463C41.3759 19.2167 41.2986 19.9684 41.2177 20.72C40.4384 20.6463 40.124 20.3262 39.6156 19.536C39.5435 19.6337 39.5435 19.6337 39.47 19.7333C39.3528 19.7008 39.2357 19.6682 39.1149 19.6347C38.7451 19.4835 38.7451 19.4835 38.4504 19.7333C38.3062 19.6682 38.1621 19.6031 38.0135 19.536C36.8459 19.3825 35.6163 19.5471 34.6153 20.4263C33.9752 21.1424 33.5709 21.8846 33.2072 22.8907C33.0616 22.2987 33.0616 22.2987 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C34.004 20.098 34.6904 19.5658 35.5068 18.9833C35.7897 18.7754 36.0484 18.5531 36.3113 18.3027C36.9512 17.7381 37.477 17.7472 38.232 17.723C39.1877 17.6409 39.8485 17.3018 40.6778 16.6731C41.0335 16.4074 41.3718 16.2122 41.7548 16.0333C42.2496 15.8649 42.2496 15.8649 42.3829 15.392Z" fill="#243D44"/>
<path d="M53.4793 18.0313C53.5664 18.072 53.6535 18.1127 53.7432 18.1547C53.3154 19.4895 52.388 20.3246 51.4493 20.952C50.4362 21.4549 49.5159 21.5763 48.4454 21.571C48.317 21.5742 48.1885 21.5774 48.0562 21.5806C47.1347 21.5815 46.2962 21.4018 45.4414 20.9173C45.3453 20.7871 45.2492 20.6568 45.1501 20.5227C45.2431 20.501 45.336 20.4794 45.4318 20.4571C45.5521 20.4259 45.6725 20.3946 45.7964 20.3623C45.9164 20.3326 46.0364 20.3028 46.16 20.2721C46.2593 20.2246 46.3586 20.177 46.461 20.128C46.509 19.9326 46.5571 19.7373 46.6066 19.536C46.7508 19.536 46.895 19.536 47.0435 19.536C47.0435 19.6662 47.0435 19.7965 47.0435 19.9307C47.2839 19.8004 47.5242 19.6702 47.7718 19.536C47.7718 19.4058 47.7718 19.2755 47.7718 19.1413C47.8856 19.1385 47.9993 19.1356 48.1166 19.1326C48.6359 19.1178 49.155 19.0988 49.6743 19.0797C49.8533 19.0752 50.0323 19.0708 50.2167 19.0662C51.163 19.0282 52.7718 17.867 53.4793 18.0313Z" fill="#A2A19D"/>
<path d="M53.3063 13.2213C54.622 14.8466 55.4752 16.9248 55.6367 19.3387C55.5672 20.0773 55.4147 20.2659 55.0541 20.9173C55.0541 20.201 55.0541 19.4847 55.0541 18.7467C54.958 18.7467 54.8618 18.7467 54.7628 18.7467C54.7057 18.5879 54.6486 18.4292 54.5898 18.2657C54.3518 17.6896 54.3518 17.6896 53.8343 17.612C53.6601 17.5957 53.4858 17.5794 53.3063 17.5627C53.1216 17.5016 53.1216 17.5016 52.9331 17.4393C52.5671 17.3368 52.5671 17.3368 52.1594 17.464C51.6346 17.5778 51.2051 17.4922 50.6847 17.3653C50.5755 17.02 50.5755 17.02 50.5391 16.576C50.7666 16.2183 50.7666 16.2183 51.1216 15.7867C51.2532 15.5658 51.3836 15.3437 51.5131 15.1207C52.02 14.3032 52.6374 13.7712 53.3063 13.2213Z" fill="#082D31"/>
<path d="M45.5644 52.0698C45.664 52.0696 45.7637 52.0694 45.8664 52.0692C46.0774 52.0691 46.2885 52.0695 46.4996 52.0703C46.8237 52.0713 47.1478 52.0703 47.472 52.069C47.6766 52.0692 47.8812 52.0694 48.0858 52.0698C48.2733 52.07 48.4608 52.0702 48.6539 52.0705C49.0826 52.096 49.0826 52.096 49.2283 52.2933C49.248 53.0163 49.2522 53.5772 49.0826 54.2667C48.3617 54.3318 47.6407 54.3969 46.8979 54.464C46.8499 55.0501 46.8018 55.6362 46.7523 56.24C46.6081 56.1098 46.4639 55.9795 46.3153 55.8453C46.3153 55.65 46.3153 55.4546 46.3153 55.2533C46.2192 55.2533 46.1231 55.2533 46.0241 55.2533C46.0241 55.4487 46.0241 55.6441 46.0241 55.8453C45.6876 55.9105 45.3512 55.9756 45.0045 56.0427C44.504 54.7893 44.2942 53.7232 44.422 52.2933C44.6999 51.9167 45.196 52.0702 45.5644 52.0698Z" fill="#5FB7E2"/>
<path d="M53.3063 17.9573C53.5947 17.9573 53.8831 17.9573 54.1802 17.9573C54.1802 18.3481 54.1802 18.7388 54.1802 19.1413C54.084 19.1413 53.9879 19.1413 53.8889 19.1413C53.8923 19.282 53.8956 19.4227 53.8991 19.5676C53.9148 20.697 53.8773 21.6274 53.5976 22.6933C53.5015 22.6282 53.4053 22.5631 53.3063 22.496C53.2508 22.6814 53.2508 22.6814 53.1942 22.8706C53.1441 23.0319 53.094 23.1932 53.0423 23.3593C52.9933 23.5196 52.9443 23.6798 52.8938 23.845C52.7237 24.272 52.7237 24.272 52.2868 24.6667C52.3378 24.5161 52.3889 24.3655 52.4415 24.2103C52.6252 23.6706 52.6252 23.6706 52.4324 23.088C52.4225 22.747 52.4201 22.4056 52.4233 22.0643C52.4246 21.8865 52.426 21.7087 52.4273 21.5255C52.429 21.3899 52.4307 21.2544 52.4324 21.1147C52.2882 21.1798 52.144 21.2449 51.9955 21.312C51.9955 21.833 51.9955 22.3539 51.9955 22.8907C51.8994 22.8907 51.8032 22.8907 51.7042 22.8907C51.7042 22.4348 51.7042 21.979 51.7042 21.5093C51.4639 21.6396 51.2236 21.7698 50.976 21.904C50.982 22.0912 50.988 22.2784 50.9942 22.4713C50.976 23.088 50.976 23.088 50.6847 23.4827C50.6847 22.8966 50.6847 22.3105 50.6847 21.7067C50.0118 21.8369 49.3389 21.9671 48.6456 22.1013C48.7418 22.7525 48.8379 23.4037 48.9369 24.0747C49.0331 24.0747 49.1292 24.0747 49.2282 24.0747C49.3724 23.3583 49.5166 22.642 49.6652 21.904C50.0275 22.5586 50.179 22.8899 50.3479 23.6307C50.3845 23.7884 50.4211 23.9461 50.4588 24.1086C50.4853 24.2276 50.5118 24.3467 50.539 24.4693C50.4429 24.5996 50.3468 24.7298 50.2477 24.864C50.1516 24.4733 50.0555 24.0826 49.9564 23.68C49.8603 23.8754 49.7642 24.0707 49.6652 24.272C49.5223 24.473 49.3772 24.6713 49.2282 24.864C48.7671 24.4475 48.6171 24.1269 48.3543 23.4827C48.2102 23.8734 48.066 24.2641 47.9174 24.6667C47.8213 24.6667 47.7252 24.6667 47.6261 24.6667C47.6261 24.4713 47.6261 24.2759 47.6261 24.0747C47.7222 24.0747 47.8184 24.0747 47.9174 24.0747C47.9384 23.9322 47.9595 23.7898 47.9811 23.643C48.057 23.1291 48.1328 22.6152 48.2087 22.1013C48.0842 22.0774 47.9597 22.0535 47.8315 22.0289C47.6706 21.9958 47.5097 21.9627 47.3439 21.9287C47.1031 21.8806 47.1031 21.8806 46.8575 21.8315C46.7266 21.7903 46.5958 21.7491 46.461 21.7067C46.4129 21.5764 46.3648 21.4462 46.3153 21.312C46.4157 21.3161 46.5161 21.3203 46.6195 21.3245C49.898 21.5364 49.898 21.5364 52.7738 19.6532C53.1333 19.1844 53.4408 18.6925 53.7432 18.1547C53.599 18.0895 53.4549 18.0244 53.3063 17.9573Z" fill="#553334"/>
<path d="M42.8198 31.5733C42.7717 31.8338 42.7237 32.0943 42.6742 32.3627C42.8183 32.2975 42.9625 32.2324 43.1111 32.1653C43.6463 32.0714 44.1846 32.0174 44.7223 31.9557C44.8679 31.9377 45.0135 31.9198 45.1635 31.9013C46.084 31.7935 46.9936 31.7473 47.9174 31.7707C47.9708 33.0482 47.9708 33.0482 47.7437 33.4899C47.3913 33.83 47.167 33.8119 46.7369 33.8018C46.5937 33.7999 46.4506 33.798 46.3031 33.796C46.1539 33.7911 46.0047 33.7861 45.8511 33.781C45.6248 33.777 45.6248 33.777 45.3939 33.7729C45.0213 33.7659 44.6488 33.7562 44.2763 33.744C44.2763 33.8742 44.2763 34.0045 44.2763 34.1387C44.0243 34.1159 43.7725 34.0908 43.5207 34.0647C43.3104 34.0441 43.3104 34.0441 43.0957 34.023C42.672 33.9409 42.335 33.7837 41.9459 33.5467C41.9459 33.4164 41.9459 33.2862 41.9459 33.152C41.7792 33.0726 41.7792 33.0726 41.6091 32.9917C41.2337 32.7669 41.0328 32.5967 40.7808 32.1653C40.7808 32.0351 40.7808 31.9048 40.7808 31.7707C41.4687 31.6185 42.1229 31.5541 42.8198 31.5733Z" fill="#E1E2E1"/>
<path d="M42.8198 44.992C43.2524 44.992 43.685 44.992 44.1306 44.992C44.1787 45.513 44.2268 46.0339 44.2763 46.5707C44.4205 46.5707 44.5647 46.5707 44.7132 46.5707C44.7132 46.766 44.7132 46.9614 44.7132 47.1627C44.8574 47.0976 45.0016 47.0324 45.1502 46.9653C45.5056 48.0791 45.4695 49.1316 45.4414 50.32C45.3453 50.3851 45.2492 50.4502 45.1502 50.5173C45.3424 50.5825 45.5347 50.6476 45.7327 50.7147C45.7327 49.9332 45.7327 49.1518 45.7327 48.3467C45.7808 48.3467 45.8289 48.3467 45.8784 48.3467C45.8823 48.7701 45.8851 49.1936 45.8875 49.617C45.8892 49.8528 45.8909 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4148 51.1557 45.096 51.191 44.7769 51.2203C44.5153 51.2451 44.5153 51.2451 44.2484 51.2704C44.1134 51.2824 43.9784 51.2944 43.8393 51.3067C43.4902 50.1753 43.3173 49.1745 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.2396 42.8198 46.1326 42.8198 44.992Z" fill="#CACACA"/>
<path d="M53.6795 26.381C53.8871 26.3821 53.8871 26.3821 54.0988 26.3833C54.4715 26.4427 54.4715 26.4427 54.9084 26.8373C54.9801 27.2196 55.0508 27.6023 55.111 27.9882C55.2049 28.4409 55.3376 28.7807 55.5183 29.1807C55.6054 29.3842 55.6925 29.5877 55.7823 29.7973C55.7342 29.9276 55.6862 30.0578 55.6367 30.192C54.9266 29.6493 54.9266 29.6493 54.7628 29.2053C54.4887 29.0832 54.4887 29.0832 54.162 29.008C53.736 28.8929 53.3405 28.7638 52.924 28.5887C52.384 28.399 51.968 28.3324 51.4129 28.416C51.3018 28.5422 51.1906 28.6683 51.0761 28.7983C50.5048 29.3924 49.9314 29.3657 49.2282 29.4027C49.2282 29.7934 49.2282 30.1841 49.2282 30.5867C50.6019 31.5591 52.0802 31.7512 53.5976 31.968C53.5976 32.0331 53.5976 32.0982 53.5976 32.1653C50.1936 32.3174 50.1936 32.3174 49.2282 31.1787C49.0841 31.0484 48.9399 30.9182 48.7913 30.784C48.7435 30.3639 48.7435 30.3639 48.7549 29.8837C48.7571 29.7247 48.7594 29.5657 48.7617 29.4019C48.7913 29.008 48.7913 29.008 48.937 28.8107C49.1544 28.7464 49.3732 28.6903 49.5924 28.638C51.1032 28.2645 51.1032 28.2645 52.2868 27.0347C52.7506 26.4608 53.0561 26.3661 53.6795 26.381Z" fill="#DDDEDD"/>
<path d="M58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1321 46.5707C59.3244 47.6777 59.5166 48.7847 59.7147 49.9253C59.8108 49.9253 59.907 49.9253 60.006 49.9253C60.006 50.0556 60.006 50.1858 60.006 50.32C60.2493 50.3139 60.2493 50.3139 60.4976 50.3077C61.0255 50.32 61.0255 50.32 61.3168 50.5173C61.3168 49.9964 61.3168 49.4754 61.3168 48.9387C61.6748 49.6663 61.7556 50.2602 61.8994 51.1093C61.1343 51.5989 60.4861 51.4762 59.672 51.3444C59.2637 51.2711 59.2637 51.2711 58.8408 51.504C58.5149 51.4562 58.1901 51.3927 57.8668 51.319C57.695 51.2806 57.5233 51.2422 57.3463 51.2026C57.2147 51.1718 57.083 51.141 56.9474 51.1093C56.9474 50.5232 56.9474 49.9372 56.9474 49.3333C56.9955 49.3333 57.0436 49.3333 57.0931 49.3333C57.0937 49.13 57.0937 49.13 57.0942 48.9225C57.1114 48.3791 57.141 47.888 57.2387 47.36C57.6575 46.9283 57.6575 46.9283 58.1126 46.768C58.2568 46.8331 58.401 46.8982 58.5496 46.9653C58.7688 47.6646 58.7094 48.4388 58.7043 49.1853C58.703 49.4346 58.7017 49.6839 58.7003 49.9407C58.6986 50.131 58.6969 50.3213 58.6952 50.5173C58.7913 50.5173 58.8874 50.5173 58.9865 50.5173C58.9865 49.2149 58.9865 47.9125 58.9865 46.5707Z" fill="#CFCFCF"/>
<path d="M51.7042 35.52C51.7523 35.52 51.8003 35.52 51.8499 35.52C51.8979 39.297 51.946 43.0739 51.9955 46.9653C52.1878 46.8351 52.38 46.7049 52.5781 46.5707C52.6412 46.6684 52.7043 46.766 52.7693 46.8667C53.0147 47.2282 53.0147 47.2282 53.452 47.1627C53.5481 46.9022 53.6442 46.6417 53.7433 46.3733C53.8413 46.9445 53.9383 47.516 54.0346 48.0877C54.0623 48.2488 54.0901 48.41 54.1188 48.576C54.2512 49.3674 54.3652 50.0945 54.3258 50.912C54.2414 50.9397 54.1569 50.9675 54.0698 50.996C53.8659 51.0668 53.663 51.1434 53.4622 51.2288C53.3687 51.2667 53.2752 51.3046 53.1789 51.3437C53.0861 51.3831 52.9934 51.4225 52.8978 51.4632C52.5781 51.504 52.5781 51.504 51.7042 51.1093C51.7042 45.9649 51.7042 40.8204 51.7042 35.52Z" fill="#BDBCBC"/>
<path d="M61.6081 58.8053C61.7042 58.8053 61.8003 58.8053 61.8994 58.8053C61.9073 59.3069 61.9131 59.8083 61.9176 60.31C61.92 60.4507 61.9225 60.5913 61.925 60.7363C61.9309 61.6162 61.871 62.3252 61.6081 63.1467C60.8174 64.218 59.9904 64.1691 58.9228 64.1703C58.8153 64.1727 58.7078 64.1752 58.597 64.1777C57.7862 64.1806 57.1015 64.0899 56.465 63.344C56.0734 62.7151 56.0568 62.3518 56.0645 61.5433C56.0658 61.3637 56.0671 61.1842 56.0684 60.9991C56.0701 60.8612 56.0718 60.7234 56.0736 60.5813C56.2658 60.6464 56.4581 60.7116 56.6561 60.7787C56.5723 61.2494 56.4781 61.6996 56.3649 62.16C56.458 62.2048 56.5511 62.2495 56.647 62.2957C56.9474 62.5547 56.9474 62.5547 57.0567 63.0727C57.0687 63.2273 57.0807 63.382 57.0931 63.5413C57.4776 63.5413 57.8621 63.5413 58.2582 63.5413C58.2582 63.6716 58.2582 63.8018 58.2582 63.936C58.4475 63.9116 58.6367 63.8872 58.8317 63.862C58.9914 63.8414 58.9914 63.8414 59.1543 63.8204C59.2431 63.7934 59.3319 63.7664 59.4234 63.7387C59.4715 63.6084 59.5195 63.4782 59.5691 63.344C59.6171 63.4091 59.6652 63.4742 59.7147 63.5413C59.8108 63.2808 59.907 63.0204 60.006 62.752C59.7935 62.7798 59.5811 62.8088 59.3688 62.8383C59.2505 62.8544 59.1322 62.8704 59.0104 62.8869C58.689 62.9278 58.689 62.9278 58.4039 63.1467C58.3078 62.1047 58.2116 61.0628 58.1126 59.9893C58.5495 60.5813 58.5495 60.5813 58.5768 61.309C58.5633 61.6326 58.5633 61.6326 58.5495 61.9627C58.8379 61.9627 59.1263 61.9627 59.4234 61.9627C59.4715 61.3115 59.5195 60.6603 59.5691 59.9893C59.8094 59.8591 60.0497 59.7288 60.2973 59.5947C60.2119 60.8087 60.2119 60.8087 60.1516 61.1733C60.0074 61.271 60.0074 61.271 59.8603 61.3707C59.8603 61.566 59.8603 61.7614 59.8603 61.9627C60.5184 61.8578 60.9458 61.5328 61.4624 60.976C61.6011 60.5574 61.6011 60.5574 61.6081 60.1867C61.512 60.1867 61.4158 60.1867 61.3168 60.1867C61.4129 59.7308 61.5091 59.275 61.6081 58.8053Z" fill="#193742"/>
<path d="M42.3829 16.9707C42.3513 17.1397 42.3513 17.1397 42.3191 17.3122C42.0809 18.7221 42.0615 20.0672 42.0916 21.5093C42.0435 21.5093 41.9954 21.5093 41.9459 21.5093C41.9824 22.9671 42.3035 23.9996 42.7936 25.2941C42.9654 25.8507 42.9654 25.8507 42.8198 26.4427C42.4593 26.5404 42.4593 26.5404 42.0916 26.64C42.0735 26.8883 42.0555 27.1365 42.0369 27.3923C41.9898 28.0417 41.9363 28.2382 41.6546 28.8107C41.3451 29.045 41.3451 29.045 41.072 29.2053C41.1201 28.9449 41.1682 28.6844 41.2177 28.416C41.3138 28.416 41.4099 28.416 41.509 28.416C41.7441 27.43 41.847 26.5764 41.8549 25.53C41.8611 25.1538 41.8611 25.1538 41.8674 24.77C41.7897 23.965 41.6396 23.6524 41.2177 23.088C40.8364 22.825 40.8364 22.825 40.4895 22.6933C40.5856 22.6282 40.6817 22.5631 40.7808 22.496C40.2682 21.0889 39.569 20.3551 38.5961 19.536C38.8388 19.536 39.0816 19.536 39.3243 19.536C39.3243 19.0802 39.3243 18.6243 39.3243 18.1547C39.3724 18.1547 39.4204 18.1547 39.4699 18.1547C39.524 18.4721 39.524 18.4721 39.5792 18.796C39.7663 19.5564 39.878 19.852 40.3438 20.3253C40.8002 20.5755 40.8002 20.5755 41.2177 20.72C41.2117 20.5246 41.2057 20.3293 41.1995 20.128C41.197 19.2916 41.3427 18.5628 41.509 17.76C41.6051 17.76 41.7012 17.76 41.8003 17.76C41.8003 17.5646 41.8003 17.3693 41.8003 17.168C42.0916 16.9707 42.0916 16.9707 42.3829 16.9707Z" fill="#092830"/>
<path d="M62.7744 32.2879C63.4535 32.4629 63.747 33.0648 64.1296 33.7933C64.4433 34.5918 64.4413 35.2185 64.3754 36.112C64.0841 36.704 64.0841 36.704 63.8008 36.805C63.696 36.8164 63.5912 36.8279 63.4833 36.8397C63.2971 36.86 63.1108 36.8804 62.9189 36.9013C62.9189 37.0316 62.9189 37.1618 62.9189 37.296C62.8228 37.296 62.7267 37.296 62.6276 37.296C62.6276 37.5565 62.6276 37.817 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3364 38.0853C62.2883 38.2807 62.2402 38.4761 62.1907 38.6773C62.2961 37.416 62.4534 36.1751 62.6276 34.928C61.9788 34.7326 61.9788 34.7326 61.3168 34.5333C61.3641 33.8677 61.4192 33.2866 61.6172 32.671C61.9884 32.2655 62.3064 32.2519 62.7744 32.2879Z" fill="#57879B"/>
<path d="M65.3949 36.9013C65.8319 37.0987 65.8319 37.0987 66.0776 37.6413C66.4199 38.8441 66.4722 40.3265 66.1305 41.534C65.778 42.3387 65.357 42.8414 64.8123 43.4133C64.6864 43.639 64.5652 43.8697 64.4482 44.104C64.1383 44.7199 63.8164 45.1625 63.3559 45.584C63.2598 45.584 63.1636 45.584 63.0646 45.584C63.0165 44.3467 62.9685 43.1094 62.9189 41.8347C63.3515 41.7696 63.7841 41.7044 64.2298 41.6373C64.8224 41.3251 65.2568 41.0462 65.5406 40.256C65.6077 39.4388 65.5674 38.6769 65.3949 37.888C65.3949 37.5591 65.3949 37.2302 65.3949 36.9013Z" fill="#020607"/>
<path d="M42.9654 17.9573C43.1096 18.0225 43.2538 18.0876 43.4024 18.1547C43.4234 18.2747 43.4444 18.3948 43.4661 18.5185C43.6333 19.3869 44.3297 19.8551 44.8588 20.3253C45.2868 20.6244 45.7197 20.8826 46.1696 21.1147C45.6235 21.3367 45.6235 21.3367 45.2958 21.1147C45.3438 21.7659 45.3919 22.4171 45.4414 23.088C45.6337 22.6322 45.8259 22.1763 46.024 21.7067C46.0721 21.7067 46.1201 21.7067 46.1696 21.7067C46.1998 22.4425 46.1239 22.8369 45.8784 23.4827C45.8226 23.8756 45.7726 24.2702 45.7327 24.6667C45.6366 24.6667 45.5405 24.6667 45.4414 24.6667C45.2972 24.1457 45.153 23.6247 45.0045 23.088C44.9084 23.1531 44.8122 23.2182 44.7132 23.2853C44.7613 22.6341 44.8093 21.9829 44.8588 21.312C44.7627 21.2469 44.6666 21.1818 44.5675 21.1147C44.5736 21.3263 44.5796 21.5379 44.5858 21.756C44.5675 22.496 44.5675 22.496 44.4037 22.9277C44.3406 23.1047 44.3406 23.1047 44.2763 23.2853C44.3903 23.7263 44.3903 23.7263 44.5675 24.0747C44.6637 23.9444 44.7598 23.8142 44.8588 23.68C45.0227 24.42 45.0227 24.42 44.8588 24.864C45.6278 25.1245 46.3969 25.385 47.1892 25.6533C47.1892 25.7185 47.1892 25.7836 47.1892 25.8507C46.2085 25.9491 45.4278 25.7301 44.5675 25.0613C44.0787 24.2971 43.8229 23.4272 43.548 22.496C43.4519 22.496 43.3558 22.496 43.2567 22.496C43.1792 21.8509 43.104 21.2054 43.0292 20.5597C43.0071 20.3764 42.985 20.1931 42.9623 20.0043C42.9421 19.8281 42.9219 19.652 42.9012 19.4705C42.8821 19.3082 42.863 19.146 42.8434 18.9788C42.8198 18.5493 42.8198 18.5493 42.9654 17.9573Z" fill="#484544"/>
<path d="M60.4429 42.8213C60.7461 43.4375 60.784 43.8269 60.8395 44.5477C60.9089 45.3117 61.0432 46.0557 61.1712 46.805C61.247 47.2557 61.3226 47.7064 61.3976 48.1573C61.4509 48.4751 61.5064 48.7922 61.5626 49.109C61.6227 49.666 61.4995 50.0224 61.3168 50.5173C60.3337 50.542 60.3337 50.542 60.006 50.32C60.006 50.1898 60.006 50.0595 60.006 49.9253C59.9099 49.9253 59.8137 49.9253 59.7147 49.9253C59.6666 50.0556 59.6186 50.1858 59.5691 50.32C59.4249 49.4734 59.2807 48.6269 59.1321 47.7547C59.0841 48.6663 59.036 49.578 58.9865 50.5173C58.8904 50.5173 58.7942 50.5173 58.6952 50.5173C58.6952 49.0196 58.6952 47.5218 58.6952 45.9787C58.8394 45.9135 58.9836 45.8484 59.1321 45.7813C59.2283 46.2372 59.3244 46.693 59.4234 47.1627C59.5856 47.0711 59.5856 47.0711 59.7511 46.9777C60.0806 46.8052 60.3919 46.6807 60.7342 46.5707C60.7132 46.4488 60.6922 46.327 60.6705 46.2014C60.4838 45.047 60.4148 44.0025 60.4429 42.8213Z" fill="#D1D1D1"/>
<path d="M42.6742 44.7947C43.1068 44.7947 43.5393 44.7947 43.985 44.7947C43.985 46.618 43.985 48.4414 43.985 50.32C43.9369 50.32 43.8889 50.32 43.8394 50.32C43.8394 48.5618 43.8394 46.8035 43.8394 44.992C43.5029 44.992 43.1665 44.992 42.8198 44.992C42.8276 45.2489 42.8276 45.2489 42.8355 45.5111C42.8543 46.1458 42.8724 46.7805 42.8901 47.4153C42.8978 47.6902 42.9059 47.9651 42.9142 48.2399C42.9262 48.6347 42.937 49.0295 42.9479 49.4243C42.9547 49.662 42.9616 49.8997 42.9687 50.1446C42.9655 50.7147 42.9655 50.7147 42.8198 51.1093C42.4233 51.1911 42.4233 51.1911 41.9369 51.2327C41.776 51.2474 41.6151 51.2622 41.4493 51.2774C41.3248 51.2871 41.2003 51.2967 41.0721 51.3067C40.8695 50.5183 40.9325 49.7318 40.972 48.914C40.9771 48.7703 40.9823 48.6266 40.9876 48.4785C41.0365 47.4082 41.0365 47.4082 41.3634 46.9653C41.6523 46.8244 41.9435 46.6918 42.2373 46.5707C42.2853 46.6358 42.3334 46.7009 42.3829 46.768C42.3917 46.6421 42.4006 46.5162 42.4096 46.3864C42.4218 46.2234 42.4341 46.0603 42.4466 45.8923C42.4585 45.7298 42.4703 45.5673 42.4825 45.3998C42.5285 44.992 42.5285 44.992 42.6742 44.7947Z" fill="#D3D3D4"/>
<path d="M29.2748 31.376C29.3709 31.376 29.4671 31.376 29.5661 31.376C29.59 31.5725 29.59 31.5725 29.6144 31.773C29.7425 32.7393 29.8566 33.5273 30.2943 34.336C30.3904 34.0104 30.4866 33.6848 30.5856 33.3493C31.1514 34.4992 31.0987 35.7513 31.0225 37.0987C30.9124 37.6677 30.7684 38.1406 30.5856 38.6773C30.5375 38.6773 30.4895 38.6773 30.44 38.6773C30.4379 38.5509 30.4358 38.4245 30.4337 38.2942C30.3807 36.993 30.1881 36.3166 29.5661 35.3227C29.6322 36.2003 29.7658 36.886 30.036 37.6853C30.2663 38.503 30.4054 39.3827 30.44 40.256C30.3482 40.5226 30.2511 40.7859 30.1487 41.0453C30.1137 41.5115 30.1137 41.5115 30.1305 41.9827C30.1331 42.1404 30.1357 42.2981 30.1384 42.4606C30.1435 42.6392 30.1435 42.6392 30.1487 42.8213C30.0045 42.7562 29.8603 42.6911 29.7117 42.624C29.7202 42.4322 29.7286 42.2404 29.7373 42.0428C29.7939 40.0991 29.6139 38.3727 29.2425 36.4927C28.9081 34.7457 28.824 33.094 29.2748 31.376Z" fill="#0A2022"/>
<path d="M57.3844 17.76C59.9145 17.6477 59.9145 17.6477 60.8799 18.352C61.0741 18.6151 61.2683 18.8782 61.4625 19.1413C61.6638 19.2588 61.8674 19.369 62.0724 19.4743C63.2772 20.1639 64.0937 21.4716 64.5996 23.0795C64.6771 23.5448 64.6324 23.8244 64.5211 24.272C64.4249 24.0115 64.3288 23.751 64.2298 23.4827C64.0856 23.5803 64.0856 23.5803 63.9385 23.68C63.8855 23.5205 63.8326 23.361 63.778 23.1967C63.1889 21.4999 62.7677 20.6275 61.4807 19.869C60.0811 19.23 58.5681 19.2484 57.2388 20.128C57.2493 19.9901 57.2598 19.8523 57.2706 19.7102C57.2841 19.5306 57.2977 19.351 57.3116 19.166C57.3251 18.9874 57.3386 18.8089 57.3526 18.6249C57.3889 18.1679 57.3889 18.1679 57.3844 17.76Z" fill="#041B1E"/>
<path d="M48.3544 30.9813C48.3544 31.8279 48.3544 32.6745 48.3544 33.5467C48.066 33.742 48.066 33.742 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3544 34.1387C48.3063 34.2689 48.2582 34.3992 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.467 34.7738 47.3534 34.8046 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.4491 34.7069 45.0326 34.7038 44.604 34.7183C43.3694 34.7414 42.1568 34.6729 40.9264 34.5333C40.9122 34.4143 40.8979 34.2952 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733C40.4882 31.7701 40.7229 31.9852 41.0812 32.3627C41.4948 32.7978 41.4948 32.7978 41.9459 33.152C41.9459 33.2822 41.9459 33.4125 41.9459 33.5467C42.4698 33.6907 42.9947 33.8249 43.5207 33.9537C43.6629 33.9885 43.805 34.0234 43.9514 34.0593C44.0586 34.0855 44.1658 34.1117 44.2763 34.1387C44.2282 33.9433 44.1801 33.748 44.1306 33.5467C44.2306 33.5487 44.3305 33.5508 44.4335 33.5529C44.8848 33.5611 45.3361 33.5663 45.7873 33.5713C46.0233 33.5763 46.0233 33.5763 46.2641 33.5814C46.4894 33.5833 46.4894 33.5833 46.7193 33.5852C46.8581 33.5873 46.9969 33.5893 47.1399 33.5915C47.5085 33.5923 47.5085 33.5923 47.7718 33.152C47.8301 32.6936 47.8795 32.2329 47.9174 31.7707C47.6771 31.7707 47.4368 31.7707 47.1892 31.7707C48.0631 30.9813 48.0631 30.9813 48.3544 30.9813Z" fill="#8D8E8D"/>
<path d="M39.7612 43.808C40.1504 44.2417 40.3277 44.474 40.4169 45.1572C40.4166 45.3688 40.4164 45.5803 40.4161 45.7983C40.4162 46.0308 40.4163 46.2633 40.4164 46.5028C40.4135 46.745 40.4105 46.9872 40.4075 47.2367C40.4086 47.4773 40.4096 47.7179 40.4107 47.9659C40.4043 49.1856 40.3859 50.0431 39.9069 51.1093C39.3751 51.5897 38.9743 51.5647 38.3594 51.5533C38.255 51.5516 38.1506 51.5498 38.043 51.548C37.263 51.5249 36.5633 51.4973 35.8288 51.1093C35.292 49.9144 35.3635 48.8322 35.4374 47.471C35.4463 47.2702 35.4552 47.0693 35.4644 46.8624C35.4866 46.3703 35.5118 45.8785 35.5375 45.3867C36.1623 45.3867 36.7872 45.3867 37.4309 45.3867C37.479 46.5588 37.527 47.731 37.5766 48.9387C37.7688 49.0689 37.9611 49.1991 38.1591 49.3333C38.1111 49.4636 38.063 49.5938 38.0135 49.728C37.7404 49.6787 37.7404 49.6787 37.4309 49.5307C37.0534 48.8202 37.1062 48.0495 37.1214 47.212C37.1227 47.0744 37.124 46.9368 37.1254 46.795C37.1288 46.4571 37.134 46.1192 37.1396 45.7813C36.659 45.7813 36.1784 45.7813 35.6832 45.7813C35.6997 46.3653 35.7182 46.9489 35.7378 47.5327C35.7445 47.7818 35.7445 47.7818 35.7514 48.036C35.7571 48.195 35.7627 48.354 35.7685 48.5178C35.7731 48.6645 35.7777 48.8113 35.7824 48.9625C35.8076 49.3807 35.8076 49.3807 36.1201 49.728C36.072 49.9234 36.024 50.1187 35.9745 50.32C36.5901 50.5284 36.5901 50.5284 37.1823 50.3054C37.8372 50.0019 38.3942 50.3723 39.0387 50.6291C39.4567 50.7777 39.4567 50.7777 39.7124 50.5014C39.9923 49.9563 39.9587 49.5435 39.9547 48.8839C39.9539 48.6401 39.9532 48.3963 39.9524 48.1451C39.9494 47.8901 39.9464 47.6351 39.9433 47.3723C39.9426 47.1181 39.9418 46.8638 39.941 46.6019C39.9515 45.188 39.9515 45.188 39.7612 43.808Z" fill="#D8D8D8"/>
<path d="M35.1006 32.3627C35.5492 32.88 35.7913 33.1832 35.8732 33.9768C35.8743 34.41 35.8743 34.41 35.8288 35.1253C35.4443 35.0602 35.0598 34.9951 34.6637 34.928C34.6637 35.1234 34.6637 35.3187 34.6637 35.52C34.1059 35.8757 33.676 35.9534 33.0616 35.9147C33.0616 35.7844 33.0616 35.6542 33.0616 35.52C32.9654 35.52 32.8693 35.52 32.7703 35.52C32.845 34.2541 33.1128 33.4953 33.7625 32.5847C34.2468 32.2472 34.5649 32.2481 35.1006 32.3627Z" fill="#5E8EA2"/>
<path d="M33.3529 32.3627C33.449 32.3627 33.5451 32.3627 33.6442 32.3627C33.5509 32.9971 33.3803 33.4633 33.1344 34.0153C32.8375 34.7166 32.6711 35.2938 32.6246 36.112C32.7688 36.1771 32.913 36.2422 33.0616 36.3093C32.8387 36.5534 32.6159 36.7975 32.3931 37.0416C32.1281 37.3699 32.05 37.6008 32.0074 38.083C31.9895 38.8413 31.9976 39.3462 32.2514 40.034C32.763 40.6088 33.2993 40.8188 33.9355 41.0453C33.7898 41.44 33.7898 41.44 33.6442 41.6373C32.8681 41.7074 32.3809 41.7283 31.7508 41.0453C31.2679 40.3911 31.2509 39.7709 31.1682 38.8747C31.1051 38.7444 31.042 38.6142 30.977 38.48C30.944 38.3498 30.9109 38.2195 30.8769 38.0853C31.0587 37.5839 31.2312 37.1605 31.4595 36.704C31.5556 36.5086 31.6517 36.3133 31.7508 36.112C31.8469 36.112 31.943 36.112 32.0421 36.112C32.0481 35.9248 32.0541 35.7376 32.0603 35.5447C32.1666 34.4978 32.5963 33.5884 33.0616 32.7573C33.1577 32.7573 33.2538 32.7573 33.3529 32.7573C33.3529 32.6271 33.3529 32.4969 33.3529 32.3627Z" fill="#06171E"/>
<path d="M56.0735 31.5733C56.3619 31.5733 56.6503 31.5733 56.9474 31.5733C56.735 32.3008 56.4665 32.5919 55.9825 33.004C55.8635 33.1068 55.7445 33.2095 55.6218 33.3154C55.5306 33.3917 55.4393 33.468 55.3453 33.5467C55.6337 33.4164 55.9221 33.2862 56.2192 33.152C56.1231 33.673 56.0269 34.1939 55.9279 34.7307C55.7926 34.7286 55.6574 34.7265 55.5181 34.7244C55.017 34.7177 54.516 34.7127 54.0149 34.709C53.7979 34.707 53.5809 34.7043 53.3639 34.7009C53.0522 34.6961 52.7406 34.6939 52.429 34.6921C52.2414 34.6901 52.0537 34.688 51.8604 34.6859C51.3973 34.6659 51.3973 34.6659 51.1216 35.1253C50.8422 35.0845 50.8422 35.0845 50.5117 34.965C49.9379 34.77 49.3778 34.6348 48.7913 34.5333C48.8393 34.338 48.8874 34.1426 48.9369 33.9413C49.2607 33.722 49.4565 33.7088 49.8159 33.6885C49.9339 33.6811 50.0519 33.6737 50.1735 33.6661C50.2971 33.6593 50.4207 33.6524 50.5481 33.6453C51.4738 33.5922 52.3862 33.5 53.3063 33.3493C53.1621 33.6424 53.1621 33.6424 53.015 33.9413C53.4956 33.9413 53.9762 33.9413 54.4714 33.9413C54.4714 33.8111 54.4714 33.6809 54.4714 33.5467C55.4545 32.7573 55.4545 32.7573 55.7823 32.7573C55.8784 32.3666 55.9745 31.9759 56.0735 31.5733Z" fill="#919290"/>
<path d="M65.8319 35.52C65.8799 35.52 65.928 35.52 65.9775 35.52C66.0736 36.2363 66.1698 36.9526 66.2688 37.6907C66.3634 37.3671 66.3634 37.3671 66.46 37.037C66.6325 36.4923 66.7825 36.078 67.1427 35.7173C67.2388 35.7173 67.3349 35.7173 67.434 35.7173C67.3736 36.399 67.3063 37.0271 67.1427 37.6783C66.9659 38.4116 66.9099 39.0947 66.8514 39.8613C66.7553 39.8613 66.6591 39.8613 66.5601 39.8613C66.6352 40.0648 66.7103 40.2683 66.7877 40.478C67.0126 41.1935 67.0453 41.6735 66.8514 42.4267C66.551 42.698 66.551 42.698 66.2688 42.8213C66.2688 42.4306 66.2688 42.0399 66.2688 41.6373C66.2192 41.778 66.1697 41.9187 66.1186 42.0636C65.508 43.6985 64.7502 44.9824 63.5015 45.7813C63.3093 45.7813 63.117 45.7813 62.9189 45.7813C62.967 45.586 63.0151 45.3906 63.0646 45.1893C63.0646 45.3196 63.0646 45.4498 63.0646 45.584C63.1787 45.4538 63.2929 45.3235 63.4105 45.1893C63.7928 44.7947 63.7928 44.7947 64.0841 44.7947C64.1232 44.6797 64.1622 44.5647 64.2024 44.4463C64.3776 43.9998 64.5703 43.649 64.8123 43.2653C64.8874 43.1443 64.9625 43.0232 65.0399 42.8984C65.2493 42.624 65.2493 42.624 65.5406 42.624C65.5826 42.51 65.6247 42.3961 65.668 42.2787C65.7669 42.0106 65.8709 41.7456 65.9838 41.4878C66.3288 40.3925 66.2585 38.9983 65.9701 37.8942C65.7138 37.1977 65.4221 36.5619 65.1036 35.9147C65.2959 35.9798 65.4881 36.0449 65.6862 36.112C65.7343 35.9166 65.7823 35.7213 65.8319 35.52Z" fill="#385965"/>
<path d="M39.47 20.128C39.5421 20.3234 39.5421 20.3234 39.6156 20.5227C39.5341 20.4799 39.4526 20.4372 39.3687 20.3932C38.2779 19.88 37.2664 19.8703 36.1201 19.9307C36.1201 20.126 36.1201 20.3214 36.1201 20.5227C36.1201 20.718 36.1201 20.9134 36.1201 21.1147C35.859 21.4037 35.859 21.4037 35.5102 21.6943C35.3899 21.7989 35.2695 21.9034 35.1455 22.0112C35.0346 22.106 34.9236 22.2009 34.8093 22.2987C34.118 22.9231 33.7274 23.7316 33.2732 24.6574C33.2033 24.7907 33.1335 24.924 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8194 23.6497 33.0575 22.6839 33.6441 21.5093C35.1222 19.1375 37.4736 18.6308 39.47 20.128Z" fill="#85AEBF"/>
<path d="M50.8304 45.7813C50.8784 45.7813 50.9265 45.7813 50.976 45.7813C50.98 46.3076 50.9828 46.8338 50.9851 47.36C50.9863 47.5068 50.9876 47.6536 50.9888 47.8048C50.992 48.7929 50.9346 49.7365 50.8304 50.7147C50.9746 50.7798 51.1187 50.8449 51.2673 50.912C51.2673 50.9771 51.2673 51.0422 51.2673 51.1093C50.9306 51.1476 50.5937 51.1843 50.2569 51.2203C49.9755 51.2512 49.9755 51.2512 49.6885 51.2828C49.5366 51.2907 49.3847 51.2986 49.2283 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9515 48.4969 48.937 48.1493C48.5765 47.954 48.5765 47.954 48.2087 47.7547C48.2087 47.6244 48.2087 47.4942 48.2087 47.36C48.5452 47.36 48.8816 47.36 49.2283 47.36C49.2763 48.4019 49.3244 49.4438 49.3739 50.5173C49.5517 49.9595 49.5517 49.9595 49.4558 49.506C49.3428 48.7232 49.3624 47.9577 49.3739 47.1627C49.422 47.2929 49.47 47.4232 49.5196 47.5573C49.9521 47.4271 50.3847 47.2969 50.8304 47.1627C50.8304 46.7068 50.8304 46.251 50.8304 45.7813ZM49.6652 49.5307C49.6652 49.6609 49.6652 49.7912 49.6652 49.9253C49.7613 49.8602 49.8574 49.7951 49.9565 49.728C49.8604 49.6629 49.7642 49.5978 49.6652 49.5307Z" fill="#CECECE"/>
<path d="M53.4519 17.5627C53.8525 17.4887 53.8525 17.4887 54.3258 17.5627C54.875 18.2676 54.9547 18.8686 54.9903 19.8813C54.9639 21.128 54.6593 22.04 54.1802 23.088C54.084 23.088 53.9879 23.088 53.8889 23.088C53.8227 23.2631 53.8227 23.2631 53.7552 23.4418C53.3843 24.3896 53.0421 25.1586 52.4324 25.8507C52.3363 25.8507 52.2402 25.8507 52.1411 25.8507C52.0228 25.5177 52.0228 25.5177 51.9955 25.0613C52.1675 24.8415 52.3405 24.6228 52.5178 24.4108C52.9493 23.7065 53.1068 22.7663 53.3063 21.904C53.4024 21.9691 53.4985 22.0342 53.5976 22.1013C53.6937 21.1245 53.7898 20.1477 53.8889 19.1413C53.985 19.1413 54.0811 19.1413 54.1802 19.1413C54.1802 18.7506 54.1802 18.3599 54.1802 17.9573C53.8918 17.9573 53.6034 17.9573 53.3063 17.9573C53.3544 17.8271 53.4024 17.6969 53.4519 17.5627Z" fill="#D8DADA"/>
<path d="M54.9084 15.984C56.7199 16.6828 56.7199 16.6828 57.3844 17.5627C57.5758 18.1107 57.6125 18.5462 57.53 19.1413C57.2419 19.8813 56.8109 20.4527 56.2192 20.72C56.075 20.72 55.9308 20.72 55.7823 20.72C55.7583 20.5124 55.7583 20.5124 55.7339 20.3007C55.5882 19.1191 55.3794 18.0823 55.054 16.9707C54.9987 16.6437 54.9466 16.3154 54.9084 15.984Z" fill="#5F8B9A"/>
<path d="M46.3153 44.2027C47.2766 44.2027 48.2379 44.2027 49.2282 44.2027C49.2763 44.3329 49.3244 44.4631 49.3739 44.5973C48.4126 44.5973 47.4514 44.5973 46.461 44.5973C46.482 45.0695 46.503 45.5416 46.5247 46.028C46.5341 46.249 46.5341 46.249 46.5437 46.4745C46.568 46.9914 46.5932 47.4864 46.6885 47.989C46.7701 48.4467 46.734 48.8188 46.6885 49.284C46.6737 49.4417 46.6589 49.5994 46.6436 49.7619C46.6314 49.881 46.6192 50 46.6066 50.1227C46.9911 50.1878 47.3756 50.2529 47.7718 50.32C47.785 49.9816 47.785 49.9816 47.7985 49.6363C47.8108 49.3421 47.8231 49.0479 47.8355 48.7537C47.8412 48.6047 47.847 48.4558 47.8529 48.3023C47.9009 47.185 47.9009 47.185 48.0631 46.9653C48.2844 46.9512 48.5061 46.9488 48.7276 46.953C48.8479 46.9548 48.9683 46.9566 49.0923 46.9584C49.1852 46.9607 49.2781 46.963 49.3739 46.9653C49.4345 47.4789 49.4916 47.9924 49.5468 48.507C49.5644 48.6526 49.582 48.7983 49.6 48.9483C49.6441 49.3742 49.6441 49.3742 49.6652 50.1227C49.521 50.318 49.3768 50.5134 49.2282 50.7147C49.2282 49.6076 49.2282 48.5006 49.2282 47.36C48.8918 47.36 48.5554 47.36 48.2087 47.36C48.2848 47.508 48.2848 47.508 48.3623 47.6591C48.5576 48.3545 48.4593 48.9644 48.3726 49.6787C48.3574 49.8163 48.3422 49.9539 48.3265 50.0957C48.2889 50.4339 48.249 50.7717 48.2087 51.1093C47.5358 51.1093 46.863 51.1093 46.1697 51.1093C46.1502 48.7969 46.208 46.5111 46.3153 44.2027ZM49.6652 49.5307C49.7613 49.6609 49.8574 49.7911 49.9565 49.9253C49.8603 49.9253 49.7642 49.9253 49.6652 49.9253C49.6652 49.7951 49.6652 49.6649 49.6652 49.5307Z" fill="#DEDEDD"/>
<path d="M39.0331 32.56C39.6034 32.9464 40.0355 33.3726 40.3439 34.1387C40.3712 34.6813 40.3712 34.6813 40.3439 35.1253C40.1817 35.0643 40.0194 35.0032 39.8523 34.9403C38.7279 34.5944 37.5595 34.5971 36.4114 34.5333C36.5029 33.714 36.6346 33.2692 37.1385 32.7481C37.7451 32.3579 38.383 32.4171 39.0331 32.56Z" fill="#4B7F94"/>
<path d="M51.9955 21.1147C52.1397 21.1147 52.2839 21.1147 52.4324 21.1147C52.5045 21.7984 52.5045 21.7984 52.5781 22.496C52.6261 22.496 52.6742 22.496 52.7237 22.496C52.7568 23.4584 52.7182 24.2208 52.2373 24.9711C51.979 25.2783 51.7709 25.4207 51.4493 25.5793C51.3569 25.6267 51.2646 25.674 51.1694 25.7227C50.2175 26.0819 49.2695 26.0727 48.2906 26.0603C48.1563 26.0594 48.022 26.0586 47.8836 26.0576C47.555 26.0553 47.2264 26.0521 46.8979 26.048C47.2592 25.5584 47.3743 25.6022 47.8725 25.5924C48.0102 25.5875 48.1479 25.5825 48.2898 25.5774C48.5776 25.5706 48.8655 25.5644 49.1534 25.5589C50.0771 25.5243 50.8468 25.3359 51.7042 24.864C51.5119 24.7989 51.3197 24.7338 51.1216 24.6667C50.7619 22.6692 50.7619 22.6692 50.8303 21.904C50.9264 21.7738 51.0226 21.6435 51.1216 21.5093C51.3139 21.5093 51.5061 21.5093 51.7042 21.5093C51.7042 21.9652 51.7042 22.421 51.7042 22.8907C51.8003 22.8907 51.8964 22.8907 51.9955 22.8907C51.9685 22.6343 51.9414 22.3778 51.9136 22.1137C51.8675 21.6766 51.8675 21.6766 51.8498 21.312C51.8979 21.2469 51.946 21.1818 51.9955 21.1147Z" fill="#60403D"/>
<path d="M30.5856 39.4667C30.7298 39.4667 30.874 39.4667 31.0225 39.4667C31.0351 39.6045 31.0477 39.7424 31.0606 39.8845C31.1217 40.42 31.1923 40.9236 31.3138 41.44C31.6254 41.731 31.6254 41.731 32.042 41.8347C32.5751 42.2267 33.0752 42.6369 33.4985 43.2283C33.9213 43.7833 34.4234 44.0713 34.9549 44.4C34.9549 44.6605 34.9549 44.921 34.9549 45.1893C34.2392 44.8955 33.7311 44.3128 33.2072 43.6107C33.1591 43.4804 33.1111 43.3502 33.0615 43.216C32.9654 43.2811 32.8693 43.3462 32.7703 43.4133C32.8639 44.0199 32.8639 44.0199 33.1776 44.195C33.2835 44.2626 33.3894 44.3303 33.4985 44.4C33.7096 44.6307 33.9159 44.8695 34.1175 45.1153C34.2204 45.24 34.3233 45.3646 34.4293 45.493C34.5066 45.5882 34.584 45.6833 34.6637 45.7813C34.6156 45.9767 34.5675 46.172 34.518 46.3733C33.974 46.2751 33.6715 46.2007 33.2072 45.7813C33.2553 45.6511 33.3033 45.5208 33.3528 45.3867C33.2687 45.2765 33.1846 45.1664 33.098 45.0529C32.7696 44.5964 32.479 44.1233 32.1877 43.623C32.0915 43.4584 31.9954 43.2938 31.8964 43.1243C31.7522 42.8766 31.7522 42.8766 31.6051 42.624C31.4111 42.2949 31.2169 41.966 31.0225 41.6373C30.8783 41.9304 30.8783 41.9304 30.7312 42.2293C30.3867 41.5291 30.4241 41.3262 30.4945 40.515C30.5107 40.3189 30.5268 40.1227 30.5435 39.9207C30.5574 39.7709 30.5713 39.621 30.5856 39.4667Z" fill="#102B30"/>
<path d="M59.862 32.7465C60.2412 33.1421 60.4286 33.4842 60.5704 34.1017C60.5764 34.2441 60.5824 34.3866 60.5886 34.5333C59.2612 34.7902 57.9866 34.6693 56.6561 34.5333C57.0633 33.0753 57.0633 33.0753 57.5715 32.7257C58.3009 32.42 59.154 32.2958 59.862 32.7465Z" fill="#4B7F94"/>
<path d="M64.6667 36.704C64.7147 36.8994 64.7628 37.0947 64.8123 37.296C64.3625 37.6442 64.1958 37.6907 63.6472 37.6907C63.5991 37.5604 63.551 37.4302 63.5015 37.296C63.0239 37.8622 62.8999 38.3845 62.7744 39.2115C62.773 39.76 62.8589 39.9432 63.1192 40.3547C63.2454 40.5175 63.3715 40.6803 63.5015 40.848C63.5015 40.9131 63.5015 40.9782 63.5015 41.0453C63.2131 41.0453 62.9247 41.0453 62.6276 41.0453C62.6988 41.2102 62.7699 41.375 62.8433 41.5448C63.095 42.3236 63.1183 42.863 63.1101 43.7093C63.1095 43.9596 63.109 44.2099 63.1084 44.4678C63.0659 45.167 62.9595 45.7218 62.7733 46.3733C62.7252 46.3733 62.6772 46.3733 62.6276 46.3733C62.6327 46.1848 62.6378 45.9963 62.643 45.8021C62.6674 44.2202 62.6628 42.7272 62.1907 41.2427C62.0946 41.1775 61.9984 41.1124 61.8994 41.0453C61.8786 39.3539 61.8786 39.3539 62.045 38.6773C62.1412 38.6773 62.2373 38.6773 62.3363 38.6773C62.3363 38.482 62.3363 38.2866 62.3363 38.0853C62.4325 38.0853 62.5286 38.0853 62.6276 38.0853C62.6276 37.8249 62.6276 37.5644 62.6276 37.296C62.7238 37.296 62.8199 37.296 62.9189 37.296C62.9189 37.1658 62.9189 37.0355 62.9189 36.9013C64.1663 36.4225 64.1663 36.4225 64.6667 36.704Z" fill="#5A8597"/>
<path d="M36.0072 52.0736C36.1468 52.0746 36.2864 52.0757 36.4302 52.0767C36.6562 52.0777 36.6562 52.0777 36.8867 52.0787C37.0453 52.0803 37.2038 52.082 37.3672 52.0837C37.6059 52.085 37.6059 52.085 37.8494 52.0864C38.2439 52.0887 38.6385 52.0919 39.033 52.096C39.1067 52.733 39.1792 53.3703 39.2515 54.0077C39.2723 54.1876 39.2932 54.3676 39.3146 54.553C39.3344 54.7279 39.3541 54.9028 39.3744 55.083C39.3927 55.2432 39.411 55.4033 39.4299 55.5684C39.4714 56.0595 39.4768 56.5354 39.47 57.0293C39.4099 56.8991 39.3498 56.7688 39.2879 56.6347C39.2038 56.5044 39.1197 56.3742 39.033 56.24C38.8408 56.24 38.6485 56.24 38.4504 56.24C38.4626 56.1141 38.4749 55.9882 38.4874 55.8584C38.5023 55.6954 38.5171 55.5323 38.5324 55.3643C38.5476 55.2018 38.5628 55.0392 38.5785 54.8718C38.5843 54.7372 38.5901 54.6026 38.5961 54.464C38.548 54.3989 38.5 54.3338 38.4504 54.2667C38.4745 54.0794 38.4985 53.8922 38.5233 53.6993C38.6325 53.0787 38.6325 53.0787 38.4504 52.4907C38.3378 52.5456 38.3378 52.5456 38.2229 52.6017C37.7427 52.7184 37.3257 52.6026 36.8483 52.4907C36.8003 52.6209 36.7522 52.7511 36.7027 52.8853C36.6546 52.8202 36.6066 52.7551 36.5571 52.688C36.542 52.8427 36.527 52.9973 36.5115 53.1567C36.4114 53.6747 36.4114 53.6747 35.9745 54.0693C35.869 54.4757 35.869 54.4757 35.8288 54.8587C35.9249 54.8587 36.0211 54.8587 36.1201 54.8587C36.0055 55.5316 35.8476 56.1786 35.6832 56.832C35.6351 56.832 35.5871 56.832 35.5375 56.832C35.5333 56.0797 35.5307 55.3273 35.5284 54.575C35.5272 54.3602 35.526 54.1454 35.5247 53.924C35.5243 53.7199 35.5238 53.5158 35.5233 53.3054C35.5225 53.1163 35.5218 52.9272 35.521 52.7324C35.5434 52.1388 35.5691 52.1039 36.0072 52.0736Z" fill="#71CBF7"/>
<path d="M41.8003 16.576C41.608 17.9435 41.4158 19.311 41.2177 20.72C40.3095 20.5149 40.1828 20.4143 39.6156 19.536C39.5676 19.4709 39.5195 19.4058 39.47 19.3387C39.4063 18.796 39.4063 18.796 39.47 18.1547C40.1287 17.2409 40.8327 16.576 41.8003 16.576Z" fill="#638FA1"/>
<path d="M45.2958 21.1147C45.6322 21.1147 45.9687 21.1147 46.3153 21.1147C46.3634 21.2449 46.4114 21.3751 46.4609 21.5093C46.8702 21.6459 46.8702 21.6459 47.3439 21.7313C47.5853 21.7809 47.5853 21.7809 47.8315 21.8315C47.956 21.8555 48.0804 21.8794 48.2087 21.904C48.3742 22.5768 48.335 22.694 48.145 23.3223C48.0822 23.5341 48.0822 23.5341 48.0181 23.7501C47.9683 23.9108 47.9683 23.9108 47.9174 24.0747C47.7732 24.0747 47.629 24.0747 47.4805 24.0747C47.2347 23.5813 47.2347 23.5813 47.0435 23.088C46.9474 23.6741 46.8513 24.2602 46.7522 24.864C46.6561 24.864 46.56 24.864 46.4609 24.864C45.7652 23.0435 45.7652 23.0435 46.024 21.904C45.8798 22.425 45.7356 22.9459 45.5871 23.4827C45.2958 23.088 45.2958 23.088 45.2673 22.6178C45.2707 22.4392 45.2741 22.2607 45.2776 22.0767C45.2802 21.8971 45.2828 21.7175 45.2855 21.5325C45.2889 21.3946 45.2923 21.2567 45.2958 21.1147Z" fill="#886767"/>
<path d="M44.5676 21.1147C44.7117 21.1798 44.8559 21.2449 45.0045 21.312C44.9564 21.8981 44.9084 22.4842 44.8588 23.088C44.955 23.0229 45.0511 22.9578 45.1501 22.8907C45.2463 23.4767 45.3424 24.0628 45.4414 24.6667C45.5376 24.6667 45.6337 24.6667 45.7327 24.6667C45.7267 24.4794 45.7207 24.2922 45.7145 24.0993C45.7327 23.4827 45.7327 23.4827 46.024 23.088C46.1682 23.6741 46.3124 24.2602 46.4609 24.864C47.9022 25.3462 49.3356 25.3698 50.7757 24.8393C51.2564 24.6705 51.4002 24.6751 51.8498 24.864C50.6725 25.6978 49.7266 25.7013 48.409 25.715C48.2293 25.7207 48.0496 25.7265 47.8645 25.7323C46.7917 25.7424 45.7841 25.6789 44.8588 24.864C44.8108 24.6686 44.7627 24.4733 44.7132 24.272C44.6051 24.1438 44.6051 24.1438 44.4947 24.013C44.1881 23.5457 44.1805 23.1048 44.1306 22.496C44.2267 22.496 44.3229 22.496 44.4219 22.496C44.47 22.0402 44.518 21.5843 44.5676 21.1147Z" fill="#DAA9AD"/>
<path d="M50.539 16.7733C50.6201 16.8344 50.7012 16.8954 50.7848 16.9583C51.43 17.36 51.8927 17.3879 52.5781 17.168C53.015 17.168 53.015 17.168 53.2608 17.464C53.3239 17.5617 53.3869 17.6594 53.4519 17.76C52.4867 18.9432 51.697 19.2044 50.4116 19.166C50.2404 19.1633 50.2404 19.1633 50.0657 19.1606C49.7865 19.156 49.5073 19.1489 49.2282 19.1413C49.3243 18.946 49.4205 18.7506 49.5195 18.5493C49.6156 18.5493 49.7118 18.5493 49.8108 18.5493C49.8228 18.4028 49.8348 18.2563 49.8472 18.1053C49.9768 17.4616 50.1727 17.2056 50.539 16.7733Z" fill="#194048"/>
<path d="M44.8589 61.3707C44.9069 61.3707 44.955 61.3707 45.0045 61.3707C45.0015 61.6149 44.9985 61.8591 44.9954 62.1107C44.9947 62.6857 45.0147 63.188 45.1502 63.7387C45.1982 63.6735 45.2463 63.6084 45.2958 63.5413C45.5339 63.5242 45.7725 63.5202 46.011 63.5221C46.155 63.5227 46.2991 63.5233 46.4476 63.524C46.5992 63.5256 46.7508 63.5273 46.907 63.529C47.1353 63.5303 47.1353 63.5303 47.3681 63.5317C47.7454 63.534 48.1227 63.5373 48.5 63.5413C48.5481 63.4111 48.5961 63.2809 48.6457 63.1467C48.5495 62.9513 48.4534 62.7559 48.3544 62.5547C48.2597 62.7012 48.2597 62.7012 48.1632 62.8507C47.9174 63.1467 47.9174 63.1467 47.4805 63.1467C47.4805 62.9513 47.4805 62.7559 47.4805 62.5547C47.4324 62.6849 47.3844 62.8151 47.3348 62.9493C47.1426 62.8842 46.9503 62.8191 46.7523 62.752C46.8003 62.5566 46.8484 62.3613 46.8979 62.16C46.994 62.16 47.0902 62.16 47.1892 62.16C47.2373 61.9646 47.2853 61.7693 47.3348 61.568C47.5989 61.5904 47.8629 61.6156 48.1268 61.642C48.3473 61.6626 48.3473 61.6626 48.5723 61.6836C48.6926 61.7106 48.813 61.7376 48.937 61.7653C49.1188 62.258 49.0755 62.5178 49.028 63.0603C49.0148 63.2193 49.0017 63.3783 48.9882 63.5421C48.937 63.936 48.937 63.936 48.7913 64.1333C48.4806 64.1531 48.1693 64.1591 47.8583 64.1595C47.6688 64.1598 47.4794 64.1601 47.2842 64.1603C47.1851 64.1599 47.0859 64.1595 46.9837 64.1591C46.6807 64.158 46.3777 64.159 46.0747 64.1603C45.7905 64.1599 45.7905 64.1599 45.5006 64.1595C45.3254 64.1593 45.1501 64.1591 44.9695 64.1589C44.5676 64.1333 44.5676 64.1333 44.4219 63.936C44.4114 63.5375 44.4097 63.1384 44.4128 62.7397C44.4141 62.5217 44.4155 62.3037 44.4168 62.0791C44.4185 61.9104 44.4202 61.7418 44.4219 61.568C44.47 61.7634 44.5181 61.9587 44.5676 62.16C44.6637 62.16 44.7598 62.16 44.8589 62.16C44.8108 61.9646 44.7627 61.7693 44.7132 61.568C44.7613 61.5029 44.8094 61.4378 44.8589 61.3707Z" fill="#1A323E"/>
<path d="M37.7222 56.832C37.8183 56.832 37.9145 56.832 38.0135 56.832C38.1096 57.0925 38.2058 57.353 38.3048 57.6213C38.4009 57.4911 38.4971 57.3609 38.5961 57.2267C38.6442 57.2918 38.6922 57.3569 38.7417 57.424C38.8379 57.2938 38.934 57.1635 39.033 57.0293C39.2606 57.239 39.2606 57.239 39.47 57.6213C39.4518 58.3243 39.4518 58.3243 39.3243 59.0027C39.1801 59.1329 39.0359 59.2631 38.8874 59.3973C38.8874 59.2671 38.8874 59.1369 38.8874 59.0027C38.4262 59.3644 38.4262 59.3644 38.1592 59.9893C38.1111 59.5986 38.063 59.2079 38.0135 58.8053C38.0099 58.9597 38.0062 59.1141 38.0025 59.2732C37.9856 59.9683 37.9677 60.6633 37.9498 61.3583C37.9441 61.6014 37.9383 61.8444 37.9324 62.0949C37.9263 62.3257 37.9202 62.5566 37.9139 62.7944C37.9086 63.0083 37.9033 63.2222 37.8978 63.4426C37.8679 63.936 37.8679 63.936 37.7222 64.1333C37.3795 64.1477 37.0365 64.1499 36.6936 64.1457C36.5057 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4993 63.6351 35.5232 63.2824 35.5284 62.7273C35.5297 62.5477 35.5311 62.3682 35.5324 62.1831C35.5341 62.0453 35.5358 61.9074 35.5375 61.7653C35.6337 61.8305 35.7298 61.8956 35.8288 61.9627C35.8258 62.1824 35.8228 62.4022 35.8197 62.6287C35.7904 63.3109 35.7904 63.3109 35.9745 63.7387C36.0657 63.7221 36.157 63.7056 36.251 63.6886C36.4295 63.6584 36.4295 63.6584 36.6117 63.6277C36.7891 63.5968 36.7891 63.5968 36.9701 63.5652C37.2853 63.5413 37.2853 63.5413 37.5766 63.7387C37.5844 63.1918 37.5902 62.6452 37.5948 62.0983C37.5972 61.9433 37.5997 61.7883 37.6022 61.6285C37.6036 61.4043 37.6036 61.4043 37.605 61.1756C37.6065 61.0382 37.6081 60.9008 37.6096 60.7592C37.592 60.3186 37.592 60.3186 37.2853 59.792C37.3814 59.792 37.4775 59.792 37.5766 59.792C37.4804 59.3362 37.3843 58.8803 37.2853 58.4107C37.4295 58.4758 37.5737 58.5409 37.7222 58.608C37.6742 58.4126 37.6261 58.2173 37.5766 58.016C37.6167 57.6196 37.6643 57.2243 37.7222 56.832Z" fill="#4188AA"/>
<path d="M32.3333 33.9413C32.1877 35.4072 32.1877 35.4072 32.042 36.112C31.9459 36.112 31.8498 36.112 31.7507 36.112C30.8994 38.4087 30.4616 40.2244 30.7312 42.8213C30.1668 42.4513 30.1668 42.4513 30.003 42.2293C29.9689 41.5682 29.9766 41.1261 30.176 40.515C30.4033 39.2589 29.956 38.0085 29.6116 36.8397C29.4281 36.1414 29.3799 35.6603 29.4204 34.928C29.6154 35.256 29.8095 35.585 30.003 35.9147C30.0841 36.0327 30.1652 36.1507 30.2488 36.2723C30.5364 36.9218 30.5394 37.5314 30.5856 38.2827C30.8647 37.2995 30.9577 36.3632 31.0225 35.3227C31.1186 35.5831 31.2148 35.8436 31.3138 36.112C31.6567 35.6087 31.7483 35.3799 31.7781 34.6813C31.769 34.5022 31.76 34.3232 31.7507 34.1387C32.042 33.9413 32.042 33.9413 32.3333 33.9413Z" fill="#3E636F"/>
<path d="M43.4024 13.2213C43.9036 13.4803 44.296 13.7474 44.7132 14.208C44.6622 14.3871 44.6111 14.5662 44.5585 14.7507C44.3861 15.3539 44.3861 15.3539 44.5039 15.8113C44.5676 16.1813 44.5676 16.1813 44.431 16.6253C43.9626 17.1639 43.5668 17.0241 42.9655 16.9707C42.9655 16.8404 42.9655 16.7102 42.9655 16.576C43.0616 16.5109 43.1577 16.4458 43.2568 16.3787C43.0165 16.3135 42.7761 16.2484 42.5285 16.1813C42.4 15.0496 42.7469 14.4508 43.2113 13.5682C43.3059 13.3965 43.3059 13.3965 43.4024 13.2213Z" fill="#133942"/>
<path d="M45.2364 52.4683C45.4004 52.4693 45.5644 52.4703 45.7333 52.4714C45.9103 52.472 46.0872 52.4727 46.2695 52.4733C46.4559 52.475 46.6422 52.4766 46.8342 52.4783C47.0211 52.4792 47.208 52.4801 47.4006 52.481C47.8642 52.4834 48.3277 52.4866 48.7913 52.4907C48.8778 52.9562 48.8778 52.9562 48.937 53.4773C48.7185 53.9213 48.7185 53.9213 48.3544 54.2667C47.8082 54.4147 47.8082 54.4147 47.3349 54.464C47.3829 54.3338 47.431 54.2035 47.4805 54.0693C47.0364 53.8698 47.0364 53.8698 46.6066 54.0693C46.5105 53.874 46.4144 53.6786 46.3153 53.4773C46.1711 53.5425 46.027 53.6076 45.8784 53.6747C45.7823 53.4793 45.6861 53.2839 45.5871 53.0827C45.47 53.2455 45.3528 53.4083 45.2321 53.576C44.8589 54.0693 44.8589 54.0693 44.7132 54.0693C44.7071 53.609 44.7073 53.1484 44.7132 52.688C44.8589 52.4907 44.8589 52.4907 45.2364 52.4683Z" fill="#68C7F7"/>
<path d="M56.0735 52.096C56.8426 52.096 57.6116 52.096 58.4039 52.096C58.551 52.6942 58.5569 53.0321 58.5319 53.6523C58.5248 53.8374 58.5178 54.0224 58.5106 54.2131C58.5024 54.4058 58.4942 54.5985 58.4858 54.797C58.4782 54.992 58.4706 55.187 58.4628 55.3879C58.4439 55.8693 58.4242 56.3507 58.4039 56.832C58.3078 56.7669 58.2116 56.7018 58.1126 56.6347C58.1126 55.6579 58.1126 54.6811 58.1126 53.6747C58.0165 53.6096 57.9203 53.5444 57.8213 53.4773C57.9174 53.2169 58.0135 52.9564 58.1126 52.688C57.8723 52.8182 57.632 52.9485 57.3844 53.0827C57.3844 52.9524 57.3844 52.8222 57.3844 52.688C57.2402 52.7857 57.2402 52.7857 57.0931 52.8853C57.0931 53.0807 57.0931 53.2761 57.0931 53.4773C56.9489 53.6076 56.8047 53.7378 56.6561 53.872C56.5709 54.2442 56.5709 54.2442 56.556 54.6737C56.5466 54.8304 56.5372 54.9871 56.5276 55.1485C56.5016 55.9085 56.5016 56.6633 56.5105 57.424C56.3663 57.424 56.2221 57.424 56.0735 57.424C56.0735 55.6658 56.0735 53.9075 56.0735 52.096Z" fill="#73B3D4"/>
<path d="M43.0565 17.4763C43.6622 17.5827 43.8628 17.8687 44.2757 18.4491C45.0457 19.2341 46.0364 19.2162 46.9616 19.2647C47.1423 19.2761 47.1423 19.2761 47.3266 19.2878C47.6206 19.3062 47.9146 19.3226 48.2087 19.3387C47.7628 19.8564 47.6652 19.9307 47.0435 19.9307C47.0435 19.8004 47.0435 19.6702 47.0435 19.536C46.5894 19.6636 46.5894 19.6636 46.4609 20.128C46.5571 20.1931 46.6532 20.2582 46.7522 20.3253C46.1088 20.5604 45.52 20.7024 44.8588 20.5227C44.2534 20.0361 43.7527 19.4186 43.2567 18.7467C43.2567 18.5513 43.2567 18.3559 43.2567 18.1547C43.1606 18.1547 43.0645 18.1547 42.9654 18.1547C42.9174 18.4803 42.8693 18.8059 42.8198 19.1413C42.7717 19.1413 42.7237 19.1413 42.6741 19.1413C42.6187 18.6823 42.5703 18.2217 42.5285 17.76C42.6741 17.5627 42.6741 17.5627 43.0565 17.4763Z" fill="#DEE2E1"/>
<path d="M48.063 7.49867C48.5301 8.13143 48.5234 8.16538 48.6001 8.96634C48.688 9.46136 48.688 9.46136 48.9369 9.86667C49.4115 10.1061 49.8585 10.2509 50.3534 10.3814C51.2586 10.6239 51.9932 11.0544 52.7237 11.84C52.7958 12.0354 52.7958 12.0354 52.8694 12.2347C52.3695 12.1263 52.0045 11.8235 51.5836 11.4523C50.6326 10.8382 49.6532 10.7769 48.6183 10.7793C48.4843 10.7795 48.3502 10.7797 48.2121 10.7799C46.9664 10.809 45.8294 11.0675 44.7542 11.978C44.6445 12.0627 44.5349 12.1474 44.4219 12.2347C44.3258 12.1696 44.2297 12.1044 44.1306 12.0373C45.2807 10.5212 46.6475 10.1739 48.2087 10.064C48.1366 8.79417 48.1366 8.79417 48.063 7.49867Z" fill="#B2CED6"/>
<path d="M52.1412 25.456C52.1412 25.7165 52.1412 25.977 52.1412 26.2453C51.2668 27.0734 50.5815 27.1601 49.5286 27.1333C49.3816 27.1314 49.2345 27.1294 49.083 27.1274C46.1206 27.029 46.1206 27.029 45.1615 25.9223C45.1097 25.8336 45.0579 25.7448 45.0045 25.6533C45.1277 25.6961 45.2508 25.7388 45.3777 25.7828C46.2957 26.0881 47.1178 26.3207 48.0631 26.2453C48.0631 26.1802 48.0631 26.1151 48.0631 26.048C48.3475 26.0121 48.3475 26.0121 48.6377 25.9755C48.8892 25.9422 49.1406 25.9088 49.3921 25.8753C49.5791 25.8521 49.5791 25.8521 49.7699 25.8283C50.5427 25.7236 51.4312 25.1354 52.1412 25.456Z" fill="#959590"/>
<path d="M53.3063 13.2213C53.8287 13.8898 54.2582 14.5455 54.6171 15.392C54.6171 15.6525 54.6171 15.913 54.6171 16.1813C54.3768 16.2464 54.1365 16.3116 53.8889 16.3787C53.937 16.4438 53.985 16.5089 54.0345 16.576C54.0826 16.7062 54.1307 16.8365 54.1802 16.9707C53.6996 16.9707 53.2189 16.9707 52.7237 16.9707C52.7718 16.7753 52.8199 16.5799 52.8694 16.3787C52.7732 16.4438 52.6771 16.5089 52.5781 16.576C52.6261 16.3155 52.6742 16.055 52.7237 15.7867C52.6276 15.7215 52.5315 15.6564 52.4324 15.5893C52.4324 14.208 52.4324 14.208 52.7055 13.7763C53.015 13.4187 53.015 13.4187 53.3063 13.2213Z" fill="#103A41"/>
<path d="M50.221 52.0767C50.4515 52.078 50.6819 52.0804 50.9123 52.0837C51.0297 52.0845 51.1472 52.0854 51.2682 52.0864C51.5592 52.0887 51.8502 52.0922 52.1412 52.096C52.4215 53.0644 52.672 54.0404 52.9058 55.0313C52.9835 55.3602 52.9835 55.3602 53.0628 55.6958C53.1607 56.24 53.1607 56.24 53.015 56.6347C52.6971 56.2039 52.63 55.9483 52.4962 55.3767C52.4599 55.2245 52.4237 55.0724 52.3864 54.9157C52.2957 54.5041 52.2151 54.0923 52.1412 53.6747C51.8528 53.6747 51.5644 53.6747 51.2673 53.6747C51.3634 53.2839 51.4596 52.8932 51.5586 52.4907C51.2702 52.4907 50.9818 52.4907 50.6847 52.4907C50.7328 52.8163 50.7808 53.1419 50.8304 53.4773C50.6862 53.5424 50.542 53.6076 50.3934 53.6747C50.3934 53.5444 50.3934 53.4142 50.3934 53.28C50.2492 53.3777 50.2492 53.3777 50.1021 53.4773C50.1141 53.689 50.1262 53.9006 50.1385 54.1187C50.0961 54.9809 49.9764 55.0973 49.5196 55.648C49.5156 55.093 49.5127 54.538 49.5104 53.983C49.5092 53.8246 49.508 53.6663 49.5067 53.5031C49.5055 53.0998 49.5119 52.6965 49.5196 52.2933C49.6652 52.096 49.6652 52.096 50.221 52.0767Z" fill="#71C9F7"/>
<path d="M44.5676 54.6613C44.6637 54.9218 44.7598 55.1823 44.8589 55.4507C45.1352 55.9143 45.1352 55.9143 45.6053 55.87C45.8126 55.8578 45.8126 55.8578 46.024 55.8453C46.024 55.65 46.024 55.4546 46.024 55.2533C46.2163 55.3185 46.4085 55.3836 46.6066 55.4507C46.6066 55.7111 46.6066 55.9716 46.6066 56.24C46.7027 56.3051 46.7989 56.3702 46.8979 56.4373C46.8498 56.5676 46.8018 56.6978 46.7523 56.832C47.4732 56.832 48.1941 56.832 48.9369 56.832C48.9369 57.353 48.9369 57.8739 48.9369 58.4107C48.8889 58.2804 48.8408 58.1502 48.7913 58.016C48.0703 58.016 47.3494 58.016 46.6066 58.016C46.461 57.6213 46.461 57.6213 46.6066 56.6347C45.9337 56.6347 45.2608 56.6347 44.5676 56.6347C44.5676 55.9835 44.5676 55.3323 44.5676 54.6613Z" fill="#528EAB"/>
<path d="M41.8003 21.312C42.2373 21.5093 42.2373 21.5093 42.5041 22.1638C42.6013 22.4424 42.6973 22.7218 42.7925 23.0017C43.3912 24.6863 43.9876 26.0259 45.1035 27.168C45.2958 27.4293 45.2958 27.4293 45.2958 28.0213C45.5121 28.119 45.5121 28.119 45.7328 28.2187C44.8676 28.3163 44.8676 28.3163 43.985 28.416C44.0811 28.2858 44.1773 28.1555 44.2763 28.0213C44.4686 28.0213 44.6608 28.0213 44.8589 28.0213C44.6372 27.5025 44.4447 27.0655 44.1307 26.64C43.8099 26.5492 43.8099 26.5492 43.457 26.5167C43.338 26.5019 43.219 26.4872 43.0963 26.472C43.0051 26.4623 42.9139 26.4526 42.8198 26.4427C42.7951 26.2328 42.7951 26.2328 42.7698 26.0187C42.6666 25.4115 42.5068 24.9085 42.3101 24.346C41.9348 23.2669 41.7835 22.5171 41.8003 21.312Z" fill="#353833"/>
<path d="M41.509 56.832C41.8983 57.8519 41.9437 58.4504 41.8003 59.5947C41.7042 59.5947 41.608 59.5947 41.509 59.5947C41.3648 59.9854 41.2206 60.3761 41.0721 60.7787C40.9759 60.7135 40.8798 60.6484 40.7808 60.5813C40.6898 60.1743 40.6898 60.1743 40.6351 59.792C40.3948 59.8571 40.1545 59.9222 39.9069 59.9893C39.4692 59.0008 39.4272 58.3461 39.47 57.2267C39.5661 57.4871 39.6622 57.7476 39.7613 58.016C39.8574 57.8858 39.9535 57.7555 40.0526 57.6213C40.8827 57.424 40.8827 57.424 41.2177 57.424C41.3138 57.2286 41.41 57.0333 41.509 56.832Z" fill="#447F9D"/>
<path d="M35.3919 45.3867C35.44 45.3867 35.488 45.3867 35.5375 45.3867C35.5375 46.4937 35.5375 47.6007 35.5375 48.7413C34.3683 48.8946 33.7063 48.5007 32.7703 47.5573C32.5033 47.2435 32.2764 46.9305 32.0421 46.5707C32.1382 46.3102 32.2343 46.0497 32.3333 45.7813C33.0488 45.8523 33.4404 46.1533 33.9918 46.7264C34.2499 46.9889 34.5141 47.184 34.8093 47.36C34.8093 47.6856 34.8093 48.0112 34.8093 48.3467C35.0016 48.3467 35.1938 48.3467 35.3919 48.3467C35.3919 47.3699 35.3919 46.3931 35.3919 45.3867Z" fill="#1C3C3D"/>
<path d="M43.8393 35.52C44.4642 35.52 45.089 35.52 45.7327 35.52C45.7327 40.5342 45.7327 45.5485 45.7327 50.7147C45.4924 50.7147 45.2521 50.7147 45.0045 50.7147C44.9324 50.5193 44.9324 50.5193 44.8589 50.32C45.0511 50.32 45.2434 50.32 45.4415 50.32C45.4415 47.7803 45.4415 45.2406 45.4415 42.624C43.9996 42.624 42.5577 42.624 41.0721 42.624C41.0721 42.5589 41.0721 42.4938 41.0721 42.4267C42.562 42.4267 44.052 42.4267 45.5871 42.4267C45.5871 40.2126 45.5871 37.9985 45.5871 35.7173C45.0103 35.7173 44.4336 35.7173 43.8393 35.7173C43.8393 35.6522 43.8393 35.5871 43.8393 35.52Z" fill="#D1D0D0"/>
<path d="M51.7042 27.6267C52.5937 27.9749 53.4628 28.3559 54.3258 28.8107C53.8151 29.0413 53.6911 28.9582 53.1971 28.7243C52.5774 28.4604 52.0677 28.2942 51.4129 28.416C51.3018 28.5422 51.1906 28.6683 51.0761 28.7983C50.5048 29.3924 49.9314 29.3657 49.2282 29.4027C49.2282 29.7934 49.2282 30.1841 49.2282 30.5867C50.6019 31.5591 52.0802 31.7512 53.5976 31.968C53.5976 32.0331 53.5976 32.0982 53.5976 32.1653C50.1936 32.3174 50.1936 32.3174 49.2282 31.1787C49.0841 31.0484 48.9399 30.9182 48.7913 30.784C48.7435 30.3639 48.7435 30.3639 48.7549 29.8837C48.7571 29.7247 48.7594 29.5657 48.7617 29.4019C48.7913 29.008 48.7913 29.008 48.937 28.8107C49.1544 28.7464 49.3732 28.6902 49.5924 28.638C50.3217 28.45 51.007 28.1663 51.7042 27.824C51.7042 27.7589 51.7042 27.6938 51.7042 27.6267Z" fill="#848783"/>
<path d="M53.5976 38.2827C53.886 38.2827 54.1744 38.2827 54.4715 38.2827C54.7077 38.6027 54.636 38.9576 54.6365 39.3988C54.6366 39.5843 54.6368 39.7697 54.637 39.9608C54.6365 40.1559 54.6359 40.351 54.6353 40.552C54.6359 40.7471 54.6364 40.9422 54.637 41.1432C54.6368 41.3287 54.6367 41.5141 54.6365 41.7052C54.6363 41.8765 54.6361 42.0478 54.636 42.2243C54.6171 42.624 54.6171 42.624 54.4715 42.8213C54.1831 42.8213 53.8947 42.8213 53.5976 42.8213C53.5976 41.3236 53.5976 39.8258 53.5976 38.2827Z" fill="#202020"/>
<path d="M65.8318 41.0453C65.928 41.1105 66.0241 41.1756 66.1231 41.2427C65.7517 42.2118 65.4516 42.7373 64.8123 43.4133C64.6863 43.6389 64.5651 43.8696 64.4482 44.104C64.1383 44.7199 63.8163 45.1625 63.3559 45.584C63.2597 45.584 63.1636 45.584 63.0646 45.584C63.0646 44.7374 63.0646 43.8909 63.0646 43.0187C63.1607 43.1489 63.2568 43.2791 63.3559 43.4133C63.446 43.2831 63.5361 43.1529 63.629 43.0187C63.9384 42.624 63.9384 42.624 64.2297 42.624C64.2297 42.4938 64.2297 42.3635 64.2297 42.2293C64.321 42.1769 64.4122 42.1245 64.5062 42.0705C64.6253 42.0008 64.7443 41.9311 64.8669 41.8593C64.9852 41.7907 65.1035 41.722 65.2254 41.6512C65.5607 41.4549 65.5607 41.4549 65.8318 41.0453Z" fill="#1B292A"/>
<path d="M67.434 32.9547C67.5301 33.0849 67.6262 33.2151 67.7253 33.3493C67.6919 34.7036 67.4262 35.5305 66.7057 36.5067C66.601 36.964 66.5031 37.4245 66.4144 37.888C66.1232 37.6907 66.1232 37.6907 66.0338 37.3561C65.8693 36.0275 65.8609 34.5927 66.2688 33.3493C66.5601 33.9413 66.5601 33.9413 66.5601 34.336C66.6562 34.336 66.7523 34.336 66.8514 34.336C66.9145 34.0491 66.9145 34.0491 66.9788 33.7563C67.1427 33.152 67.1427 33.152 67.434 32.9547Z" fill="#081B25"/>
<path d="M53.4883 18.019C53.5724 18.0638 53.6566 18.1085 53.7432 18.1547C53.5149 18.914 53.1795 19.3973 52.7237 19.9307C52.2594 20.1773 52.2594 20.1773 51.8498 20.3253C51.7056 20.423 51.7056 20.423 51.5585 20.5227C50.6161 20.5923 50.6161 20.5923 50.1021 20.128C50.2463 20.128 50.3904 20.128 50.539 20.128C50.539 19.9978 50.539 19.8675 50.539 19.7333C50.2987 19.6682 50.0584 19.6031 49.8108 19.536C49.8108 19.6662 49.8108 19.7965 49.8108 19.9307C49.119 19.7827 49.119 19.7827 48.7913 19.3387C48.9426 19.3313 49.0939 19.3239 49.2498 19.3163C51.1729 19.2623 51.1729 19.2623 52.8875 18.2294C53.1606 17.9573 53.1606 17.9573 53.4883 18.019Z" fill="#D6D8D6"/>
<path d="M39.7249 21.1147C39.8811 21.2449 40.0373 21.3752 40.1982 21.5093C39.9069 21.7067 39.9069 21.7067 39.4063 21.5217C38.3582 21.1408 37.4168 21.1618 36.4114 21.7067C37.1804 21.7067 37.9494 21.7067 38.7418 21.7067C38.7418 21.7718 38.7418 21.8369 38.7418 21.904C38.4447 22.0043 38.1473 22.1026 37.8497 22.2C37.6841 22.255 37.5185 22.3099 37.3479 22.3665C36.8754 22.489 36.4539 22.5197 35.9745 22.496C35.9745 22.6262 35.9745 22.7565 35.9745 22.8907C35.8123 22.911 35.6501 22.9314 35.4829 22.9523C35.3087 22.9971 35.1345 23.0419 34.955 23.088C34.6643 23.6315 34.6643 23.6315 34.5453 24.0993C34.3724 24.4693 34.3724 24.4693 33.9901 24.6173C33.8759 24.6336 33.7618 24.6499 33.6442 24.6667C33.8678 23.783 34.1697 22.9293 34.8093 22.496C35.1006 22.4881 35.392 22.4874 35.6832 22.496C35.6943 22.3426 35.7054 22.1892 35.7168 22.0312C35.8288 21.5093 35.8288 21.5093 36.1002 21.2403C37.2988 20.611 38.5313 20.3147 39.7249 21.1147Z" fill="#618FA7"/>
<path d="M58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1322 46.5707C59.3244 47.6777 59.5167 48.7847 59.7147 49.9253C59.8109 49.9253 59.907 49.9253 60.006 49.9253C60.006 50.0556 60.006 50.1858 60.006 50.32C60.2494 50.3139 60.2494 50.3139 60.4976 50.3077C61.0256 50.32 61.0256 50.32 61.3168 50.5173C61.3168 49.9964 61.3168 49.4754 61.3168 48.9387C61.6749 49.6663 61.7556 50.2602 61.8994 51.1093C60.8971 51.6567 60.0478 51.4423 58.9865 51.3067C58.9865 49.7438 58.9865 48.1809 58.9865 46.5707Z" fill="#DBDCDE"/>
<path d="M33.2072 36.112C33.6398 36.1771 34.0723 36.2422 34.518 36.3093C34.518 36.3745 34.518 36.4396 34.518 36.5067C33.8692 36.6043 33.8692 36.6043 33.2072 36.704C33.2072 36.5086 33.2072 36.3133 33.2072 36.112ZM32.6246 36.5067C32.8169 36.5718 33.0091 36.6369 33.2072 36.704C33.2254 38.2333 33.2254 38.2333 33.0616 38.6773C33.0288 38.9806 33.0021 39.2851 32.9796 39.59C32.9674 39.7513 32.9552 39.9125 32.9427 40.0787C32.9338 40.2023 32.925 40.326 32.9159 40.4533C32.5569 40.3488 32.3618 40.2891 32.0785 39.96C31.8011 39.2084 31.779 38.513 31.8964 37.6907C32.1054 37.2079 32.325 36.9024 32.6246 36.5067Z" fill="#5D8A9C"/>
<path d="M59.5691 52.096C60.1053 52.0899 60.1053 52.0899 60.6523 52.0837C60.7651 52.0819 60.8778 52.0801 60.9939 52.0782C61.2473 52.0768 61.5006 52.0861 61.7538 52.096C61.8994 52.2933 61.8994 52.2933 61.9188 52.8822C61.9184 53.1275 61.918 53.3727 61.9176 53.6253C61.9182 53.9901 61.9182 53.9901 61.9188 54.3622C61.9023 54.9512 61.8551 55.4716 61.7538 56.0427C61.3823 55.5393 61.4042 55.2742 61.3624 54.575C61.3498 54.384 61.3372 54.1929 61.3242 53.9961C61.3168 53.4773 61.3168 53.4773 61.4625 52.8853C61.1075 52.9387 61.1075 52.9387 60.7343 53.0827C60.5901 53.3757 60.5901 53.3757 60.443 53.6747C60.3949 53.3491 60.3468 53.0235 60.2973 52.688C60.0247 53.4268 59.989 54.0881 59.9969 54.908C59.9989 55.172 59.9989 55.172 60.0009 55.4414C60.0026 55.5747 60.0043 55.708 60.006 55.8453C59.8618 55.8453 59.7177 55.8453 59.5691 55.8453C59.5691 54.6081 59.5691 53.3708 59.5691 52.096Z" fill="#79C2E3"/>
<path d="M48.3543 30.9813C48.3543 31.8279 48.3543 32.6745 48.3543 33.5467C48.066 33.742 48.066 33.742 47.7718 33.9413C47.964 34.0065 48.1563 34.0716 48.3543 34.1387C48.3063 34.2689 48.2582 34.3992 48.2087 34.5333C47.9282 34.6513 47.9282 34.6513 47.5806 34.743C47.467 34.7738 47.3534 34.8046 47.2364 34.8363C47.1247 34.8665 47.013 34.8968 46.8979 34.928C46.7967 34.9725 46.6955 35.017 46.5912 35.0629C46.3153 35.1253 46.3153 35.1253 45.8784 34.7307C45.446 34.6401 45.446 34.6401 44.9772 34.6073C44.7398 34.5852 44.7398 34.5852 44.4976 34.5626C44.3765 34.553 44.2554 34.5433 44.1306 34.5333C44.1306 34.4682 44.1306 34.4031 44.1306 34.336C44.419 34.2709 44.7074 34.2058 45.0045 34.1387C44.9564 34.0084 44.9084 33.8782 44.8588 33.744C45.1376 33.7295 45.1376 33.7295 45.4221 33.7147C45.6652 33.6999 45.9083 33.685 46.1514 33.67C46.274 33.6639 46.3966 33.6578 46.523 33.6515C46.6403 33.6439 46.7576 33.6362 46.8785 33.6284C46.9868 33.6222 47.0952 33.616 47.2067 33.6096C47.5154 33.5754 47.5154 33.5754 47.7718 33.152C47.8301 32.6936 47.8795 32.2329 47.9174 31.7707C47.6771 31.7707 47.4368 31.7707 47.1892 31.7707C48.063 30.9813 48.063 30.9813 48.3543 30.9813Z" fill="#838481"/>
<path d="M33.2072 25.0613C33.2553 25.0613 33.3033 25.0613 33.3529 25.0613C33.3498 25.1747 33.3468 25.2881 33.3436 25.4048C33.3314 25.9234 33.3239 26.4419 33.3165 26.9607C33.3116 27.139 33.3067 27.3173 33.3017 27.501C33.2889 28.6807 33.3907 29.2708 33.9354 30.192C33.9354 30.3222 33.9354 30.4525 33.9354 30.5867C34.3494 30.897 34.3494 30.897 34.8093 30.9813C34.8574 30.786 34.9054 30.5906 34.955 30.3893C35.003 30.5847 35.0511 30.7801 35.1006 30.9813C35.3578 31.1805 35.3578 31.1805 35.6832 31.376C35.9788 31.6302 36.2709 31.8921 36.5571 32.1653C36.5571 32.2305 36.5571 32.2956 36.5571 32.3627C35.3759 32.3034 34.4477 31.7208 33.6316 30.5427C33.3777 30.1079 33.1426 29.6669 32.9159 29.2053C32.8228 29.0181 32.7297 28.8309 32.6337 28.638C32.479 28.2187 32.479 28.2187 32.479 27.6267C32.3348 27.5616 32.1906 27.4964 32.0421 27.4293C32.1862 27.3642 32.3304 27.2991 32.479 27.232C32.5271 27.2971 32.5751 27.3622 32.6246 27.4293C32.6511 27.2473 32.6511 27.2473 32.6781 27.0617C32.7147 26.8224 32.7147 26.8224 32.7521 26.5783C32.7757 26.4204 32.7994 26.2624 32.8238 26.0997C32.9159 25.6533 32.9159 25.6533 33.2072 25.0613Z" fill="#010C0C"/>
<path d="M47.1892 10.8533C47.1021 10.9388 47.0149 11.0243 46.9252 11.1123C46.6112 11.4211 46.6112 11.4211 46.3972 11.7537C46.0404 12.1985 45.6361 12.432 45.1501 12.432C45.1982 13.0181 45.2463 13.6042 45.2958 14.208C44.7132 14.4053 44.7132 14.4053 44.4014 14.1656C44.3 14.0534 44.1987 13.9412 44.0942 13.8257C43.9913 13.714 43.8884 13.6023 43.7824 13.4873C43.7051 13.3995 43.6277 13.3118 43.548 13.2213C43.7021 12.5694 43.855 12.4193 44.2985 12.0597C44.4813 11.9388 44.6652 11.8204 44.8497 11.7043C44.942 11.6437 45.0343 11.583 45.1294 11.5205C45.8575 11.0464 46.3811 10.829 47.1892 10.8533Z" fill="#6691A4"/>
<path d="M58.6952 20.128C58.9355 20.128 59.1758 20.128 59.4234 20.128C59.4234 20.2582 59.4234 20.3885 59.4234 20.5227C59.5826 20.5308 59.7419 20.539 59.9059 20.5473C60.7662 20.6834 61.4605 21.3093 62.1907 21.904C62.2778 21.8063 62.3649 21.7086 62.4547 21.608C62.7733 21.312 62.7733 21.312 63.2102 21.312C64.2135 23.7758 64.2135 23.7758 64.0841 25.0613C63.68 24.7876 63.5882 24.4019 63.3559 23.8773C62.8101 22.8515 62.2912 22.3658 61.4443 21.8547C61.3354 21.7869 61.2265 21.7191 61.1143 21.6492C60.2789 21.1476 59.4642 20.8271 58.5496 20.72C58.5976 20.5246 58.6457 20.3293 58.6952 20.128Z" fill="#4C7889"/>
<path d="M65.1036 37.888C65.2478 37.9531 65.392 38.0182 65.5405 38.0853C65.7219 38.8225 65.7811 39.4916 65.6862 40.256C65.4367 40.8971 65.0931 41.3249 64.6394 41.7113C64.0188 41.8982 63.4062 41.8646 62.7733 41.8347C62.7252 41.5742 62.6771 41.3137 62.6276 41.0453C62.747 41.014 62.8664 40.9828 62.9895 40.9505C63.9449 40.6865 63.9449 40.6865 64.7668 40.0217C65.0178 39.293 65.0635 38.6895 65.1036 37.888Z" fill="#193335"/>
<path d="M62.482 33.744C62.545 33.9272 62.545 33.9272 62.6094 34.114C62.7641 34.5596 62.7641 34.5596 63.0645 34.928C63.2568 34.7978 63.4491 34.6675 63.6471 34.5333C63.6952 34.7938 63.7433 35.0543 63.7928 35.3227C63.8889 35.3227 63.985 35.3227 64.0841 35.3227C64.0841 34.9319 64.0841 34.5412 64.0841 34.1387C64.4638 34.6531 64.4102 35.0214 64.414 35.7227C64.3754 36.112 64.3754 36.112 64.0841 36.704C63.8007 36.805 63.8007 36.805 63.4833 36.8397C63.297 36.86 63.1108 36.8804 62.9189 36.9013C62.9189 37.0316 62.9189 37.1618 62.9189 37.296C62.8228 37.296 62.7266 37.296 62.6276 37.296C62.6276 37.5565 62.6276 37.817 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3363 38.0853C62.2883 38.2807 62.2402 38.4761 62.1907 38.6773C62.3194 37.183 62.3194 37.183 62.4182 36.6917C62.574 35.7573 62.4766 34.8645 62.3363 33.9413C62.3844 33.8762 62.4324 33.8111 62.482 33.744Z" fill="#5C8395"/>
<path d="M41.0721 24.0747C41.4635 24.531 41.4635 24.531 41.6547 25.0613C41.6547 25.2567 41.6547 25.452 41.6547 25.6533C41.5105 25.6533 41.3663 25.6533 41.2177 25.6533C41.1697 25.7836 41.1216 25.9138 41.0721 26.048C40.6351 25.308 40.6351 25.308 40.6351 24.864C39.7003 25.2066 38.8673 25.6241 38.0135 26.2453C37.9174 25.9848 37.8213 25.7244 37.7222 25.456C37.9588 25.2626 38.1955 25.0694 38.4323 24.8763C38.564 24.7687 38.6958 24.6611 38.8316 24.5503C39.5643 23.9628 40.2279 23.9209 41.0721 24.0747Z" fill="#568BA3"/>
<path d="M42.8198 44.992C43.1563 44.992 43.4927 44.992 43.8393 44.992C43.8393 46.5549 43.8393 48.1178 43.8393 49.728C43.6952 49.728 43.551 49.728 43.4024 49.728C43.3543 49.1419 43.3063 48.5558 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.2396 42.8198 46.1326 42.8198 44.992Z" fill="#040303"/>
<path d="M42.3829 17.9573C42.479 17.9573 42.5751 17.9573 42.6741 17.9573C42.7222 18.2829 42.7703 18.6085 42.8198 18.944C42.8679 18.944 42.9159 18.944 42.9654 18.944C43.11 20.0702 43.1263 21.1569 43.1111 22.2987C43.015 22.2987 42.9188 22.2987 42.8198 22.2987C42.8198 22.4289 42.8198 22.5591 42.8198 22.6933C42.7237 22.6933 42.6275 22.6933 42.5285 22.6933C41.9664 21.432 41.8017 20.4155 41.9459 18.944C42.1462 18.315 42.1462 18.315 42.3829 17.9573Z" fill="#DDE0E1"/>
<path d="M36.5571 30.784C36.8454 30.9142 37.1338 31.0445 37.4309 31.1787C37.3829 31.5694 37.3348 31.9601 37.2853 32.3627C37.5256 32.1673 37.7659 31.9719 38.0135 31.7707C38.0616 31.9009 38.1096 32.0311 38.1592 32.1653C38.5349 32.3017 38.5349 32.3017 38.9693 32.3873C39.1167 32.4204 39.2641 32.4535 39.4159 32.4875C39.5869 32.5234 39.5869 32.5234 39.7613 32.56C39.8093 32.4298 39.8574 32.2995 39.9069 32.1653C40.4382 32.9316 40.5747 33.4898 40.6351 34.5333C40.4909 34.631 40.4909 34.631 40.3438 34.7307C40.2898 34.5516 40.2357 34.3725 40.18 34.188C39.8483 33.4091 39.6362 33.1368 39.033 32.7573C38.2869 32.6252 37.6531 32.6157 36.9667 33.0533C36.8796 33.151 36.7925 33.2487 36.7027 33.3493C36.6546 33.154 36.6066 32.9586 36.5571 32.7573C36.6051 32.6271 36.6532 32.4968 36.7027 32.3627C36.3182 32.0371 35.9337 31.7115 35.5375 31.376C36.1201 31.1787 36.1201 31.1787 36.5571 31.1787C36.5571 31.0484 36.5571 30.9182 36.5571 30.784Z" fill="#09343B"/>
<path d="M64.0841 23.2853C64.4482 23.5759 64.4482 23.5759 64.8123 24.0747C64.8552 24.8054 64.8299 25.4625 64.7839 26.1887C64.75 27.0574 64.7428 27.3174 65.1764 28.0159C65.2966 28.148 65.4167 28.28 65.5405 28.416C65.5405 28.4811 65.5405 28.5462 65.5405 28.6133C65.4084 28.6662 65.2762 28.7192 65.14 28.7737C64.7082 28.9874 64.4312 29.2021 64.0841 29.6C64.1081 29.4169 64.1321 29.2337 64.1569 29.045C64.2572 28.1783 64.2078 27.3758 64.1569 26.5043C64.1434 26.2716 64.1299 26.0388 64.1159 25.799C64.1054 25.6207 64.0949 25.4424 64.0841 25.2587C63.988 25.2587 63.8918 25.2587 63.7928 25.2587C63.8889 24.6075 63.985 23.9563 64.0841 23.2853Z" fill="#09272A"/>
<path d="M50.6847 21.7067C50.7327 22.1625 50.7808 22.6183 50.8303 23.088C50.8784 23.088 50.9265 23.088 50.976 23.088C50.976 23.609 50.976 24.1299 50.976 24.6667C50.8318 24.6667 50.6876 24.6667 50.539 24.6667C50.2987 23.8852 50.0584 23.1038 49.8108 22.2987C49.6186 22.8847 49.4263 23.4708 49.2282 24.0747C49.1321 24.0747 49.036 24.0747 48.9369 24.0747C48.7927 23.4235 48.6486 22.7723 48.5 22.1013C49.2637 21.7564 49.8797 21.6684 50.6847 21.7067Z" fill="#A79F9B"/>
<path d="M61.8425 19.8867C62.3233 20.2199 62.6782 20.6053 63.0646 21.1147C62.8243 21.4403 62.5839 21.7659 62.3364 22.1013C61.9035 21.8794 61.5594 21.6627 61.1712 21.312C61.1712 21.1818 61.1712 21.0515 61.1712 20.9173C61.2673 20.9173 61.3634 20.9173 61.4625 20.9173C61.5105 20.6569 61.5586 20.3964 61.6081 20.128C60.1572 19.6783 58.7828 19.8848 57.3844 20.5227C58.6072 18.8132 60.3097 19.0396 61.8425 19.8867Z" fill="#6791A3"/>
<path d="M58.9865 19.1413C61.9109 18.9776 61.9109 18.9776 63.1221 20.3161C63.8343 21.2078 64.4484 22.1716 64.6667 23.4827C64.6064 23.929 64.6064 23.929 64.521 24.272C64.4249 24.0115 64.3288 23.751 64.2298 23.4827C64.0856 23.5804 64.0856 23.5804 63.9385 23.68C63.8855 23.5205 63.8326 23.361 63.778 23.1967C63.1784 21.4698 62.7624 20.6067 61.4352 19.8813C60.6257 19.5077 59.8379 19.3833 58.9865 19.3387C58.9865 19.2736 58.9865 19.2084 58.9865 19.1413Z" fill="#174349"/>
<path d="M45.7327 35.52C45.8289 35.52 45.925 35.52 46.024 35.52C46.024 35.7805 46.024 36.041 46.024 36.3093C46.2643 36.2442 46.5046 36.1791 46.7522 36.112C46.682 36.3065 46.682 36.3065 46.6104 36.5049C46.4249 37.242 46.4095 37.9358 46.4006 38.7059C46.3978 38.8578 46.395 39.0097 46.3921 39.1662C46.3834 39.6487 46.3767 40.1311 46.3699 40.6137C46.3644 40.9419 46.3587 41.2702 46.3529 41.5984C46.3389 42.4007 46.3267 43.203 46.3153 44.0053C46.2672 44.0053 46.2192 44.0053 46.1697 44.0053C46.1697 41.5308 46.1697 39.0562 46.1697 36.5067C46.0735 36.5067 45.9774 36.5067 45.8784 36.5067C45.8784 40.2836 45.8784 44.0606 45.8784 47.952C45.9745 47.952 46.0706 47.952 46.1697 47.952C46.1697 48.0822 46.1697 48.2125 46.1697 48.3467C46.0255 48.3467 45.8813 48.3467 45.7327 48.3467C45.7327 44.1139 45.7327 39.8811 45.7327 35.52Z" fill="#222222"/>
<path d="M48.3544 29.7973C48.4505 29.7973 48.5466 29.7973 48.6457 29.7973C48.6727 29.9479 48.6997 30.0985 48.7276 30.2537C49.0294 31.0181 49.3627 31.0929 49.9565 31.376C49.5809 31.5577 49.433 31.6099 49.0621 31.3806C48.9728 31.314 48.8834 31.2473 48.7913 31.1787C48.7795 31.5321 48.7711 31.8857 48.764 32.2393C48.7589 32.4362 48.7539 32.6331 48.7486 32.836C48.7627 33.0054 48.7768 33.1748 48.7913 33.3493C49.3211 33.8278 49.6444 33.8203 50.2751 33.8673C50.553 33.8895 50.553 33.8895 50.8366 33.912C50.9787 33.9217 51.1209 33.9314 51.2673 33.9413C51.2673 34.0065 51.2673 34.0716 51.2673 34.1387C51.1025 34.1341 50.9376 34.1295 50.7678 34.1248C50.552 34.1211 50.3362 34.1175 50.1203 34.114C49.9573 34.109 49.9573 34.109 49.7909 34.104C49.5062 34.1005 49.2213 34.1183 48.937 34.1387C48.8408 34.2689 48.7447 34.3991 48.6457 34.5333C48.3913 33.778 48.3036 33.1274 48.2634 32.301C48.2525 32.0901 48.2416 31.8792 48.2304 31.662C48.2232 31.5025 48.2161 31.343 48.2087 31.1787C48.0555 31.2723 47.9023 31.3659 47.7445 31.4623C47.0389 31.8934 46.3847 31.9929 45.6144 31.9803C45.4012 31.9777 45.4012 31.9777 45.1837 31.9749C45.0229 31.9715 45.0229 31.9715 44.8589 31.968C44.8589 31.9029 44.8589 31.8378 44.8589 31.7707C44.9448 31.7488 45.0308 31.727 45.1193 31.7045C45.5091 31.6046 45.8986 31.5027 46.288 31.4007C46.4233 31.3663 46.5586 31.332 46.6979 31.2966C46.828 31.2623 46.958 31.2279 47.0919 31.1925C47.2117 31.1615 47.3314 31.1305 47.4548 31.0986C47.8107 30.9913 47.8107 30.9913 48.2087 30.5867C48.3142 30.1803 48.3142 30.1803 48.3544 29.7973Z" fill="#373836"/>
<path d="M34.9549 19.9307C35.1472 20.0609 35.3394 20.1911 35.5375 20.3253C35.3555 20.7077 35.3555 20.7077 35.1006 21.1147C35.0045 21.135 34.9083 21.1554 34.8093 21.1763C34.4495 21.292 34.4495 21.292 34.2631 22.015C34.203 22.2388 34.143 22.4627 34.0811 22.6933C33.9849 22.6933 33.8888 22.6933 33.7898 22.6933C33.8224 22.8063 33.8551 22.9192 33.8888 23.0356C33.9354 23.4827 33.9354 23.4827 33.7636 23.9051C33.6414 24.1111 33.6414 24.1111 33.5167 24.3213C33.4359 24.4607 33.3552 24.6001 33.272 24.7437C33.2026 24.8485 33.1331 24.9534 33.0615 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.82 23.6576 33.0511 22.6724 33.6441 21.5093C34.0549 20.9342 34.4894 20.4226 34.9549 19.9307Z" fill="#598698"/>
<path d="M45.9785 17.5257C46.1551 17.5337 46.1551 17.5337 46.3353 17.5418C46.4248 17.5487 46.5144 17.5556 46.6066 17.5627C46.6547 17.758 46.7028 17.9534 46.7523 18.1547C46.6562 18.1547 46.56 18.1547 46.461 18.1547C46.7414 18.5935 46.7414 18.5935 47.1892 18.7467C47.1892 18.8769 47.1892 19.0071 47.1892 19.1413C47.3815 19.2064 47.5737 19.2716 47.7718 19.3387C46.5167 19.3992 45.451 19.4168 44.2763 18.7467C44.3724 18.6815 44.4686 18.6164 44.5676 18.5493C44.6157 18.354 44.6637 18.1586 44.7132 17.9573C44.7613 18.0224 44.8094 18.0876 44.8589 18.1547C44.9169 18.0577 44.9749 17.9608 45.0347 17.861C45.3704 17.4774 45.5463 17.5002 45.9785 17.5257Z" fill="#214C55"/>
<path d="M41.509 28.6133C41.5571 28.8087 41.6051 29.0041 41.6546 29.2053C41.4458 29.6517 41.4458 29.6517 41.154 30.1303C41.058 30.2898 40.9621 30.4493 40.8633 30.6137C40.7503 30.7957 40.7503 30.7957 40.6351 30.9813C41.4282 31.079 41.4282 31.079 42.2372 31.1787C42.2372 31.2438 42.2372 31.3089 42.2372 31.376C41.5147 31.6371 40.7937 31.5909 40.0525 31.5733C40.1697 31.7687 40.2868 31.9641 40.4076 32.1653C40.8284 32.9529 40.8891 33.5729 40.9264 34.5333C40.7822 34.5333 40.638 34.5333 40.4895 34.5333C40.4775 34.3298 40.4654 34.1263 40.4531 33.9167C40.3289 33.0475 40.1483 32.6616 39.7613 31.968C39.3287 32.0331 38.8961 32.0982 38.4504 32.1653C38.696 31.9435 38.9424 31.7231 39.1912 31.5078C40.1242 30.6902 40.828 29.8094 41.509 28.6133Z" fill="#151A1B"/>
<path d="M31.5414 28.9957C31.7066 28.9997 31.8718 29.0038 32.042 29.008C32.0901 29.1382 32.1382 29.2685 32.1877 29.4027C32.0465 29.4596 31.9053 29.5166 31.7598 29.5753C31.2983 29.7267 31.2983 29.7267 31.1682 30.192C31.4085 30.2571 31.6488 30.3222 31.8964 30.3893C31.7657 30.4626 31.7657 30.4626 31.6324 30.5373C31.2721 30.8163 31.105 31.1097 30.8769 31.5733C30.6846 31.5082 30.4924 31.4431 30.2943 31.376C30.2943 31.5062 30.2943 31.6365 30.2943 31.7707C30.102 31.7707 29.9098 31.7707 29.7117 31.7707C29.7117 32.1614 29.7117 32.5521 29.7117 32.9547C29.6636 32.9547 29.6156 32.9547 29.5661 32.9547C29.5044 31.744 29.5592 31.1633 30.1486 30.192C30.3858 29.8557 30.6275 29.525 30.8769 29.2053C31.0225 29.008 31.0225 29.008 31.5414 28.9957Z" fill="#58889A"/>
<path d="M48.0631 38.6773C48.1111 38.6773 48.1592 38.6773 48.2087 38.6773C48.2087 40.4356 48.2087 42.1938 48.2087 44.0053C47.5839 44.0053 46.9591 44.0053 46.3153 44.0053C46.3634 43.4844 46.4114 42.9634 46.461 42.4267C46.9896 42.4267 47.5183 42.4267 48.0631 42.4267C48.0631 41.1894 48.0631 39.9521 48.0631 38.6773Z" fill="#D2D2D2"/>
<path d="M59.8604 30.784C59.9985 30.8166 60.1367 30.8491 60.2791 30.8827C60.7054 30.9917 60.7054 30.9917 61.0255 30.9813C61.0255 31.1116 61.0255 31.2418 61.0255 31.376C60.9294 31.5062 60.8333 31.6365 60.7342 31.7707C60.5386 32.098 60.3443 32.4268 60.1517 32.7573C60.2958 32.8224 60.44 32.8876 60.5886 32.9547C60.5405 33.15 60.4925 33.3454 60.4429 33.5467C60.3318 33.4164 60.2207 33.2862 60.1061 33.152C59.3565 32.4677 58.4194 32.6663 57.5647 32.8383C57.2209 32.9107 57.2209 32.9107 57.0567 33.3C56.9401 33.7739 56.8624 34.2382 56.8018 34.7307C56.6576 34.7958 56.5134 34.8609 56.3649 34.928C56.4235 33.8153 56.6802 33.3348 57.2387 32.56C57.7437 32.3319 58.1915 32.2979 58.7225 32.2517C58.9078 32.2351 59.0931 32.2186 59.284 32.2016C59.4262 32.1896 59.5683 32.1776 59.7147 32.1653C59.5705 32.0351 59.4263 31.9048 59.2778 31.7707C59.2778 31.6404 59.2778 31.5102 59.2778 31.376C59.47 31.3109 59.6623 31.2458 59.8604 31.1787C59.8604 31.0484 59.8604 30.9182 59.8604 30.784Z" fill="#0C363F"/>
<path d="M53.3063 17.9573C53.5947 17.9573 53.8831 17.9573 54.1802 17.9573C54.1802 18.3481 54.1802 18.7388 54.1802 19.1413C54.084 19.1413 53.9879 19.1413 53.8889 19.1413C53.8923 19.282 53.8956 19.4227 53.8991 19.5676C53.9148 20.697 53.8773 21.6274 53.5976 22.6933C53.5495 22.6933 53.5015 22.6933 53.4519 22.6933C53.448 22.3727 53.4452 22.052 53.4428 21.7313C53.4411 21.5528 53.4395 21.3742 53.4377 21.1902C53.4519 20.72 53.4519 20.72 53.5976 20.3253C53.5015 20.3253 53.4053 20.3253 53.3063 20.3253C53.3243 20.5451 53.3243 20.5451 53.3427 20.7693C53.2959 21.4662 53.1093 21.6606 52.7237 22.1013C52.6847 21.91 52.6456 21.7188 52.6054 21.5217C52.5483 21.3222 52.4912 21.1228 52.4324 20.9173C52.2882 20.8522 52.144 20.7871 51.9955 20.72C52.085 20.6506 52.1746 20.5811 52.2669 20.5096C53.074 19.8415 53.4694 19.3913 53.7432 18.1547C53.599 18.0895 53.4549 18.0244 53.3063 17.9573Z" fill="#322C2A"/>
<path d="M32.479 27.6267C32.516 27.7315 32.5529 27.8363 32.591 27.9442C32.9068 28.8295 32.9068 28.8295 33.3164 29.637C33.5537 30.103 33.5325 30.4278 33.4985 30.9813C33.4024 30.9813 33.3062 30.9813 33.2072 30.9813C33.1685 30.8719 33.1298 30.7626 33.09 30.6499C33.0386 30.5069 32.9871 30.364 32.9341 30.2167C32.8834 30.0747 32.8327 29.9328 32.7805 29.7865C32.6296 29.3728 32.6296 29.3728 32.3333 29.008C31.6578 28.9379 31.1481 29.073 30.6129 29.637C30.2828 30.1973 30.2828 30.1973 29.9757 30.8457C29.8886 31.0207 29.8015 31.1957 29.7117 31.376C29.6156 31.376 29.5194 31.376 29.4204 31.376C29.6216 29.8395 30.736 28.7926 31.5886 27.8733C31.8964 27.6267 31.8964 27.6267 32.479 27.6267Z" fill="#0D2C2E"/>
<path d="M56.0736 30.192C56.2658 30.2571 56.4581 30.3222 56.6561 30.3893C56.6561 30.5196 56.6561 30.6498 56.6561 30.784C56.7523 30.8328 56.8484 30.8817 56.9474 30.932C57.4956 31.2415 58.021 31.602 58.5495 31.968C58.0196 32.157 57.4906 32.2636 56.9474 32.3627C56.5687 33.7057 56.5687 33.7057 56.5105 35.1253C56.2702 35.0602 56.0299 34.9951 55.7823 34.928C55.8784 34.407 55.9745 33.8861 56.0736 33.3493C55.9384 33.4511 55.8032 33.5528 55.6639 33.6577C55.1997 33.9413 55.1997 33.9413 54.7628 33.744C54.8716 33.67 54.9805 33.596 55.0927 33.5197C56.1666 32.7854 56.1666 32.7854 56.9474 31.5733C56.611 31.5733 56.2746 31.5733 55.9279 31.5733C55.9279 31.5082 55.9279 31.4431 55.9279 31.376C56.1682 31.3109 56.4086 31.2458 56.6561 31.1787C56.512 31.0444 56.512 31.0444 56.3649 30.9073C56.2687 30.8015 56.1726 30.6957 56.0736 30.5867C56.0736 30.4564 56.0736 30.3262 56.0736 30.192Z" fill="#081011"/>
<path d="M35.5375 45.3867C36.1623 45.3867 36.7872 45.3867 37.4309 45.3867C37.479 46.5588 37.527 47.731 37.5766 48.9387C37.7688 49.0689 37.9611 49.1991 38.1591 49.3333C38.1111 49.4636 38.063 49.5938 38.0135 49.728C37.7404 49.6787 37.7404 49.6787 37.4309 49.5307C37.0534 48.8202 37.1062 48.0495 37.1214 47.212C37.1227 47.0744 37.124 46.9368 37.1254 46.795C37.1288 46.4571 37.134 46.1192 37.1396 45.7813C36.659 45.7813 36.1784 45.7813 35.6832 45.7813C35.6997 46.3653 35.7182 46.9489 35.7378 47.5327C35.7423 47.6988 35.7468 47.8649 35.7514 48.036C35.7571 48.195 35.7627 48.354 35.7685 48.5178C35.7731 48.6645 35.7777 48.8113 35.7824 48.9625C35.8076 49.3807 35.8076 49.3807 36.1201 49.728C36.0655 50.3447 36.0655 50.3447 35.9745 50.912C35.7651 50.7147 35.7651 50.7147 35.5375 50.32C35.3896 49.1777 35.3915 48.118 35.4556 46.9653C35.4632 46.8124 35.4708 46.6596 35.4786 46.5021C35.4973 46.1302 35.5173 45.7584 35.5375 45.3867Z" fill="#C5C5C5"/>
<path d="M49.8108 19.536C50.0511 19.6011 50.2915 19.6662 50.5391 19.7333C50.5391 19.9287 50.5391 20.124 50.5391 20.3253C51.3141 20.3837 51.3141 20.3837 51.9955 19.9307C52.3141 20.0047 52.3141 20.0047 52.5781 20.128C50.8781 21.3646 49.6584 21.5583 47.7718 21.312C47.7718 21.2469 47.7718 21.1818 47.7718 21.1147C47.8613 21.1119 47.9509 21.1091 48.0432 21.1062C48.4031 21.0774 48.7327 21.0371 49.0826 20.9173C49.3726 20.4388 49.3726 20.4388 49.5195 19.9307C49.6157 19.9307 49.7118 19.9307 49.8108 19.9307C49.8108 19.8004 49.8108 19.6702 49.8108 19.536Z" fill="#9D9D9C"/>
<path d="M40.9264 55.056C41.2213 55.4374 41.4247 55.7726 41.6547 56.24C41.6066 56.3051 41.5585 56.3702 41.509 56.4373C41.6532 56.5676 41.7974 56.6978 41.946 56.832C41.946 57.0274 41.946 57.2227 41.946 57.424C41.8498 57.424 41.7537 57.424 41.6547 57.424C41.6066 57.2938 41.5585 57.1635 41.509 57.0293C41.461 57.3549 41.4129 57.6805 41.3634 58.016C41.2673 57.9509 41.1711 57.8858 41.0721 57.8187C41.0721 57.6884 41.0721 57.5582 41.0721 57.424C40.988 57.4932 40.9039 57.5624 40.8172 57.6337C40.4374 57.8481 40.2864 57.805 39.9069 57.6213C39.9493 56.4432 40.348 55.8661 40.9264 55.056Z" fill="#4791B2"/>
<path d="M45.5643 52.0698C45.664 52.0696 45.7637 52.0694 45.8664 52.0692C46.0774 52.0691 46.2885 52.0695 46.4996 52.0703C46.8237 52.0713 47.1478 52.0703 47.472 52.069C47.6766 52.0692 47.8812 52.0694 48.0858 52.0698C48.2733 52.07 48.4608 52.0702 48.6539 52.0705C49.0826 52.096 49.0826 52.096 49.2282 52.2933C49.248 53.0163 49.2522 53.5772 49.0826 54.2667C48.8423 54.2667 48.602 54.2667 48.3544 54.2667C48.4024 54.1364 48.4505 54.0062 48.5 53.872C48.5961 53.872 48.6923 53.872 48.7913 53.872C48.7913 53.4813 48.7913 53.0906 48.7913 52.688C47.4936 52.688 46.1959 52.688 44.8589 52.688C44.8108 53.1438 44.7627 53.5997 44.7132 54.0693C44.569 54.167 44.569 54.167 44.4219 54.2667C44.418 53.9419 44.4152 53.6171 44.4128 53.2923C44.4111 53.1115 44.4095 52.9306 44.4077 52.7443C44.4377 51.7931 44.9779 52.0705 45.5643 52.0698Z" fill="#81C2E6"/>
<path d="M35.6832 52.096C36.7886 52.096 37.8941 52.096 39.033 52.096C39.1051 52.7269 39.1772 53.3577 39.2515 54.0077C39.2743 54.2047 39.2971 54.4018 39.3206 54.6048C39.3384 54.7626 39.3561 54.9204 39.3744 55.083C39.3927 55.2432 39.411 55.4033 39.4298 55.5684C39.4714 56.0595 39.4768 56.5354 39.47 57.0293C39.4099 56.8991 39.3498 56.7689 39.2879 56.6347C39.2038 56.5044 39.1197 56.3742 39.033 56.24C38.8408 56.24 38.6485 56.24 38.4504 56.24C38.4626 56.1141 38.4748 55.9882 38.4874 55.8584C38.5022 55.6954 38.5171 55.5323 38.5324 55.3643C38.5476 55.2018 38.5628 55.0393 38.5784 54.8718C38.5843 54.7372 38.5901 54.6027 38.5961 54.464C38.548 54.3989 38.5 54.3338 38.4504 54.2667C38.5466 53.6155 38.6427 52.9643 38.7417 52.2933C37.7324 52.2933 36.7231 52.2933 35.6832 52.2933C35.6832 52.2282 35.6832 52.1631 35.6832 52.096Z" fill="#6BB4D5"/>
<path d="M53.3063 21.904C53.4985 22.0342 53.6908 22.1645 53.8889 22.2987C53.985 22.1684 54.0811 22.0382 54.1802 21.904C54.3244 21.9691 54.4685 22.0342 54.6171 22.1013C54.4168 22.5947 54.4168 22.5947 54.1802 23.088C54.084 23.088 53.9879 23.088 53.8889 23.088C53.8448 23.2048 53.8006 23.3215 53.7552 23.4418C53.3843 24.3896 53.0421 25.1586 52.4324 25.8507C52.3363 25.8507 52.2402 25.8507 52.1411 25.8507C52.0228 25.5177 52.0228 25.5177 51.9955 25.0613C52.1675 24.8415 52.3405 24.6228 52.5178 24.4108C52.9493 23.7065 53.1068 22.7663 53.3063 21.904Z" fill="#D3D3D0"/>
<path d="M29.2748 34.7307C29.3709 34.7958 29.467 34.8609 29.5661 34.928C29.611 35.2872 29.611 35.2872 29.6298 35.742C29.687 36.6226 29.8897 37.2713 30.1486 38.0853C30.5305 40.078 30.5305 40.078 30.1486 41.0453C30.1137 41.5115 30.1137 41.5115 30.1304 41.9827C30.1331 42.1404 30.1357 42.2981 30.1384 42.4606C30.1435 42.6392 30.1435 42.6392 30.1486 42.8213C30.0044 42.7562 29.8603 42.6911 29.7117 42.624C29.7185 42.423 29.7252 42.2221 29.7322 42.015C29.7723 40.2282 29.6626 38.6287 29.3236 36.8972C29.1721 36.1056 29.0923 35.5207 29.2748 34.7307Z" fill="#0D2C31"/>
<path d="M39.0331 32.56C39.5991 32.9435 40.0429 33.3711 40.3439 34.1387C40.2984 34.5827 40.2984 34.5827 40.1982 34.928C39.6156 33.7933 39.6156 33.7933 39.6156 33.3493C39.2792 33.2842 38.9428 33.2191 38.5961 33.152C38.7403 33.3474 38.8845 33.5427 39.0331 33.744C38.625 33.9283 38.3552 33.9736 37.9316 33.9783C37.7601 33.9825 37.7601 33.9825 37.5851 33.9868C37.2853 33.9413 37.2853 33.9413 36.994 33.5467C36.994 33.3513 36.994 33.1559 36.994 32.9547C37.6445 32.3671 38.2702 32.4388 39.0331 32.56Z" fill="#56869D"/>
<path d="M44.5676 28.2187C45.4586 28.175 46.1865 28.2409 47.0435 28.6133C47.2298 28.6459 47.416 28.6785 47.6079 28.712C47.7581 28.7446 47.9083 28.7771 48.0631 28.8107C48.2972 29.445 48.2171 30.0807 48.2087 30.784C47.2766 31.3912 47.2766 31.3912 46.8342 31.3143C46.7591 31.2696 46.684 31.2248 46.6066 31.1787C47.2984 30.5867 47.2984 30.5867 47.6261 30.5867C47.6261 30.196 47.6261 29.8052 47.6261 29.4027C47.5155 29.3788 47.405 29.3549 47.291 29.3302C47.1463 29.2971 47.0015 29.2641 46.8524 29.23C46.7088 29.198 46.5651 29.1659 46.4172 29.1329C46.024 29.008 46.024 29.008 45.5871 28.6133C45.2486 28.5356 44.9087 28.4683 44.5676 28.416C44.5676 28.3509 44.5676 28.2858 44.5676 28.2187Z" fill="#B0B0B0"/>
<path d="M49.6651 21.904C50.0275 22.5586 50.179 22.8899 50.3479 23.6307C50.3845 23.7884 50.4211 23.9461 50.4588 24.1086C50.4853 24.2276 50.5117 24.3467 50.539 24.4693C50.4429 24.5996 50.3468 24.7298 50.2477 24.864C50.1516 24.4733 50.0555 24.0826 49.9564 23.68C49.8122 23.973 49.8122 23.973 49.6651 24.272C49.5223 24.473 49.3772 24.6713 49.2282 24.864C48.7671 24.4475 48.6171 24.1269 48.3543 23.4827C48.2101 23.8734 48.0659 24.2641 47.9174 24.6667C47.8213 24.6667 47.7251 24.6667 47.6261 24.6667C47.6261 24.4713 47.6261 24.276 47.6261 24.0747C47.7222 24.0747 47.8184 24.0747 47.9174 24.0747C47.9354 23.9322 47.9534 23.7898 47.972 23.643C48.0617 23.0964 48.1919 22.615 48.3543 22.1013C48.7882 22.6892 48.9369 23.2464 48.9369 24.0747C49.033 24.0747 49.1292 24.0747 49.2282 24.0747C49.3724 23.3584 49.5166 22.642 49.6651 21.904Z" fill="#292422"/>
<path d="M33.6441 20.5227C33.7403 20.5878 33.8364 20.6529 33.9354 20.72C33.7352 21.2133 33.7352 21.2133 33.4985 21.7067C33.4024 21.7067 33.3062 21.7067 33.2072 21.7067C33.1591 22.1625 33.1111 22.6184 33.0615 23.088C32.9654 23.088 32.8693 23.088 32.7703 23.088C32.7175 23.4742 32.6662 23.8607 32.6155 24.2473C32.5868 24.4625 32.5581 24.6777 32.5285 24.8995C32.4416 25.4455 32.4416 25.4455 32.6246 25.8507C32.7207 25.8507 32.8169 25.8507 32.9159 25.8507C32.8678 26.4368 32.8198 27.0228 32.7703 27.6267C32.3333 27.232 32.3333 27.232 32.236 26.8882C32.0231 24.9268 32.1171 23.1041 33.0035 21.4754C33.208 21.1471 33.425 20.8331 33.6441 20.5227Z" fill="#0D2B2A"/>
<path d="M40.6351 52.2933C41.6445 52.2933 42.6538 52.2933 43.6937 52.2933C43.8532 52.9416 43.8538 53.4254 43.8484 54.1063C43.8471 54.3208 43.8458 54.5352 43.8445 54.7561C43.8428 54.9202 43.8411 55.0843 43.8393 55.2533C43.7913 55.2533 43.7432 55.2533 43.6937 55.2533C43.676 55.1417 43.6584 55.03 43.6402 54.9149C43.6158 54.7702 43.5914 54.6255 43.5663 54.4763C43.5426 54.3321 43.5189 54.1879 43.4946 54.0393C43.4272 53.6338 43.4272 53.6338 43.1111 53.4773C43.1111 53.1484 43.1111 52.8196 43.1111 52.4907C42.9729 52.5883 42.8347 52.686 42.6924 52.7867C42.2372 53.0827 42.2372 53.0827 41.9459 53.0827C41.8979 52.9524 41.8498 52.8222 41.8003 52.688C41.6892 52.8508 41.578 53.0136 41.4635 53.1813C41.0721 53.6747 41.0721 53.6747 40.6351 53.6747C40.6351 53.2188 40.6351 52.763 40.6351 52.2933Z" fill="#75C7EC"/>
<path d="M49.5195 60.7787C49.7118 61.1043 49.904 61.4299 50.1021 61.7653C49.9579 62.0584 49.9579 62.0584 49.8108 62.3573C49.8589 62.4713 49.907 62.5853 49.9565 62.7027C50.1021 63.1467 50.1021 63.1467 50.1021 63.936C50.4866 63.8058 50.8711 63.6755 51.2673 63.5413C51.2673 63.4111 51.2673 63.2809 51.2673 63.1467C51.3634 63.1467 51.4595 63.1467 51.5586 63.1467C51.5586 62.6257 51.5586 62.1048 51.5586 61.568C51.6547 61.5029 51.7508 61.4378 51.8499 61.3707C51.8782 61.757 51.9053 62.1435 51.9318 62.53C51.947 62.7452 51.9622 62.9604 51.9779 63.1821C51.9955 63.7387 51.9955 63.7387 51.8499 64.1333C51.4888 64.1386 51.1277 64.1426 50.7666 64.1457C50.6636 64.1473 50.5607 64.149 50.4546 64.1507C50.1914 64.1524 49.9282 64.1436 49.6652 64.1333C49.5195 63.936 49.5195 63.936 49.5053 63.2261C49.5063 62.9324 49.508 62.6387 49.5104 62.345C49.5111 62.1953 49.5117 62.0456 49.5124 61.8914C49.5141 61.5205 49.5168 61.1496 49.5195 60.7787Z" fill="#1B3B48"/>
<path d="M42.9654 17.9573C43.1096 18.0225 43.2538 18.0876 43.4024 18.1547C43.3543 18.2849 43.3063 18.4151 43.2567 18.5493C43.2206 19.3673 43.2206 19.3673 43.4024 20.128C43.4985 19.9326 43.5946 19.7373 43.6937 19.536C43.9821 19.8616 44.2704 20.1872 44.5675 20.5227C44.4234 20.6203 44.4234 20.6203 44.2763 20.72C44.2763 21.1758 44.2763 21.6317 44.2763 22.1013C44.1801 22.1013 44.084 22.1013 43.985 22.1013C43.985 21.9711 43.985 21.8409 43.985 21.7067C43.5076 21.855 43.5076 21.855 43.2567 22.496C43.1792 21.8509 43.104 21.2054 43.0292 20.5597C43.0071 20.3764 42.985 20.1931 42.9623 20.0043C42.9421 19.8281 42.9219 19.652 42.9012 19.4705C42.8821 19.3082 42.863 19.146 42.8434 18.9788C42.8198 18.5493 42.8198 18.5493 42.9654 17.9573Z" fill="#464946"/>
<path d="M63.5015 24.4693C63.5977 24.5344 63.6938 24.5996 63.7928 24.6667C63.7928 24.862 63.7928 25.0574 63.7928 25.2587C63.8889 25.2587 63.9851 25.2587 64.0841 25.2587C64.1034 25.425 64.1228 25.5914 64.1427 25.7628C64.1684 25.979 64.1942 26.1952 64.2207 26.418C64.246 26.6332 64.2713 26.8484 64.2975 27.0701C64.3544 27.6145 64.3544 27.6145 64.521 28.0213C64.4397 28.4052 64.4397 28.4052 64.3117 28.8353C64.2698 28.9783 64.2279 29.1212 64.1848 29.2685C64.1516 29.3779 64.1183 29.4873 64.0841 29.6C63.988 29.6 63.8919 29.6 63.7928 29.6C63.7568 29.7913 63.7207 29.9826 63.6836 30.1797C63.6235 30.3791 63.5634 30.5785 63.5015 30.784C63.192 30.9567 63.192 30.9567 62.9189 30.9813C63.0158 30.3327 63.1967 29.8226 63.4287 29.2423C63.7424 28.4156 63.894 27.7611 63.9385 26.8373C63.8423 26.8373 63.7462 26.8373 63.6472 26.8373C63.5991 26.0559 63.551 25.2744 63.5015 24.4693Z" fill="#010E11"/>
<path d="M40.7808 35.52C40.8288 35.52 40.8769 35.52 40.9264 35.52C40.9264 40.6645 40.9264 45.809 40.9264 51.1093C40.638 51.0442 40.3497 50.9791 40.0526 50.912C40.1006 50.5864 40.1487 50.2608 40.1982 49.9253C40.3904 50.1858 40.5827 50.4463 40.7808 50.7147C40.7808 45.7004 40.7808 40.6862 40.7808 35.52Z" fill="#5A5A5A"/>
<path d="M42.3829 16.9707C42.3636 17.0879 42.3442 17.2052 42.3243 17.326C42.1262 18.5859 42.0144 19.8305 41.946 21.1147C41.8498 21.1147 41.7537 21.1147 41.6547 21.1147C41.6066 21.2449 41.5586 21.3752 41.509 21.5093C41.3168 21.5093 41.1245 21.5093 40.9265 21.5093C41.1187 20.2721 41.311 19.0348 41.509 17.76C41.6052 17.76 41.7013 17.76 41.8003 17.76C41.8003 17.5646 41.8003 17.3693 41.8003 17.168C42.0916 16.9707 42.0916 16.9707 42.3829 16.9707Z" fill="#10272B"/>
<path d="M60.1516 59.5947C60.3631 60.1676 60.257 60.5633 60.1516 61.1733C60.0075 61.271 60.0075 61.271 59.8604 61.3707C59.9084 61.7614 59.9565 62.1521 60.006 62.5547C59.9099 62.5547 59.8138 62.5547 59.7147 62.5547C59.7147 62.4244 59.7147 62.2942 59.7147 62.16C59.6186 62.16 59.5225 62.16 59.4234 62.16C59.4234 62.2902 59.4234 62.4205 59.4234 62.5547C58.9188 62.8477 58.9188 62.8477 58.4039 63.1467C58.3078 62.1047 58.2116 61.0628 58.1126 59.9893C58.5495 60.5813 58.5495 60.5813 58.5769 61.309C58.5678 61.5247 58.5588 61.7404 58.5495 61.9627C58.8379 61.9627 59.1263 61.9627 59.4234 61.9627C59.4272 61.8248 59.4309 61.6869 59.4348 61.5449C59.4431 61.3653 59.4513 61.1857 59.4598 61.0007C59.47 60.7328 59.47 60.7328 59.4803 60.4595C59.5691 59.9893 59.5691 59.9893 59.8672 59.7288C59.9611 59.6845 60.0549 59.6403 60.1516 59.5947Z" fill="#234657"/>
<path d="M42.9655 23.088C43.3144 23.5236 43.5366 23.9658 43.7756 24.5187C44.2171 25.4476 44.7392 25.9534 45.4306 26.5205C45.7327 26.8373 45.7327 26.8373 45.8482 27.2713C45.8632 27.4472 45.8632 27.4472 45.8784 27.6267C45.7823 27.6918 45.6861 27.7569 45.5871 27.824C44.4098 26.6578 43.4584 25.4795 42.8198 23.68C42.8679 23.4846 42.916 23.2893 42.9655 23.088Z" fill="#9EA29E"/>
<path d="M34.6636 22.2987C34.7117 22.4289 34.7598 22.5591 34.8093 22.6933C34.6981 22.8317 34.587 22.9701 34.4725 23.1127C33.8472 24.019 33.5921 24.7651 33.6057 26.0202C33.6094 26.1515 33.613 26.2828 33.6168 26.418C33.6188 26.5538 33.6208 26.6897 33.6228 26.8296C33.6279 27.1611 33.6357 27.4926 33.6441 27.824C33.4999 27.7589 33.3557 27.6938 33.2072 27.6267C33.2072 26.8452 33.2072 26.0638 33.2072 25.2587C33.063 25.5517 33.063 25.5517 32.9159 25.8507C32.7236 25.7855 32.5314 25.7204 32.3333 25.6533C32.3501 25.3736 32.3686 25.0941 32.3879 24.8147C32.3981 24.659 32.4082 24.5033 32.4187 24.3429C32.4812 23.8604 32.5934 23.5126 32.7702 23.088C32.8664 23.088 32.9625 23.088 33.0615 23.088C33.0615 23.6741 33.0615 24.2602 33.0615 24.864C33.1406 24.7119 33.2196 24.5598 33.3011 24.403C33.4053 24.2051 33.5095 24.0072 33.6168 23.8033C33.7199 23.6064 33.823 23.4096 33.9292 23.2067C34.2267 22.6933 34.2267 22.6933 34.6636 22.2987Z" fill="#123541"/>
<path d="M39.3243 18.1547C39.3724 18.1547 39.4204 18.1547 39.4699 18.1547C39.506 18.3663 39.542 18.5779 39.5792 18.796C39.7663 19.5564 39.878 19.852 40.3438 20.3253C40.8002 20.5755 40.8002 20.5755 41.2177 20.72C41.1696 20.9154 41.1216 21.1107 41.072 21.312C41.4918 21.1379 41.4918 21.1379 41.8003 20.9173C41.8964 20.9824 41.9925 21.0476 42.0916 21.1147C41.9459 21.5093 41.9459 21.5093 41.6546 22.1013C41.1631 22.2123 41.1631 22.2123 40.6351 22.1013C40.3711 21.5957 40.3711 21.5957 40.2431 21.2727C39.8336 20.5091 39.1748 20.0418 38.5961 19.536C38.8388 19.536 39.0816 19.536 39.3243 19.536C39.3243 19.0802 39.3243 18.6243 39.3243 18.1547Z" fill="#103238"/>
<path d="M48.364 46.9461C48.544 46.9495 48.544 46.9495 48.7276 46.953C48.8479 46.9548 48.9683 46.9566 49.0923 46.9584C49.1852 46.9607 49.2781 46.963 49.3739 46.9653C49.4345 47.4789 49.4916 47.9924 49.5468 48.507C49.5644 48.6526 49.5819 48.7983 49.6 48.9483C49.6441 49.3742 49.6441 49.3742 49.6652 50.1227C49.521 50.318 49.3768 50.5134 49.2282 50.7147C49.2282 49.6076 49.2282 48.5006 49.2282 47.36C48.8918 47.36 48.5553 47.36 48.2087 47.36C48.2847 47.5111 48.2847 47.5111 48.3623 47.6652C48.5576 48.3518 48.4611 48.8601 48.3726 49.58C48.3429 49.8293 48.3132 50.0786 48.2827 50.3354C48.2583 50.5257 48.2339 50.716 48.2087 50.912C47.9174 50.5173 47.9174 50.5173 47.8839 49.7519C47.8844 49.4438 47.8866 49.1357 47.8901 48.8277C47.8902 48.6711 47.8903 48.5145 47.8904 48.3532C47.8982 46.9759 47.8982 46.9759 48.364 46.9461ZM49.6652 49.5307C49.7613 49.6609 49.8574 49.7911 49.9565 49.9253C49.8603 49.9253 49.7642 49.9253 49.6652 49.9253C49.6652 49.7951 49.6652 49.6649 49.6652 49.5307Z" fill="#E6E5E5"/>
<path d="M56.9474 35.52C56.9955 35.52 57.0435 35.52 57.0931 35.52C57.1066 37.3108 57.1169 39.1016 57.1233 40.8924C57.1263 41.724 57.1304 42.5555 57.137 43.387C57.1433 44.1892 57.1468 44.9914 57.1483 45.7937C57.1494 46.1 57.1515 46.4063 57.1547 46.7126C57.1589 47.1412 57.1595 47.5695 57.1592 47.9981C57.1605 48.2422 57.1618 48.4863 57.1631 48.7377C57.0931 49.3333 57.0931 49.3333 56.7999 49.6735C56.7044 49.7566 56.6089 49.8397 56.5105 49.9253C56.4618 50.5422 56.4618 50.5422 56.5105 51.1093C56.201 50.4803 56.1461 50.0704 56.0735 49.3333C56.434 49.2357 56.434 49.2357 56.8018 49.136C56.8498 44.6427 56.8979 40.1494 56.9474 35.52Z" fill="#373737"/>
<path d="M59.2778 30.784C59.3739 30.8491 59.47 30.9142 59.5691 30.9813C59.5691 31.1116 59.5691 31.2418 59.5691 31.376C59.4729 31.376 59.3768 31.376 59.2778 31.376C59.4174 31.8359 59.4174 31.8359 59.8603 32.1653C59.5172 32.6302 58.6521 32.4409 58.1877 32.466C57.457 32.6002 56.9992 33.0122 56.5105 33.744C56.5898 32.9921 56.8001 32.6311 57.2387 32.1653C57.7121 32.0173 57.7121 32.0173 58.1126 31.968C57.9203 31.8378 57.7281 31.7075 57.53 31.5733C57.53 31.4431 57.53 31.3128 57.53 31.1787C57.8004 31.1909 57.8004 31.1909 58.0762 31.2033C58.5619 31.2068 58.8528 31.1162 59.2778 30.784Z" fill="#05303B"/>
<path d="M41.072 23.2853C41.4453 23.5937 41.4453 23.5937 41.6546 24.0747C41.7639 24.8147 41.7639 24.8147 41.8003 25.456C41.7072 25.2973 41.614 25.1385 41.5181 24.975C41.3042 24.6124 41.3042 24.6124 41.072 24.272C39.968 24.1116 39.2611 24.331 38.3048 25.0613C38.2087 24.9962 38.1125 24.9311 38.0135 24.864C38.2256 24.6375 38.4381 24.4115 38.6507 24.1857C38.8281 23.9968 38.8281 23.9968 39.0091 23.8041C39.658 23.1424 40.2806 23.1641 41.072 23.2853Z" fill="#B7D5E7"/>
<path d="M58.4039 33.152C58.2597 33.2497 58.2597 33.2497 58.1126 33.3493C58.1126 33.5447 58.1126 33.74 58.1126 33.9413C58.4463 33.952 58.7801 33.9596 59.1139 33.966C59.2998 33.9706 59.4857 33.9752 59.6772 33.9799C60.1642 34.0117 60.1642 34.0117 60.4429 33.5467C60.491 33.8723 60.5391 34.1979 60.5886 34.5333C59.3551 34.7889 58.1843 34.6786 56.9474 34.5333C57.1944 33.5929 57.1944 33.5929 57.5938 33.1767C57.967 32.9547 57.967 32.9547 58.4039 33.152Z" fill="#476573"/>
<path d="M44.2763 21.5093C44.3724 21.7047 44.4685 21.9001 44.5676 22.1013C44.5195 22.2926 44.4714 22.4839 44.4219 22.681C44.2302 23.265 44.2302 23.265 44.4037 23.754C44.4578 23.8598 44.5118 23.9656 44.5676 24.0747C44.6637 23.9444 44.7598 23.8142 44.8588 23.68C45.0227 24.42 45.0227 24.42 44.8588 24.864C45.6279 25.1245 46.3969 25.385 47.1892 25.6533C47.1892 25.7185 47.1892 25.7836 47.1892 25.8507C46.2085 25.9491 45.4278 25.7301 44.5676 25.0613C44.2125 24.5063 44.2125 24.5063 43.985 23.8773C43.942 23.7601 43.899 23.6428 43.8547 23.522C43.6264 22.8623 43.548 22.4466 43.548 21.7067C43.6922 21.7067 43.8364 21.7067 43.985 21.7067C43.985 21.8369 43.985 21.9672 43.985 22.1013C44.0811 22.1013 44.1772 22.1013 44.2763 22.1013C44.2763 21.906 44.2763 21.7106 44.2763 21.5093Z" fill="#543837"/>
<path d="M30.5856 33.3493C31.1513 34.4992 31.0986 35.7513 31.0225 37.0987C30.9124 37.6677 30.7684 38.1406 30.5856 38.6773C30.5375 38.6773 30.4894 38.6773 30.4399 38.6773C30.4378 38.5509 30.4358 38.4245 30.4337 38.2942C30.3802 36.9816 30.1748 36.3379 29.566 35.3227C29.566 35.1924 29.566 35.0622 29.566 34.928C29.9292 35.1656 30.2479 35.4123 30.5856 35.7173C30.6248 34.7996 30.6248 34.7996 30.4399 33.9413C30.488 33.746 30.536 33.5506 30.5856 33.3493Z" fill="#0A252D"/>
<path d="M41.3634 29.6C41.6547 30.192 41.6547 30.192 41.6547 30.5867C42.7121 30.5867 43.7694 30.5867 44.8589 30.5867C44.7132 30.9813 44.7132 30.9813 44.4663 31.1088C43.5777 31.3829 42.77 31.3921 41.864 31.302C41.731 31.2908 41.598 31.2796 41.4609 31.2681C41.137 31.2405 40.8132 31.2099 40.4895 31.1787C40.7779 30.6577 41.0663 30.1368 41.3634 29.6Z" fill="#B3B3AF"/>
<path d="M57.2387 23.2853C57.9517 23.7249 58.548 24.1703 58.9865 25.0613C58.1515 24.693 58.1515 24.693 57.7849 24.4447C57.1668 24.1782 56.5687 24.1254 55.9279 24.272C55.5956 24.5592 55.4403 24.824 55.1997 25.2587C55.2433 24.6096 55.3053 24.1607 55.5638 23.606C56.1228 23.1138 56.5922 23.102 57.2387 23.2853Z" fill="#C2E7F4"/>
<path d="M46.4609 21.7067C47.0377 21.7718 47.6145 21.8369 48.2087 21.904C48.3742 22.5768 48.335 22.694 48.145 23.3223C48.1031 23.4635 48.0612 23.6047 48.0181 23.7501C47.9849 23.8572 47.9516 23.9643 47.9174 24.0747C47.8213 24.0747 47.7251 24.0747 47.6261 24.0747C47.4819 23.5537 47.3377 23.0327 47.1892 22.496C46.9048 22.8812 46.7743 23.193 46.6066 23.68C46.5585 23.68 46.5105 23.68 46.4609 23.68C46.4609 23.0288 46.4609 22.3776 46.4609 21.7067Z" fill="#978685"/>
<path d="M44.8589 14.208C45.0511 14.2731 45.2434 14.3382 45.4415 14.4053C45.2973 14.503 45.2973 14.503 45.1502 14.6027C45.2703 14.7777 45.3905 14.9527 45.5143 15.133C45.7999 15.5919 45.8744 15.7369 45.9239 16.354C45.9014 16.5616 45.9014 16.5616 45.8784 16.7733C45.4458 16.6756 45.4458 16.6756 45.0045 16.576C45.0045 16.3155 45.0045 16.055 45.0045 15.7867C44.9084 15.7867 44.8123 15.7867 44.7132 15.7867C44.7132 16.1123 44.7132 16.4379 44.7132 16.7733C44.8574 16.8384 45.0016 16.9036 45.1502 16.9707C44.9579 16.9707 44.7657 16.9707 44.5676 16.9707C44.4273 16.3812 44.3114 15.8137 44.2763 15.1947C44.5494 14.5903 44.5494 14.5903 44.8589 14.208Z" fill="#072127"/>
<path d="M41.8003 21.312C42.2436 22.0351 42.5266 22.8409 42.8289 23.68C42.8801 23.8204 42.9312 23.9608 42.984 24.1055C43.0816 24.3736 43.179 24.6418 43.2762 24.9102C43.4139 25.2905 43.5533 25.6695 43.6937 26.048C43.4534 26.048 43.2131 26.048 42.9655 26.048C42.7982 25.6001 42.6314 25.152 42.4648 24.7037C42.4174 24.5769 42.37 24.4501 42.3212 24.3194C41.9219 23.2431 41.7835 22.5185 41.8003 21.312Z" fill="#8E938F"/>
<path d="M55.491 61.1733C55.5391 61.1733 55.5871 61.1733 55.6366 61.1733C55.6405 61.6297 55.6434 62.086 55.6457 62.5423C55.6474 62.7965 55.6491 63.0506 55.6509 63.3124C55.6366 63.936 55.6366 63.936 55.491 64.1333C55.0741 64.1478 54.6607 64.1516 54.2439 64.1457C54.1265 64.1448 54.009 64.1439 53.888 64.143C53.597 64.1406 53.306 64.1371 53.015 64.1333C52.7366 63.4032 52.5211 62.7794 52.4324 61.9627C52.6247 61.8976 52.8169 61.8324 53.015 61.7653C52.967 62.1561 52.9189 62.5468 52.8694 62.9493C53.0616 63.0145 53.2539 63.0796 53.452 63.1467C53.4039 63.342 53.3558 63.5374 53.3063 63.7387C53.4114 63.702 53.5166 63.6654 53.6249 63.6277C54.0345 63.5413 54.0345 63.5413 54.4078 63.6647C54.7678 63.7896 54.7678 63.7896 55.0694 63.5113C55.4223 63.045 55.4294 62.7807 55.4546 62.123C55.4628 61.9452 55.4711 61.7674 55.4796 61.5842C55.4834 61.4486 55.4871 61.313 55.491 61.1733Z" fill="#1A3641"/>
<path d="M41.509 61.1733C41.5571 61.3036 41.6052 61.4338 41.6547 61.568C41.7508 61.6331 41.8469 61.6982 41.946 61.7653C41.946 62.3514 41.946 62.9375 41.946 63.5413C42.2208 63.5536 42.2208 63.5536 42.5012 63.566C42.6043 63.5706 42.7074 63.5752 42.8136 63.5799C43.1568 63.5675 43.1568 63.5675 43.5481 63.1467C43.6322 62.7592 43.6322 62.7592 43.6482 62.3327C43.6632 62.0803 43.6782 61.828 43.6937 61.568C43.7418 61.568 43.7898 61.568 43.8394 61.568C43.8394 62.4146 43.8394 63.2611 43.8394 64.1333C43.4783 64.1386 43.1172 64.1426 42.7561 64.1457C42.6531 64.1473 42.5502 64.149 42.4441 64.1507C42.1809 64.1524 41.9177 64.1436 41.6547 64.1333C41.509 63.936 41.509 63.936 41.4948 63.3124C41.4973 62.9312 41.4973 62.9312 41.4999 62.5423C41.5012 62.2877 41.5026 62.0331 41.5039 61.7707C41.5056 61.5736 41.5073 61.3765 41.509 61.1733Z" fill="#1B343E"/>
<path d="M47.1892 61.568C47.4776 61.5904 47.7658 61.6156 48.054 61.642C48.2145 61.6557 48.375 61.6695 48.5404 61.6836C48.7367 61.7241 48.7367 61.7241 48.9369 61.7653C49.1604 62.3709 49.017 62.8903 48.9369 63.5413C48.5713 63.2936 48.5188 63.0479 48.3544 62.5547C48.2597 62.7012 48.2597 62.7012 48.1632 62.8507C47.9174 63.1467 47.9174 63.1467 47.4805 63.1467C47.4805 62.9513 47.4805 62.7559 47.4805 62.5547C47.4324 62.6849 47.3844 62.8151 47.3348 62.9493C47.1426 62.8842 46.9503 62.8191 46.7523 62.752C46.8003 62.5566 46.8484 62.3613 46.8979 62.16C46.994 62.16 47.0902 62.16 47.1892 62.16C47.1892 61.9646 47.1892 61.7693 47.1892 61.568Z" fill="#21424F"/>
<path d="M63.6472 30.784C63.6952 30.784 63.7433 30.784 63.7928 30.784C63.8409 31.305 63.8889 31.8259 63.9384 32.3627C63.7943 32.2975 63.6501 32.2324 63.5015 32.1653C63.5496 32.4909 63.5976 32.8165 63.6472 33.152C63.5751 33.0584 63.503 32.9648 63.4287 32.8683C62.9197 32.4373 62.4951 32.4299 61.8994 32.3627C61.6135 33.0544 61.4684 33.7703 61.3168 34.5333C61.2688 34.5333 61.2207 34.5333 61.1712 34.5333C61.1712 33.9472 61.1712 33.3612 61.1712 32.7573C61.075 32.6922 60.9789 32.6271 60.8799 32.56C61.0241 32.56 61.1683 32.56 61.3168 32.56C61.3649 32.3646 61.4129 32.1693 61.4625 31.968C61.847 31.968 62.2315 31.968 62.6276 31.968C62.6276 31.8378 62.6276 31.7075 62.6276 31.5733C62.916 31.5082 63.2044 31.4431 63.5015 31.376C63.5496 31.1806 63.5976 30.9853 63.6472 30.784Z" fill="#0E3239"/>
<path d="M54.9084 21.5093C54.9565 21.5093 55.0045 21.5093 55.054 21.5093C55.1836 23.054 54.6871 24.4052 54.1284 25.725C53.8889 26.048 53.8889 26.048 53.4975 26.0973C53.3863 26.0811 53.2752 26.0648 53.1606 26.048C53.238 25.8692 53.3153 25.6904 53.395 25.5061C53.9559 24.1993 54.4809 22.9089 54.9084 21.5093Z" fill="#888B87"/>
<path d="M65.2493 44.4C65.2493 44.7256 65.2493 45.0512 65.2493 45.3867C65.1749 45.4299 65.1006 45.4731 65.024 45.5177C64.0622 46.0861 63.1262 46.7166 62.1907 47.36C62.0946 47.1646 61.9985 46.9693 61.8994 46.768C62.2839 46.5726 62.6684 46.3773 63.0646 46.176C63.0165 46.0458 62.9685 45.9155 62.9189 45.7813C63.0691 45.6999 63.2193 45.6185 63.3741 45.5347C63.7628 45.3118 64.0549 45.0831 64.4118 44.7577C64.8123 44.4 64.8123 44.4 65.2493 44.4Z" fill="#030B0E"/>
<path d="M65.2492 28.0213C65.6311 28.2283 65.8018 28.3468 66.0139 28.8353C66.0499 28.9574 66.086 29.0795 66.1231 29.2053C66.012 29.1687 65.9008 29.1321 65.7863 29.0943C65.3818 28.963 65.3818 28.963 64.9579 29.2053C65.1697 29.3396 65.1697 29.3396 65.3858 29.4767C65.8318 29.7973 65.8318 29.7973 65.9775 30.192C64.6069 30.4185 64.6069 30.4185 63.9384 30.3893C64.1291 29.6143 64.3448 29.135 64.8123 28.6133C65.14 28.4653 65.14 28.4653 65.3949 28.416C65.3468 28.2858 65.2987 28.1555 65.2492 28.0213Z" fill="#568092"/>
<path d="M41.0721 58.4107C41.3738 59.2765 41.3738 59.2765 41.3269 59.8167C41.2177 60.1867 41.2177 60.1867 40.9264 60.7787C40.8303 60.4531 40.7342 60.1275 40.6351 59.792C40.3948 59.8571 40.1545 59.9222 39.9069 59.9893C39.8108 59.6637 39.7146 59.3381 39.6156 59.0027C40.1271 58.5275 40.4497 58.3384 41.0721 58.4107Z" fill="#356F89"/>
<path d="M31.8964 39.4667C31.9582 39.5476 32.0199 39.6284 32.0836 39.7118C32.6842 40.4594 33.1355 40.8241 33.9354 41.0453C33.7898 41.44 33.7898 41.44 33.6442 41.6373C32.8602 41.7081 32.396 41.7138 31.7508 41.0453C31.6546 40.9151 31.5585 40.7848 31.4595 40.6507C31.5141 40.2313 31.5141 40.2313 31.6051 39.8613C31.7012 39.8613 31.7974 39.8613 31.8964 39.8613C31.8964 39.7311 31.8964 39.6008 31.8964 39.4667Z" fill="#0E3032"/>
<path d="M38.7417 19.536C38.6456 19.6011 38.5495 19.6662 38.4504 19.7333C38.3062 19.6682 38.1621 19.6031 38.0135 19.536C36.8459 19.3825 35.6163 19.5471 34.6153 20.4263C33.9752 21.1424 33.5709 21.8846 33.2072 22.8907C33.0616 22.2987 33.0616 22.2987 33.2072 21.7067C33.3033 21.7067 33.3994 21.7067 33.4985 21.7067C33.5315 21.5642 33.5646 21.4218 33.5986 21.275C33.9018 20.3948 34.3655 19.871 34.9549 19.3387C36.0761 19.0331 37.7339 18.7174 38.7417 19.536Z" fill="#274B51"/>
<path d="M54.6171 15.7867C55.0792 16.0997 55.1489 16.5249 55.3453 17.168C55.7321 19.2764 55.7321 19.2764 55.491 20.128C55.3468 20.3885 55.2026 20.649 55.054 20.9173C55.054 20.201 55.054 19.4847 55.054 18.7467C54.9579 18.7467 54.8618 18.7467 54.7627 18.7467C54.6916 18.3484 54.6205 17.9501 54.5494 17.5519C54.479 17.1564 54.479 17.1564 54.3258 16.7733C54.47 16.7733 54.6142 16.7733 54.7627 16.7733C54.7147 16.4477 54.6666 16.1221 54.6171 15.7867Z" fill="#051315"/>
<path d="M49.6652 55.2533C49.8093 55.3184 49.9535 55.3836 50.1021 55.4507C50.1021 55.7763 50.1021 56.1019 50.1021 56.4373C50.1982 56.5024 50.2943 56.5676 50.3934 56.6347C50.3934 57.2207 50.3934 57.8068 50.3934 58.4107C50.2492 58.4107 50.105 58.4107 49.9564 58.4107C49.8603 58.5409 49.7642 58.6711 49.6652 58.8053C49.4487 58.2188 49.5003 57.6813 49.5013 57.0293C49.5009 56.7811 49.5006 56.5328 49.5002 56.277C49.5195 55.648 49.5195 55.648 49.6652 55.2533Z" fill="#4884A2"/>
<path d="M40.0526 31.5733C40.4882 31.7701 40.7229 31.9852 41.0812 32.3627C41.4948 32.7978 41.4948 32.7978 41.9459 33.152C41.9459 33.3474 41.9459 33.5427 41.9459 33.744C42.1382 33.8091 42.3304 33.8742 42.5285 33.9413C42.1576 34.1926 42.0292 34.0996 41.6364 33.9537C41.5309 33.9153 41.4254 33.8768 41.3167 33.8373C41.236 33.8065 41.1552 33.7757 41.0721 33.744C41.1201 33.8742 41.1682 34.0045 41.2177 34.1387C41.5858 34.268 41.5858 34.268 41.9459 34.336C41.9459 34.4011 41.9459 34.4662 41.9459 34.5333C41.6095 34.5333 41.2731 34.5333 40.9264 34.5333C40.905 34.3548 40.905 34.3548 40.8832 34.1726C40.7475 33.1903 40.6388 32.63 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733Z" fill="#595A57"/>
<path d="M40.7808 29.6C40.7808 29.7954 40.7808 29.9907 40.7808 30.192C40.5464 30.488 40.5464 30.488 40.2346 30.784C40.1332 30.8817 40.0318 30.9794 39.9274 31.08C39.8245 31.1777 39.7216 31.2754 39.6156 31.376C39.4209 31.5725 39.2266 31.7695 39.033 31.968C39.2733 31.9029 39.5137 31.8378 39.7613 31.7707C39.8093 31.9009 39.8574 32.0312 39.9069 32.1653C39.8588 32.2956 39.8108 32.4258 39.7613 32.56C39.1845 32.4949 38.6077 32.4298 38.0135 32.3627C37.9654 32.1022 37.9174 31.8417 37.8679 31.5733C37.9523 31.5375 38.0368 31.5016 38.1239 31.4647C39.1301 31.026 39.9675 30.5399 40.7808 29.6Z" fill="#052025"/>
<path d="M55.7823 30.192C55.9526 30.3515 56.1224 30.5121 56.292 30.673C56.3866 30.7623 56.4813 30.8516 56.5788 30.9436C56.6523 31.0211 56.7259 31.0987 56.8018 31.1787C56.8018 31.2438 56.8018 31.3089 56.8018 31.376C55.5462 31.6722 53.8165 31.7711 52.7237 30.784C54.2377 30.6863 54.2377 30.6863 55.7823 30.5867C55.7823 30.4564 55.7823 30.3262 55.7823 30.192Z" fill="#9A9896"/>
<path d="M47.0436 22.8907C47.4081 23.4705 47.5489 23.9127 47.6261 24.6667C47.7223 24.6667 47.8184 24.6667 47.9174 24.6667C48.0136 24.4062 48.1097 24.1457 48.2087 23.8773C48.1607 24.3332 48.1126 24.789 48.0631 25.2587C47.3591 25.2751 46.7178 25.2493 46.024 25.0613C46.024 24.9962 46.024 24.9311 46.024 24.864C46.2644 24.864 46.5047 24.864 46.7523 24.864C46.7611 24.7381 46.7699 24.6122 46.779 24.4824C46.7912 24.3194 46.8034 24.1563 46.816 23.9883C46.8278 23.8258 46.8397 23.6632 46.8518 23.4958C46.8979 23.088 46.8979 23.088 47.0436 22.8907Z" fill="#847171"/>
<path d="M44.5676 54.6613C44.6637 54.9218 44.7598 55.1823 44.8589 55.4507C45.1352 55.9143 45.1352 55.9143 45.6053 55.87C45.8126 55.8578 45.8126 55.8578 46.024 55.8453C46.024 55.65 46.024 55.4546 46.024 55.2533C46.2163 55.3185 46.4085 55.3836 46.6066 55.4507C46.6066 55.8414 46.6066 56.2321 46.6066 56.6347C45.9337 56.6347 45.2608 56.6347 44.5676 56.6347C44.5676 55.9835 44.5676 55.3323 44.5676 54.6613Z" fill="#599CC1"/>
<path d="M45.7327 27.0347C45.8741 27.0649 46.0155 27.0952 46.1611 27.1264C46.7904 27.2482 47.4195 27.2981 48.054 27.343C48.1674 27.3515 48.2809 27.36 48.3979 27.3688C48.6746 27.3895 48.9514 27.4095 49.2282 27.4293C49.2282 27.4945 49.2282 27.5596 49.2282 27.6267C48.7476 27.6918 48.267 27.7569 47.7718 27.824C47.7718 28.0194 47.7718 28.2147 47.7718 28.416C46.9483 28.4843 46.4566 28.3044 45.7327 27.824C45.7327 27.5635 45.7327 27.303 45.7327 27.0347Z" fill="#BABBB8"/>
<path d="M44.5676 21.1147C44.7117 21.1798 44.8559 21.2449 45.0045 21.312C44.9564 21.8981 44.9084 22.4842 44.8588 23.088C44.955 23.0229 45.0511 22.9578 45.1501 22.8907C45.2463 23.4767 45.3424 24.0628 45.4414 24.6667C45.2492 24.7318 45.0569 24.7969 44.8588 24.864C44.8108 24.6686 44.7627 24.4733 44.7132 24.272C44.6051 24.1438 44.6051 24.1438 44.4947 24.013C44.1881 23.5457 44.1805 23.1048 44.1306 22.496C44.2267 22.496 44.3229 22.496 44.4219 22.496C44.47 22.0402 44.518 21.5843 44.5676 21.1147Z" fill="#ADAAA7"/>
<path d="M53.452 52.2933C53.7888 52.288 54.1256 52.2842 54.4624 52.281C54.6499 52.2787 54.8375 52.2764 55.0307 52.2741C55.491 52.2933 55.491 52.2933 55.6367 52.4907C55.6471 52.7905 55.6489 53.0909 55.6458 53.391C55.6444 53.5541 55.6431 53.7171 55.6418 53.8851C55.6401 54.011 55.6384 54.1369 55.6367 54.2667C55.5886 54.0713 55.5405 53.8759 55.491 53.6747C55.2507 53.6747 55.0104 53.6747 54.7628 53.6747C54.7147 53.3491 54.6667 53.0235 54.6171 52.688C54.3288 52.688 54.0404 52.688 53.7433 52.688C53.7433 53.0136 53.7433 53.3392 53.7433 53.6747C53.5991 53.7723 53.5991 53.7723 53.452 53.872C53.452 53.351 53.452 52.8301 53.452 52.2933Z" fill="#76C9ED"/>
<path d="M35.9745 42.4267C36.8396 42.4267 37.7048 42.4267 38.5961 42.4267C38.5961 42.4918 38.5961 42.5569 38.5961 42.624C37.8752 42.6891 37.1542 42.7542 36.4114 42.8213C36.648 43.0903 36.648 43.0903 36.8893 43.3648C38.6248 45.4479 38.6248 45.4479 38.7412 46.637C38.756 47.3504 38.6952 48.0402 38.5961 48.7413C38.5481 48.7413 38.5 48.7413 38.4505 48.7413C38.4586 48.5671 38.4666 48.3928 38.4749 48.2133C38.48 46.9346 38.4424 46.0182 37.7656 45.0576C37.4219 44.6202 37.0686 44.2115 36.7027 43.808C36.6036 43.6915 36.5045 43.575 36.4023 43.455C36.2154 43.237 36.023 43.0275 35.8289 42.8213C35.8769 42.6911 35.925 42.5609 35.9745 42.4267Z" fill="#EAEAEA"/>
<path d="M45.2958 27.6267C45.3942 27.6671 45.4925 27.7076 45.5939 27.7492C45.7238 27.8024 45.8537 27.8556 45.9876 27.9103C46.116 27.963 46.2444 28.0156 46.3767 28.0699C46.902 28.278 47.3855 28.4391 47.9333 28.4784C48.0432 28.4867 48.153 28.495 48.2662 28.5035C48.436 28.5151 48.436 28.5151 48.6092 28.527C48.7247 28.5355 48.8401 28.544 48.9591 28.5528C49.243 28.5737 49.5269 28.5936 49.8108 28.6133C49.8108 28.6784 49.8108 28.7436 49.8108 28.8107C49.5224 28.8758 49.234 28.9409 48.9369 29.008C48.8889 29.4638 48.8408 29.9197 48.7913 30.3893C48.7432 30.194 48.6951 29.9986 48.6456 29.7973C48.5495 29.7973 48.4534 29.7973 48.3543 29.7973C48.3063 30.0578 48.2582 30.3183 48.2087 30.5867C48.1606 30.0006 48.1126 29.4145 48.063 28.8107C47.9219 28.8229 47.7807 28.8351 47.6352 28.8477C46.9515 28.8514 46.3658 28.5395 45.7327 28.2187C45.5885 28.1535 45.4443 28.0884 45.2958 28.0213C45.2958 27.8911 45.2958 27.7608 45.2958 27.6267Z" fill="#181916"/>
<path d="M43.4024 13.2213C43.5947 13.3516 43.7869 13.4818 43.985 13.616C43.9296 14.2667 43.7879 14.4886 43.4661 15.0097C43.0646 15.5397 43.0646 15.5397 43.1111 16.1813C42.9189 16.1813 42.7266 16.1813 42.5285 16.1813C42.4 15.0496 42.7469 14.4508 43.2113 13.5682C43.3059 13.3965 43.3059 13.3965 43.4024 13.2213Z" fill="#09393F"/>
<path d="M61.6081 58.8053C61.7042 58.8053 61.8003 58.8053 61.8994 58.8053C61.9073 59.3069 61.913 59.8083 61.9176 60.31C61.92 60.4507 61.9225 60.5913 61.925 60.7363C61.931 61.6195 61.8543 62.3138 61.6081 63.1467C61.56 63.0164 61.512 62.8862 61.4624 62.752C61.5105 62.6218 61.5586 62.4915 61.6081 62.3573C61.2599 62.139 61.2599 62.139 60.8799 61.9627C60.7837 62.0278 60.6876 62.0929 60.5886 62.16C60.7342 61.568 60.7342 61.568 61.0983 61.2843C61.4856 61.0262 61.4856 61.0262 61.5808 60.5443C61.5898 60.4263 61.5988 60.3083 61.6081 60.1867C61.512 60.1867 61.4158 60.1867 61.3168 60.1867C61.4129 59.7308 61.509 59.275 61.6081 58.8053Z" fill="#244B5B"/>
<path d="M53.3063 25.2587C53.3063 25.454 53.3063 25.6494 53.3063 25.8507C53.5947 25.7855 53.883 25.7204 54.1802 25.6533C54.1802 25.9138 54.1802 26.1743 54.1802 26.4427C54.0974 26.4432 54.0146 26.4437 53.9293 26.4442C53.0998 26.5005 52.6703 26.7347 52.0837 27.5334C51.6402 28.0845 51.1046 28.3164 50.539 28.564C50.4159 28.62 50.2927 28.6759 50.1658 28.7336C49.7462 28.8247 49.5804 28.7208 49.2282 28.416C49.3375 28.387 49.4467 28.358 49.5593 28.3281C51.1698 27.85 52.303 27.0472 53.3063 25.2587Z" fill="#32322D"/>
<path d="M57.0931 22.6933C57.0931 22.8236 57.0931 22.9538 57.0931 23.088C56.6593 23.2133 56.6593 23.2133 56.2255 23.3385C55.8744 23.5086 55.7171 23.6743 55.491 24.0747C55.234 25.2912 55.3675 26.591 55.491 27.824C55.5871 27.824 55.6833 27.824 55.7823 27.824C55.7823 28.1496 55.7823 28.4752 55.7823 28.8107C55.176 27.7653 54.9985 27.0147 54.9903 25.678C54.9856 25.5409 54.9808 25.4038 54.9758 25.2625C54.9699 24.4883 55.0446 23.9937 55.3988 23.4002C55.937 22.6851 56.3549 22.3229 57.0931 22.6933Z" fill="#407A8E"/>
<path d="M61.6081 20.128C61.56 20.3885 61.512 20.649 61.4625 20.9173C61.3663 20.9173 61.2702 20.9173 61.1712 20.9173C61.1231 21.0476 61.075 21.1778 61.0255 21.312C60.8693 21.2184 60.7131 21.1248 60.5522 21.0283C60.2477 20.8488 59.9863 20.7144 59.6601 20.6213C59.582 20.5888 59.5039 20.5562 59.4234 20.5227C59.3754 20.3273 59.3273 20.1319 59.2778 19.9307C60.0109 19.6423 60.9163 19.6593 61.6081 20.128Z" fill="#5E879C"/>
<path d="M46.1697 14.208C46.2658 14.2731 46.3619 14.3382 46.461 14.4053C46.455 14.6495 46.449 14.8937 46.4428 15.1453C46.4411 15.7899 46.4818 16.2237 46.7523 16.7733C46.6081 16.9036 46.4639 17.0338 46.3153 17.168C46.3634 16.9075 46.4115 16.647 46.461 16.3787C46.3314 16.3577 46.3314 16.3577 46.1993 16.3363C45.7598 16.124 45.6479 15.812 45.405 15.281C45.3292 15.1179 45.2533 14.9549 45.1752 14.7869C45.1189 14.661 45.0625 14.5351 45.0045 14.4053C45.4354 14.2107 45.7212 14.1768 46.1697 14.208Z" fill="#538494"/>
<path d="M61.2986 62.0367C61.4007 62.1425 61.5029 62.2483 61.6081 62.3573C61.3714 63.492 61.3714 63.492 60.8799 63.936C60.5613 63.862 60.5613 63.862 60.2973 63.7387C60.4895 63.6084 60.6818 63.4782 60.8799 63.344C60.442 62.7508 60.0316 62.8318 59.4234 62.752C59.4234 62.5566 59.4234 62.3613 59.4234 62.16C59.5195 62.16 59.6157 62.16 59.7147 62.16C59.7147 62.2902 59.7147 62.4205 59.7147 62.5547C59.8108 62.5547 59.9069 62.5547 60.006 62.5547C60.006 62.4244 60.006 62.2942 60.006 62.16C60.7768 61.6986 60.7768 61.6986 61.2986 62.0367Z" fill="#174050"/>
<path d="M58.9865 46.5707C59.0346 46.5707 59.0826 46.5707 59.1322 46.5707C59.2302 47.1788 59.327 47.7874 59.4234 48.396C59.4512 48.5682 59.479 48.7404 59.5076 48.9179C59.5339 49.0845 59.5602 49.2511 59.5873 49.4227C59.6117 49.5757 59.6361 49.7286 59.6613 49.8862C59.7147 50.32 59.7147 50.32 59.7147 51.1093C59.4744 51.1745 59.2341 51.2396 58.9865 51.3067C58.9865 49.7438 58.9865 48.1809 58.9865 46.5707Z" fill="#202021"/>
<path d="M31.0225 41.8347C31.7322 42.6 32.2802 43.3805 32.8175 44.3707C33.0715 44.8119 33.347 45.1963 33.6441 45.584C32.4742 45.0245 31.6555 44.0653 31.0225 42.624C31.0225 42.3635 31.0225 42.103 31.0225 41.8347Z" fill="#496B76"/>
<path d="M56.5651 23.976C57.5315 23.9951 58.3285 24.5662 59.1321 25.2587C59.1802 25.3889 59.2282 25.5191 59.2778 25.6533C59.1756 25.5964 59.0735 25.5394 58.9683 25.4807C58.8301 25.4074 58.6919 25.3341 58.5495 25.2587C58.4204 25.1854 58.2912 25.1121 58.1581 25.0367C57.2972 24.7285 56.5189 24.696 55.6912 25.16C55.5771 25.2577 55.4629 25.3554 55.3453 25.456C55.6104 24.4812 55.7644 24.0181 56.5651 23.976Z" fill="#46728A"/>
<path d="M41.0721 24.0747C41.1201 24.3352 41.1682 24.5956 41.2177 24.864C41.042 24.7969 41.042 24.7969 40.8627 24.7283C40.1666 24.6456 39.6773 24.9292 39.033 25.2587C38.7876 25.371 38.5418 25.4821 38.2957 25.5917C38.131 25.6661 38.131 25.6661 37.9629 25.742C37.8835 25.7779 37.8041 25.8137 37.7222 25.8507C37.9433 24.952 38.4137 24.7478 39.012 24.3175C39.706 23.9496 40.3395 23.971 41.0721 24.0747Z" fill="#417285"/>
<path d="M67.434 32.9547C67.5301 33.0849 67.6262 33.2151 67.7253 33.3493C67.6919 34.7036 67.4262 35.5305 66.7057 36.5067C66.6042 36.7666 66.5063 37.0294 66.4144 37.296C66.3432 36.0402 66.3432 36.0402 66.6875 35.4337C66.997 35.1253 66.997 35.1253 67.2883 35.1253C67.2883 34.8649 67.2883 34.6044 67.2883 34.336C67.2403 34.4662 67.1922 34.5965 67.1427 34.7307C66.9504 34.6655 66.7582 34.6004 66.5601 34.5333C66.6562 34.4682 66.7523 34.4031 66.8514 34.336C66.8994 34.1406 66.9475 33.9453 66.997 33.744C67.0451 33.5486 67.0932 33.3533 67.1427 33.152C67.2388 33.0869 67.3349 33.0218 67.434 32.9547Z" fill="#0F2E36"/>
<path d="M37.7222 55.8453C37.9145 56.1709 38.1067 56.4965 38.3048 56.832C38.5451 56.5715 38.7854 56.311 39.033 56.0427C39.1292 56.1078 39.2253 56.1729 39.3243 56.24C39.3836 56.6981 39.4327 57.159 39.47 57.6213C39.4219 57.4911 39.3738 57.3609 39.3243 57.2267C38.6813 57.4772 38.6813 57.4772 38.1592 58.016C38.1111 57.6253 38.063 57.2346 38.0135 56.832C37.9174 56.832 37.8213 56.832 37.7222 56.832C37.6742 57.0274 37.6261 57.2227 37.5766 57.424C37.4804 57.0333 37.3843 56.6426 37.2853 56.24C37.4295 56.1098 37.5737 55.9795 37.7222 55.8453Z" fill="#4A96BC"/>
<path d="M64.958 45.7813C65.0541 45.7813 65.1502 45.7813 65.2493 45.7813C64.814 47.1161 63.8645 47.9281 62.9189 48.544C62.7747 48.4789 62.6306 48.4138 62.482 48.3467C62.7247 48.0178 62.9675 47.6889 63.2102 47.36C63.3589 47.1402 63.3589 47.1402 63.5106 46.916C63.8155 46.5429 63.9763 46.4578 64.3754 46.3733C64.5376 46.3184 64.5376 46.3184 64.7031 46.2623C64.7872 46.2339 64.8713 46.2054 64.958 46.176C64.958 46.0458 64.958 45.9155 64.958 45.7813Z" fill="#203E3F"/>
<path d="M65.3949 36.9013C65.8318 37.0987 65.8318 37.0987 66.0776 37.6413C66.3983 38.721 66.303 39.9039 66.2687 41.0453C66.0765 41.1105 65.8842 41.1756 65.6862 41.2427C65.7342 40.7217 65.7823 40.2008 65.8318 39.664C65.7837 39.664 65.7357 39.664 65.6862 39.664C65.637 39.3805 65.5886 39.0968 65.5405 38.813C65.5135 38.655 65.4865 38.4971 65.4586 38.3343C65.3894 37.8499 65.3949 37.393 65.3949 36.9013Z" fill="#051417"/>
<path d="M64.0841 23.2853C64.4482 23.5443 64.4482 23.5443 64.8123 24.0747C64.9032 24.8093 64.9114 25.5121 64.8123 26.2453C64.5893 26.6084 64.5893 26.6084 64.3754 26.8373C64.2792 26.3164 64.1831 25.7954 64.0841 25.2587C63.988 25.2587 63.8918 25.2587 63.7928 25.2587C63.8889 24.6075 63.985 23.9563 64.0841 23.2853Z" fill="#13333B"/>
<path d="M51.1216 21.5093C51.3139 21.5093 51.5061 21.5093 51.7042 21.5093C51.7042 21.9652 51.7042 22.421 51.7042 22.8907C51.8003 22.8907 51.8965 22.8907 51.9955 22.8907C51.9955 23.3465 51.9955 23.8024 51.9955 24.272C51.8032 24.3371 51.611 24.4022 51.4129 24.4693C51.3356 24.0875 51.2601 23.7051 51.1853 23.3223C51.1431 23.1094 51.1009 22.8965 51.0573 22.6772C50.976 22.1013 50.976 22.1013 51.1216 21.5093Z" fill="#938E8A"/>
<path d="M57.967 17.76C59.0421 17.6944 59.9034 17.7029 60.8799 18.352C60.928 18.4822 60.976 18.6125 61.0255 18.7467C60.1123 18.6815 59.1991 18.6164 58.2583 18.5493C58.1621 18.2888 58.066 18.0284 57.967 17.76Z" fill="#607F85"/>
<path d="M31.6051 43.808C31.7628 43.985 31.7628 43.985 31.9237 44.1657C32.2911 44.5528 32.6582 44.877 33.0616 45.1893C32.5648 45.1893 32.0958 45.0924 31.6051 44.992C31.6051 45.1222 31.6051 45.2525 31.6051 45.3867C31.9416 45.4518 32.278 45.5169 32.6246 45.584C32.4805 45.8445 32.3363 46.105 32.1877 46.3733C31.7187 46.1542 31.6111 45.9937 31.3684 45.3867C31.2693 45.0936 31.2693 45.0936 31.1682 44.7947C31.0721 44.6644 30.9759 44.5342 30.8769 44.4C31.1172 44.2046 31.3575 44.0093 31.6051 43.808Z" fill="#0D2224"/>
<path d="M34.518 32.56C34.9517 32.6253 35.2191 32.7325 35.5831 33.0657C35.9435 33.771 35.8705 34.2791 35.8288 35.1253C35.6366 35.0602 35.4443 34.9951 35.2462 34.928C35.2372 34.7774 35.2282 34.6268 35.2189 34.4717C35.1342 33.8958 35.1342 33.8958 34.7274 33.5837C34.6102 33.5063 34.4931 33.429 34.3724 33.3493C34.4204 33.0889 34.4685 32.8284 34.518 32.56Z" fill="#4F7D8C"/>
<path d="M41.8003 16.576C41.7522 16.7714 41.7042 16.9667 41.6547 17.168C41.3537 17.3553 41.3537 17.3553 40.9902 17.501C40.8698 17.5506 40.7495 17.6002 40.6255 17.6513C40.5325 17.6872 40.4396 17.7231 40.3439 17.76C40.488 18.053 40.488 18.053 40.6351 18.352C40.4429 18.6125 40.2506 18.873 40.0526 19.1413C39.9564 19.0762 39.8603 19.0111 39.7613 18.944C39.6651 19.0742 39.569 19.2045 39.47 19.3387C39.4154 18.8083 39.4154 18.8083 39.47 18.1547C40.1287 17.2409 40.8327 16.576 41.8003 16.576Z" fill="#5B899C"/>
<path d="M30.8769 38.48C31.0211 38.48 31.1653 38.48 31.3138 38.48C31.3176 38.5968 31.3213 38.7135 31.3252 38.8338C31.38 39.8684 31.4612 40.5006 32.042 41.2427C32.3503 41.5015 32.3503 41.5015 32.6246 41.6373C32.5766 41.7676 32.5285 41.8978 32.479 42.032C32.0369 41.9655 31.7877 41.8732 31.4322 41.5017C31.1285 40.9767 31.0057 40.5012 30.8769 39.8613C30.8288 39.8613 30.7808 39.8613 30.7312 39.8613C30.725 39.4668 30.7253 39.0719 30.7312 38.6773C30.7793 38.6122 30.8274 38.5471 30.8769 38.48Z" fill="#01090A"/>
<path d="M40.9264 61.9627C40.9745 61.9627 41.0225 61.9627 41.072 61.9627C41.0515 62.2505 41.0301 62.5383 41.0083 62.826C40.9965 62.9863 40.9847 63.1465 40.9725 63.3116C40.9264 63.7387 40.9264 63.7387 40.7808 64.1333C40.1079 64.1333 39.435 64.1333 38.7417 64.1333C38.6937 63.8077 38.6456 63.4821 38.5961 63.1467C38.7403 63.0815 38.8844 63.0164 39.033 62.9493C39.1772 63.2098 39.3214 63.4703 39.4699 63.7387C39.6141 63.6084 39.7583 63.4782 39.9069 63.344C40.0511 63.4091 40.1953 63.4742 40.3438 63.5413C40.5361 63.0204 40.7283 62.4994 40.9264 61.9627Z" fill="#1A3440"/>
<path d="M37.7222 60.7787C37.7703 60.7787 37.8183 60.7787 37.8679 60.7787C37.8718 61.3008 37.8747 61.8229 37.877 62.345C37.8782 62.4939 37.8794 62.6429 37.8807 62.7963C37.8819 63.1763 37.8755 63.5562 37.8679 63.936C37.7222 64.1333 37.7222 64.1333 37.262 64.1526C37.0744 64.1503 36.8868 64.148 36.6936 64.1457C36.5057 64.1439 36.3177 64.1421 36.1241 64.1403C35.9786 64.138 35.8331 64.1357 35.6832 64.1333C35.4993 63.6351 35.5232 63.2824 35.5284 62.7273C35.5297 62.5477 35.5311 62.3682 35.5324 62.1831C35.5341 62.0453 35.5358 61.9074 35.5375 61.7653C35.6817 61.863 35.6817 61.863 35.8288 61.9627C35.8258 62.1825 35.8228 62.4022 35.8197 62.6287C35.7904 63.3109 35.7904 63.3109 35.9745 63.7387C36.0657 63.7221 36.157 63.7056 36.251 63.6886C36.37 63.6685 36.489 63.6484 36.6117 63.6277C36.73 63.6071 36.8482 63.5865 36.9701 63.5652C37.2853 63.5413 37.2853 63.5413 37.5766 63.7387C37.6246 62.7619 37.6727 61.7851 37.7222 60.7787Z" fill="#1B3744"/>
<path d="M48.2087 47.36C48.5452 47.36 48.8816 47.36 49.2283 47.36C49.2763 48.4019 49.3244 49.4438 49.3739 50.5173C49.47 50.3871 49.5662 50.2569 49.6652 50.1227C49.8574 50.2529 50.0497 50.3831 50.2478 50.5173C50.2478 50.6476 50.2478 50.7778 50.2478 50.912C49.9113 51.0422 49.5749 51.1725 49.2283 51.3067C48.9375 50.9128 49.0229 50.1588 49.0007 49.617C48.9944 49.4767 48.9881 49.3364 48.9816 49.1919C48.9661 48.8444 48.9515 48.4969 48.937 48.1493C48.5765 47.954 48.5765 47.954 48.2087 47.7547C48.2087 47.6244 48.2087 47.4942 48.2087 47.36Z" fill="#D1D1D1"/>
<path d="M59.4235 32.7573C59.8457 32.8496 59.9866 32.9284 60.2973 33.3493C60.2493 33.6098 60.2012 33.8703 60.1517 34.1387C59.5749 34.1387 58.9982 34.1387 58.4039 34.1387C58.5001 33.8131 58.5962 33.4875 58.6952 33.152C58.9956 33.004 58.9956 33.004 59.2778 32.9547C59.3259 32.8896 59.3739 32.8244 59.4235 32.7573Z" fill="#55849A"/>
<path d="M52.2868 14.208C52.1816 14.3423 52.0765 14.4766 51.9682 14.615C51.5875 15.1249 51.2971 15.6818 51.0067 16.2893C50.8303 16.576 50.8303 16.576 50.3934 16.7733C50.5026 15.836 50.5026 15.836 50.8303 15.392C50.7839 14.976 50.7839 14.976 50.6847 14.6027C51.214 14.1437 51.6708 14.1759 52.2868 14.208Z" fill="#567C8D"/>
<path d="M62.1907 40.848C63.0554 41.9896 63.0554 41.9896 63.089 42.8737C63.09 43.1332 63.0909 43.3927 63.0919 43.66C63.0939 43.9174 63.096 44.1748 63.0981 44.4401C63.0659 45.1593 62.9667 45.7061 62.7733 46.3733C62.7252 46.3733 62.6771 46.3733 62.6276 46.3733C62.6327 46.1894 62.6377 46.0055 62.643 45.816C62.6703 44.0694 62.545 42.5427 62.1907 40.848Z" fill="#EBEDEF"/>
<path d="M34.3724 37.0987C34.5382 37.7728 34.4771 37.9965 34.3724 38.6773C34.3555 39.1415 34.3469 39.6063 34.3451 40.071C34.343 40.3093 34.3409 40.5477 34.3388 40.7933C34.3709 41.4117 34.4449 41.7034 34.6637 42.2293C34.6637 42.4247 34.6637 42.6201 34.6637 42.8213C34.2267 42.624 34.2267 42.624 34.0566 42.2155C33.9065 41.4992 33.8874 40.8215 33.8899 40.0833C33.8876 39.9488 33.8852 39.8142 33.8828 39.6756C33.8821 38.6798 34.0467 37.9906 34.3724 37.0987Z" fill="#DFE5E7"/>
<path d="M33.3529 32.3627C33.449 32.3627 33.5451 32.3627 33.6442 32.3627C33.5181 33.2698 33.1622 33.9893 32.8249 34.7792C32.6326 35.301 32.5405 35.7353 32.479 36.3093C32.3348 36.3093 32.1906 36.3093 32.0421 36.3093C32.0805 34.9042 32.4252 33.8735 33.0616 32.7573C33.1577 32.7573 33.2538 32.7573 33.3529 32.7573C33.3529 32.6271 33.3529 32.4969 33.3529 32.3627Z" fill="#051015"/>
<path d="M67.4339 31.7707C67.5301 31.7707 67.6262 31.7707 67.7252 31.7707C68.1058 33.3714 68.0226 35.748 67.5796 37.296C67.4354 37.3611 67.2912 37.4262 67.1426 37.4933C67.2127 36.392 67.3528 35.4011 67.5796 34.336C67.6042 33.785 67.6042 33.785 67.5796 33.3493C67.4834 33.2842 67.3873 33.2191 67.2883 33.152C67.3363 32.6962 67.3844 32.2403 67.4339 31.7707Z" fill="#244D57"/>
<path d="M53.3063 20.3253C53.4024 20.3253 53.4986 20.3253 53.5976 20.3253C53.4522 21.7122 53.2748 23.063 52.7237 24.272C52.5075 24.4674 52.5075 24.4674 52.2868 24.6667C52.3379 24.5364 52.3889 24.4062 52.4416 24.272C52.6259 23.4725 52.5353 22.9235 52.4324 22.1013C52.5766 22.1013 52.7208 22.1013 52.8694 22.1013C52.8964 21.7717 52.8964 21.7717 52.924 21.4353C53.015 20.72 53.015 20.72 53.3063 20.3253Z" fill="#25201D"/>
<path d="M46.1697 47.7547C46.2177 47.7547 46.2658 47.7547 46.3153 47.7547C46.3634 48.6012 46.4114 49.4478 46.461 50.32C46.9416 50.32 47.4222 50.32 47.9174 50.32C48.0136 50.5805 48.1097 50.841 48.2087 51.1093C47.5358 51.1093 46.863 51.1093 46.1697 51.1093C46.1697 50.0023 46.1697 48.8953 46.1697 47.7547Z" fill="#CBCBCB"/>
<path d="M64.3754 42.8213C64.495 43.2751 64.5406 43.5285 64.43 43.993C64.064 44.7368 63.6959 45.2989 63.0646 45.584C63.1126 45.063 63.1607 44.5421 63.2102 44.0053C63.3814 43.9809 63.3814 43.9809 63.5561 43.956C63.9584 43.8628 63.9584 43.8628 64.1205 43.4133C64.1566 43.2831 64.1926 43.1529 64.2297 43.0187C64.2778 42.9535 64.3259 42.8884 64.3754 42.8213Z" fill="#050D10"/>
<path d="M67.4339 35.7173C67.3455 37.035 67.0296 38.2237 66.7057 39.4667C66.6576 39.4667 66.6096 39.4667 66.5601 39.4667C66.5443 38.9895 66.5328 38.5134 66.5236 38.036C66.5188 37.9014 66.5139 37.7669 66.5089 37.6282C66.4989 36.9343 66.5211 36.576 66.8354 36.0164C67.1426 35.7173 67.1426 35.7173 67.4339 35.7173Z" fill="#486F7D"/>
<path d="M31.8964 28.8107C32.3705 28.8795 32.4817 29.0122 32.8067 29.5137C32.8908 29.6724 32.9749 29.8311 33.0615 29.9947C33.0135 30.1249 32.9654 30.2551 32.9159 30.3893C32.6792 30.3947 32.4426 30.3985 32.2059 30.4017C32.0082 30.4051 32.0082 30.4051 31.8065 30.4086C31.4594 30.3893 31.4594 30.3893 31.1682 30.192C31.2162 29.9966 31.2643 29.8013 31.3138 29.6C31.687 29.3657 31.687 29.3657 32.042 29.2053C31.994 29.0751 31.9459 28.9449 31.8964 28.8107Z" fill="#548995"/>
<path d="M57.3844 24.6667C57.3844 24.7318 57.3844 24.7969 57.3844 24.864C57.2282 24.9169 57.072 24.9698 56.911 25.0243C56.2714 25.2855 56.2714 25.2855 55.7823 25.8507C55.7273 26.5509 55.7754 27.1526 55.9279 27.824C55.7837 27.824 55.6395 27.824 55.491 27.824C55.235 26.9353 55.1716 26.2105 55.1997 25.2587C55.3138 25.1976 55.428 25.1366 55.5456 25.0737C56.2383 24.6938 56.6257 24.6501 57.3844 24.6667Z" fill="#538AA1"/>
<path d="M56.3649 52.2933C56.9897 52.2933 57.6145 52.2933 58.2583 52.2933C58.2583 53.0748 58.2583 53.8562 58.2583 54.6613C58.2102 54.6613 58.1621 54.6613 58.1126 54.6613C58.1126 54.3357 58.1126 54.0101 58.1126 53.6747C58.0165 53.6095 57.9204 53.5444 57.8213 53.4773C57.9175 53.2169 58.0136 52.9564 58.1126 52.688C57.8723 52.8182 57.632 52.9485 57.3844 53.0827C57.3844 52.9524 57.3844 52.8222 57.3844 52.688C57.2402 52.7857 57.2402 52.7857 57.0931 52.8853C57.0931 53.0807 57.0931 53.2761 57.0931 53.4773C56.9008 53.5425 56.7086 53.6076 56.5105 53.6747C56.4625 53.2188 56.4144 52.763 56.3649 52.2933Z" fill="#6DC7F4"/>
<path d="M34.3724 36.704C34.6607 36.8017 34.6607 36.8017 34.955 36.9013C34.9319 37.0148 34.9088 37.1284 34.885 37.2453C34.8123 37.6728 34.7803 38.0643 34.7632 38.5016C34.7571 38.6504 34.751 38.7992 34.7447 38.9525C34.7361 39.1826 34.7361 39.1826 34.7274 39.4173C34.7211 39.5738 34.7148 39.7302 34.7083 39.8914C34.6929 40.276 34.6782 40.6607 34.6637 41.0453C34.5675 41.0453 34.4714 41.0453 34.3724 41.0453C34.3243 41.1756 34.2762 41.3058 34.2267 41.44C34.2115 39.8473 34.2218 38.2851 34.3724 36.704Z" fill="#435057"/>
<path d="M35.1006 32.3627C35.1487 32.4929 35.1967 32.6231 35.2462 32.7573C35.161 32.7795 35.0758 32.8016 34.9879 32.8244C34.6352 32.9661 34.4254 33.1569 34.1357 33.4603C33.6751 33.9413 33.6751 33.9413 33.3528 33.9413C33.3378 34.0675 33.3228 34.1937 33.3073 34.3237C33.2743 34.458 33.2412 34.5923 33.2072 34.7307C33.063 34.7958 32.9188 34.8609 32.7703 34.928C32.969 33.8999 33.2652 33.324 33.7898 32.56C34.2204 32.2683 34.6261 32.3508 35.1006 32.3627Z" fill="#557D8A"/>
<path d="M65.8318 33.152C65.8799 33.152 65.9279 33.152 65.9775 33.152C65.9814 33.5261 65.9842 33.9002 65.9866 34.2743C65.9883 34.4827 65.9899 34.691 65.9917 34.9057C65.9787 35.4656 65.9264 35.9628 65.8318 36.5067C65.7838 36.3764 65.7357 36.2462 65.6862 36.112C65.3913 35.9833 65.3913 35.9833 65.1036 35.9147C64.9944 35.483 64.9944 35.483 64.9579 34.928C65.2219 34.4223 65.2219 34.4223 65.5405 33.9413C65.6438 33.6826 65.7436 33.4208 65.8318 33.152Z" fill="#618795"/>
<path d="M32.3333 33.9413C32.1877 35.4072 32.1877 35.4072 32.0421 36.112C31.9459 36.112 31.8498 36.112 31.7508 36.112C31.7147 36.226 31.6787 36.3399 31.6415 36.4573C31.4595 36.9013 31.4595 36.9013 30.8769 37.6907C30.925 36.9092 30.973 36.1278 31.0225 35.3227C31.1187 35.5831 31.2148 35.8436 31.3138 36.112C31.6567 35.6087 31.7483 35.3799 31.7781 34.6813C31.7646 34.4127 31.7646 34.4127 31.7508 34.1387C32.0421 33.9413 32.0421 33.9413 32.3333 33.9413Z" fill="#567683"/>
<path d="M38.1227 17.7477C38.2662 17.7494 38.4096 17.7512 38.5574 17.7531C38.7207 17.7565 38.7207 17.7565 38.8874 17.76C38.7913 18.0205 38.6951 18.281 38.5961 18.5493C37.779 18.5493 36.9619 18.5493 36.1201 18.5493C36.8531 17.8045 37.2265 17.7332 38.1227 17.7477Z" fill="#709092"/>
<path d="M52.4324 58.2133C52.5286 58.2785 52.6247 58.3436 52.7237 58.4107C52.4506 59.5453 52.4506 59.5453 52.2868 59.9893C52.1907 59.9893 52.0945 59.9893 51.9955 59.9893C51.9474 60.4452 51.8994 60.901 51.8499 61.3707C51.7057 61.3055 51.5615 61.2404 51.4129 61.1733C51.4129 60.978 51.4129 60.7826 51.4129 60.5813C51.509 60.5813 51.6052 60.5813 51.7042 60.5813C51.6207 60.0155 51.5787 59.8193 51.2673 59.3973C51.6254 58.8774 51.934 58.461 52.4324 58.2133Z" fill="#377390"/>
<path d="M62.218 32.6217C62.3487 32.6888 62.3487 32.6888 62.482 32.7573C62.3859 32.8876 62.2897 33.0178 62.1907 33.152C62.383 33.2171 62.5752 33.2822 62.7733 33.3493C62.6291 33.4796 62.4849 33.6098 62.3364 33.744C62.3844 34.1347 62.4325 34.5254 62.482 34.928C62.0975 34.7978 61.713 34.6675 61.3168 34.5333C61.4047 33.2713 61.4047 33.2713 61.6536 32.7573C61.8994 32.56 61.8994 32.56 62.218 32.6217Z" fill="#497D90"/>
<path d="M49.3739 30.5867C49.518 30.721 49.518 30.721 49.6651 30.858C50.847 31.7254 52.2828 31.7648 53.5976 31.968C53.5976 32.0331 53.5976 32.0982 53.5976 32.1653C50.1686 32.3185 50.1686 32.3185 49.2282 31.1787C49.2763 30.9833 49.3243 30.7879 49.3739 30.5867Z" fill="#898A87"/>
<path d="M41.9459 26.4427C41.8727 27.1703 41.8005 27.7887 41.509 28.416C41.3648 28.5137 41.3648 28.5137 41.2177 28.6133C41.1907 28.8514 41.1907 28.8514 41.1631 29.0943C41.0721 29.6 41.0721 29.6 40.7717 29.859C40.6785 29.9038 40.5854 29.9485 40.4895 29.9947C40.3933 29.8644 40.2972 29.7342 40.1982 29.6C40.3424 29.4698 40.4866 29.3395 40.6351 29.2053C40.7312 29.2704 40.8274 29.3356 40.9264 29.4027C40.8986 29.289 40.8708 29.1752 40.8422 29.0581C40.7707 28.5404 40.8219 28.2973 40.9628 27.8117C40.9996 27.6791 41.0364 27.5466 41.0743 27.4101C41.283 26.8636 41.469 26.4427 41.9459 26.4427Z" fill="#528A9C"/>
<path d="M47.7718 19.1413C48.8772 19.1413 49.9827 19.1413 51.1216 19.1413C51.1216 19.2064 51.1216 19.2716 51.1216 19.3387C50.4488 19.4038 49.7759 19.4689 49.0826 19.536C49.0826 19.7965 49.0826 20.057 49.0826 20.3253C48.65 20.3253 48.2175 20.3253 47.7718 20.3253C47.7718 19.9346 47.7718 19.5439 47.7718 19.1413Z" fill="#919D9D"/>
<path d="M35.2462 34.7307C35.2462 34.9911 35.2462 35.2516 35.2462 35.52C35.1501 35.52 35.054 35.52 34.9549 35.52C34.9549 35.6502 34.9549 35.7805 34.9549 35.9147C34.8107 35.9147 34.6666 35.9147 34.518 35.9147C34.518 36.0449 34.518 36.1751 34.518 36.3093C34.0854 36.2442 33.6529 36.1791 33.2072 36.112C33.1591 36.3074 33.1111 36.5027 33.0615 36.704C32.8431 36.482 32.8431 36.482 32.6246 36.112C32.5973 35.483 32.5973 35.483 32.6246 34.928C32.6727 35.1234 32.7207 35.3187 32.7703 35.52C32.8664 35.52 32.9625 35.52 33.0615 35.52C33.0615 35.6502 33.0615 35.7805 33.0615 35.9147C33.2177 35.8495 33.374 35.7844 33.5349 35.7173C34.0811 35.52 34.0811 35.52 34.6636 35.52C34.6636 35.3246 34.6636 35.1293 34.6636 34.928C34.9549 34.7307 34.9549 34.7307 35.2462 34.7307Z" fill="#4F7888"/>
<path d="M29.5661 33.5467C30.002 33.7436 30.141 33.8924 30.4399 34.336C30.5361 34.2709 30.6322 34.2058 30.7312 34.1387C30.7312 34.7247 30.7312 35.3108 30.7312 35.9147C29.6055 35.0915 29.6055 35.0915 29.4113 34.2867C29.4204 33.744 29.4204 33.744 29.5661 33.5467Z" fill="#011114"/>
<path d="M31.8964 27.6267C31.9925 27.6918 32.0886 27.7569 32.1877 27.824C32.1396 27.9542 32.0916 28.0845 32.042 28.2187C31.8978 28.2838 31.7537 28.3489 31.6051 28.416C31.7973 28.5462 31.9896 28.6765 32.1877 28.8107C32.1015 28.842 32.0153 28.8732 31.9265 28.9055C30.9705 29.2879 30.4287 29.7569 29.9029 30.9443C29.8398 31.0868 29.7767 31.2292 29.7117 31.376C29.6156 31.376 29.5194 31.376 29.4204 31.376C29.641 29.6908 30.9388 28.5681 31.8964 27.6267Z" fill="#36505A"/>
<path d="M43.1111 18.5493C43.1817 18.6234 43.2523 18.6974 43.325 18.7736C44.6582 20.1547 44.6582 20.1547 46.1697 21.1147C45.8315 21.2729 45.6461 21.3379 45.3009 21.1864C44.716 20.7642 44.1958 20.3285 43.6937 19.7333C43.6456 20.2543 43.5976 20.7753 43.548 21.312C43.5 21.312 43.4519 21.312 43.4024 21.312C43.2078 20.3564 43.0742 19.5489 43.1111 18.5493Z" fill="#603032"/>
<path d="M36.5571 32.1653C36.6532 32.2956 36.7493 32.4258 36.8483 32.56C36.7101 33.2219 36.572 33.8806 36.4114 34.5333C36.5556 34.5984 36.6998 34.6636 36.8483 34.7307C36.6561 34.7307 36.4638 34.7307 36.2658 34.7307C36.2177 34.4051 36.1696 34.0795 36.1201 33.744C36.0721 34.1347 36.024 34.5254 35.9745 34.928C35.9264 34.928 35.8783 34.928 35.8288 34.928C35.8322 34.7759 35.8356 34.6238 35.8391 34.467C35.8417 34.2691 35.8443 34.0712 35.847 33.8673C35.8504 33.6704 35.8538 33.4736 35.8573 33.2707C35.8685 32.7252 35.8685 32.7252 35.5375 32.3627C36.0291 32.2393 36.0291 32.2393 36.5571 32.1653Z" fill="#0A252C"/>
<path d="M56.9474 49.3333C56.9955 49.3333 57.0436 49.3333 57.0931 49.3333C57.1412 49.6589 57.1892 49.9845 57.2387 50.32C57.8155 50.3851 58.3923 50.4502 58.9865 50.5173C58.9865 50.8429 58.9865 51.1685 58.9865 51.504C58.3136 51.3738 57.6407 51.2435 56.9474 51.1093C56.9474 50.5232 56.9474 49.9372 56.9474 49.3333Z" fill="#C5C4C5"/>
<path d="M46.4609 42.624C46.9896 42.624 47.5183 42.624 48.063 42.624C48.063 42.9496 48.063 43.2752 48.063 43.6107C47.5343 43.6107 47.0057 43.6107 46.4609 43.6107C46.4609 43.2851 46.4609 42.9595 46.4609 42.624Z" fill="#717171"/>
<path d="M36.4114 27.824C36.4595 27.824 36.5075 27.824 36.5571 27.824C36.5571 28.6706 36.5571 29.5171 36.5571 30.3893C35.6249 30.2922 35.6249 30.2922 35.1825 29.785C35.1074 29.6588 35.0323 29.5327 34.955 29.4027C35.1472 29.4027 35.3395 29.4027 35.5375 29.4027C35.5375 29.1422 35.5375 28.8817 35.5375 28.6133C35.7298 28.6785 35.922 28.7436 36.1201 28.8107C36.0721 29.1363 36.024 29.4619 35.9745 29.7973C36.1187 29.7973 36.2629 29.7973 36.4114 29.7973C36.4114 29.1461 36.4114 28.4949 36.4114 27.824Z" fill="#608EA1"/>
<path d="M61.0255 21.5093C60.5886 21.7067 60.5886 21.7067 60.1516 21.5217C58.9505 21.0204 57.7966 21.263 56.6561 21.904C57.62 19.9451 59.7264 20.5137 61.0255 21.5093Z" fill="#A9D1E3"/>
<path d="M38.0135 19.9307C38.8042 20.0164 39.2818 20.2519 39.9069 20.9173C39.955 21.0476 40.0031 21.1778 40.0526 21.312C39.9204 21.2469 39.7882 21.1818 39.6521 21.1147C38.6256 20.7153 37.4457 20.8033 36.4114 21.1147C36.9014 20.5305 37.386 20.3405 38.0135 20.128C38.0135 20.0629 38.0135 19.9978 38.0135 19.9307Z" fill="#54798E"/>
<path d="M35.5375 45.584C36.1143 45.584 36.691 45.584 37.2853 45.584C37.2853 45.6491 37.2853 45.7142 37.2853 45.7813C36.7566 45.7813 36.2279 45.7813 35.6832 45.7813C35.6997 46.3653 35.7182 46.9489 35.7378 47.5327C35.7423 47.6988 35.7468 47.8649 35.7514 48.036C35.7571 48.195 35.7627 48.354 35.7685 48.5178C35.7731 48.6645 35.7777 48.8113 35.7824 48.9625C35.8076 49.3807 35.8076 49.3807 36.1201 49.728C36.0655 50.3447 36.0655 50.3447 35.9745 50.912C35.5972 50.5564 35.5345 50.3027 35.4283 49.691C35.3319 48.3311 35.4585 46.9415 35.5375 45.584Z" fill="#EBEBEB"/>
<path d="M39.7613 32.1653C40.2577 32.7345 40.47 33.0278 40.6078 33.9043C40.6168 34.1119 40.6258 34.3195 40.6351 34.5333C40.4909 34.631 40.4909 34.631 40.3438 34.7307C40.2898 34.5516 40.2357 34.3725 40.18 34.188C39.8564 33.4281 39.6081 33.1542 39.033 32.7573C38.6395 32.643 38.2713 32.5977 37.8679 32.56C37.8679 32.4949 37.8679 32.4298 37.8679 32.3627C38.0742 32.3573 38.2805 32.3535 38.4869 32.3503C38.6592 32.3469 38.6592 32.3469 38.835 32.3434C39.1651 32.3619 39.445 32.4352 39.7613 32.56C39.7613 32.4298 39.7613 32.2995 39.7613 32.1653Z" fill="#1F5057"/>
<path d="M39.7249 21.1147C39.8811 21.2449 40.0373 21.3751 40.1982 21.5093C39.9069 21.7067 39.9069 21.7067 39.4063 21.5217C38.5561 21.2127 37.5824 21.0674 36.7545 21.5247C36.4114 21.7067 36.4114 21.7067 35.9745 21.5093C37.164 20.5977 38.4577 20.2639 39.7249 21.1147Z" fill="#B0D7E9"/>
<path d="M52.3141 20.0047C52.4448 20.0657 52.4448 20.0657 52.5781 20.128C51.6052 20.8881 50.7918 21.2763 49.6652 21.312C49.7132 21.0515 49.7613 20.791 49.8108 20.5227C50.2486 20.3789 50.6131 20.3271 51.067 20.3377C51.5998 20.3243 51.8221 19.8904 52.3141 20.0047Z" fill="#ADA9A6"/>
<path d="M50.539 16.7733C50.9274 17.0364 51.3158 17.2996 51.7042 17.5627C51.4158 17.758 51.4158 17.758 51.1216 17.9573C51.1216 17.8271 51.1216 17.6969 51.1216 17.5627C50.9294 17.6278 50.7371 17.6929 50.539 17.76C50.539 17.8902 50.539 18.0205 50.539 18.1547C50.4429 18.1547 50.3468 18.1547 50.2477 18.1547C50.1516 18.4803 50.0555 18.8059 49.9564 19.1413C49.7161 19.1413 49.4758 19.1413 49.2282 19.1413C49.3243 18.946 49.4205 18.7506 49.5195 18.5493C49.6156 18.5493 49.7118 18.5493 49.8108 18.5493C49.8228 18.4028 49.8348 18.2563 49.8472 18.1053C49.9768 17.4616 50.1727 17.2056 50.539 16.7733Z" fill="#133C45"/>
<path d="M59.7147 52.2933C60.2434 52.2933 60.7721 52.2933 61.3168 52.2933C61.3649 52.4887 61.4129 52.6841 61.4625 52.8853C61.2912 52.9159 61.2912 52.9159 61.1166 52.947C60.6861 53.0385 60.6861 53.0385 60.4429 53.6747C60.3949 53.3491 60.3468 53.0235 60.2973 52.688C60.088 53.2553 59.9854 53.8543 59.8604 54.464C59.8123 54.464 59.7642 54.464 59.7147 54.464C59.7147 53.7477 59.7147 53.0314 59.7147 52.2933Z" fill="#6CC9F9"/>
<path d="M49.6652 52.096C50.4822 52.096 51.2993 52.096 52.1411 52.096C52.4214 53.0644 52.672 54.0404 52.9058 55.0313C52.9835 55.3602 52.9835 55.3602 53.0628 55.6958C53.1607 56.24 53.1607 56.24 53.015 56.6347C52.6889 56.1929 52.6471 55.9754 52.536 55.3813C52.5041 55.2134 52.4721 55.0455 52.4393 54.8726C52.407 54.697 52.3747 54.5215 52.3414 54.3407C52.2913 54.0751 52.2913 54.0751 52.2401 53.8042C52.1577 53.3667 52.0765 52.9287 51.9955 52.4907C51.2265 52.4256 50.4575 52.3604 49.6652 52.2933C49.6652 52.2282 49.6652 52.1631 49.6652 52.096Z" fill="#7FBDD8"/>
<path d="M51.9955 21.1147C52.1397 21.1147 52.2839 21.1147 52.4324 21.1147C52.4805 21.5705 52.5286 22.0263 52.5781 22.496C52.6261 22.496 52.6742 22.496 52.7237 22.496C52.7601 23.606 52.7601 23.606 52.4324 24.272C52.3363 24.272 52.2402 24.272 52.1411 24.272C52.0886 23.7829 52.0372 23.2937 51.9864 22.8043C51.9713 22.6648 51.9562 22.5253 51.9406 22.3815C51.9042 22.0261 51.8764 21.6691 51.8499 21.312C51.8979 21.2469 51.946 21.1818 51.9955 21.1147Z" fill="#9B9793"/>
<path d="M43.1111 21.7067C43.548 21.904 43.548 21.904 43.7016 22.284C43.8203 22.7519 43.9263 23.1912 43.985 23.68C43.7938 24.1857 43.7938 24.1857 43.548 24.4693C43.4038 24.0786 43.2596 23.6879 43.1111 23.2853C42.9669 23.2853 42.8227 23.2853 42.6741 23.2853C42.6261 23.09 42.578 22.8946 42.5285 22.6933C42.6246 22.6933 42.7208 22.6933 42.8198 22.6933C42.8198 22.5631 42.8198 22.4329 42.8198 22.2987C42.9159 22.2987 43.012 22.2987 43.1111 22.2987C43.1111 22.1033 43.1111 21.9079 43.1111 21.7067Z" fill="#CED0D0"/>
<path d="M48.5 58.4107C48.6442 58.4107 48.7884 58.4107 48.9369 58.4107C48.9369 58.6712 48.9369 58.9316 48.9369 59.2C48.264 59.2651 47.5911 59.3302 46.8979 59.3973C46.8498 59.5927 46.8017 59.7881 46.7522 59.9893C46.6561 59.9242 46.56 59.8591 46.4609 59.792C46.509 59.4664 46.5571 59.1408 46.6066 58.8053C47.1977 58.6112 47.7482 58.608 48.3543 58.608C48.4024 58.5429 48.4505 58.4778 48.5 58.4107Z" fill="#3D7793"/>
<path d="M35.2462 34.928C35.3904 34.9931 35.5346 35.0582 35.6832 35.1253C35.137 36.0873 35.137 36.0873 34.8093 36.3093C34.8573 36.4396 34.9054 36.5698 34.9549 36.704C34.8107 36.8342 34.6666 36.9645 34.518 37.0987C34.118 37.4764 33.921 37.72 33.6441 38.2827C33.6471 38.0995 33.6501 37.9164 33.6532 37.7277C33.6671 37.0942 33.6671 37.0942 33.4985 36.5067C33.8349 36.5067 34.1714 36.5067 34.518 36.5067C34.518 36.3113 34.518 36.116 34.518 35.9147C34.6622 35.9147 34.8064 35.9147 34.9549 35.9147C34.9549 35.7844 34.9549 35.6542 34.9549 35.52C35.0511 35.52 35.1472 35.52 35.2462 35.52C35.2462 35.3246 35.2462 35.1293 35.2462 34.928Z" fill="#426070"/>
<path d="M65.8682 28.8847C66.5753 29.1965 67.0428 29.9533 67.4339 30.784C67.585 31.5163 67.5736 32.0211 67.4339 32.7573C67.3859 32.7573 67.3378 32.7573 67.2883 32.7573C67.1283 32.1227 66.9825 31.496 66.8604 30.8457C66.7075 30.1994 66.6464 30.0052 66.2688 29.6C65.939 29.4454 65.939 29.4454 65.586 29.3657C65.4095 29.3187 65.4095 29.3187 65.2293 29.2709C65.1398 29.2492 65.0502 29.2276 64.9579 29.2053C65.3949 28.8107 65.3949 28.8107 65.8682 28.8847Z" fill="#5B8A97"/>
<path d="M32.042 29.008C32.0901 29.1382 32.1381 29.2685 32.1877 29.4027C32.0134 29.4719 31.8392 29.5411 31.6597 29.6123C30.9524 29.9636 30.5817 30.5648 30.1486 31.376C30.003 30.784 30.003 30.784 30.094 30.414C30.6407 29.2692 31.0175 28.8719 32.042 29.008Z" fill="#719CA9"/>
<path d="M56.0736 31.5733C56.362 31.5733 56.6504 31.5733 56.9475 31.5733C56.6409 32.5918 56.0384 33.0386 55.3454 33.5467C54.8265 33.7193 54.8265 33.7193 54.4715 33.744C55.1352 32.9697 55.1352 32.9697 55.5183 32.8807C55.6054 32.84 55.6926 32.7993 55.7823 32.7573C55.9723 32.1661 55.9723 32.1661 56.0736 31.5733Z" fill="#A6A6A2"/>
<path d="M48.3544 30.9813C48.3544 31.8279 48.3544 32.6745 48.3544 33.5467C48.066 33.6118 47.7776 33.6769 47.4805 33.744C47.5766 33.5486 47.6728 33.3533 47.7718 33.152C47.8292 32.6934 47.8788 32.2328 47.9174 31.7707C47.6771 31.7707 47.4368 31.7707 47.1892 31.7707C48.0631 30.9813 48.0631 30.9813 48.3544 30.9813Z" fill="#A7A8A6"/>
<path d="M55.1997 21.5093C55.3439 21.7047 55.4881 21.9001 55.6366 22.1013C55.6847 21.9711 55.7327 21.8409 55.7823 21.7067C55.8784 21.7067 55.9745 21.7067 56.0736 21.7067C56.0736 21.9672 56.0736 22.2276 56.0736 22.496C56.2177 22.5611 56.3619 22.6262 56.5105 22.6933C56.3783 22.7747 56.2461 22.8561 56.11 22.94C55.6662 23.2637 55.3874 23.5709 55.054 24.0747C54.8784 23.0991 54.9624 22.4548 55.1997 21.5093Z" fill="#09343C"/>
<path d="M37.7222 56.832C37.8183 56.832 37.9145 56.832 38.0135 56.832C38.1821 57.5174 38.1692 58.0872 38.1592 58.8053C38.1111 58.8053 38.063 58.8053 38.0135 58.8053C37.9654 59.4565 37.9174 60.1077 37.8679 60.7787C37.6756 60.4531 37.4834 60.1275 37.2853 59.792C37.3814 59.792 37.4775 59.792 37.5766 59.792C37.4804 59.3362 37.3843 58.8803 37.2853 58.4107C37.4295 58.4758 37.5737 58.5409 37.7222 58.608C37.6742 58.4126 37.6261 58.2173 37.5766 58.016C37.6167 57.6196 37.6643 57.2243 37.7222 56.832Z" fill="#3D738C"/>
<path d="M48.2087 37.4933C48.3949 37.4811 48.5812 37.4689 48.7731 37.4563C48.9302 37.446 48.9302 37.446 49.0905 37.4355C49.184 37.4546 49.2775 37.4737 49.3739 37.4933C49.7074 38.1712 49.6911 38.4771 49.6652 39.2693C49.6171 39.2693 49.569 39.2693 49.5195 39.2693C49.4714 39.5949 49.4234 39.9205 49.3739 40.256C49.3258 40.256 49.2777 40.256 49.2282 40.256C49.1802 39.6699 49.1321 39.0838 49.0826 38.48C48.7461 38.2846 48.4097 38.0893 48.063 37.888C48.1111 37.7578 48.1592 37.6275 48.2087 37.4933Z" fill="#EFEFEF"/>
<path d="M61.4625 19.7333C60.9611 19.9461 60.5196 19.9318 59.9969 19.906C59.0624 19.8917 58.2663 20.1204 57.3844 20.5227C58.4955 18.9694 60.0262 18.9977 61.4625 19.7333Z" fill="#A3C6D3"/>
<path d="M48.3543 31.376C48.4985 31.4737 48.4985 31.4737 48.6456 31.5733C48.6972 32.0257 48.7102 32.4723 48.727 32.9292C48.7651 33.4258 48.7651 33.4258 49.2282 33.744C49.5758 33.8021 49.9253 33.8413 50.275 33.8673C50.4603 33.8821 50.6456 33.8968 50.8366 33.912C50.9787 33.9217 51.1208 33.9314 51.2672 33.9413C51.2672 34.0065 51.2672 34.0716 51.2672 34.1387C51.1024 34.1341 50.9376 34.1295 50.7677 34.1248C50.5519 34.1211 50.3361 34.1175 50.1203 34.114C49.9572 34.109 49.9572 34.109 49.7909 34.104C49.5061 34.1005 49.2213 34.1183 48.9369 34.1387C48.8408 34.2689 48.7447 34.3992 48.6456 34.5333C48.3905 33.789 48.3216 33.2178 48.3361 32.3997C48.3388 32.2071 48.3414 32.0146 48.3441 31.8162C48.3475 31.6709 48.3509 31.5257 48.3543 31.376Z" fill="#20221E"/>
<path d="M63.7928 29.6C63.8889 29.6 63.9851 29.6 64.0841 29.6C64.0185 29.8882 63.9514 30.1759 63.8839 30.4633C63.8467 30.6236 63.8095 30.7839 63.7712 30.949C63.6472 31.376 63.6472 31.376 63.3559 31.7707C63.3559 31.6404 63.3559 31.5102 63.3559 31.376C63.1156 31.4411 62.8753 31.5062 62.6277 31.5733C62.6757 31.7687 62.7238 31.9641 62.7733 32.1653C62.4369 32.1002 62.1004 32.0351 61.7538 31.968C62.0415 31.5781 62.2669 31.3966 62.6277 31.154C62.7298 31.0843 62.8319 31.0146 62.9372 30.9428C63.2102 30.784 63.2102 30.784 63.5015 30.784C63.5226 30.6619 63.5436 30.5398 63.5653 30.414C63.6472 29.9947 63.6472 29.9947 63.7928 29.6Z" fill="#08272D"/>
<path d="M44.5676 28.2187C45.4586 28.175 46.1865 28.2409 47.0435 28.6133C47.3826 28.6863 47.7223 28.7541 48.0631 28.8107C48.015 29.006 47.9669 29.2014 47.9174 29.4027C47.0466 29.3251 46.3913 29.0976 45.5871 28.6133C45.2489 28.5333 44.9091 28.4632 44.5676 28.416C44.5676 28.3509 44.5676 28.2858 44.5676 28.2187Z" fill="#9DA09E"/>
<path d="M45.7327 48.3467C45.7808 48.3467 45.8289 48.3467 45.8784 48.3467C45.8823 48.7701 45.8851 49.1935 45.8875 49.617C45.8892 49.8528 45.8909 50.0886 45.8926 50.3316C45.8784 50.912 45.8784 50.912 45.7327 51.1093C45.4391 51.1556 45.1445 51.1909 44.8498 51.2203C44.6084 51.2451 44.6084 51.2451 44.3622 51.2704C44.2377 51.2824 44.1132 51.2943 43.985 51.3067C43.985 51.0462 43.985 50.7857 43.985 50.5173C44.2216 50.512 44.4583 50.5082 44.695 50.505C44.8268 50.5027 44.9586 50.5004 45.0944 50.4981C45.4414 50.5173 45.4414 50.5173 45.7327 50.7147C45.7327 49.9332 45.7327 49.1518 45.7327 48.3467Z" fill="#C1C1C2"/>
<path d="M32.6246 43.0187C32.9851 43.214 32.9851 43.214 33.3529 43.4133C33.3529 43.5436 33.3529 43.6738 33.3529 43.808C33.431 43.8528 33.5091 43.8976 33.5895 43.9437C34.0498 44.2883 34.4114 44.7237 34.8093 45.1893C34.7613 45.3196 34.7132 45.4498 34.6637 45.584C33.9097 45.4099 33.4302 44.7343 32.9159 44.0053C32.6975 43.4257 32.6975 43.4257 32.6246 43.0187Z" fill="#031014"/>
<path d="M42.0916 24.272C42.1877 24.272 42.2839 24.272 42.3829 24.272C42.4848 24.5215 42.5845 24.7726 42.6833 25.0243C42.7669 25.2338 42.7669 25.2338 42.8523 25.4475C42.9655 25.8507 42.9655 25.8507 42.8198 26.4427C42.5795 26.5078 42.3392 26.5729 42.0916 26.64C42.0916 25.8586 42.0916 25.0771 42.0916 24.272Z" fill="#091519"/>
<path d="M65.8318 41.0453C65.9279 41.1105 66.0241 41.1756 66.1231 41.2427C65.7592 42.1923 65.4671 42.7829 64.8123 43.4133C64.7162 43.5436 64.6201 43.6738 64.521 43.808C64.3754 42.8707 64.3754 42.8707 64.3754 42.4267C64.7599 42.2964 65.1444 42.1662 65.5405 42.032C65.5886 41.7715 65.6367 41.511 65.6862 41.2427C65.7342 41.1775 65.7823 41.1124 65.8318 41.0453Z" fill="#123033"/>
<path d="M49.6651 21.904C50.0006 22.4592 50.1918 22.9462 50.3479 23.6307C50.4028 23.8672 50.4028 23.8672 50.4588 24.1086C50.4853 24.2276 50.5117 24.3467 50.539 24.4693C50.4429 24.5996 50.3468 24.7298 50.2477 24.864C50.1516 24.4733 50.0555 24.0826 49.9564 23.68C49.8122 23.973 49.8122 23.973 49.6651 24.272C49.569 24.4022 49.4729 24.5325 49.3738 24.6667C49.1563 24.0773 49.3146 23.6896 49.4376 23.0633C49.4794 22.8471 49.5213 22.6309 49.5644 22.4081C49.5977 22.2418 49.6309 22.0754 49.6651 21.904Z" fill="#44413E"/>
<path d="M54.7627 19.3387C54.8108 19.3387 54.8589 19.3387 54.9084 19.3387C54.9163 19.6181 54.9219 19.8977 54.9266 20.1773C54.93 20.333 54.9334 20.4887 54.9368 20.6491C54.905 21.1696 54.8278 21.4683 54.6171 21.904C54.162 22.2493 54.162 22.2493 53.7432 22.496C53.7913 21.9099 53.8394 21.3238 53.8889 20.72C54.0331 20.72 54.1772 20.72 54.3258 20.72C54.2777 20.9154 54.2297 21.1107 54.1802 21.312C54.2763 21.312 54.3724 21.312 54.4715 21.312C54.5676 20.6608 54.6637 20.0096 54.7627 19.3387Z" fill="#E4E6E7"/>
<path d="M53.3063 19.536C53.3981 21.1527 53.3981 21.1527 53.015 21.8177C52.9189 21.9113 52.8228 22.0049 52.7237 22.1013C52.6847 21.91 52.6456 21.7187 52.6054 21.5217C52.5483 21.3222 52.4912 21.1228 52.4324 20.9173C52.2882 20.8522 52.144 20.7871 51.9955 20.72C52.1863 20.5221 52.3776 20.3249 52.569 20.128C52.6754 20.0181 52.7819 19.9082 52.8915 19.795C53.1606 19.536 53.1606 19.536 53.3063 19.536Z" fill="#AE9697"/>
<path d="M53.5157 18.0067C53.5908 18.0555 53.6659 18.1043 53.7432 18.1547C53.5755 18.6417 53.445 18.9534 53.1606 19.3387C52.7739 19.4502 52.39 19.4843 51.9955 19.536C52.0046 19.1907 52.0046 19.1907 52.1411 18.7467C52.567 18.2836 52.9616 17.9297 53.5157 18.0067Z" fill="#DDE1E0"/>
<path d="M62.045 38.6773C62.0931 38.6773 62.1412 38.6773 62.1907 38.6773C62.1757 38.8239 62.1607 38.9704 62.1452 39.1213C62.1492 39.7126 62.1492 39.7126 62.5548 40.0957C62.675 40.2137 62.7951 40.3317 62.9189 40.4533C62.9189 40.5836 62.9189 40.7138 62.9189 40.848C63.1112 40.9131 63.3034 40.9782 63.5015 41.0453C62.4196 41.2991 62.4196 41.2991 61.8994 41.0453C61.8786 39.3539 61.8786 39.3539 62.045 38.6773Z" fill="#4B616B"/>
<path d="M64.8123 29.2053C65.5407 29.2264 66.0996 29.2483 66.7148 29.8097C67.082 30.564 67.109 31.072 67.1426 31.968C66.8396 31.5985 66.6516 31.2587 66.4326 30.784C66.1118 30.1703 65.8844 29.9316 65.3949 29.6C65.2007 29.4684 65.0065 29.3369 64.8123 29.2053Z" fill="#75ABBA"/>
<path d="M63.3559 32.9547C63.7928 33.152 63.7928 33.152 63.9362 33.539C63.973 33.6962 64.0098 33.8534 64.0477 34.0153C64.1051 34.2496 64.1051 34.2496 64.1637 34.4886C64.2297 34.928 64.2297 34.928 64.0841 35.52C63.7928 35.3227 63.7928 35.3227 63.5015 34.7307C63.4534 34.7307 63.4054 34.7307 63.3559 34.7307C63.192 33.3987 63.192 33.3987 63.3559 32.9547Z" fill="#628E9D"/>
<path d="M53.015 23.68C53.1111 23.7451 53.2073 23.8102 53.3063 23.8773C53.2461 24.8285 52.9596 25.2409 52.4324 25.8507C52.3363 25.8507 52.2402 25.8507 52.1411 25.8507C52.0228 25.5177 52.0228 25.5177 51.9955 25.0613C52.3323 24.5433 52.3323 24.5433 52.7237 24.0747C52.8198 23.9444 52.916 23.8142 53.015 23.68Z" fill="#D2D9D2"/>
<path d="M56.0736 60.5813C56.2658 60.6464 56.4581 60.7116 56.6561 60.7787C56.5723 61.2494 56.4781 61.6996 56.3648 62.16C56.458 62.2129 56.5511 62.2658 56.647 62.3203C56.9474 62.5547 56.9474 62.5547 57.0931 63.1467C56.9489 63.2118 56.8047 63.2769 56.6561 63.344C56.3648 63.0727 56.3648 63.0727 56.0736 62.5547C56.0214 61.892 56.0399 61.2453 56.0736 60.5813Z" fill="#1A3D49"/>
<path d="M53.7432 47.36C53.7913 47.36 53.8394 47.36 53.8889 47.36C53.9627 47.7667 54.0353 48.1738 54.1073 48.581C54.1479 48.8076 54.1884 49.0343 54.2302 49.2678C54.3134 49.8401 54.3452 50.332 54.3258 50.912C54.1336 50.912 53.9413 50.912 53.7432 50.912C53.7432 49.7398 53.7432 48.5677 53.7432 47.36Z" fill="#2D2A2B"/>
<path d="M56.0736 33.152C56.2192 33.5467 56.2192 33.5467 56.0827 34.1633C56.0316 34.3506 55.9806 34.5378 55.9279 34.7307C55.4954 34.6656 55.0628 34.6004 54.6171 34.5333C55.0527 33.8751 55.4811 33.5169 56.0736 33.152Z" fill="#A2A2A0"/>
<path d="M40.0526 22.496C40.8741 22.5755 41.2228 22.9339 41.8003 23.68C42.0156 24.2634 41.9547 24.8131 41.946 25.456C41.9069 25.3461 41.8679 25.2362 41.8276 25.123C41.7705 24.9724 41.7135 24.8218 41.6547 24.6667C41.6036 24.5039 41.5525 24.3411 41.4999 24.1733C41.082 23.4426 40.534 23.2095 39.9069 22.8907C39.955 22.7604 40.003 22.6302 40.0526 22.496Z" fill="#3C6D7A"/>
<path d="M43.0929 17.501C43.548 17.5627 43.548 17.5627 43.8302 17.8957C44.0228 18.4635 43.9718 18.751 43.8393 19.3387C43.548 19.0797 43.548 19.0797 43.2567 18.7467C43.2567 18.5513 43.2567 18.356 43.2567 18.1547C43.1606 18.1547 43.0645 18.1547 42.9654 18.1547C42.9174 18.4803 42.8693 18.8059 42.8198 19.1413C42.7717 19.1413 42.7237 19.1413 42.6741 19.1413C42.6187 18.6823 42.5703 18.2217 42.5285 17.76C42.6741 17.5627 42.6741 17.5627 43.0929 17.501Z" fill="#C5CAC8"/>
<path d="M40.9264 55.056C41.2213 55.4374 41.4247 55.7726 41.6546 56.24C41.5585 56.24 41.4624 56.24 41.3633 56.24C41.3153 56.4354 41.2672 56.6307 41.2177 56.832C40.8813 56.7669 40.5448 56.7018 40.1982 56.6347C40.3709 55.9687 40.5296 55.5203 40.9264 55.056Z" fill="#50A3CC"/>
<path d="M36.5571 50.912C36.9394 50.9014 37.3216 50.8935 37.704 50.8873C37.8127 50.884 37.9214 50.8807 38.0334 50.8773C38.3182 50.8738 38.603 50.8916 38.8874 50.912C38.9835 51.0422 39.0797 51.1725 39.1787 51.3067C38.7341 51.481 38.3303 51.5362 37.8679 51.541C37.7447 51.5438 37.6216 51.5466 37.4947 51.5495C37.1172 51.5011 36.8818 51.367 36.5571 51.1093C36.5571 51.0442 36.5571 50.9791 36.5571 50.912Z" fill="#696969"/>
<path d="M63.7928 35.9147C63.8889 35.9147 63.985 35.9147 64.0841 35.9147C64.1321 36.11 64.1802 36.3054 64.2297 36.5067C63.2466 36.9013 63.2466 36.9013 62.9189 36.9013C62.9189 37.0316 62.9189 37.1618 62.9189 37.296C62.8228 37.296 62.7266 37.296 62.6276 37.296C62.6276 37.5565 62.6276 37.817 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3363 38.0853C62.2883 38.2807 62.2402 38.4761 62.1907 38.6773C62.3155 36.9859 62.3155 36.9859 62.6276 36.3093C63.0121 36.3745 63.3966 36.4396 63.7928 36.5067C63.7928 36.3113 63.7928 36.116 63.7928 35.9147Z" fill="#456F80"/>
<path d="M60.2973 32.1653C60.6338 32.1653 60.9702 32.1653 61.3168 32.1653C61.2688 32.3607 61.2207 32.556 61.1712 32.7573C61.1614 33.0654 61.1588 33.374 61.1621 33.6823C61.1634 33.8418 61.1647 34.0013 61.1661 34.1656C61.1678 34.287 61.1695 34.4083 61.1712 34.5333C61.0751 34.2728 60.9789 34.0124 60.8799 33.744C60.7357 33.8091 60.5915 33.8742 60.443 33.9413C60.443 33.6157 60.443 33.2901 60.443 32.9547C60.3468 32.8895 60.2507 32.8244 60.1517 32.7573C60.1997 32.562 60.2478 32.3666 60.2973 32.1653Z" fill="#052128"/>
<path d="M51.8499 24.864C51.0658 25.4193 50.5115 25.6814 49.6288 25.6657C49.4988 25.6639 49.3689 25.6621 49.2351 25.6603C49.1367 25.658 49.0383 25.6557 48.937 25.6533C48.937 25.5231 48.937 25.3929 48.937 25.2587C49.3129 25.1538 49.6892 25.0514 50.0657 24.9503C50.172 24.9204 50.2782 24.8906 50.3877 24.8598C50.9273 24.7169 51.3246 24.6473 51.8499 24.864Z" fill="#E49A9F"/>
<path d="M53.8889 22.8907C53.985 22.9558 54.0811 23.0209 54.1802 23.088C53.9734 24.2086 53.5403 24.9689 53.015 25.8507C52.8708 25.7204 52.7266 25.5902 52.5781 25.456C52.6862 25.2891 52.7943 25.1223 52.9058 24.9503C53.3041 24.3061 53.5945 23.6292 53.8889 22.8907Z" fill="#B3B2AF"/>
<path d="M63.0646 21.5093C63.5859 22.1687 63.9235 22.6416 63.9566 23.6307C63.9506 23.7772 63.9446 23.9237 63.9384 24.0747C63.8573 23.9322 63.7762 23.7898 63.6927 23.643C63.3589 23.093 63.0042 22.5974 62.6276 22.1013C62.7718 21.906 62.916 21.7106 63.0646 21.5093Z" fill="#578898"/>
<path d="M49.5195 17.9573C49.6637 18.0225 49.8079 18.0876 49.9565 18.1547C49.6113 18.7997 49.4256 19.0982 48.8334 19.2277C48.4155 19.2396 48.0369 19.2489 47.6261 19.1413C47.53 18.946 47.4339 18.7506 47.3348 18.5493C47.479 18.4842 47.6232 18.4191 47.7718 18.352C47.8679 18.4171 47.964 18.4822 48.0631 18.5493C48.7357 18.6286 49.0001 18.5155 49.5195 17.9573Z" fill="#09272E"/>
<path d="M42.3829 16.9707C42.2868 17.4265 42.1906 17.8824 42.0916 18.352C41.9955 18.352 41.8994 18.352 41.8003 18.352C41.8003 19.0683 41.8003 19.7846 41.8003 20.5227C41.3634 19.9307 41.3634 19.9307 41.327 19.2523C41.3547 18.717 41.3892 18.2671 41.509 17.76C41.6051 17.76 41.7013 17.76 41.8003 17.76C41.8003 17.5646 41.8003 17.3693 41.8003 17.168C42.0916 16.9707 42.0916 16.9707 42.3829 16.9707Z" fill="#040F18"/>
<path d="M42.8198 16.3787C42.916 16.4438 43.0121 16.5089 43.1111 16.576C43.0631 16.7062 43.015 16.8365 42.9655 16.9707C43.35 16.9707 43.7345 16.9707 44.1307 16.9707C44.1307 17.0358 44.1307 17.1009 44.1307 17.168C44.0323 17.2039 43.9339 17.2397 43.8325 17.2767C43.7026 17.3263 43.5727 17.3759 43.4388 17.427C43.3104 17.4751 43.182 17.5231 43.0497 17.5727C42.6658 17.7642 42.4042 17.9988 42.0916 18.352C42.1724 17.6954 42.2722 17.148 42.5286 16.576C42.6247 16.5109 42.7208 16.4458 42.8198 16.3787Z" fill="#092A2F"/>
<path d="M59.5691 52.096C60.29 52.096 61.011 52.096 61.7538 52.096C61.7538 52.1611 61.7538 52.2262 61.7538 52.2933C61.0809 52.2933 60.408 52.2933 59.7147 52.2933C59.8109 53.4655 59.907 54.6377 60.006 55.8453C59.8618 55.8453 59.7177 55.8453 59.5691 55.8453C59.5691 54.6081 59.5691 53.3708 59.5691 52.096Z" fill="#6BAAC8"/>
<path d="M49.2282 19.7333C49.3244 19.7985 49.4205 19.8636 49.5195 19.9307C49.4234 20.2563 49.3273 20.5819 49.2282 20.9173C48.7476 20.9173 48.267 20.9173 47.7718 20.9173C47.7718 20.722 47.7718 20.5266 47.7718 20.3253C48.2024 20.0336 48.6081 20.1161 49.0826 20.128C49.1307 19.9978 49.1787 19.8675 49.2282 19.7333Z" fill="#B1B3B2"/>
<path d="M48.2087 57.2267C48.2567 57.3569 48.3048 57.4871 48.3543 57.6213C48.4505 57.6213 48.5466 57.6213 48.6456 57.6213C48.6456 57.7516 48.6456 57.8818 48.6456 58.016C47.9727 58.016 47.2999 58.016 46.6066 58.016C46.5585 57.8858 46.5105 57.7555 46.4609 57.6213C46.8154 57.3812 47.1045 57.3609 47.4987 57.313C47.6312 57.2965 47.7638 57.2799 47.9003 57.2629C48.053 57.245 48.053 57.245 48.2087 57.2267Z" fill="#4188AD"/>
<path d="M42.5285 47.36C42.6247 47.4251 42.7208 47.4902 42.8198 47.5573C42.8653 48.093 42.8946 48.6109 42.9109 49.1483C42.9165 49.298 42.9221 49.4477 42.9279 49.602C42.9417 49.9728 42.9537 50.3437 42.9655 50.7147C42.5285 50.5173 42.5285 50.5173 42.2372 49.9253C42.2372 49.73 42.2372 49.5346 42.2372 49.3333C42.3334 49.3333 42.4295 49.3333 42.5285 49.3333C42.5285 48.6821 42.5285 48.0309 42.5285 47.36Z" fill="#E4E3E4"/>
<path d="M35.3919 45.3867C35.44 45.3867 35.488 45.3867 35.5376 45.3867C35.5376 46.4937 35.5376 47.6007 35.5376 48.7413C35.2011 48.6762 34.8647 48.6111 34.518 48.544C34.4219 48.1533 34.3258 47.7626 34.2267 47.36C34.419 47.36 34.6113 47.36 34.8093 47.36C34.8093 47.6856 34.8093 48.0112 34.8093 48.3467C35.0016 48.3467 35.1938 48.3467 35.3919 48.3467C35.3919 47.3699 35.3919 46.3931 35.3919 45.3867Z" fill="#333A3C"/>
<path d="M35.6832 45.7813C36.1638 45.7813 36.6444 45.7813 37.1396 45.7813C37.1396 46.0418 37.1396 46.3023 37.1396 46.5707C36.6572 46.7063 36.6572 46.7063 36.1201 46.768C35.8379 46.509 35.8379 46.509 35.6832 46.176C35.6832 46.0458 35.6832 45.9155 35.6832 45.7813Z" fill="#979797"/>
<path d="M49.2282 27.4293C49.5166 27.4293 49.805 27.4293 50.1021 27.4293C50.1982 27.6898 50.2943 27.9503 50.3934 28.2187C49.223 28.668 49.223 28.668 48.6456 28.416C48.7418 28.416 48.8379 28.416 48.9369 28.416C49.033 28.0904 49.1292 27.7648 49.2282 27.4293Z" fill="#AEB1AC"/>
<path d="M63.2102 24.4693C63.5968 25.3693 63.5645 26.2159 63.5015 27.232C63.3558 27.8487 63.3558 27.8487 63.2102 28.2187C63.1621 28.2187 63.1141 28.2187 63.0646 28.2187C62.9032 26.8635 62.9625 25.7979 63.2102 24.4693Z" fill="#588593"/>
<path d="M54.6171 24.272C54.7133 24.272 54.8094 24.272 54.9084 24.272C54.8604 24.9883 54.8123 25.7046 54.7628 26.4427C54.5225 26.3775 54.2821 26.3124 54.0345 26.2453C54.1038 25.9532 54.1737 25.6614 54.2439 25.3697C54.2828 25.2071 54.3216 25.0446 54.3617 24.8771C54.4715 24.4693 54.4715 24.4693 54.6171 24.272Z" fill="#07100F"/>
<path d="M43.548 19.536C43.8845 19.8616 44.2209 20.1872 44.5676 20.5227C44.4234 20.6203 44.4234 20.6203 44.2763 20.72C44.2763 21.1758 44.2763 21.6317 44.2763 22.1013C44.1801 22.1013 44.084 22.1013 43.985 22.1013C43.9369 21.7106 43.8888 21.3199 43.8393 20.9173C43.7432 21.1127 43.6471 21.308 43.548 21.5093C43.548 20.8581 43.548 20.2069 43.548 19.536Z" fill="#AF8F90"/>
<path d="M48.063 7.49867C48.5063 8.09923 48.5878 8.32969 48.7458 9.11434C48.7824 9.29215 48.819 9.46996 48.8567 9.65315C48.8832 9.78873 48.9096 9.92432 48.9369 10.064C48.6966 10.1291 48.4563 10.1942 48.2087 10.2613C48.1606 9.34966 48.1126 8.43798 48.063 7.49867Z" fill="#4F707B"/>
<path d="M67.2883 37.296C67.4819 38.0832 67.3442 38.7138 67.2246 39.5037C67.1923 39.7256 67.1923 39.7256 67.1594 39.9519C67.1063 40.3167 67.0518 40.681 66.997 41.0453C66.9009 40.9802 66.8047 40.9151 66.7057 40.848C66.6147 40.3423 66.6147 40.3423 66.5601 39.8613C66.6562 39.8613 66.7523 39.8613 66.8513 39.8613C66.8423 39.6212 66.8333 39.3811 66.824 39.1337C66.821 38.366 66.9427 37.9203 67.2883 37.296Z" fill="#163E4B"/>
<path d="M32.479 35.3227C32.494 35.4488 32.509 35.575 32.5245 35.705C32.5575 35.8393 32.5906 35.9736 32.6246 36.112C32.7688 36.1771 32.913 36.2422 33.0616 36.3093C32.8543 36.4925 32.8543 36.4925 32.6428 36.6793C32.0252 37.3603 31.9815 38.2451 31.8964 39.2693C31.8483 39.2693 31.8003 39.2693 31.7507 39.2693C31.6051 37.7647 31.6051 37.7647 31.6051 37.0987C31.7223 36.9766 31.8394 36.8545 31.9601 36.7287C32.364 36.3541 32.364 36.3541 32.4517 35.7667C32.4607 35.6201 32.4697 35.4736 32.479 35.3227Z" fill="#12313A"/>
<path d="M36.5571 35.52C36.9516 35.5039 37.3458 35.4922 37.7404 35.483C37.8512 35.478 37.962 35.4731 38.0761 35.468C38.8004 35.4553 39.2713 35.5879 39.9069 36.112C39.6702 36.3463 39.6702 36.3463 39.3243 36.5067C39.2072 36.4212 39.09 36.3357 38.9693 36.2477C38.1942 35.7502 37.4052 35.7668 36.5571 35.7173C36.5571 35.6522 36.5571 35.5871 36.5571 35.52Z" fill="#DFDFDF"/>
<path d="M36.5571 33.5467C36.6532 33.8071 36.7493 34.0676 36.8484 34.336C37.083 34.3291 37.083 34.3291 37.3223 34.3221C37.5315 34.3184 37.7406 34.3148 37.9498 34.3113C38.0524 34.308 38.155 34.3047 38.2607 34.3013C38.9619 34.2926 39.5378 34.4013 40.1982 34.7307C40.2463 34.8609 40.2944 34.9911 40.3439 35.1253C40.1817 35.0643 40.0194 35.0032 39.8523 34.9403C38.7279 34.5944 37.5595 34.5971 36.4114 34.5333C36.4595 34.2077 36.5076 33.8821 36.5571 33.5467Z" fill="#415C66"/>
<path d="M53.3063 33.5467C53.2102 33.6769 53.114 33.8071 53.015 33.9413C53.3514 33.9413 53.6879 33.9413 54.0345 33.9413C54.0345 34.0065 54.0345 34.0716 54.0345 34.1387C53.4756 34.3171 52.9604 34.3569 52.3869 34.3483C52.2313 34.3466 52.0756 34.3448 51.9153 34.3429C51.7975 34.3406 51.6798 34.3384 51.5585 34.336C51.6306 34.2424 51.7027 34.1488 51.777 34.0523C52.0123 33.7915 52.0123 33.7915 51.9955 33.5467C52.4875 33.38 52.822 33.3279 53.3063 33.5467Z" fill="#AAAAAA"/>
<path d="M58.4312 32.3503C58.5625 32.3521 58.6937 32.3539 58.8289 32.3557C58.929 32.358 59.029 32.3603 59.1321 32.3627C59.1321 32.4278 59.1321 32.4929 59.1321 32.56C58.9322 32.589 58.9322 32.589 58.7282 32.6186C58.4685 32.6629 58.4685 32.6629 58.2036 32.708C58.0313 32.7355 57.8589 32.763 57.6814 32.7913C57.2284 32.891 57.2284 32.891 57.0385 33.3308C56.9364 33.7943 56.8605 34.2536 56.8018 34.7307C56.6576 34.7958 56.5134 34.8609 56.3649 34.928C56.4235 33.8153 56.6802 33.3348 57.2387 32.56C57.6779 32.3617 57.9731 32.3423 58.4312 32.3503Z" fill="#3F6473"/>
<path d="M40.0526 23.2853C40.9653 23.1902 40.9653 23.1902 41.418 23.5937C41.7205 24.2086 41.7589 24.7268 41.8003 25.456C41.7132 25.3013 41.6261 25.1467 41.5363 24.9873C41.0851 24.2537 40.7324 24.0267 40.0526 23.8773C40.0526 23.682 40.0526 23.4866 40.0526 23.2853Z" fill="#C0E8F5"/>
<path d="M43.8394 18.352C44.1998 18.5474 44.1998 18.5474 44.5676 18.7467C44.6157 19.2025 44.6637 19.6584 44.7132 20.128C44.8574 20.128 45.0016 20.128 45.1502 20.128C45.1502 20.2582 45.1502 20.3885 45.1502 20.5227C44.6495 20.2777 44.2255 20.0405 43.8394 19.536C43.721 19.018 43.721 19.018 43.6937 18.5493C43.7418 18.4842 43.7899 18.4191 43.8394 18.352Z" fill="#CDCECB"/>
<path d="M41.6546 17.168C41.5585 17.8843 41.4624 18.6006 41.3633 19.3387C41.3153 19.3387 41.2672 19.3387 41.2177 19.3387C41.2177 18.8828 41.2177 18.427 41.2177 17.9573C41.1696 18.0225 41.1216 18.0876 41.0721 18.1547C40.7797 18.0981 40.4882 18.0326 40.1982 17.9573C40.6591 17.2733 40.9565 17.168 41.6546 17.168Z" fill="#59808F"/>
<path d="M56.3649 32.7573C56.4129 33.5388 56.461 34.3202 56.5105 35.1253C56.2702 35.0602 56.0299 34.9951 55.7823 34.928C55.8784 34.407 55.9745 33.8861 56.0736 33.3493C55.9384 33.4511 55.8032 33.5528 55.6639 33.6577C55.1997 33.9413 55.1997 33.9413 54.7628 33.744C54.9747 33.5785 55.1872 33.4143 55.4 33.2507C55.5774 33.1133 55.5774 33.1133 55.7584 32.9732C56.0736 32.7573 56.0736 32.7573 56.3649 32.7573Z" fill="#222324"/>
<path d="M44.2763 33.3493C44.2763 33.6098 44.2763 33.8703 44.2763 34.1387C44.0122 34.1163 43.7482 34.0911 43.4843 34.0647C43.2638 34.0441 43.2638 34.0441 43.0388 34.023C42.9185 33.9961 42.7981 33.9691 42.6741 33.9413C42.6261 33.8111 42.578 33.6808 42.5285 33.5467C43.1588 33.1068 43.5894 33.1669 44.2763 33.3493Z" fill="#C9C9C9"/>
<path d="M60.8799 21.7067C60.976 21.8369 61.0722 21.9671 61.1712 22.1013C60.6349 22.3704 60.3741 22.1895 59.8604 21.904C59.7162 21.9691 59.572 22.0342 59.4235 22.1013C59.0826 22.0465 58.7424 21.9819 58.4039 21.904C59.0446 21.036 60.1111 21.2239 60.8799 21.7067Z" fill="#57859C"/>
<path d="M51.5586 14.9973C51.7508 14.9973 51.9431 14.9973 52.1411 14.9973C52.1411 15.5834 52.1411 16.1695 52.1411 16.7733C52.045 16.7733 51.9489 16.7733 51.8498 16.7733C51.8498 16.4477 51.8498 16.1221 51.8498 15.7867C51.6095 16.0471 51.3692 16.3076 51.1216 16.576C51.0255 16.5109 50.9294 16.4458 50.8303 16.3787C50.9371 16.1463 51.0469 15.9166 51.158 15.688C51.2189 15.5598 51.2797 15.4316 51.3424 15.2995C51.4494 15.1499 51.4494 15.1499 51.5586 14.9973Z" fill="#0C2A30"/>
<path d="M52.4324 55.2533C52.8373 55.5276 52.8511 55.8821 53.015 56.4373C53.1111 56.5024 53.2073 56.5676 53.3063 56.6347C53.3544 56.5044 53.4024 56.3742 53.4519 56.24C53.5481 56.5005 53.6442 56.761 53.7432 57.0293C53.599 57.127 53.599 57.127 53.4519 57.2267C53.4519 57.0964 53.4519 56.9662 53.4519 56.832C52.9713 56.832 52.4907 56.832 51.9955 56.832C52.0435 56.5715 52.0916 56.311 52.1411 56.0427C52.2373 56.0427 52.3334 56.0427 52.4324 56.0427C52.4324 55.7822 52.4324 55.5217 52.4324 55.2533Z" fill="#4F9CC2"/>
<path d="M35.5375 52.2933C35.5856 52.2933 35.6337 52.2933 35.6832 52.2933C35.6832 53.1399 35.6832 53.9865 35.6832 54.8587C35.8274 54.8587 35.9716 54.8587 36.1201 54.8587C36.0055 55.5316 35.8476 56.1786 35.6832 56.832C35.6351 56.832 35.5871 56.832 35.5375 56.832C35.5375 55.3342 35.5375 53.8365 35.5375 52.2933Z" fill="#68ABCD"/>
<path d="M42.8198 44.992C43.1563 44.992 43.4927 44.992 43.8393 44.992C43.8393 46.5549 43.8393 48.1178 43.8393 49.728C43.6952 49.728 43.551 49.728 43.4024 49.728C43.4255 49.6163 43.4486 49.5045 43.4723 49.3894C43.5492 48.9319 43.5778 48.5098 43.5941 48.0414C43.6002 47.8748 43.6063 47.7082 43.6126 47.5365C43.6184 47.3643 43.6241 47.1921 43.63 47.0147C43.6363 46.8394 43.6426 46.6641 43.649 46.4836C43.6644 46.0522 43.6793 45.6208 43.6937 45.1893C43.4053 45.1893 43.1169 45.1893 42.8198 45.1893C42.8198 45.1242 42.8198 45.0591 42.8198 44.992Z" fill="#535353"/>
<path d="M35.9744 33.3493C36.2657 33.744 36.2657 33.744 36.2839 34.262C36.2779 34.4167 36.2719 34.5713 36.2657 34.7307C36.3619 34.7958 36.458 34.8609 36.557 34.928C36.4658 35.0231 36.3745 35.1183 36.2805 35.2163C36.102 35.4033 36.102 35.4033 35.9198 35.594C35.8015 35.7176 35.6833 35.8413 35.5614 35.9686C35.2401 36.303 35.2401 36.303 34.9549 36.704C34.8588 36.5086 34.7627 36.3133 34.6636 36.112C34.7748 36.0265 34.8859 35.9411 35.0004 35.853C35.4741 35.4703 35.4741 35.4703 35.8288 34.928C35.9086 34.3992 35.9418 33.8893 35.9744 33.3493Z" fill="#040E14"/>
<path d="M39.4699 33.5467C39.6622 33.8071 39.8545 34.0676 40.0525 34.336C40.0045 34.4662 39.9564 34.5965 39.9069 34.7307C39.8117 34.7004 39.7165 34.6701 39.6184 34.6389C39.0687 34.5069 38.5248 34.4635 37.968 34.4223C37.8601 34.4138 37.7523 34.4053 37.6411 34.3965C37.3769 34.3757 37.1126 34.3558 36.8483 34.336C36.8483 34.2709 36.8483 34.2058 36.8483 34.1387C38.0739 34.041 38.0739 34.041 39.3243 33.9413C39.3724 33.8111 39.4204 33.6808 39.4699 33.5467Z" fill="#4C7485"/>
<path d="M33.2072 30.9813C33.3034 30.9813 33.3995 30.9813 33.4985 30.9813C33.5895 31.5363 33.5895 31.5363 33.6442 32.1653C33.5 32.4584 33.5 32.4584 33.3529 32.7573C33.2567 32.7573 33.1606 32.7573 33.0616 32.7573C32.8398 33.3369 32.6536 33.9249 32.479 34.5333C32.3381 34.026 32.3092 33.8184 32.4733 33.3131C32.5753 33.0929 32.5753 33.0929 32.6793 32.8683C32.9706 32.2344 33.1243 31.7222 33.2072 30.9813Z" fill="#13333D"/>
<path d="M41.946 24.6667C41.994 24.6667 42.0421 24.6667 42.0916 24.6667C42.0995 25.1354 42.1053 25.6039 42.1098 26.0727C42.1122 26.2039 42.1147 26.3352 42.1172 26.4704C42.1234 27.3275 42.0587 28.0254 41.8003 28.8107C41.418 29.082 41.418 29.082 41.0721 29.2053C41.1201 28.9449 41.1682 28.6844 41.2177 28.416C41.3139 28.416 41.41 28.416 41.509 28.416C41.8198 27.1808 41.8862 25.9647 41.946 24.6667Z" fill="#1A3940"/>
<path d="M33.4985 24.864C33.8778 25.3779 33.8634 25.7314 33.9354 26.4427C33.9684 26.6136 34.0015 26.7845 34.0355 26.9607C34.0894 27.5158 34.0066 27.7521 33.7898 28.2187C33.4606 27.5093 33.4681 26.923 33.4803 26.0973C33.4842 25.7509 33.4842 25.7509 33.4882 25.3974C33.4916 25.2214 33.495 25.0454 33.4985 24.864Z" fill="#508594"/>
<path d="M44.7132 15.7867C44.8093 15.7867 44.9055 15.7867 45.0045 15.7867C45.0045 16.0471 45.0045 16.3076 45.0045 16.576C45.4371 16.6737 45.4371 16.6737 45.8784 16.7733C45.9264 16.578 45.9745 16.3826 46.024 16.1813C46.1682 16.2465 46.3124 16.3116 46.461 16.3787C46.461 16.5089 46.461 16.6391 46.461 16.7733C45.8121 17.0664 45.8121 17.0664 45.1502 17.3653C44.7132 16.7733 44.7132 16.7733 44.6859 16.243C44.6949 16.0924 44.7039 15.9418 44.7132 15.7867Z" fill="#1D363B"/>
<path d="M43.5481 56.4373C43.8393 56.832 43.8393 56.832 43.8678 57.4749C43.8627 57.8526 43.8627 57.8526 43.8575 58.238C43.8549 58.4908 43.8523 58.7437 43.8496 59.0042C43.8462 59.1991 43.8428 59.3939 43.8393 59.5947C43.7432 59.5947 43.6471 59.5947 43.5481 59.5947C43.4556 58.7965 43.3858 58.0347 43.4024 57.2267C43.4024 57.0313 43.4024 56.8359 43.4024 56.6347C43.4505 56.5695 43.4985 56.5044 43.5481 56.4373Z" fill="#4C849F"/>
<path d="M49.5195 52.2933C49.5676 52.2933 49.6157 52.2933 49.6652 52.2933C49.7649 52.7527 49.8616 53.2134 49.9565 53.6747C49.9985 53.8456 50.0406 54.0165 50.0839 54.1927C50.1021 54.6613 50.1021 54.6613 49.5195 55.648C49.5195 54.541 49.5195 53.4339 49.5195 52.2933Z" fill="#71B2D4"/>
<path d="M40.7808 46.5707C40.8288 46.5707 40.8769 46.5707 40.9264 46.5707C40.9264 48.0684 40.9264 49.5662 40.9264 51.1093C40.638 51.0442 40.3497 50.9791 40.0526 50.912C40.1006 50.5864 40.1487 50.2608 40.1982 49.9253C40.3904 50.1858 40.5827 50.4463 40.7808 50.7147C40.7808 49.3471 40.7808 47.9796 40.7808 46.5707Z" fill="#4E4B4D"/>
<path d="M36.2657 42.624C37.0828 42.624 37.8999 42.624 38.7417 42.624C38.7898 42.7542 38.8378 42.8845 38.8874 43.0187C38.7873 43.0095 38.6872 43.0003 38.5841 42.9909C38.4529 42.9838 38.3217 42.9767 38.1864 42.9693C37.9913 42.9556 37.9913 42.9556 37.7922 42.9416C37.4066 42.9713 37.4066 42.9713 37.1652 43.4164C37.1087 43.5456 37.0522 43.6749 36.994 43.808C36.7537 43.4173 36.5133 43.0266 36.2657 42.624Z" fill="#666767"/>
<path d="M65.1036 37.888C65.2478 37.9531 65.392 38.0182 65.5405 38.0853C65.5886 38.6063 65.6367 39.1273 65.6862 39.664C65.542 39.664 65.3978 39.664 65.2493 39.664C65.2493 39.7942 65.2493 39.9245 65.2493 40.0587C65.1051 39.9935 64.9609 39.9284 64.8123 39.8613C64.9084 39.2101 65.0046 38.5589 65.1036 37.888Z" fill="#16343B"/>
<path d="M44.2763 21.5093C44.3724 21.7047 44.4685 21.9001 44.5676 22.1013C44.3734 22.6276 44.1792 23.1538 43.985 23.68C43.6887 22.944 43.548 22.5613 43.548 21.7067C43.6922 21.7067 43.8364 21.7067 43.985 21.7067C43.985 21.8369 43.985 21.9672 43.985 22.1013C44.0811 22.1013 44.1772 22.1013 44.2763 22.1013C44.2763 21.906 44.2763 21.7106 44.2763 21.5093Z" fill="#1B1A16"/>
<path d="M39.9069 19.3387C40.2674 19.4363 40.2674 19.4363 40.6351 19.536C40.6832 19.7314 40.7313 19.9267 40.7808 20.128C40.925 20.0629 41.0692 19.9978 41.2177 19.9307C41.2177 20.1911 41.2177 20.4516 41.2177 20.72C40.4219 20.6002 40.4219 20.6002 40.0708 20.2513C39.9069 19.9307 39.9069 19.9307 39.9069 19.3387Z" fill="#5E858F"/>
<path d="M33.4985 38.6773C33.7898 39.072 33.7898 39.072 33.8182 39.5422C33.8148 39.7208 33.8115 39.8994 33.808 40.0833C33.8053 40.2629 33.8027 40.4425 33.8 40.6275C33.7966 40.7654 33.7932 40.9033 33.7898 41.0453C33.3572 40.9477 33.3572 40.9477 32.9159 40.848C33.012 40.7829 33.1081 40.7178 33.2072 40.6507C33.3076 40.1871 33.3076 40.1871 33.371 39.6517C33.3954 39.4703 33.4199 39.2889 33.445 39.1021C33.4626 38.9619 33.4803 38.8217 33.4985 38.6773Z" fill="#425E6C"/>
<path d="M55.9279 23.2853C56.0721 23.3505 56.2163 23.4156 56.3649 23.4827C56.3649 23.6129 56.3649 23.7432 56.3649 23.8773C56.6052 23.8773 56.8455 23.8773 57.0931 23.8773C57.0931 23.9425 57.0931 24.0076 57.0931 24.0747C56.8273 24.093 56.8273 24.093 56.556 24.1117C55.9049 24.2151 55.6173 24.5692 55.1997 25.2587C55.2626 24.321 55.3931 23.8931 55.9279 23.2853Z" fill="#A3CEDF"/>
<path d="M48.7913 19.3387C49.6564 19.3387 50.5215 19.3387 51.4129 19.3387C51.2687 19.6317 51.2687 19.6317 51.1216 19.9307C50.6668 19.8348 50.2483 19.7336 49.8108 19.536C49.8108 19.6662 49.8108 19.7965 49.8108 19.9307C49.119 19.7827 49.119 19.7827 48.7913 19.3387Z" fill="#E2E0E3"/>
<path d="M53.1606 33.152C53.7551 33.0312 54.2014 33.2932 54.7627 33.5467C54.6666 33.5467 54.5705 33.5467 54.4714 33.5467C54.4714 33.6769 54.4714 33.8071 54.4714 33.9413C53.6063 34.039 53.6063 34.039 52.7237 34.1387C52.8679 33.8131 53.0121 33.4875 53.1606 33.152Z" fill="#C8C8C8"/>
<path d="M48.6456 30.9813C49.0061 31.1767 49.0061 31.1767 49.3739 31.376C49.2297 31.4737 49.2297 31.4737 49.0826 31.5733C49.1306 32.2897 49.1787 33.006 49.2282 33.744C49.036 33.6138 48.8437 33.4835 48.6456 33.3493C48.6456 32.5679 48.6456 31.7865 48.6456 30.9813Z" fill="#8A8C89"/>
<path d="M55.7823 29.008C55.8775 29.1225 55.8775 29.1225 55.9746 29.2392C56.5189 29.8841 57.0651 30.4567 57.6757 30.9813C57.5796 31.1116 57.4834 31.2418 57.3844 31.376C57.0203 31.1047 57.0203 31.1047 56.6562 30.784C56.6562 30.6538 56.6562 30.5235 56.6562 30.3893C56.4158 30.3893 56.1755 30.3893 55.9279 30.3893C55.7823 29.452 55.7823 29.452 55.7823 29.008Z" fill="#133239"/>
<path d="M51.8498 20.9173C51.5684 21.3169 51.3209 21.5924 50.976 21.904C50.9699 22.2986 50.9699 22.6934 50.976 23.088C50.8798 23.2182 50.7837 23.3485 50.6847 23.4827C50.6847 22.8966 50.6847 22.3105 50.6847 21.7067C50.5885 21.6416 50.4924 21.5764 50.3934 21.5093C50.539 21.1147 50.539 21.1147 50.7939 20.9913C51.1514 20.9106 51.488 20.9037 51.8498 20.9173Z" fill="#7A5054"/>
<path d="M58.9865 19.1413C59.384 19.1306 59.7814 19.1228 60.179 19.1167C60.347 19.1117 60.347 19.1117 60.5184 19.1066C61.1442 19.0994 61.6196 19.1422 62.1907 19.536C61.9631 19.758 61.9631 19.758 61.6081 19.9307C61.3709 19.8454 61.134 19.7574 60.9015 19.6509C60.279 19.4223 59.628 19.3984 58.9865 19.3387C58.9865 19.2735 58.9865 19.2084 58.9865 19.1413Z" fill="#2D5758"/>
<path d="M55.3453 17.168C55.7779 17.2657 55.7779 17.2657 56.2192 17.3653C56.2192 17.6258 56.2192 17.8863 56.2192 18.1547C56.075 18.2523 56.075 18.2523 55.9279 18.352C55.7628 18.75 55.7628 18.75 55.6366 19.1413C55.4031 18.4491 55.3132 17.929 55.3453 17.168Z" fill="#4B7889"/>
<path d="M44.8589 58.608C44.9069 58.7382 44.955 58.8685 45.0045 59.0027C45.1487 59.0678 45.2929 59.1329 45.4415 59.2C45.3694 59.318 45.2973 59.4361 45.223 59.5577C44.9633 59.9835 44.9633 59.9835 45.0045 60.5813C44.8123 60.6465 44.62 60.7116 44.4219 60.7787C44.47 60.1926 44.5181 59.6065 44.5676 59.0027C44.6637 59.0027 44.7598 59.0027 44.8589 59.0027C44.8589 58.8724 44.8589 58.7422 44.8589 58.608Z" fill="#326982"/>
<path d="M51.5586 52.4907C51.7508 52.4907 51.9431 52.4907 52.1411 52.4907C52.2373 53.1419 52.3334 53.7931 52.4324 54.464C52.3363 54.3989 52.2402 54.3338 52.1411 54.2667C52.1411 54.0713 52.1411 53.8759 52.1411 53.6747C51.8528 53.6747 51.5644 53.6747 51.2673 53.6747C51.3634 53.2839 51.4595 52.8932 51.5586 52.4907Z" fill="#68C3F3"/>
<path d="M64.521 43.808C64.6172 44.0685 64.7133 44.329 64.8123 44.5973C64.6072 44.7969 64.4006 44.9937 64.1933 45.1893C64.021 45.3542 64.021 45.3542 63.8452 45.5223C63.5015 45.7813 63.5015 45.7813 62.9189 45.7813C62.967 45.586 63.0151 45.3906 63.0646 45.1893C63.0646 45.3196 63.0646 45.4498 63.0646 45.584C63.1787 45.4538 63.2929 45.3235 63.4105 45.1893C63.7928 44.7947 63.7928 44.7947 64.0841 44.7947C64.1292 44.6685 64.1742 44.5423 64.2207 44.4123C64.3754 44.0053 64.3754 44.0053 64.521 43.808Z" fill="#355054"/>
<path d="M57.967 32.9547C58.1112 33.0198 58.2554 33.0849 58.4039 33.152C58.2597 33.2497 58.2597 33.2497 58.1126 33.3493C58.1126 33.5447 58.1126 33.7401 58.1126 33.9413C58.4971 34.0065 58.8817 34.0716 59.2778 34.1387C59.2778 34.2038 59.2778 34.2689 59.2778 34.336C59.02 34.352 58.762 34.3635 58.5041 34.373C58.3604 34.3799 58.2168 34.3867 58.0688 34.3938C57.6757 34.336 57.6757 34.336 57.4055 34.0377C57.3505 33.9408 57.2954 33.8439 57.2388 33.744C57.4768 33.4069 57.6566 33.1649 57.967 32.9547Z" fill="#457488"/>
<path d="M40.0526 31.5733C40.4882 31.7701 40.7229 31.9852 41.0812 32.3627C41.4948 32.7978 41.4948 32.7978 41.9459 33.152C41.9459 33.2822 41.9459 33.4125 41.9459 33.5467C41.1578 33.2862 40.5966 32.7706 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733Z" fill="#969A96"/>
<path d="M54.7628 28.0213C54.8589 28.0213 54.955 28.0213 55.054 28.0213C55.1799 28.308 55.3039 28.596 55.4273 28.8847C55.5312 29.125 55.5312 29.125 55.6372 29.3703C55.6851 29.5112 55.7329 29.6521 55.7823 29.7973C55.7342 29.9276 55.6861 30.0578 55.6366 30.192C55.2816 29.9947 55.2816 29.9947 54.9084 29.6C54.7972 29.0618 54.7832 28.5854 54.7628 28.0213Z" fill="#CECCC9"/>
<path d="M44.2763 26.8373C44.5676 27.0963 44.5676 27.0963 44.8589 27.4293C44.8589 27.6247 44.8589 27.8201 44.8589 28.0213C44.7507 28.0783 44.6426 28.1353 44.5312 28.194C44.1442 28.3965 44.1442 28.3965 43.8485 28.6257C43.4643 28.8623 43.0904 28.9311 42.6742 29.008C42.9121 28.3632 43.36 28.2745 43.8394 28.0213C44.032 27.9477 44.2257 27.8772 44.4219 27.824C44.3739 27.4984 44.3258 27.1728 44.2763 26.8373Z" fill="#ACADAC"/>
<path d="M46.024 26.8373C46.116 26.8493 46.208 26.8613 46.3028 26.8736C47.4225 27.0157 48.5432 27.1277 49.6652 27.232C49.6652 27.2971 49.6652 27.3622 49.6652 27.4293C49.1949 27.4409 48.7246 27.4478 48.2542 27.454C48.1214 27.4573 47.9886 27.4606 47.8517 27.464C47.1792 27.4707 46.6329 27.4758 46.024 27.0347C46.024 26.9696 46.024 26.9044 46.024 26.8373Z" fill="#E1E4E5"/>
<path d="M47.0435 21.904C47.3059 22.4372 47.4808 22.877 47.6261 23.4827C47.5781 23.678 47.53 23.8734 47.4805 24.0747C47.3363 23.7491 47.1921 23.4235 47.0435 23.088C46.9474 23.6741 46.8513 24.2602 46.7523 24.864C46.6561 24.864 46.56 24.864 46.461 24.864C46.2675 24.0776 46.4272 23.7983 46.6703 23.051C46.7392 22.8366 46.8081 22.6221 46.8791 22.4012C46.9334 22.2371 46.9876 22.0731 47.0435 21.904Z" fill="#26211F"/>
<path d="M39.3243 18.1547C39.3724 18.1547 39.4204 18.1547 39.4699 18.1547C39.509 18.3622 39.548 18.5698 39.5883 18.7837C39.742 19.4522 39.9138 19.9447 40.1982 20.5227C39.5406 20.4178 39.1282 20.0557 38.5961 19.536C38.8388 19.536 39.0816 19.536 39.3243 19.536C39.3243 19.0802 39.3243 18.6243 39.3243 18.1547Z" fill="#17363F"/>
<path d="M56.0735 58.4107C56.4672 58.9773 56.6485 59.2612 56.6925 60.051C56.6805 60.226 56.6685 60.401 56.6561 60.5813C56.5119 60.679 56.5119 60.679 56.3648 60.7787C56.2687 60.7136 56.1726 60.6484 56.0735 60.5813C56.0735 59.865 56.0735 59.1487 56.0735 58.4107Z" fill="#37667A"/>
<path d="M39.3243 58.2133C39.2697 58.6943 39.2697 58.6943 39.1787 59.2C39.0345 59.2977 39.0345 59.2977 38.8874 59.3973C38.8874 59.2671 38.8874 59.1369 38.8874 59.0027C38.4262 59.3644 38.4262 59.3644 38.1591 59.9893C38.1136 59.4343 38.1136 59.4343 38.1591 58.8053C38.5743 58.3492 38.7874 58.2133 39.3243 58.2133Z" fill="#37758F"/>
<path d="M44.4219 57.0293C44.7584 57.0293 45.0948 57.0293 45.4415 57.0293C45.4895 57.2898 45.5376 57.5503 45.5871 57.8187C45.2026 57.8838 44.8181 57.9489 44.4219 58.016C44.4219 57.6904 44.4219 57.3648 44.4219 57.0293Z" fill="#498FAC"/>
<path d="M49.6651 55.2533C49.8093 55.3184 49.9535 55.3836 50.1021 55.4507C50.1021 55.7763 50.1021 56.1019 50.1021 56.4373C50.1982 56.5024 50.2943 56.5676 50.3934 56.6347C50.3934 56.7649 50.3934 56.8951 50.3934 57.0293C50.105 57.2247 50.105 57.2247 49.8108 57.424C49.758 57.1366 49.7067 56.8487 49.656 56.5607C49.6129 56.3203 49.6129 56.3203 49.569 56.075C49.5195 55.648 49.5195 55.648 49.6651 55.2533Z" fill="#559BC1"/>
<path d="M59.1321 48.7413C59.2283 48.7413 59.3244 48.7413 59.4234 48.7413C59.5196 49.4577 59.6157 50.174 59.7147 50.912C59.5225 50.912 59.3302 50.912 59.1321 50.912C59.1321 50.1957 59.1321 49.4794 59.1321 48.7413Z" fill="#080808"/>
<path d="M34.6637 42.624C34.7117 42.8845 34.7598 43.145 34.8093 43.4133C34.9175 43.4296 35.0256 43.4459 35.137 43.4627C35.6122 43.6382 35.8011 43.9037 36.1201 44.4C35.7833 44.437 35.7833 44.437 35.3919 44.4C35.1552 44.1163 35.1552 44.1163 34.955 43.808C34.8108 43.7429 34.6666 43.6778 34.518 43.6107C34.518 43.4804 34.518 43.3502 34.518 43.216C34.4219 43.1509 34.3258 43.0858 34.2267 43.0187C34.3709 42.8884 34.5151 42.7582 34.6637 42.624Z" fill="#1F2829"/>
<path d="M65.8318 35.52C65.8799 35.52 65.9279 35.52 65.9775 35.52C66.0547 35.9677 66.1302 36.4159 66.205 36.8643C66.2473 37.1139 66.2895 37.3634 66.333 37.6205C66.4144 38.2827 66.4144 38.2827 66.2687 38.8747C66.209 38.7106 66.1493 38.5465 66.0878 38.3775C66.0093 38.163 65.9309 37.9486 65.85 37.7277C65.7723 37.5148 65.6946 37.3018 65.6145 37.0825C65.3989 36.4912 65.3989 36.4912 65.1036 35.9147C65.2958 35.9798 65.4881 36.0449 65.6862 36.112C65.7342 35.9166 65.7823 35.7213 65.8318 35.52Z" fill="#467074"/>
<path d="M44.1306 33.5467C44.419 33.5467 44.7074 33.5467 45.0045 33.5467C45.0045 33.6769 45.0045 33.8071 45.0045 33.9413C45.1006 34.0716 45.1968 34.2018 45.2958 34.336C44.9651 34.3466 44.6343 34.3543 44.3036 34.3607C44.0273 34.3675 44.0273 34.3675 43.7455 34.3745C43.2568 34.336 43.2568 34.336 42.8198 33.9413C43.3005 34.0064 43.7811 34.0716 44.2763 34.1387C44.2282 33.9433 44.1802 33.7479 44.1306 33.5467Z" fill="#A9A9A8"/>
<path d="M66.1231 32.7573C66.469 32.8067 66.469 32.8067 66.8513 32.9547C67.0425 33.3617 67.0425 33.3617 67.1426 33.744C66.9984 34.037 66.9984 34.037 66.8513 34.336C66.56 34.336 66.56 34.336 66.3234 34.1017C66.0617 33.6344 66.0888 33.3298 66.1231 32.7573Z" fill="#52788B"/>
<path d="M58.6952 31.968C58.8394 32.0982 58.9836 32.2285 59.1321 32.3627C58.9398 32.3882 58.9398 32.3882 58.7435 32.4143C57.6535 32.531 57.6535 32.531 56.7563 33.2753C56.6752 33.43 56.5941 33.5846 56.5105 33.744C56.5896 32.9937 56.8246 32.6584 57.2387 32.1653C57.6942 31.8568 58.197 31.8891 58.6952 31.968Z" fill="#06222B"/>
<path d="M52.8693 26.4427C52.8693 26.638 52.8693 26.8334 52.8693 27.0347C52.7252 27.0998 52.581 27.1649 52.4324 27.232C52.4324 27.4274 52.4324 27.6227 52.4324 27.824C52.5766 27.7589 52.7208 27.6938 52.8693 27.6267C53.2608 27.8117 53.2608 27.8117 53.5976 28.0213C53.5495 28.1516 53.5014 28.2818 53.4519 28.416C52.8031 28.2206 52.8031 28.2206 52.1411 28.0213C52.1411 27.7608 52.1411 27.5004 52.1411 27.232C52.5052 26.788 52.5052 26.788 52.8693 26.4427Z" fill="#B9BBB7"/>
<path d="M47.6262 21.904C47.9866 22.0017 47.9866 22.0017 48.3544 22.1013C48.2102 22.6874 48.066 23.2735 47.9174 23.8773C47.5636 23.1582 47.6026 22.7501 47.6262 21.904Z" fill="#EEE6E6"/>
<path d="M54.9084 18.5493C55.0526 18.647 55.0526 18.647 55.1997 18.7467C55.1997 19.3327 55.1997 19.9188 55.1997 20.5227C55.2477 20.1971 55.2958 19.8715 55.3453 19.536C55.3934 19.536 55.4414 19.536 55.491 19.536C55.5911 20.1897 55.5911 20.1897 55.6366 20.9173C55.4272 21.2997 55.4272 21.2997 55.1997 21.5093C55.1997 21.3791 55.1997 21.2489 55.1997 21.1147C55.1036 21.1147 55.0074 21.1147 54.9084 21.1147C54.9084 20.2681 54.9084 19.4215 54.9084 18.5493Z" fill="#1F2D31"/>
<path d="M46.8979 62.16C47.2824 62.16 47.6669 62.16 48.0631 62.16C48.015 62.4856 47.9669 62.8112 47.9174 63.1467C47.7732 63.1467 47.629 63.1467 47.4805 63.1467C47.4805 62.9513 47.4805 62.756 47.4805 62.5547C47.4324 62.6849 47.3844 62.8152 47.3348 62.9493C47.1426 62.8842 46.9503 62.8191 46.7523 62.752C46.8003 62.5566 46.8484 62.3613 46.8979 62.16Z" fill="#143F4E"/>
<path d="M44.5676 26.048C45.0004 26.2699 45.3445 26.4867 45.7327 26.8373C45.8329 27.2567 45.8329 27.2567 45.8784 27.6267C45.7342 27.7244 45.7342 27.7244 45.5871 27.824C45.1554 27.2699 44.794 26.8012 44.5676 26.048Z" fill="#A8AAA7"/>
<path d="M48.6456 21.904C48.8379 21.904 49.0302 21.904 49.2282 21.904C49.2464 22.57 49.2464 22.57 49.2282 23.2853C49.1321 23.4156 49.036 23.5458 48.9369 23.68C48.7094 23.125 48.7094 23.125 48.5 22.496C48.5481 22.3006 48.5961 22.1053 48.6456 21.904Z" fill="#EDE4E3"/>
<path d="M36.2658 21.312C36.1216 21.4422 35.9774 21.5725 35.8288 21.7067C35.8769 21.8369 35.925 21.9671 35.9745 22.1013C35.8784 22.1013 35.7822 22.1013 35.6832 22.1013C35.6832 22.2316 35.6832 22.3618 35.6832 22.496C35.3948 22.496 35.1064 22.496 34.8093 22.496C35.0709 21.5617 35.5259 20.9779 36.2658 21.312Z" fill="#416C82"/>
<path d="M53.4519 17.5627C53.7403 17.5627 54.0287 17.5627 54.3258 17.5627C54.4896 17.8833 54.4896 17.8833 54.6171 18.352C54.4826 19.1804 54.419 19.4518 53.8889 19.9307C53.8889 19.6702 53.8889 19.4097 53.8889 19.1413C53.985 19.1413 54.0811 19.1413 54.1801 19.1413C54.1801 18.7506 54.1801 18.3599 54.1801 17.9573C53.8918 17.9573 53.6034 17.9573 53.3063 17.9573C53.3543 17.8271 53.4024 17.6969 53.4519 17.5627Z" fill="#BAC3BF"/>
<path d="M55.0541 16.3787C55.8275 16.6668 56.4324 17.1647 57.0931 17.76C56.6561 17.76 56.3296 17.6692 55.9097 17.5133C55.7802 17.4675 55.6507 17.4218 55.5172 17.3746C55.1997 17.168 55.1997 17.168 55.0825 16.7517C55.0731 16.6286 55.0637 16.5055 55.0541 16.3787Z" fill="#ADD1DD"/>
<path d="M44.8589 61.3707C44.9069 61.3707 44.955 61.3707 45.0045 61.3707C45.0045 62.0942 45.0045 62.8178 45.0045 63.5413C44.8603 63.5413 44.7161 63.5413 44.5676 63.5413C44.5195 62.8901 44.4715 62.2389 44.4219 61.568C44.47 61.7634 44.5181 61.9587 44.5676 62.16C44.6637 62.16 44.7598 62.16 44.8589 62.16C44.8108 61.9646 44.7627 61.7693 44.7132 61.568C44.7613 61.5029 44.8094 61.4378 44.8589 61.3707Z" fill="#193F49"/>
<path d="M40.6351 52.4907C41.0196 52.4907 41.4041 52.4907 41.8003 52.4907C41.274 53.4157 41.274 53.4157 41.0721 53.6747C40.9279 53.6747 40.7837 53.6747 40.6351 53.6747C40.6351 53.2839 40.6351 52.8932 40.6351 52.4907Z" fill="#68C6F7"/>
<path d="M36.2317 42.4043C36.3408 42.4053 36.4498 42.4063 36.5622 42.4074C36.68 42.408 36.7978 42.4087 36.9192 42.4093C37.043 42.411 37.1668 42.4126 37.2944 42.4143C37.4188 42.4152 37.5432 42.4161 37.6713 42.417C37.9796 42.4194 38.2879 42.4229 38.5961 42.4267C38.5961 42.4918 38.5961 42.5569 38.5961 42.624C37.8752 42.6891 37.1542 42.7542 36.4114 42.8213C36.5556 43.1144 36.5556 43.1144 36.7027 43.4133C36.5585 43.4133 36.4144 43.4133 36.2658 43.4133C36.02 43.0187 36.02 43.0187 35.8289 42.624C35.9745 42.4267 35.9745 42.4267 36.2317 42.4043Z" fill="#B5B5B5"/>
<path d="M62.3363 38.0853C62.3844 38.0853 62.4325 38.0853 62.482 38.0853C62.482 38.6063 62.482 39.1272 62.482 39.664C62.5781 39.664 62.6742 39.664 62.7733 39.664C62.9746 39.9849 63.1693 40.3137 63.3559 40.6507C63.2117 40.7158 63.0675 40.7809 62.9189 40.848C62.6276 40.4533 62.3363 40.0587 62.045 39.664C62.0803 39.2801 62.0803 39.2801 62.1725 38.85C62.2021 38.707 62.2318 38.5641 62.2624 38.4168C62.2868 38.3074 62.3112 38.198 62.3363 38.0853Z" fill="#5B7A89"/>
<path d="M33.2072 36.112C33.6398 36.1771 34.0724 36.2422 34.518 36.3093C34.518 36.3745 34.518 36.4396 34.518 36.5067C33.8692 36.6043 33.8692 36.6043 33.2072 36.704C33.2072 36.5086 33.2072 36.3133 33.2072 36.112ZM32.6246 36.5067C32.8169 36.5718 33.0091 36.6369 33.2072 36.704C33.2072 37.0296 33.2072 37.3552 33.2072 37.6907C33.063 37.6255 32.9188 37.5604 32.7703 37.4933C32.7222 37.1677 32.6742 36.8421 32.6246 36.5067Z" fill="#6790A3"/>
<path d="M45.7327 35.52C45.8289 35.52 45.925 35.52 46.024 35.52C46.024 35.7805 46.024 36.041 46.024 36.3093C46.2643 36.2442 46.5046 36.1791 46.7522 36.112C46.6081 36.5678 46.4639 37.0237 46.3153 37.4933C46.2672 37.4933 46.2192 37.4933 46.1697 37.4933C46.1697 37.1677 46.1697 36.8421 46.1697 36.5067C46.0735 36.5067 45.9774 36.5067 45.8784 36.5067C45.8784 36.8323 45.8784 37.1579 45.8784 37.4933C45.8303 37.4933 45.7822 37.4933 45.7327 37.4933C45.7327 36.8421 45.7327 36.1909 45.7327 35.52Z" fill="#232021"/>
<path d="M33.3529 32.3627C33.449 32.3627 33.5451 32.3627 33.6442 32.3627C33.5464 33.1902 33.2282 33.8236 32.9159 34.5333C32.7718 34.4682 32.6276 34.4031 32.479 34.336C32.6428 33.7495 32.8028 33.2833 33.0616 32.7573C33.1577 32.7573 33.2538 32.7573 33.3529 32.7573C33.3529 32.6271 33.3529 32.4969 33.3529 32.3627Z" fill="#041B23"/>
<path d="M50.976 28.6133C50.6847 29.2053 50.6847 29.2053 50.3376 29.3063C50.2058 29.3178 50.074 29.3292 49.9382 29.341C49.7394 29.3605 49.7394 29.3605 49.5366 29.3803C49.3839 29.3914 49.3839 29.3914 49.2282 29.4027C49.2282 29.2724 49.2282 29.1422 49.2282 29.008C49.8366 28.694 50.3252 28.5713 50.976 28.6133Z" fill="#ACADA9"/>
<path d="M48.3543 23.2853C48.7922 23.8786 48.7324 24.4346 48.7913 25.2587C48.551 25.2587 48.3106 25.2587 48.063 25.2587C48.0835 24.9667 48.1049 24.6748 48.1268 24.383C48.1386 24.2205 48.1504 24.0579 48.1626 23.8904C48.2087 23.4827 48.2087 23.4827 48.3543 23.2853Z" fill="#E9E5E4"/>
<path d="M39.033 23.088C39.1292 23.1531 39.2253 23.2182 39.3243 23.2853C39.164 23.9371 39.0782 24.0323 38.678 24.4077C38.5431 24.537 38.5431 24.537 38.4055 24.669C38.1592 24.864 38.1592 24.864 37.8679 24.864C37.8679 24.6686 37.8679 24.4733 37.8679 24.272C38.4837 23.4827 38.4837 23.4827 39.033 23.4827C39.033 23.3524 39.033 23.2222 39.033 23.088Z" fill="#6892A8"/>
<path d="M55.491 18.5493C55.8812 19.3424 55.805 19.781 55.7823 20.72C56.0226 20.72 56.2629 20.72 56.5105 20.72C56.3227 20.9915 56.1279 21.2543 55.9279 21.5093C55.8318 21.5093 55.7357 21.5093 55.6366 21.5093C55.612 21.164 55.5878 20.8187 55.5638 20.4733C55.5503 20.281 55.5368 20.0887 55.5228 19.8906C55.4971 19.4446 55.491 18.9966 55.491 18.5493Z" fill="#092932"/>
<path d="M57.3844 17.76C57.5767 17.76 57.7689 17.76 57.967 17.76C57.9189 17.9554 57.8709 18.1507 57.8214 18.352C57.9175 18.4171 58.0136 18.4822 58.1126 18.5493C58.0853 18.9193 58.0853 18.9193 57.967 19.3387C57.5938 19.5853 57.5938 19.5853 57.2388 19.7333C57.2767 19.3351 57.3146 18.9368 57.3526 18.5385C57.3898 18.1537 57.3898 18.1537 57.3844 17.76Z" fill="#13373E"/>
<path d="M41.8003 16.576C41.7522 16.7714 41.7041 16.9667 41.6546 17.168C41.3002 17.4054 41.3002 17.4054 40.8627 17.612C40.6467 17.7173 40.6467 17.7173 40.4263 17.8248C40.0525 17.9573 40.0525 17.9573 39.7612 17.76C39.9493 17.5995 40.1374 17.4392 40.3256 17.279C40.4828 17.1451 40.4828 17.1451 40.6431 17.0084C41.1062 16.6241 41.2182 16.576 41.8003 16.576Z" fill="#B0D2DD"/>
<path d="M59.7147 50.7147C60.4357 50.7798 61.1566 50.8449 61.8994 50.912C61.3168 51.504 61.3168 51.504 60.9413 51.5186C60.7487 51.4809 60.7487 51.4809 60.5522 51.4423C60.4223 51.4187 60.2923 51.395 60.1585 51.3706C60.0601 51.3495 59.9617 51.3284 59.8604 51.3067C59.8123 51.1113 59.7642 50.9159 59.7147 50.7147Z" fill="#8D8C8F"/>
<path d="M33.6442 43.6107C34.6273 44.178 34.6273 44.178 34.955 44.4C34.955 44.6605 34.955 44.921 34.955 45.1893C34.3843 44.9316 34.0336 44.6306 33.6442 44.0053C33.6442 43.8751 33.6442 43.7448 33.6442 43.6107Z" fill="#1F3133"/>
<path d="M66.5601 40.4533C66.997 41.2427 66.997 41.2427 66.9879 41.8593C66.9429 42.0466 66.8978 42.2338 66.8514 42.4267C66.563 42.622 66.563 42.622 66.2688 42.8213C66.3649 42.0399 66.4611 41.2585 66.5601 40.4533Z" fill="#4C7783"/>
<path d="M62.1907 40.848C62.7739 41.5369 63.0102 41.9628 63.0645 43.0187C62.9204 43.1489 62.7762 43.2791 62.6276 43.4133C62.4834 42.5668 62.3392 41.7202 62.1907 40.848Z" fill="#D8DDDE"/>
<path d="M33.9354 37.0987C34.0902 37.4563 34.0902 37.4563 34.2267 37.888C34.1787 38.0834 34.1306 38.2787 34.0811 38.48C34.0484 38.9192 34.0217 39.3593 33.9992 39.7997C33.987 40.0324 33.9747 40.2652 33.9622 40.505C33.9533 40.6833 33.9445 40.8616 33.9354 41.0453C33.8874 41.0453 33.8393 41.0453 33.7898 41.0453C33.7572 40.6098 33.7274 40.174 33.6988 39.738C33.6819 39.4953 33.665 39.2526 33.6476 39.0026C33.6441 38.2722 33.7353 37.7715 33.9354 37.0987Z" fill="#64757F"/>
<path d="M61.8994 32.3627C62.2839 32.3627 62.6684 32.3627 63.0646 32.3627C63.0646 32.558 63.0646 32.7534 63.0646 32.9547C62.9685 32.9547 62.8723 32.9547 62.7733 32.9547C62.7252 33.0849 62.6772 33.2152 62.6277 33.3493C62.3455 33.4603 62.3455 33.4603 62.0451 33.5467C61.9009 33.6444 61.9009 33.6444 61.7538 33.744C62.0269 32.9793 62.0269 32.9793 62.1907 32.7573C62.0946 32.6271 61.9985 32.4969 61.8994 32.3627Z" fill="#3F7080"/>
<path d="M41.509 28.6133C41.5571 28.8087 41.6051 29.0041 41.6546 29.2053C41.4458 29.6517 41.4458 29.6517 41.154 30.1303C41.058 30.2898 40.9621 30.4493 40.8633 30.6137C40.7503 30.7957 40.7503 30.7957 40.6351 30.9813C40.4909 30.8511 40.3467 30.7209 40.1982 30.5867C40.3063 30.4442 40.4145 30.3018 40.5259 30.155C40.8817 29.662 41.1985 29.1587 41.509 28.6133Z" fill="#0C1315"/>
<path d="M62.1907 22.2987C62.8937 22.7749 63.3121 23.4552 63.7928 24.272C63.6471 24.6667 63.6471 24.6667 63.3558 24.864C63.2961 24.7238 63.2364 24.5837 63.1749 24.4393C63.0964 24.2579 63.018 24.0765 62.9371 23.8897C62.8205 23.6184 62.8205 23.6184 62.7016 23.3416C62.5115 22.8695 62.5115 22.8695 62.1907 22.6933C62.1907 22.5631 62.1907 22.4328 62.1907 22.2987Z" fill="#123340"/>
<path d="M46.3153 21.904C46.3634 21.904 46.4114 21.904 46.4609 21.904C46.509 22.6854 46.5571 23.4669 46.6066 24.272C46.4624 24.272 46.3182 24.272 46.1696 24.272C45.8301 23.0371 45.8301 23.0371 46.0695 22.311C46.1506 22.1767 46.2317 22.0424 46.3153 21.904Z" fill="#7E7B78"/>
<path d="M35.2099 21.2627C35.318 21.2789 35.4261 21.2952 35.5376 21.312C35.0287 22.0217 34.5019 22.6607 33.9355 23.2853C33.8393 23.2202 33.7432 23.1551 33.6442 23.088C34.6526 21.3313 34.6526 21.3313 35.2099 21.2627Z" fill="#6D97AA"/>
<path d="M48.6457 52.096C48.8379 52.1611 49.0302 52.2262 49.2282 52.2933C49.2464 53.6007 49.2464 53.6007 49.0826 54.2667C48.8423 54.2667 48.602 54.2667 48.3544 54.2667C48.4024 54.1364 48.4505 54.0062 48.5 53.872C48.5961 53.872 48.6923 53.872 48.7913 53.872C48.8394 53.351 48.8874 52.8301 48.937 52.2933C48.8408 52.2282 48.7447 52.1631 48.6457 52.096Z" fill="#7AB5D3"/>
<path d="M54.7628 52.4907C55.1232 52.5883 55.1232 52.5883 55.491 52.688C55.491 53.0136 55.491 53.3392 55.491 53.6747C55.2507 53.6747 55.0104 53.6747 54.7628 53.6747C54.7628 53.2839 54.7628 52.8932 54.7628 52.4907Z" fill="#67C6F5"/>
<path d="M37.1397 50.5173C37.5277 50.5882 37.9161 50.6511 38.3048 50.7147C38.3048 50.7798 38.3048 50.8449 38.3048 50.912C37.0792 51.0097 37.0792 51.0097 35.8289 51.1093C35.8769 50.914 35.925 50.7186 35.9745 50.5173C36.3965 50.2314 36.6779 50.4015 37.1397 50.5173Z" fill="#D0D2D4"/>
<path d="M49.3739 44.4C49.3739 44.5954 49.3739 44.7907 49.3739 44.992C49.2297 45.0571 49.0855 45.1222 48.937 45.1893C48.937 45.0591 48.937 44.9288 48.937 44.7947C48.6031 44.8224 48.2694 44.8514 47.9356 44.881C47.7498 44.897 47.5639 44.913 47.3724 44.9296C46.915 44.951 46.915 44.951 46.6066 45.1893C46.6066 44.994 46.6066 44.7986 46.6066 44.5973C47.5198 44.5322 48.433 44.4671 49.3739 44.4Z" fill="#797979"/>
<path d="M30.2943 40.848C30.5687 41.4924 30.6574 42.0875 30.7313 42.8213C30.1669 42.4513 30.1669 42.4513 30.003 42.2293C29.9971 41.8347 29.9968 41.4399 30.003 41.0453C30.0992 40.9802 30.1953 40.9151 30.2943 40.848Z" fill="#497078"/>
<path d="M31.6051 38.0853C31.6532 38.0853 31.7013 38.0853 31.7508 38.0853C31.7988 38.6714 31.8469 39.2575 31.8964 39.8613C31.608 40.0567 31.608 40.0567 31.3138 40.256C31.2774 38.7513 31.2774 38.7513 31.6051 38.0853Z" fill="#06262A"/>
<path d="M31.6051 34.336C31.7012 34.4662 31.7973 34.5965 31.8964 34.7307C31.8782 35.3227 31.8782 35.3227 31.7507 35.9147C31.4503 36.186 31.4503 36.186 31.1682 36.3093C31.1682 35.7884 31.1682 35.2674 31.1682 34.7307C31.2643 34.7307 31.3604 34.7307 31.4594 34.7307C31.5075 34.6004 31.5556 34.4702 31.6051 34.336Z" fill="#5A8493"/>
<path d="M54.9084 33.9413C54.7642 34.2344 54.7642 34.2344 54.6171 34.5333C54.2382 34.5911 54.2382 34.5911 53.7979 34.5703C53.5788 34.5623 53.5788 34.5623 53.3552 34.5541C53.1868 34.5438 53.1868 34.5438 53.015 34.5333C53.3272 34.1103 53.4635 34.044 53.8798 33.9043C53.9802 33.869 54.0807 33.8336 54.1842 33.7972C54.4715 33.744 54.4715 33.744 54.9084 33.9413Z" fill="#747474"/>
<path d="M38.7418 32.7573C39.1719 32.7844 39.4999 32.8267 39.8409 33.2037C40.0435 33.5097 40.0435 33.5097 40.3439 34.1387C40.3166 34.6073 40.3166 34.6073 40.1982 34.928C39.6156 33.7933 39.6156 33.7933 39.6156 33.3493C39.3273 33.2191 39.0389 33.0889 38.7418 32.9547C38.7418 32.8896 38.7418 32.8244 38.7418 32.7573Z" fill="#98CCDA"/>
<path d="M58.5495 32.7573C58.4705 32.8029 58.3914 32.8484 58.31 32.8953C57.6343 33.3126 57.2899 33.6053 56.9474 34.5333C56.8513 34.5333 56.7552 34.5333 56.6561 34.5333C57.0618 33.0808 57.0618 33.0808 57.5846 32.708C57.9949 32.5492 58.1525 32.5971 58.5495 32.7573Z" fill="#8FC0D3"/>
<path d="M54.4715 31.376C55.0002 31.4411 55.5289 31.5062 56.0736 31.5733C56.0736 32.1653 56.0736 32.1653 55.8551 32.4983C55.783 32.5838 55.7109 32.6693 55.6367 32.7573C55.1997 31.9927 55.1997 31.9927 55.1997 31.7707C54.9594 31.7056 54.7191 31.6404 54.4715 31.5733C54.4715 31.5082 54.4715 31.4431 54.4715 31.376Z" fill="#D1D1CF"/>
<path d="M42.9654 24.6667C43.3333 25.133 43.5317 25.3898 43.6937 26.048C43.4534 26.048 43.213 26.048 42.9654 26.048C42.8213 25.6573 42.6771 25.2666 42.5285 24.864C42.6727 24.7989 42.8169 24.7338 42.9654 24.6667Z" fill="#848680"/>
<path d="M46.024 21.7067C46.0721 21.7067 46.1202 21.7067 46.1697 21.7067C46.1999 22.4425 46.1239 22.8369 45.8784 23.4827C45.8226 23.8756 45.7727 24.2702 45.7328 24.6667C45.6366 24.6667 45.5405 24.6667 45.4415 24.6667C45.4946 23.5489 45.5952 22.6919 46.024 21.7067Z" fill="#272220"/>
<path d="M45.0045 22.8907C45.2445 23.4761 45.3603 24.0068 45.4414 24.6667C45.2492 24.7318 45.0569 24.7969 44.8588 24.864C44.7718 24.3188 44.7132 23.8457 44.7132 23.2853C44.8093 23.1551 44.9054 23.0249 45.0045 22.8907Z" fill="#A29494"/>
<path d="M33.0616 22.8907C33.2538 23.2163 33.4461 23.5419 33.6442 23.8773C33.4542 24.2758 33.2599 24.6705 33.0616 25.0613C33.0135 25.0613 32.9654 25.0613 32.9159 25.0613C32.8977 23.5567 32.8977 23.5567 33.0616 22.8907Z" fill="#45717E"/>
<path d="M42.3829 17.9573C42.479 17.9573 42.5752 17.9573 42.6742 17.9573C42.6952 18.1039 42.7163 18.2504 42.7379 18.4013C42.8056 18.8493 42.8808 19.2908 42.9655 19.7333C42.8213 19.7985 42.6771 19.8636 42.5286 19.9307C42.5286 19.6051 42.5286 19.2795 42.5286 18.944C42.3844 18.8789 42.2402 18.8138 42.0916 18.7467C42.1877 18.4862 42.2839 18.2257 42.3829 17.9573Z" fill="#C9CED2"/>
<path d="M35.5375 58.8053C35.6817 58.903 35.6817 58.903 35.8288 59.0027C36.0459 59.8849 35.9501 60.6717 35.8288 61.568C35.6846 61.6657 35.6846 61.6657 35.5375 61.7653C35.5375 60.7885 35.5375 59.8117 35.5375 58.8053Z" fill="#316076"/>
<path d="M38.7417 55.056C38.8379 55.056 38.934 55.056 39.033 55.056C39.4029 55.7305 39.5229 56.1922 39.47 57.0293C39.4099 56.8991 39.3498 56.7689 39.2879 56.6347C39.2038 56.5044 39.1197 56.3742 39.033 56.24C38.8408 56.24 38.6485 56.24 38.4504 56.24C38.5241 55.812 38.5961 55.4507 38.7417 55.056Z" fill="#5CA7CD"/>
<path d="M33.7898 46.768C34.072 46.8913 34.072 46.8913 34.3724 47.1627C34.4634 47.7547 34.4634 47.7547 34.518 48.3467C34.6142 48.4769 34.7103 48.6072 34.8093 48.7413C34.6171 48.7413 34.4248 48.7413 34.2267 48.7413C34.1637 48.5216 34.1637 48.5216 34.0993 48.2973C33.9612 47.84 33.8119 47.4036 33.6442 46.9653C33.6922 46.9002 33.7403 46.8351 33.7898 46.768Z" fill="#173233"/>
<path d="M57.2388 45.7813C57.431 45.7813 57.6233 45.7813 57.8214 45.7813C57.8214 46.1721 57.8214 46.5628 57.8214 46.9653C57.533 47.1607 57.533 47.1607 57.2388 47.36C57.2388 46.839 57.2388 46.3181 57.2388 45.7813Z" fill="#A4A4A4"/>
<path d="M31.7507 43.808C31.8949 43.808 32.0391 43.808 32.1877 43.808C32.2357 43.9382 32.2838 44.0685 32.3333 44.2027C32.4775 44.2027 32.6217 44.2027 32.7703 44.2027C33.4352 45.0177 33.4352 45.0177 33.6441 45.584C32.8658 45.2118 32.2147 44.7509 31.7507 43.808Z" fill="#3D6062"/>
<path d="M64.3754 34.928C64.4235 34.928 64.4715 34.928 64.521 34.928C64.5601 35.1437 64.5991 35.3594 64.6394 35.5817C64.7944 36.2337 64.8628 36.4967 65.2493 36.9013C65.1036 37.296 65.1036 37.296 64.8123 37.4933C64.7943 37.3102 64.7943 37.3102 64.7759 37.1233C64.694 36.6676 64.694 36.6676 64.3663 36.4573C64.2732 36.4085 64.1801 36.3597 64.0841 36.3093C64.1802 36.2442 64.2764 36.1791 64.3754 36.112C64.3754 35.7213 64.3754 35.3306 64.3754 34.928Z" fill="#112C35"/>
<path d="M61.0255 35.9147C61.2178 35.9147 61.41 35.9147 61.6081 35.9147C61.7874 36.9833 61.7874 36.9833 61.6172 37.5673C61.5661 37.6732 61.5151 37.779 61.4624 37.888C61.3663 37.8229 61.2702 37.7578 61.1712 37.6907C61.1109 37.2829 61.1109 37.2829 61.0801 36.7903C61.0692 36.6273 61.0584 36.4642 61.0471 36.2962C61.04 36.1703 61.0329 36.0444 61.0255 35.9147Z" fill="#E3E2E3"/>
<path d="M33.2072 25.0613C33.2553 25.0613 33.3033 25.0613 33.3529 25.0613C33.3704 26.2015 33.3284 27.2872 33.2072 28.416C33.1592 28.416 33.1111 28.416 33.0616 28.416C33.0293 27.9681 32.9994 27.52 32.9705 27.0717C32.9536 26.8221 32.9367 26.5726 32.9193 26.3155C32.9159 25.6533 32.9159 25.6533 33.2072 25.0613Z" fill="#04131D"/>
<path d="M60.1517 59.5947C60.3601 60.1594 60.239 60.5683 60.1517 61.1733C59.9594 61.1733 59.7672 61.1733 59.5691 61.1733C59.5691 60.7826 59.5691 60.3919 59.5691 59.9893C59.7613 59.8591 59.9536 59.7289 60.1517 59.5947Z" fill="#295C73"/>
<path d="M43.5481 59.9893C43.6442 59.9893 43.7403 59.9893 43.8394 59.9893C43.8576 61.494 43.8576 61.494 43.6937 62.16C43.5495 62.0949 43.4053 62.0298 43.2568 61.9627C43.3235 61.278 43.3866 60.6457 43.5481 59.9893Z" fill="#295363"/>
<path d="M37.1397 46.5707C37.1877 46.5707 37.2358 46.5707 37.2853 46.5707C37.2996 46.737 37.3139 46.9034 37.3286 47.0748C37.3503 47.291 37.3721 47.5072 37.3946 47.73C37.4148 47.9452 37.4351 48.1604 37.456 48.3821C37.5343 48.9639 37.5343 48.9639 37.8793 49.2115C37.9716 49.2517 38.064 49.2919 38.1592 49.3333C38.1111 49.4636 38.0631 49.5938 38.0135 49.728C37.7405 49.6787 37.7405 49.6787 37.431 49.5307C37.1166 48.8919 37.1082 48.3614 37.1215 47.6067C37.1254 47.3151 37.1254 47.3151 37.1294 47.0177C37.1328 46.8702 37.1362 46.7227 37.1397 46.5707Z" fill="#E6E6E6"/>
<path d="M64.3754 42.8213C64.4981 43.2871 64.5412 43.5311 64.4209 44.0053C64.1992 44.4631 63.942 44.8165 63.6472 45.1893C63.6472 44.2187 63.9298 43.5623 64.3754 42.8213Z" fill="#051D21"/>
<path d="M35.2462 34.7307C35.2462 34.9911 35.2462 35.2516 35.2462 35.52C35.1501 35.52 35.054 35.52 34.9549 35.52C34.9549 35.6502 34.9549 35.7805 34.9549 35.9147C34.6185 35.9147 34.2821 35.9147 33.9354 35.9147C33.9835 35.7844 34.0316 35.6542 34.0811 35.52C34.2733 35.52 34.4656 35.52 34.6637 35.52C34.6637 35.3246 34.6637 35.1293 34.6637 34.928C34.9549 34.7307 34.9549 34.7307 35.2462 34.7307Z" fill="#567D8F"/>
<path d="M40.7808 29.6C40.7808 29.7954 40.7808 29.9907 40.7808 30.192C40.5464 30.5019 40.5464 30.5019 40.2346 30.8087C40.1332 30.9109 40.0318 31.0132 39.9274 31.1185C39.6235 31.3695 39.3807 31.4863 39.033 31.5733C38.985 31.4431 38.9369 31.3129 38.8874 31.1787C39.0009 31.1069 39.0009 31.1069 39.1167 31.0338C39.734 30.6318 40.2612 30.216 40.7808 29.6Z" fill="#103139"/>
<path d="M35.2462 30.192C35.7014 30.266 35.7014 30.266 36.1201 30.3893C36.1201 30.5847 36.1201 30.7801 36.1201 30.9813C35.7833 31.117 35.7833 31.117 35.3919 31.1787C35.1279 30.895 35.1279 30.895 34.955 30.5867C35.0511 30.4564 35.1472 30.3262 35.2462 30.192Z" fill="#04252D"/>
<path d="M31.8964 27.6267C31.9925 27.6918 32.0886 27.7569 32.1877 27.824C32.1396 27.9542 32.0916 28.0845 32.042 28.2187C31.8979 28.2838 31.7537 28.3489 31.6051 28.416C31.7974 28.5462 31.9896 28.6765 32.1877 28.8107C31.7932 29.0779 31.4581 29.0208 31.0225 29.008C31.2255 28.3435 31.4564 28.0241 31.8964 27.6267Z" fill="#264443"/>
<path d="M36.1201 18.7467C36.9372 18.7467 37.7543 18.7467 38.5961 18.7467C38.5961 18.8769 38.5961 19.0072 38.5961 19.1413C38.6922 19.2065 38.7883 19.2716 38.8874 19.3387C38.6891 19.2959 38.6891 19.2959 38.4869 19.2523C37.7018 19.0988 36.9106 19.0267 36.1201 18.944C36.1201 18.8789 36.1201 18.8138 36.1201 18.7467Z" fill="#011014"/>
<path d="M59.5691 56.832C59.6172 56.832 59.6652 56.832 59.7147 56.832C59.7642 57.1401 59.8125 57.4485 59.8604 57.757C59.8874 57.9287 59.9145 58.1004 59.9423 58.2773C60.0045 58.7929 60.0171 59.2707 60.006 59.792C59.8618 59.8571 59.7177 59.9222 59.5691 59.9893C59.5691 58.9474 59.5691 57.9055 59.5691 56.832Z" fill="#46738C"/>
<path d="M48.2087 47.36C48.5452 47.36 48.8816 47.36 49.2283 47.36C49.2283 47.6856 49.2283 48.0112 49.2283 48.3467C48.8004 48.1863 48.8004 48.1863 48.3544 47.952C48.3063 47.7566 48.2583 47.5613 48.2087 47.36Z" fill="#575556"/>
<path d="M64.958 45.7813C65.0541 45.7813 65.1502 45.7813 65.2493 45.7813C65.0499 46.4027 64.8305 46.7775 64.4482 47.212C64.3153 47.3662 64.3153 47.3662 64.1797 47.5234C63.9384 47.7547 63.9384 47.7547 63.6472 47.7547C63.6472 47.6244 63.6472 47.4942 63.6472 47.36C63.7403 47.3071 63.8334 47.2542 63.9293 47.1997C64.278 46.9877 64.278 46.9877 64.3754 46.3733C64.6758 46.2377 64.6758 46.2377 64.958 46.176C64.958 46.0458 64.958 45.9155 64.958 45.7813Z" fill="#314748"/>
<path d="M67.2883 35.7173C67.3363 35.7173 67.3844 35.7173 67.4339 35.7173C67.3658 36.5177 67.3058 37.1906 66.997 37.888C66.9009 37.7578 66.8047 37.6275 66.7057 37.4933C66.7581 36.8066 67.0096 36.2837 67.2883 35.7173Z" fill="#5A8694"/>
<path d="M67.2883 35.1253C67.2042 35.7865 67.0574 36.0493 66.7057 36.5067C66.5345 36.921 66.5345 36.921 66.4144 37.296C66.3432 36.0402 66.3432 36.0402 66.6875 35.4337C66.997 35.1253 66.997 35.1253 67.2883 35.1253Z" fill="#0E252A"/>
<path d="M46.024 34.336C46.5047 34.336 46.9853 34.336 47.4805 34.336C47.2932 34.8436 47.1406 34.9299 46.7523 35.1253C46.4337 35.0883 46.4337 35.0883 46.1697 34.928C46.1216 34.7326 46.0736 34.5373 46.024 34.336Z" fill="#A0A19E"/>
<path d="M61.3168 32.1653C61.5091 32.3607 61.7013 32.556 61.8994 32.7573C61.7958 32.9222 61.7958 32.9222 61.69 33.0903C61.4444 33.5829 61.3766 33.9501 61.3168 34.5333C61.2688 34.5333 61.2207 34.5333 61.1712 34.5333C61.1712 33.9472 61.1712 33.3612 61.1712 32.7573C61.075 32.6922 60.9789 32.6271 60.8799 32.56C61.0241 32.56 61.1683 32.56 61.3168 32.56C61.3168 32.4298 61.3168 32.2995 61.3168 32.1653Z" fill="#224253"/>
<path d="M64.0841 25.6533C64.3754 25.8507 64.3754 25.8507 64.4994 26.2584C64.5366 26.421 64.5738 26.5835 64.6121 26.751C64.65 26.9141 64.6879 27.0771 64.727 27.2451C64.7552 27.371 64.7833 27.4969 64.8123 27.6267C64.7162 27.7569 64.6201 27.8871 64.521 28.0213C64.4249 27.9562 64.3288 27.8911 64.2298 27.824C64.1694 27.3299 64.1694 27.3299 64.1387 26.7263C64.1278 26.5267 64.1169 26.327 64.1057 26.1212C64.0986 25.9668 64.0915 25.8124 64.0841 25.6533Z" fill="#091E20"/>
<path d="M50.1021 20.9173C50.0541 21.1127 50.006 21.3081 49.9565 21.5093C49.2355 21.4442 48.5146 21.3791 47.7718 21.312C47.7718 21.2469 47.7718 21.1818 47.7718 21.1147C48.554 20.9801 49.3134 20.8946 50.1021 20.9173Z" fill="#77746F"/>
<path d="M46.6066 20.3253C46.6066 20.5858 46.6066 20.8463 46.6066 21.1147C45.8179 21.1875 45.8179 21.1875 45.3868 20.8187C45.3087 20.721 45.2306 20.6233 45.1501 20.5227C46.115 20.3253 46.115 20.3253 46.6066 20.3253Z" fill="#B2AEAE"/>
<path d="M43.1111 18.5493C43.4115 18.8207 43.4115 18.8207 43.6937 19.3387C43.7022 20.0097 43.6336 20.652 43.548 21.312C43.5 21.312 43.4519 21.312 43.4024 21.312C43.2078 20.3564 43.0742 19.5489 43.1111 18.5493Z" fill="#130807"/>
<path d="M49.9564 17.5627C50.1006 17.5627 50.2448 17.5627 50.3934 17.5627C50.1203 18.6973 50.1203 18.6973 49.9564 19.1413C49.7161 19.1413 49.4758 19.1413 49.2282 19.1413C49.3243 18.946 49.4205 18.7506 49.5195 18.5493C49.6156 18.5493 49.7118 18.5493 49.8108 18.5493C49.8589 18.2237 49.9069 17.8981 49.9564 17.5627Z" fill="#0A373E"/>
<path d="M61.6081 58.8053C61.7043 58.8053 61.8004 58.8053 61.8994 58.8053C61.8994 59.3914 61.8994 59.9775 61.8994 60.5813C61.8033 60.5813 61.7072 60.5813 61.6081 60.5813C61.6081 60.4511 61.6081 60.3208 61.6081 60.1867C61.512 60.1867 61.4159 60.1867 61.3168 60.1867C61.413 59.7308 61.5091 59.275 61.6081 58.8053Z" fill="#3A6779"/>
<path d="M45.4415 48.544C45.7328 48.9387 45.7328 48.9387 45.7612 49.3657C45.7578 49.526 45.7544 49.6862 45.751 49.8513C45.7483 50.0126 45.7457 50.1739 45.743 50.34C45.7379 50.5255 45.7379 50.5255 45.7328 50.7147C45.4924 50.7147 45.2521 50.7147 45.0045 50.7147C44.9565 50.5844 44.9084 50.4542 44.8589 50.32C45.0511 50.32 45.2434 50.32 45.4415 50.32C45.4415 49.7339 45.4415 49.1478 45.4415 48.544Z" fill="#E9E8E8"/>
<path d="M62.4598 45.9594C62.7585 45.9658 63.0572 45.9722 63.3559 45.9787C62.9523 46.7305 62.3904 46.7815 61.7538 46.9653C62.1039 45.9849 62.1039 45.9849 62.4598 45.9594Z" fill="#151A1A"/>
<path d="M33.9354 45.1893C34.1757 45.3847 34.416 45.5801 34.6636 45.7813C34.6156 45.9767 34.5675 46.1721 34.518 46.3733C34.0902 46.2993 34.0902 46.2993 33.6441 46.176C33.5961 46.0458 33.548 45.9155 33.4985 45.7813C33.6427 45.7813 33.7869 45.7813 33.9354 45.7813C33.9354 45.586 33.9354 45.3906 33.9354 45.1893Z" fill="#0F2522"/>
<path d="M62.482 33.744C62.8045 34.493 62.9204 35.2746 63.0646 36.112C62.9204 36.1771 62.7762 36.2422 62.6277 36.3093C62.5751 35.919 62.5237 35.5284 62.4729 35.1377C62.4442 34.9202 62.4155 34.7027 62.3859 34.4786C62.3695 34.3013 62.3532 34.124 62.3364 33.9413C62.3844 33.8762 62.4325 33.8111 62.482 33.744Z" fill="#567C8B"/>
<path d="M61.7082 31.45C61.8194 31.4907 61.9305 31.5314 62.045 31.5733C61.5464 32.1949 61.1067 32.2762 60.4429 32.3627C61.1591 31.3462 61.1591 31.3462 61.7082 31.45Z" fill="#000809"/>
<path d="M48.2087 30.3893C48.1607 30.5847 48.1126 30.78 48.0631 30.9813C47.5092 31.3148 47.1815 31.4152 46.6066 31.1787C46.7911 31.0456 46.9764 30.9144 47.1619 30.784C47.265 30.7107 47.368 30.6375 47.4742 30.562C47.7718 30.3893 47.7718 30.3893 48.2087 30.3893Z" fill="#A8A8A5"/>
<path d="M57.6757 24.6667C57.8884 24.7889 58.1008 24.9125 58.3129 25.0367C58.4312 25.1054 58.5494 25.174 58.6713 25.2448C58.9865 25.456 58.9865 25.456 59.2778 25.8507C59.1336 25.9158 58.9894 25.9809 58.8408 26.048C58.7447 25.9178 58.6486 25.7875 58.5495 25.6533C58.2122 25.4484 57.8724 25.2503 57.53 25.0613C57.5781 24.9311 57.6262 24.8009 57.6757 24.6667Z" fill="#54869E"/>
<path d="M32.7702 23.088C32.8664 23.088 32.9625 23.088 33.0615 23.088C32.9654 23.8694 32.8693 24.6509 32.7702 25.456C32.6261 25.5211 32.4819 25.5862 32.3333 25.6533C32.3501 25.3736 32.3686 25.0941 32.3879 24.8147C32.3981 24.659 32.4082 24.5033 32.4187 24.3429C32.4812 23.8604 32.5934 23.5126 32.7702 23.088Z" fill="#09363A"/>
<path d="M34.518 22.6933C34.518 23.4058 34.3781 23.9875 34.2267 24.6667C34.0345 24.6667 33.8422 24.6667 33.6442 24.6667C33.8437 23.8783 34.1186 23.3248 34.518 22.6933Z" fill="#568296"/>
<path d="M43.4024 21.904C43.7005 22.5099 43.8675 22.9708 43.985 23.68C43.7728 24.1124 43.7728 24.1124 43.548 24.4693C43.4951 24.1532 43.4438 23.8365 43.3933 23.5197C43.3646 23.3434 43.3358 23.1671 43.3062 22.9855C43.2567 22.496 43.2567 22.496 43.4024 21.904Z" fill="#BCC3C1"/>
<path d="M58.5495 21.312C58.3553 21.4436 58.1611 21.5751 57.9669 21.7067C57.8738 21.7799 57.7807 21.8532 57.6848 21.9287C57.3245 22.1358 57.0436 22.1305 56.6561 22.1013C57.2247 21.2577 57.732 21.2911 58.5495 21.312Z" fill="#43738A"/>
<path d="M53.5976 19.9307C53.9054 20.5561 53.9257 20.6225 53.8525 21.312C53.8397 21.4463 53.827 21.5806 53.8138 21.719C53.7433 22.1013 53.7433 22.1013 53.452 22.6933C53.448 22.3809 53.4452 22.0685 53.4429 21.756C53.4412 21.582 53.4395 21.408 53.4377 21.2287C53.4508 20.763 53.5002 20.3757 53.5976 19.9307Z" fill="#5B5C57"/>
<path d="M47.353 19.3263C47.5126 19.3281 47.6722 19.3299 47.8366 19.3317C47.9594 19.334 48.0822 19.3363 48.2087 19.3387C47.7629 19.8564 47.6652 19.9307 47.0436 19.9307C47.0436 19.8004 47.0436 19.6702 47.0436 19.536C46.8032 19.6662 46.5629 19.7965 46.3153 19.9307C46.2673 19.8004 46.2192 19.6702 46.1697 19.536C46.5723 19.2632 46.9046 19.3199 47.353 19.3263Z" fill="#D0D9DA"/>
<path d="M39.3243 18.352C39.3724 18.8078 39.4204 19.2637 39.4699 19.7333C39.2777 19.6682 39.0854 19.6031 38.8874 19.536C38.8874 19.4058 38.8874 19.2755 38.8874 19.1413C38.7912 19.1413 38.6951 19.1413 38.5961 19.1413C38.6441 18.946 38.6922 18.7506 38.7417 18.5493C39.033 18.352 39.033 18.352 39.3243 18.352Z" fill="#052226"/>
<path d="M52.2868 14.208C52.0464 14.5336 51.8061 14.8592 51.5585 15.1947C51.3663 15.0644 51.174 14.9342 50.976 14.8C50.976 14.6698 50.976 14.5395 50.976 14.4053C51.4066 14.1136 51.8123 14.1961 52.2868 14.208Z" fill="#416672"/>
<path d="M46.6066 59.0027C47.3756 59.0027 48.1446 59.0027 48.9369 59.0027C48.9369 59.0678 48.9369 59.1329 48.9369 59.2C48.264 59.2651 47.5911 59.3302 46.8979 59.3973C46.8498 59.5927 46.8017 59.7881 46.7522 59.9893C46.6561 59.9242 46.56 59.8591 46.4609 59.792C46.509 59.5315 46.5571 59.271 46.6066 59.0027Z" fill="#3B6A7C"/>
<path d="M55.3453 56.6347C55.3726 57.3007 55.3726 57.3007 55.3453 58.016C55.1291 58.2114 55.1291 58.2114 54.9084 58.4107C54.8083 57.8557 54.8083 57.8557 54.7628 57.2267C55.0832 56.6347 55.0832 56.6347 55.3453 56.6347Z" fill="#418DAE"/>
<path d="M56.0735 55.648C56.2177 55.7131 56.3619 55.7782 56.5105 55.8453C56.5105 56.3663 56.5105 56.8872 56.5105 57.424C56.3663 57.424 56.2221 57.424 56.0735 57.424C56.0735 56.8379 56.0735 56.2518 56.0735 55.648Z" fill="#5C9CB7"/>
<path d="M35.9745 52.688C36.1687 52.9511 36.3629 53.2142 36.5571 53.4773C36.467 53.5587 36.3768 53.6401 36.284 53.724C35.9646 54.0803 35.8394 54.3474 35.6832 54.8587C35.6416 53.3928 35.6416 53.3928 35.9745 52.688Z" fill="#66C1EF"/>
<path d="M43.985 49.136C44.1292 49.2662 44.2734 49.3965 44.4219 49.5307C44.167 50.8627 44.167 50.8627 43.8393 51.3067C43.6937 51.1093 43.6937 51.1093 43.6664 50.4433C43.6937 49.728 43.6937 49.728 43.985 49.136Z" fill="#D2D0D2"/>
<path d="M66.7057 42.4267C66.8018 42.4267 66.898 42.4267 66.997 42.4267C66.997 42.622 66.997 42.8174 66.997 43.0187C66.9009 43.0187 66.8047 43.0187 66.7057 43.0187C66.6937 43.1733 66.6817 43.328 66.6693 43.4873C66.5601 44.0053 66.5601 44.0053 66.2597 44.2643C66.12 44.3315 66.12 44.3315 65.9775 44.4C66.0736 44.0093 66.1697 43.6186 66.2688 43.216C66.3649 43.216 66.461 43.216 66.5601 43.216C66.6081 42.9555 66.6562 42.695 66.7057 42.4267Z" fill="#1E3D42"/>
<path d="M30.1486 36.704C30.2448 36.704 30.3409 36.704 30.4399 36.704C30.4399 37.3552 30.4399 38.0064 30.4399 38.6773C30.3438 38.6773 30.2477 38.6773 30.1486 38.6773C29.9848 37.37 29.9848 37.37 30.1486 36.704Z" fill="#4F767E"/>
<path d="M57.2387 33.744C57.3829 33.8091 57.5271 33.8742 57.6757 33.9413C57.6757 34.0716 57.6757 34.2018 57.6757 34.336C58.1563 34.336 58.6369 34.336 59.1321 34.336C59.1321 34.4011 59.1321 34.4662 59.1321 34.5333C58.4112 34.5333 57.6902 34.5333 56.9474 34.5333C57.0436 34.2729 57.1397 34.0124 57.2387 33.744Z" fill="#3F606C"/>
<path d="M48.7913 33.9413C49.368 34.0064 49.9448 34.0716 50.539 34.1387C50.3948 34.2038 50.2506 34.2689 50.1021 34.336C50.1021 34.4662 50.1021 34.5965 50.1021 34.7307C49.6695 34.6655 49.2369 34.6004 48.7913 34.5333C48.7913 34.338 48.7913 34.1426 48.7913 33.9413Z" fill="#737572"/>
<path d="M55.491 26.048C55.5871 26.1131 55.6833 26.1782 55.7823 26.2453C55.8687 26.768 55.8904 27.2896 55.9279 27.824C55.7837 27.824 55.6396 27.824 55.491 27.824C55.3949 27.303 55.2987 26.7821 55.1997 26.2453C55.2958 26.1802 55.392 26.1151 55.491 26.048Z" fill="#4E92AC"/>
<path d="M39.7612 24.0747C40.1938 24.0747 40.6264 24.0747 41.072 24.0747C41.1201 24.3351 41.1682 24.5956 41.2177 24.864C41.002 24.8085 40.7866 24.7505 40.5714 24.6913C40.4514 24.6593 40.3314 24.6272 40.2078 24.5942C40.1085 24.553 40.0092 24.5118 39.9069 24.4693C39.8588 24.3391 39.8107 24.2088 39.7612 24.0747Z" fill="#316D7C"/>
<path d="M62.482 20.72C62.6742 20.8502 62.8665 20.9805 63.0646 21.1147C62.8243 21.4403 62.5839 21.7659 62.3364 22.1013C62.1922 22.0362 62.048 21.9711 61.8994 21.904C61.8994 21.7086 61.8994 21.5133 61.8994 21.312C62.0917 21.2469 62.2839 21.1818 62.482 21.1147C62.482 20.9844 62.482 20.8542 62.482 20.72Z" fill="#628A9E"/>
<path d="M40.1982 20.3253C40.5805 20.5103 40.5805 20.5103 40.9264 20.72C40.8784 21.0456 40.8303 21.3712 40.7808 21.7067C40.6847 21.7067 40.5885 21.7067 40.4895 21.7067C40.2871 21.3196 40.0925 20.9249 39.9069 20.5227C40.003 20.4575 40.0992 20.3924 40.1982 20.3253Z" fill="#062631"/>
<path d="M36.3176 18.732C36.5017 18.7572 36.6859 18.7824 36.8757 18.8083C37.1536 18.8438 37.1536 18.8438 37.4372 18.88C37.5793 18.9011 37.7215 18.9223 37.8679 18.944C37.8679 19.0091 37.8679 19.0742 37.8679 19.1413C36.6423 19.239 36.6423 19.239 35.3919 19.3387C35.8288 18.7467 35.8288 18.7467 36.3176 18.732Z" fill="#072628"/>
<path d="M52.1411 18.352C51.9489 18.4171 51.7566 18.4822 51.5585 18.5493C51.6066 18.7447 51.6547 18.9401 51.7042 19.1413C51.2716 19.0762 50.839 19.0111 50.3934 18.944C50.9366 18.2079 51.4086 18.0684 52.1411 18.352Z" fill="#204A50"/>
<path d="M51.5586 15.7867C51.6547 15.7867 51.7508 15.7867 51.8499 15.7867C51.8499 16.0471 51.8499 16.3076 51.8499 16.576C51.4129 16.9707 51.4129 16.9707 50.9487 16.8967C50.8135 16.856 50.6783 16.8153 50.5391 16.7733C51.0852 16.3787 51.0852 16.3787 51.4129 16.3787C51.461 16.1833 51.5091 15.9879 51.5586 15.7867Z" fill="#001214"/>
<path d="M46.024 55.2533C46.2163 55.3184 46.4085 55.3836 46.6066 55.4507C46.6066 55.7763 46.6066 56.1019 46.6066 56.4373C46.126 56.3071 45.6453 56.1768 45.1501 56.0427C45.1501 55.9775 45.1501 55.9124 45.1501 55.8453C45.4385 55.8453 45.7269 55.8453 46.024 55.8453C46.024 55.65 46.024 55.4546 46.024 55.2533Z" fill="#52A7CE"/>
<path d="M32.7703 42.4267C33.2072 42.7843 33.2072 42.7843 33.6442 43.216C33.6442 43.4114 33.6442 43.6067 33.6442 43.808C33.4519 43.7429 33.2597 43.6778 33.0616 43.6107C33.0616 43.4804 33.0616 43.3502 33.0616 43.216C32.8693 43.216 32.6771 43.216 32.479 43.216C32.5751 42.9555 32.6713 42.695 32.7703 42.4267Z" fill="#0B1F20"/>
<path d="M61.7538 40.6507C61.8018 40.7809 61.8499 40.9111 61.8994 41.0453C62.0436 41.1105 62.1878 41.1756 62.3364 41.2427C62.3844 41.5683 62.4325 41.8939 62.482 42.2293C62.2898 42.2945 62.0975 42.3596 61.8994 42.4267C61.9475 42.2313 61.9956 42.0359 62.0451 41.8347C61.9489 41.7695 61.8528 41.7044 61.7538 41.6373C61.7538 41.3117 61.7538 40.9861 61.7538 40.6507Z" fill="#181C1F"/>
<path d="M35.2462 34.928C35.3904 34.9931 35.5346 35.0582 35.6832 35.1253C35.137 36.0873 35.137 36.0873 34.8093 36.3093C34.8574 36.4396 34.9054 36.5698 34.955 36.704C34.7627 36.6389 34.5705 36.5738 34.3724 36.5067C34.4204 36.3113 34.4685 36.116 34.518 35.9147C34.6622 35.9147 34.8064 35.9147 34.955 35.9147C34.955 35.7844 34.955 35.6542 34.955 35.52C35.0511 35.52 35.1472 35.52 35.2462 35.52C35.2462 35.3246 35.2462 35.1293 35.2462 34.928Z" fill="#4D6672"/>
<path d="M62.218 32.6217C62.3487 32.6888 62.3487 32.6888 62.482 32.7573C62.3678 32.8672 62.2537 32.9771 62.1361 33.0903C61.7411 33.5618 61.6138 33.8625 61.4625 34.5333C61.4144 34.5333 61.3664 34.5333 61.3168 34.5333C61.4047 33.2713 61.4047 33.2713 61.6536 32.7573C61.8994 32.56 61.8994 32.56 62.218 32.6217Z" fill="#94BED3"/>
<path d="M35.1006 32.3627C35.1486 32.4929 35.1967 32.6231 35.2462 32.7573C35.052 32.8231 34.8578 32.8889 34.6636 32.9547C34.5104 33.0096 34.5104 33.0096 34.3541 33.0657C33.9883 33.1813 33.8387 33.1852 33.4985 32.9547C34.0103 32.2889 34.4103 32.3087 35.1006 32.3627Z" fill="#3F6F7F"/>
<path d="M38.5324 31.3637C38.6976 31.3677 38.8628 31.3718 39.033 31.376C39.0811 31.5062 39.1292 31.6365 39.1787 31.7707C38.8422 31.9009 38.5058 32.0311 38.1592 32.1653C38.063 31.97 37.9669 31.7746 37.8679 31.5733C38.0135 31.376 38.0135 31.376 38.5324 31.3637Z" fill="#06272E"/>
<path d="M33.9354 29.9947C34.0255 30.0638 34.1157 30.133 34.2085 30.2043C34.3106 30.2654 34.4128 30.3264 34.518 30.3893C34.6141 30.3242 34.7103 30.2591 34.8093 30.192C34.9054 30.5827 35.0016 30.9734 35.1006 31.376C34.6677 31.1541 34.3237 30.9373 33.9354 30.5867C33.9354 30.3913 33.9354 30.1959 33.9354 29.9947Z" fill="#092421"/>
<path d="M36.4114 27.824C36.4595 27.824 36.5076 27.824 36.5571 27.824C36.5571 28.6706 36.5571 29.5171 36.5571 30.3893C36.3168 30.3893 36.0765 30.3893 35.8289 30.3893C35.8769 30.194 35.925 29.9986 35.9745 29.7973C36.1187 29.7973 36.2629 29.7973 36.4114 29.7973C36.4114 29.1461 36.4114 28.4949 36.4114 27.824Z" fill="#4C7685"/>
<path d="M32.1877 29.2053C32.1096 29.2542 32.0315 29.303 31.951 29.3533C31.5226 29.6588 31.1312 30.0203 30.7312 30.3893C30.515 30.5847 30.515 30.5847 30.2943 30.784C30.7093 29.472 31.1268 29.0948 32.1877 29.2053Z" fill="#B8E5F1"/>
<path d="M65.2493 28.0213C65.6311 28.2283 65.8018 28.3468 66.0139 28.8353C66.05 28.9574 66.086 29.0795 66.1231 29.2053C65.9654 29.1565 65.9654 29.1565 65.8045 29.1067C65.4147 29.0128 65.0615 28.9927 64.6667 29.008C64.7148 28.8778 64.7628 28.7475 64.8123 28.6133C65.1127 28.49 65.1127 28.49 65.3949 28.416C65.3469 28.2858 65.2988 28.1555 65.2493 28.0213Z" fill="#395E62"/>
<path d="M45.5871 26.2453C46.236 26.4407 46.236 26.4407 46.8979 26.64C46.7537 26.8354 46.6095 27.0307 46.461 27.232C45.9742 27.1837 45.7902 27.1125 45.4415 26.64C45.4895 26.5098 45.5376 26.3795 45.5871 26.2453Z" fill="#CBC7C7"/>
<path d="M46.8979 23.2853C47.1892 23.4827 47.1892 23.4827 47.353 23.9513C47.4805 24.4693 47.4805 24.4693 47.4805 25.0613C47.2882 24.9962 47.096 24.9311 46.8979 24.864C46.8979 24.343 46.8979 23.8221 46.8979 23.2853Z" fill="#E1D8D4"/>
<path d="M44.1306 23.2853C44.2748 23.5458 44.419 23.8063 44.5676 24.0747C44.6637 23.9444 44.7598 23.8142 44.8589 23.68C45.0227 24.42 45.0227 24.42 44.8589 24.864C44.4894 24.6638 44.3064 24.5314 44.0851 24.0747C44.0521 23.9444 44.019 23.8142 43.985 23.68C44.033 23.5498 44.0811 23.4195 44.1306 23.2853Z" fill="#3E2F30"/>
<path d="M57.0931 22.6933C57.0931 22.8236 57.0931 22.9538 57.0931 23.088C56.6125 23.1531 56.1319 23.2182 55.6367 23.2853C56.1614 22.5744 56.4002 22.402 57.0931 22.6933Z" fill="#3C6577"/>
<path d="M49.2282 21.904C49.3724 21.9691 49.5166 22.0342 49.6652 22.1013C49.521 22.7525 49.3768 23.4037 49.2282 24.0747C49.1321 24.0747 49.036 24.0747 48.937 24.0747C49.0331 23.3584 49.1292 22.642 49.2282 21.904Z" fill="#A39D9B"/>
<path d="M33.6442 20.5227C33.7403 20.5878 33.8364 20.6529 33.9354 20.72C33.7352 21.2133 33.7352 21.2133 33.4985 21.7067C33.4024 21.7067 33.3063 21.7067 33.2072 21.7067C33.2072 21.8369 33.2072 21.9672 33.2072 22.1013C32.9188 22.2967 32.9188 22.2967 32.6246 22.496C32.8675 21.7182 33.2403 21.1563 33.6442 20.5227Z" fill="#0E2223"/>
<path d="M51.7042 59.2C51.8003 59.2 51.8964 59.2 51.9955 59.2C51.9474 59.9163 51.8994 60.6326 51.8498 61.3707C51.7057 61.3055 51.5615 61.2404 51.4129 61.1733C51.4129 60.978 51.4129 60.7826 51.4129 60.5813C51.509 60.5813 51.6052 60.5813 51.7042 60.5813C51.6772 60.39 51.6501 60.1988 51.6223 60.0017C51.6012 59.8022 51.5802 59.6028 51.5585 59.3973C51.6066 59.3322 51.6547 59.2671 51.7042 59.2Z" fill="#2A5A71"/>
<path d="M49.2282 48.7413C49.3724 48.839 49.3724 48.839 49.5195 48.9387C49.6378 49.506 49.6378 49.506 49.6651 50.1227C49.521 50.318 49.3768 50.5134 49.2282 50.7147C49.2282 50.0635 49.2282 49.4123 49.2282 48.7413ZM49.6651 49.5307C49.7613 49.6609 49.8574 49.7911 49.9564 49.9253C49.8603 49.9253 49.7642 49.9253 49.6651 49.9253C49.6651 49.7951 49.6651 49.6649 49.6651 49.5307Z" fill="#F1F1F1"/>
<path d="M31.4595 45.1893C31.844 45.3196 32.2285 45.4498 32.6246 45.584C32.4804 45.8445 32.3363 46.105 32.1877 46.3733C31.9055 46.2253 31.9055 46.2253 31.6051 45.9787C31.5571 45.7182 31.509 45.4577 31.4595 45.1893Z" fill="#172D2A"/>
<path d="M34.518 32.56C34.8548 32.597 34.8548 32.597 35.2462 32.7573C35.6372 33.4149 35.7361 33.8944 35.6832 34.7307C35.3919 34.336 35.3919 34.336 35.1825 33.7563C34.9871 33.2374 34.8385 32.9322 34.518 32.56Z" fill="#A0D3DE"/>
<path d="M52.4324 24.6667C52.5766 24.7318 52.7208 24.7969 52.8694 24.864C52.751 25.2463 52.751 25.2463 52.5781 25.6533C52.4339 25.7185 52.2897 25.7836 52.1411 25.8507C52.0931 25.5902 52.045 25.3297 51.9955 25.0613C52.1397 24.9311 52.2839 24.8009 52.4324 24.6667Z" fill="#DEDDD6"/>
<path d="M43.6937 23.4827C43.985 23.828 43.985 23.828 44.2763 24.272C44.2763 24.5325 44.2763 24.793 44.2763 25.0613C44.0841 24.9311 43.8918 24.8009 43.6937 24.6667C43.6937 24.2759 43.6937 23.8852 43.6937 23.4827Z" fill="#E2E5E5"/>
<path d="M63.0646 23.2853C63.401 23.4156 63.7375 23.5458 64.0841 23.68C64.0841 24.1358 64.0841 24.5917 64.0841 25.0613C63.6804 24.7879 63.5771 24.402 63.3559 23.8773C63.2597 23.682 63.1636 23.4866 63.0646 23.2853Z" fill="#3A6A73"/>
<path d="M41.8003 21.312C42.1648 21.8918 42.3056 22.334 42.3829 23.088C42.2387 23.1531 42.0945 23.2182 41.9459 23.2853C41.7773 22.5999 41.7903 22.0302 41.8003 21.312Z" fill="#828B8A"/>
<path d="M63.5015 21.1147C64.0589 21.7903 64.335 22.3001 64.521 23.2853C64.4249 23.2202 64.3288 23.1551 64.2298 23.088C64.2298 22.9578 64.2298 22.8275 64.2298 22.6933C64.1336 22.6933 64.0375 22.6933 63.9385 22.6933C63.8904 22.3677 63.8423 22.0421 63.7928 21.7067C63.6967 21.7067 63.6006 21.7067 63.5015 21.7067C63.5015 21.5113 63.5015 21.3159 63.5015 21.1147Z" fill="#22494B"/>
<path d="M46.4609 21.904C46.6051 21.904 46.7493 21.904 46.8979 21.904C46.8125 23.1181 46.8125 23.1181 46.7522 23.4827C46.608 23.5804 46.608 23.5804 46.4609 23.68C46.4609 23.0939 46.4609 22.5078 46.4609 21.904Z" fill="#EAE7E6"/>
<path d="M43.985 17.3653C44.033 17.5607 44.0811 17.756 44.1306 17.9573C44.3491 18.2863 44.3491 18.2863 44.5676 18.5493C44.0796 18.4353 43.8856 18.2364 43.548 17.76C43.2422 17.528 43.2422 17.528 42.9655 17.3653C43.417 17.1614 43.5562 17.133 43.985 17.3653Z" fill="#183C3C"/>
<path d="M46.1696 16.7733C46.2177 16.9036 46.2658 17.0338 46.3153 17.168C46.4084 17.225 46.5015 17.282 46.5975 17.3407C46.959 17.6079 47.039 17.8432 47.1892 18.352C47.045 18.2869 46.9008 18.2218 46.7522 18.1547C46.7042 18.0244 46.6561 17.8942 46.6066 17.76C46.3672 17.6176 46.1244 17.485 45.8784 17.3653C45.8784 17.2351 45.8784 17.1049 45.8784 16.9707C45.9745 16.9055 46.0706 16.8404 46.1696 16.7733Z" fill="#0A2E3A"/>
<path d="M53.015 16.3787C53.3563 16.4291 53.6964 16.4956 54.0345 16.576C54.0826 16.7062 54.1306 16.8365 54.1802 16.9707C53.6995 16.9707 53.2189 16.9707 52.7237 16.9707C52.8198 16.7753 52.9159 16.5799 53.015 16.3787Z" fill="#3A6266"/>
<path d="M52.1411 15.5893C52.4324 15.984 52.4324 15.984 52.4506 16.502C52.4446 16.6567 52.4386 16.8113 52.4324 16.9707C52.0865 17.094 52.0865 17.094 51.7042 17.168C51.6081 17.0378 51.5119 16.9075 51.4129 16.7733C51.5571 16.7082 51.7013 16.6431 51.8498 16.576C51.946 16.6411 52.0421 16.7062 52.1411 16.7733C52.1411 16.3826 52.1411 15.9919 52.1411 15.5893Z" fill="#051F22"/>
<path d="M44.8588 14.208C45.1472 14.3057 45.1472 14.3057 45.4414 14.4053C45.2972 14.503 45.2972 14.503 45.1501 14.6027C45.2943 14.798 45.4385 14.9934 45.5871 15.1947C45.539 15.3249 45.4909 15.4551 45.4414 15.5893C45.2972 15.5893 45.153 15.5893 45.0045 15.5893C45.0045 15.4591 45.0045 15.3288 45.0045 15.1947C44.9084 15.1947 44.8122 15.1947 44.7132 15.1947C44.7613 14.8691 44.8093 14.5435 44.8588 14.208Z" fill="#0C313B"/>
<path d="M39.6156 59.0027C39.7267 59.0719 39.8379 59.1411 39.9524 59.2123C40.3508 59.4612 40.3508 59.4612 40.7808 59.2C40.6846 59.4605 40.5885 59.721 40.4895 59.9893C40.2492 59.9242 40.0088 59.8591 39.7612 59.792C39.7132 59.5315 39.6651 59.271 39.6156 59.0027Z" fill="#2E6782"/>
<path d="M59.5691 55.8453C59.7613 55.9105 59.9536 55.9756 60.1517 56.0427C60.0424 56.98 60.0424 56.98 59.7147 57.424C59.6667 56.903 59.6186 56.3821 59.5691 55.8453Z" fill="#5399BC"/>
<path d="M39.1787 54.2667C39.3759 54.8012 39.3338 55.2552 39.3243 55.8453C39.2282 55.7802 39.132 55.7151 39.033 55.648C39.033 55.4526 39.033 55.2573 39.033 55.056C38.8888 54.9909 38.7446 54.9258 38.5961 54.8587C38.5961 54.7284 38.5961 54.5982 38.5961 54.464C38.8874 54.2667 38.8874 54.2667 39.1787 54.2667Z" fill="#74BCDC"/>
<path d="M35.5375 48.9387C35.8379 49.2593 35.8379 49.2593 36.1201 49.728C36.0837 50.3693 36.0837 50.3693 35.9744 50.912C35.756 50.7023 35.756 50.7023 35.5375 50.32C35.5102 49.5923 35.5102 49.5923 35.5375 48.9387Z" fill="#F1F2F1"/>
<path d="M33.4985 37.4933C33.5466 37.4933 33.5946 37.4933 33.6441 37.4933C33.6274 37.8059 33.6088 38.1183 33.5895 38.4307C33.5743 38.6917 33.5743 38.6917 33.5588 38.9579C33.4987 39.4648 33.3949 39.8137 33.2072 40.256C33.1535 38.3991 33.1535 38.3991 33.4985 37.4933Z" fill="#507082"/>
<path d="M62.9189 37.4933C63.0646 37.888 63.0646 37.888 62.9832 38.315C62.941 38.4753 62.8987 38.6356 62.8552 38.8007C62.8133 38.9619 62.7715 39.1232 62.7283 39.2894C62.6951 39.413 62.6619 39.5366 62.6276 39.664C62.5796 39.664 62.5315 39.664 62.482 39.664C62.4282 38.1825 62.4282 38.1825 62.7005 37.6907C62.7725 37.6255 62.8446 37.5604 62.9189 37.4933Z" fill="#64889B"/>
<path d="M48.3544 37.4933C48.8459 37.4563 48.8459 37.4563 49.3739 37.4933C49.7074 38.1712 49.6912 38.4771 49.6652 39.2693C49.6066 39.0923 49.6066 39.0923 49.5468 38.9117C49.2521 38.176 48.9138 37.8331 48.3544 37.4933Z" fill="#A9A9A9"/>
<path d="M31.0225 35.3227C31.0706 35.3227 31.1187 35.3227 31.1682 35.3227C31.1862 35.4773 31.2042 35.632 31.2228 35.7913C31.2834 36.3371 31.2834 36.3371 31.6051 36.704C31.3648 37.0296 31.1245 37.3552 30.8769 37.6907C30.925 36.9092 30.973 36.1278 31.0225 35.3227Z" fill="#476B75"/>
<path d="M64.8123 29.2053C65.2447 29.1356 65.5633 29.0984 65.9388 29.425C66.1528 29.6701 66.3572 29.9302 66.5601 30.192C66.512 30.3222 66.4639 30.4525 66.4144 30.5867C66.3476 30.52 66.2807 30.4534 66.2119 30.3847C65.5432 29.7257 65.5432 29.7257 64.8123 29.2053Z" fill="#BCE4F2"/>
<path d="M55.1997 28.2187C55.3439 28.2838 55.4881 28.3489 55.6366 28.416C55.8824 29.119 55.8824 29.119 56.0736 29.7973C55.8005 29.748 55.8005 29.748 55.491 29.6C55.2403 29.0906 55.1997 28.8404 55.1997 28.2187Z" fill="#07151C"/>
<path d="M44.8589 27.4293C45.003 27.4945 45.1472 27.5596 45.2958 27.6267C45.2958 27.7569 45.2958 27.8871 45.2958 28.0213C45.44 28.0865 45.5842 28.1516 45.7327 28.2187C44.8676 28.3163 44.8676 28.3163 43.985 28.416C44.0811 28.2858 44.1772 28.1555 44.2763 28.0213C44.4685 28.0213 44.6608 28.0213 44.8589 28.0213C44.8589 27.826 44.8589 27.6306 44.8589 27.4293Z" fill="#5E5E5C"/>
<path d="M41.946 27.6267C42.0421 27.6918 42.1382 27.7569 42.2373 27.824C42.1892 28.345 42.1411 28.8659 42.0916 29.4027C41.8994 29.4678 41.7071 29.5329 41.509 29.6C41.6532 28.9488 41.7974 28.2976 41.946 27.6267Z" fill="#B1B1B0"/>
<path d="M49.8108 23.2853C49.8589 23.2853 49.907 23.2853 49.9565 23.2853C49.9565 23.8063 49.9565 24.3273 49.9565 24.864C49.7642 24.9291 49.572 24.9942 49.3739 25.0613C49.5181 24.4753 49.6623 23.8892 49.8108 23.2853Z" fill="#E1DDD7"/>
<path d="M53.3063 21.904C53.5976 22.6933 53.5976 22.6933 53.4975 23.2237C53.3063 23.68 53.3063 23.68 52.8694 23.8773C53.0136 23.2261 53.1578 22.5749 53.3063 21.904Z" fill="#B2B2AC"/>
<path d="M39.3243 21.5093C39.7431 21.571 39.7431 21.571 40.1982 21.7067C40.2943 21.902 40.3905 22.0974 40.4895 22.2987C40.1531 22.2336 39.8166 22.1684 39.47 22.1013C39.4219 21.906 39.3739 21.7106 39.3243 21.5093Z" fill="#4B798E"/>
<path d="M44.2763 20.72C44.7089 20.8177 44.7089 20.8177 45.1502 20.9173C45.1502 21.1127 45.1502 21.3081 45.1502 21.5093C44.9579 21.3791 44.7657 21.2489 44.5676 21.1147C44.5676 21.4403 44.5676 21.7659 44.5676 22.1013C44.2763 21.5093 44.2763 21.5093 44.2763 20.72Z" fill="#836261"/>
<path d="M45.0045 15.7867C45.2929 15.9169 45.5813 16.0471 45.8784 16.1813C45.8784 16.3767 45.8784 16.5721 45.8784 16.7733C45.4458 16.6757 45.4458 16.6757 45.0045 16.576C45.0045 16.3155 45.0045 16.055 45.0045 15.7867Z" fill="#020F11"/>
<path d="M41.509 61.1733C41.5571 61.3036 41.6052 61.4338 41.6547 61.568C41.7508 61.6331 41.8469 61.6982 41.946 61.7653C41.8979 62.2212 41.8498 62.677 41.8003 63.1467C41.7042 63.0816 41.6081 63.0164 41.509 62.9493C41.509 62.3633 41.509 61.7772 41.509 61.1733Z" fill="#24434F"/>
<path d="M56.2192 53.6747C56.2673 53.6747 56.3153 53.6747 56.3648 53.6747C56.4129 54.3259 56.461 54.9771 56.5105 55.648C56.3663 55.648 56.2221 55.648 56.0735 55.648C56.1216 54.9968 56.1697 54.3456 56.2192 53.6747Z" fill="#67B0D2"/>
<path d="M61.3168 48.9387C61.6513 49.6184 61.6868 50.1104 61.7538 50.912C61.6096 50.8469 61.4654 50.7818 61.3168 50.7147C61.3168 50.1286 61.3168 49.5425 61.3168 48.9387Z" fill="#F0F0F0"/>
<path d="M53.8889 45.9787C54.3215 46.3694 54.3215 46.3694 54.7628 46.768C54.5705 47.0285 54.3783 47.289 54.1802 47.5573C53.9972 46.9839 53.8889 46.6109 53.8889 45.9787Z" fill="#A7A7A7"/>
<path d="M42.8198 45.584C42.8679 45.584 42.916 45.584 42.9655 45.584C43.0616 46.3654 43.1577 47.1469 43.2568 47.952C43.1606 47.952 43.0645 47.952 42.9655 47.952C42.9174 48.0822 42.8693 48.2125 42.8198 48.3467C42.8198 47.435 42.8198 46.5233 42.8198 45.584Z" fill="#2A2829"/>
<path d="M62.482 42.4267C62.53 42.4267 62.5781 42.4267 62.6276 42.4267C62.6276 42.7523 62.6276 43.0779 62.6276 43.4133C61.7902 44.0053 61.7902 44.0053 61.4625 44.0053C61.4625 43.8751 61.4625 43.7449 61.4625 43.6107C61.6036 43.5252 61.7448 43.4397 61.8903 43.3517C62.3767 43.0776 62.3767 43.0776 62.482 42.4267Z" fill="#283233"/>
<path d="M30.1487 33.152C30.2928 33.2171 30.437 33.2822 30.5856 33.3493C30.5375 33.7401 30.4895 34.1308 30.4399 34.5333C30.2477 34.2729 30.0554 34.0124 29.8574 33.744C29.9535 33.6789 30.0496 33.6138 30.1487 33.5467C30.1487 33.4164 30.1487 33.2862 30.1487 33.152Z" fill="#527784"/>
<path d="M29.2748 31.376C29.3709 31.376 29.4671 31.376 29.5661 31.376C29.5945 32.5708 29.5945 32.5708 29.5661 32.9547C29.47 33.0849 29.3738 33.2152 29.2748 33.3493C29.111 31.82 29.111 31.82 29.2748 31.376Z" fill="#112E35"/>
<path d="M57.53 31.1787C57.9145 31.2438 58.299 31.3089 58.6952 31.376C58.6471 31.5714 58.5991 31.7667 58.5495 31.968C57.8577 31.7953 57.8577 31.7953 57.53 31.5733C57.53 31.4431 57.53 31.3129 57.53 31.1787Z" fill="#062A2F"/>
<path d="M51.4129 28.2187C52.3778 28.1693 52.3778 28.1693 52.8694 28.6133C52.8213 28.7436 52.7732 28.8738 52.7237 29.008C51.9171 28.8866 51.9171 28.8866 51.5768 28.5023C51.5227 28.4087 51.4686 28.3151 51.4129 28.2187Z" fill="#CDD2CF"/>
<path d="M49.9565 21.904C50.1007 21.904 50.2449 21.904 50.3934 21.904C50.3934 22.4901 50.3934 23.0762 50.3934 23.68C49.9911 23.1349 50.0179 22.6525 49.9565 21.904Z" fill="#E9E2E0"/>
<path d="M45.4415 21.5093C45.5857 21.5745 45.7298 21.6396 45.8784 21.7067C45.7823 22.2928 45.6862 22.8788 45.5871 23.4827C45.539 23.4827 45.491 23.4827 45.4415 23.4827C45.4415 22.8315 45.4415 22.1803 45.4415 21.5093Z" fill="#DDD7D5"/>
<path d="M63.0646 21.5093C63.4722 22.0082 63.7138 22.3389 63.7928 23.088C63.6666 22.8988 63.6666 22.8988 63.5379 22.7057C63.213 22.3022 63.0537 22.1838 62.6276 22.1013C62.7718 21.906 62.916 21.7106 63.0646 21.5093Z" fill="#608B9E"/>
<path d="M49.9565 20.72C50.4844 20.683 50.4844 20.683 50.976 20.72C51.024 20.8502 51.0721 20.9805 51.1216 21.1147C50.641 21.1798 50.1604 21.2449 49.6652 21.312C49.7613 21.1166 49.8574 20.9213 49.9565 20.72Z" fill="#98918B"/>
<path d="M38.8874 20.3253C39.2424 20.35 39.2424 20.35 39.6156 20.5227C39.7598 20.7831 39.904 21.0436 40.0525 21.312C39.5719 21.1166 39.0913 20.9213 38.5961 20.72C38.6922 20.5898 38.7883 20.4595 38.8874 20.3253Z" fill="#4C7381"/>
<path d="M37.0122 19.721C37.1718 19.7228 37.3314 19.7246 37.4958 19.7264C37.6186 19.7287 37.7414 19.731 37.8679 19.7333C37.8679 19.7985 37.8679 19.8636 37.8679 19.9307C37.7361 19.9486 37.7361 19.9486 37.6016 19.9669C37.427 19.9917 37.427 19.9917 37.2489 20.017C37.134 20.033 37.0191 20.0491 36.9007 20.0656C36.5828 20.1233 36.2837 20.211 35.9745 20.3253C35.9264 20.1951 35.8784 20.0649 35.8289 19.9307C36.2315 19.6579 36.5638 19.7145 37.0122 19.721Z" fill="#558195"/>
<path d="M36.994 17.9573C36.994 18.0876 36.994 18.2178 36.994 18.352C37.3785 18.352 37.763 18.352 38.1592 18.352C38.1592 18.4171 38.1592 18.4822 38.1592 18.5493C37.4863 18.5493 36.8134 18.5493 36.1201 18.5493C36.7027 17.9573 36.7027 17.9573 36.994 17.9573Z" fill="#496465"/>
<path d="M53.7432 16.9707C53.8874 16.9707 54.0316 16.9707 54.1802 16.9707C54.1802 17.1009 54.1802 17.2312 54.1802 17.3653C54.3244 17.3002 54.4686 17.2351 54.6171 17.168C54.6652 17.5587 54.7132 17.9494 54.7628 18.352C54.7057 18.2584 54.6486 18.1648 54.5898 18.0683C54.2664 17.6906 54.0151 17.6391 53.5976 17.5627C53.6457 17.3673 53.6937 17.172 53.7432 16.9707Z" fill="#153831"/>
<path d="M44.1306 16.576C44.1306 16.7062 44.1306 16.8365 44.1306 16.9707C43.7461 16.9707 43.3616 16.9707 42.9655 16.9707C42.9655 16.8404 42.9655 16.7102 42.9655 16.576C43.3823 16.2936 43.684 16.4576 44.1306 16.576Z" fill="#40666D"/>
<path d="M56.0736 60.5813C56.2658 60.6464 56.4581 60.7116 56.6561 60.7787C56.5726 61.3445 56.5307 61.5407 56.2192 61.9627C56.0736 61.7653 56.0736 61.7653 56.0645 61.161C56.0675 60.9697 56.0705 60.7784 56.0736 60.5813Z" fill="#284F5C"/>
<path d="M35.5375 56.832C35.8259 57.0274 35.8259 57.0274 36.1201 57.2267C35.9759 57.7476 35.8317 58.2686 35.6832 58.8053C35.6351 58.8053 35.5871 58.8053 35.5375 58.8053C35.5375 58.1541 35.5375 57.5029 35.5375 56.832Z" fill="#4D86A2"/>
<path d="M40.0526 56.4373C40.2929 56.4373 40.5332 56.4373 40.7808 56.4373C40.8289 56.5676 40.8769 56.6978 40.9264 56.832C40.7552 56.9175 40.7552 56.9175 40.5805 57.0047C40.1841 57.1969 40.1841 57.1969 39.9069 57.6213C39.955 57.2306 40.003 56.8399 40.0526 56.4373Z" fill="#5398B9"/>
<path d="M61.6081 54.0693C61.7042 54.0693 61.8004 54.0693 61.8994 54.0693C61.8513 54.7205 61.8033 55.3717 61.7538 56.0427C61.6576 55.9124 61.5615 55.7822 61.4625 55.648C61.4673 55.1095 61.5446 54.6028 61.6081 54.0693Z" fill="#6BB0D1"/>
<path d="M40.6351 52.2933C41.2119 52.2933 41.7886 52.2933 42.3829 52.2933C42.3348 52.5538 42.2868 52.8143 42.2372 53.0827C42.1411 53.0827 42.045 53.0827 41.9459 53.0827C41.9459 52.8873 41.9459 52.6919 41.9459 52.4907C41.5134 52.4907 41.0808 52.4907 40.6351 52.4907C40.6351 52.4255 40.6351 52.3604 40.6351 52.2933Z" fill="#75CAFA"/>
<path d="M46.4609 46.176C46.7493 46.3714 46.7493 46.3714 47.0435 46.5707C46.96 47.1365 46.9181 47.3327 46.6066 47.7547C46.4609 47.5573 46.4609 47.5573 46.4518 46.8543C46.4548 46.6305 46.4579 46.4066 46.4609 46.176Z" fill="#B1B1B1"/>
<path d="M63.9384 32.3627C64.2333 32.744 64.4367 33.0793 64.6666 33.5467C64.612 33.9783 64.612 33.9783 64.521 34.336C64.1083 33.7039 64.0082 33.1952 63.9384 32.3627Z" fill="#0F383D"/>
<path d="M67.4339 31.7707C67.53 31.7707 67.6262 31.7707 67.7252 31.7707C67.7733 32.2265 67.8213 32.6823 67.8708 33.152C67.7267 33.152 67.5825 33.152 67.4339 33.152C67.2397 32.6258 67.3362 32.3297 67.4339 31.7707Z" fill="#1E4754"/>
<path d="M33.9354 27.4293C34.2267 27.6267 34.2267 27.6267 34.3906 28.231C34.4326 28.4223 34.4747 28.6136 34.518 28.8107C34.4219 28.8107 34.3258 28.8107 34.2267 28.8107C34.1787 29.006 34.1306 29.2014 34.0811 29.4027C34.033 28.7515 33.9849 28.1003 33.9354 27.4293Z" fill="#0C3443"/>
<path d="M33.7898 24.864C33.8859 24.9291 33.982 24.9942 34.0811 25.0613C34.0811 25.6474 34.0811 26.2335 34.0811 26.8373C33.7816 26.3809 33.6501 26.135 33.6077 25.5177C33.6441 25.0613 33.6441 25.0613 33.7898 24.864Z" fill="#5B92A5"/>
<path d="M56.2192 17.5627C56.4115 17.6278 56.6037 17.6929 56.8018 17.76C56.8018 17.9554 56.8018 18.1507 56.8018 18.352C56.4654 18.4171 56.1289 18.4822 55.7823 18.5493C55.8304 18.4191 55.8784 18.2889 55.9279 18.1547C56.0241 18.1547 56.1202 18.1547 56.2192 18.1547C56.2192 17.9593 56.2192 17.7639 56.2192 17.5627Z" fill="#5D8699"/>
<path d="M51.8499 14.9973C51.946 14.9973 52.0421 14.9973 52.1412 14.9973C52.1412 15.5834 52.1412 16.1695 52.1412 16.7733C52.045 16.7733 51.9489 16.7733 51.8499 16.7733C51.686 15.4413 51.686 15.4413 51.8499 14.9973Z" fill="#2E4648"/>
<path d="M56.2192 57.2267C56.4355 57.422 56.4355 57.422 56.6562 57.6213C56.6562 57.8818 56.6562 58.1423 56.6562 58.4107C56.4639 58.4107 56.2717 58.4107 56.0736 58.4107C56.0674 58.0819 56.0677 57.7528 56.0736 57.424C56.1216 57.3589 56.1697 57.2938 56.2192 57.2267Z" fill="#4A86A2"/>
<path d="M61.7537 55.056C61.8018 55.056 61.8499 55.056 61.8994 55.056C61.8994 55.7723 61.8994 56.4886 61.8994 57.2267C61.8033 57.2267 61.7071 57.2267 61.6081 57.2267C61.4017 56.3879 61.58 55.9009 61.7537 55.056Z" fill="#6497AF"/>
<path d="M52.5781 54.6613C52.6742 54.7265 52.7703 54.7916 52.8694 54.8587C52.9615 55.2664 52.9615 55.2664 53.0332 55.759C53.0576 55.9221 53.082 56.0851 53.1072 56.2531C53.1248 56.379 53.1425 56.5049 53.1607 56.6347C52.5983 56.1267 52.5864 55.7249 52.4324 54.8587C52.4805 54.7935 52.5286 54.7284 52.5781 54.6613Z" fill="#6CAFCD"/>
<path d="M43.5481 54.8587C43.8393 55.2533 43.8393 55.2533 43.8678 55.6372C43.8583 56.0355 43.8488 56.4337 43.8393 56.832C43.4624 56.3213 43.4567 55.9598 43.4024 55.2533C43.4505 55.1231 43.4985 54.9929 43.5481 54.8587Z" fill="#69A9C8"/>
<path d="M52.8694 50.7147C52.8694 50.8449 52.8694 50.9751 52.8694 51.1093C52.9655 51.1744 53.0616 51.2396 53.1607 51.3067C52.7546 51.5104 52.5973 51.5129 52.1776 51.319C52.0694 51.2498 51.9613 51.1806 51.8499 51.1093C52.2868 50.7147 52.2868 50.7147 52.8694 50.7147Z" fill="#BEC0C3"/>
<path d="M43.6937 47.7547C43.7418 47.7547 43.7898 47.7547 43.8393 47.7547C43.8393 48.4059 43.8393 49.0571 43.8393 49.728C43.6952 49.728 43.551 49.728 43.4024 49.728C43.4234 49.6222 43.4445 49.5164 43.4661 49.4073C43.5618 48.8599 43.6285 48.3101 43.6937 47.7547Z" fill="#414141"/>
<path d="M62.7733 41.2427C62.9655 41.2427 63.1578 41.2427 63.3558 41.2427C63.3558 41.3729 63.3558 41.5031 63.3558 41.6373C63.6442 41.6373 63.9326 41.6373 64.2297 41.6373C64.2297 41.7024 64.2297 41.7676 64.2297 41.8347C63.7491 41.8347 63.2684 41.8347 62.7733 41.8347C62.7733 41.6393 62.7733 41.4439 62.7733 41.2427Z" fill="#0C1D1E"/>
<path d="M32.7703 40.848C33.1548 40.9131 33.5393 40.9782 33.9354 41.0453C33.8874 41.1756 33.8393 41.3058 33.7898 41.44C33.4166 41.5633 33.4166 41.5633 33.0616 41.6373C33.0616 41.442 33.0616 41.2466 33.0616 41.0453C32.9654 40.9802 32.8693 40.9151 32.7703 40.848Z" fill="#0E2529"/>
<path d="M29.8574 33.744C30.1487 34.1017 30.1487 34.1017 30.44 34.5333C30.44 34.7287 30.44 34.9241 30.44 35.1253C30.1578 34.9773 30.1578 34.9773 29.8574 34.7307C29.739 34.3237 29.739 34.3237 29.7117 33.9413C29.7598 33.8762 29.8079 33.8111 29.8574 33.744Z" fill="#0C2627"/>
<path d="M63.6472 33.5467C63.7433 33.5467 63.8394 33.5467 63.9385 33.5467C64.0346 34.1979 64.1307 34.8491 64.2298 35.52C63.9385 35.1253 63.9385 35.1253 63.8656 34.7183C63.8416 34.5922 63.8176 34.466 63.7928 34.336C63.6967 34.2709 63.6006 34.2058 63.5015 34.1387C63.5496 33.9433 63.5977 33.7479 63.6472 33.5467Z" fill="#7498A5"/>
<path d="M33.9354 32.7573C34.0316 32.8225 34.1277 32.8876 34.2267 32.9547C34.1787 33.15 34.1306 33.3454 34.0811 33.5467C33.7079 33.781 33.7079 33.781 33.3528 33.9413C33.3984 33.5713 33.3984 33.5713 33.4985 33.152C33.6427 33.0218 33.7869 32.8915 33.9354 32.7573Z" fill="#538394"/>
<path d="M35.1006 32.3627C35.5332 32.4604 35.5332 32.4604 35.9745 32.56C35.9264 32.8856 35.8783 33.2112 35.8288 33.5467C35.583 33.222 35.3403 32.8929 35.1006 32.56C35.1006 32.4949 35.1006 32.4298 35.1006 32.3627Z" fill="#0A333B"/>
<path d="M56.0735 31.5733C56.3619 31.5733 56.6503 31.5733 56.9474 31.5733C56.7479 32.1971 56.6577 32.3612 56.2192 32.7573C56.2673 32.4317 56.3153 32.1061 56.3648 31.7707C56.2687 31.7055 56.1726 31.6404 56.0735 31.5733Z" fill="#8F8E89"/>
<path d="M31.3138 29.6C31.6502 29.6 31.9867 29.6 32.3333 29.6C32.3814 29.7302 32.4294 29.8605 32.479 29.9947C31.8301 30.0924 31.8301 30.0924 31.1682 30.192C31.2162 29.9966 31.2643 29.8013 31.3138 29.6Z" fill="#3D6E7F"/>
<path d="M55.9279 28.416C56.2163 28.5137 56.2163 28.5137 56.5105 28.6133C56.4625 28.9389 56.4144 29.2645 56.3649 29.6C56.1726 29.4046 55.9804 29.2093 55.7823 29.008C55.8304 28.8126 55.8784 28.6173 55.9279 28.416Z" fill="#5392A9"/>
<path d="M33.4985 26.8373C33.6907 26.8373 33.883 26.8373 34.0811 26.8373C34.033 27.2932 33.9849 27.749 33.9354 28.2187C33.8393 28.1536 33.7432 28.0884 33.6441 28.0213C33.5531 27.417 33.5531 27.417 33.4985 26.8373Z" fill="#3E6C7B"/>
<path d="M56.5105 21.904C56.9292 21.8793 56.9292 21.8793 57.3844 21.904C57.4805 22.0342 57.5766 22.1645 57.6757 22.2987C57.0304 22.7115 57.0304 22.7115 56.6106 22.6193C56.5295 22.5786 56.4484 22.5379 56.3649 22.496C56.4129 22.3006 56.461 22.1053 56.5105 21.904Z" fill="#538899"/>
<path d="M39.6156 20.5227C40.1044 20.7967 40.3545 21.0983 40.6351 21.7067C40.6351 21.8369 40.6351 21.9672 40.6351 22.1013C39.9955 21.8125 39.9244 21.3163 39.6156 20.5227Z" fill="#6A9AA9"/>
<path d="M54.4715 18.352C54.5676 18.352 54.6637 18.352 54.7628 18.352C54.7255 18.8144 54.6765 19.2752 54.6171 19.7333C54.4729 19.831 54.4729 19.831 54.3258 19.9307C54.3197 19.4703 54.3199 19.0097 54.3258 18.5493C54.3739 18.4842 54.422 18.4191 54.4715 18.352Z" fill="#E1E6E9"/>
<path d="M48.7913 19.3387C49.2719 19.3387 49.7525 19.3387 50.2477 19.3387C50.1035 19.4038 49.9593 19.4689 49.8108 19.536C49.8108 19.6662 49.8108 19.7965 49.8108 19.9307C49.119 19.7827 49.119 19.7827 48.7913 19.3387Z" fill="#D5DEDF"/>
<path d="M43.6937 12.6293C43.9377 12.6858 44.1807 12.7512 44.4219 12.8267C44.2297 13.0871 44.0374 13.3476 43.8393 13.616C43.7432 13.3555 43.6471 13.095 43.548 12.8267C43.5961 12.7615 43.6442 12.6964 43.6937 12.6293Z" fill="#5D8893"/>
<path d="M39.3243 57.8187C39.2763 58.014 39.2282 58.2094 39.1787 58.4107C38.6598 58.645 38.6598 58.645 38.1592 58.8053C38.2072 58.5449 38.2553 58.2844 38.3048 58.016C38.401 58.016 38.4971 58.016 38.5961 58.016C39.0331 57.8187 39.0331 57.8187 39.3243 57.8187Z" fill="#3E809F"/>
<path d="M61.8994 57.424C61.8994 57.8798 61.8994 58.3357 61.8994 58.8053C61.8033 58.8053 61.7071 58.8053 61.6081 58.8053C61.56 58.4146 61.512 58.0239 61.4625 57.6213C61.7538 57.424 61.7538 57.424 61.8994 57.424Z" fill="#4E8096"/>
<path d="M59.8603 52.4907C59.9565 52.5558 60.0526 52.6209 60.1516 52.688C60.0555 53.2741 59.9594 53.8602 59.8603 54.464C59.8123 54.464 59.7642 54.464 59.7147 54.464C59.6965 52.9347 59.6965 52.9347 59.8603 52.4907Z" fill="#67C3F2"/>
<path d="M56.0735 49.3333C56.434 49.431 56.434 49.431 56.8018 49.5307C56.7567 49.6446 56.7117 49.7586 56.6652 49.876C56.4824 50.3632 56.4824 50.3632 56.3648 51.1093C56.2687 50.5232 56.1726 49.9372 56.0735 49.3333Z" fill="#4B4748"/>
<path d="M64.0841 46.3733C63.6175 46.9325 63.2421 47.0681 62.6276 47.1627C62.9201 46.3703 63.4901 46.1051 64.0841 46.3733Z" fill="#152425"/>
<path d="M32.0421 39.072C32.3822 39.5175 32.6519 39.9167 32.9159 40.4533C32.4983 40.3402 32.3535 40.2833 32.0421 39.8613C32.0421 39.6008 32.0421 39.3404 32.0421 39.072Z" fill="#6992A0"/>
<path d="M62.482 36.704C62.7733 37.296 62.7733 37.296 62.7186 37.7277C62.6886 37.8457 62.6586 37.9637 62.6276 38.0853C62.5315 38.0853 62.4354 38.0853 62.3363 38.0853C62.2883 38.2807 62.2402 38.476 62.1907 38.6773C62.3181 37.148 62.3181 37.148 62.482 36.704Z" fill="#4A606D"/>
<path d="M29.4204 34.928C29.6127 35.2536 29.8049 35.5792 30.003 35.9147C29.8588 36.1752 29.7146 36.4356 29.5661 36.704C29.518 36.1179 29.4699 35.5318 29.4204 34.928Z" fill="#3A5F69"/>
<path d="M61.6081 33.9413C61.8484 34.0064 62.0887 34.0716 62.3363 34.1387C62.3844 34.3991 62.4325 34.6596 62.482 34.928C62.1455 34.7978 61.8091 34.6675 61.4625 34.5333C61.5105 34.338 61.5586 34.1426 61.6081 33.9413Z" fill="#496A77"/>
<path d="M40.0526 31.5733C40.6351 31.8364 40.7572 32.2632 41.0721 32.9547C40.6545 32.7011 40.3473 32.4473 40.0526 31.968C40.0526 31.8378 40.0526 31.7075 40.0526 31.5733Z" fill="#6F736C"/>
<path d="M36.5571 29.9947C36.6051 30.19 36.6532 30.3854 36.7027 30.5867C36.5085 30.8498 36.3143 31.1129 36.1201 31.376C35.9279 31.2458 35.7356 31.1155 35.5375 30.9813C35.7298 30.9813 35.922 30.9813 36.1201 30.9813C36.1201 30.786 36.1201 30.5906 36.1201 30.3893C36.2643 30.3893 36.4085 30.3893 36.5571 30.3893C36.5571 30.2591 36.5571 30.1288 36.5571 29.9947Z" fill="#113A42"/>
<path d="M62.1907 30.192C62.2388 30.3222 62.2868 30.4525 62.3364 30.5867C62.2883 30.7169 62.2402 30.8471 62.1907 30.9813C62.2868 31.0465 62.383 31.1116 62.482 31.1787C62.2417 31.2438 62.0014 31.3089 61.7538 31.376C61.7538 30.784 61.7538 30.784 61.9723 30.451C62.0804 30.3228 62.0804 30.3228 62.1907 30.192Z" fill="#041518"/>
<path d="M62.045 29.9947C62.4055 30.0923 62.4055 30.0923 62.7733 30.192C62.7252 30.4525 62.6771 30.713 62.6276 30.9813C62.4834 30.9813 62.3392 30.9813 62.1907 30.9813C62.1426 30.6557 62.0946 30.3301 62.045 29.9947Z" fill="#09262A"/>
<path d="M61.1712 29.4027C61.4115 29.4678 61.6518 29.5329 61.8994 29.6C61.7173 29.9083 61.7173 29.9083 61.4625 30.192C61.1439 30.1303 61.1439 30.1303 60.8799 29.9947C60.976 29.9947 61.0721 29.9947 61.1712 29.9947C61.1712 29.7993 61.1712 29.6039 61.1712 29.4027Z" fill="#5C8B9C"/>
<path d="M47.0435 28.8107C47.38 28.8107 47.7164 28.8107 48.0631 28.8107C48.015 29.006 47.9669 29.2014 47.9174 29.4027C47.581 29.3375 47.2445 29.2724 46.8979 29.2053C46.946 29.0751 46.994 28.9449 47.0435 28.8107Z" fill="#939391"/>
<path d="M64.6667 27.6267C64.9398 27.676 64.9398 27.676 65.2493 27.824C65.4313 28.231 65.4313 28.231 65.5406 28.6133C65.3002 28.5482 65.0599 28.4831 64.8123 28.416C64.7643 28.1555 64.7162 27.895 64.6667 27.6267Z" fill="#183938"/>
<path d="M45.8784 23.088C46.1683 23.6773 46.3067 24.1924 46.4609 24.864C46.3168 24.864 46.1726 24.864 46.024 24.864C45.9759 24.2779 45.9279 23.6918 45.8784 23.088Z" fill="#D9D3D1"/>
<path d="M50.8303 21.904C50.9745 22.0017 50.9745 22.0017 51.1216 22.1013C51.1819 22.5091 51.1819 22.5091 51.2126 23.0017C51.2235 23.1647 51.2344 23.3278 51.2456 23.4958C51.2563 23.6847 51.2563 23.6847 51.2673 23.8773C50.9328 23.1976 50.8973 22.7056 50.8303 21.904Z" fill="#1C1D19"/>
<path d="M51.1216 21.5093C51.2177 21.5093 51.3139 21.5093 51.4129 21.5093C51.4129 22.0954 51.4129 22.6815 51.4129 23.2853C51.1293 22.709 51.0412 22.3789 50.976 21.7067C51.024 21.6416 51.0721 21.5764 51.1216 21.5093Z" fill="#DED9D6"/>
<path d="M55.7823 21.7067C55.8784 21.7067 55.9746 21.7067 56.0736 21.7067C56.0736 21.9671 56.0736 22.2276 56.0736 22.496C56.2178 22.5611 56.362 22.6262 56.5105 22.6933C56.2222 22.7585 55.9338 22.8236 55.6367 22.8907C55.6847 22.4999 55.7328 22.1092 55.7823 21.7067Z" fill="#042A36"/>
<path d="M51.9955 21.1147C52.2868 21.5093 52.2868 21.5093 52.305 22.126C52.299 22.3132 52.293 22.5004 52.2868 22.6933C52.1907 22.6933 52.0945 22.6933 51.9955 22.6933C51.9401 22.2343 51.8917 21.7737 51.8499 21.312C51.8979 21.2469 51.946 21.1818 51.9955 21.1147Z" fill="#D1CBC8"/>
<path d="M55.7823 19.1413C55.9745 19.4018 56.1668 19.6623 56.3649 19.9307C56.2687 19.9307 56.1726 19.9307 56.0736 19.9307C56.1216 20.1911 56.1697 20.4516 56.2192 20.72C56.075 20.72 55.9308 20.72 55.7823 20.72C55.7823 20.199 55.7823 19.6781 55.7823 19.1413Z" fill="#54808F"/>
<path d="M35.3919 19.3387C35.2462 19.9307 35.2462 19.9307 34.9458 20.165C34.8527 20.2179 34.7596 20.2708 34.6636 20.3253C34.6636 20.0649 34.6636 19.8044 34.6636 19.536C34.9549 19.3387 34.9549 19.3387 35.3919 19.3387Z" fill="#1B444B"/>
<path d="M42.6741 17.5627C42.9182 17.6191 43.1612 17.6846 43.4024 17.76C43.2582 17.8902 43.114 18.0205 42.9654 18.1547C42.8592 18.6604 42.8592 18.6604 42.8198 19.1413C42.7717 19.1413 42.7237 19.1413 42.6741 19.1413C42.6187 18.6823 42.5703 18.2217 42.5285 17.76C42.5766 17.6949 42.6246 17.6298 42.6741 17.5627Z" fill="#99A1A1"/>
</svg>

     ]]

     local selfPlayer = [[
        <svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M165.507 276.86C166.326 276.857 167.145 276.854 167.989 276.851C170.713 276.842 173.438 276.84 176.162 276.839C178.124 276.834 180.086 276.829 182.049 276.824C187.37 276.811 192.691 276.804 198.012 276.8C201.347 276.797 204.682 276.793 208.017 276.788C218.481 276.775 228.946 276.765 239.41 276.761C251.432 276.757 263.453 276.739 275.475 276.71C284.801 276.688 294.127 276.678 303.453 276.677C309.006 276.676 314.559 276.67 320.112 276.652C362.328 276.523 409.744 276.416 442.562 307.555C453.87 318.921 461.44 332.591 465.875 347.937C466.066 348.591 466.257 349.245 466.455 349.919C470.694 366.055 470.489 383.059 470.59 399.611C470.613 402.247 470.654 404.884 470.713 407.519C471.06 423.122 471.216 435.939 462 449C461.612 449.551 461.224 450.102 460.825 450.67C454.264 459.886 445.84 466.845 434.678 469.566C431.71 470.047 428.912 470.128 425.905 470.131C424.673 470.135 423.441 470.139 422.171 470.143C420.807 470.142 419.443 470.141 418.078 470.14C416.626 470.143 415.175 470.146 413.723 470.149C409.732 470.157 405.742 470.159 401.752 470.16C397.448 470.162 393.145 470.169 388.841 470.176C379.43 470.19 370.019 470.196 360.607 470.2C354.729 470.203 348.851 470.207 342.973 470.212C326.693 470.224 310.414 470.234 294.135 470.238C293.093 470.238 292.051 470.238 290.977 470.238C289.411 470.239 289.411 470.239 287.813 470.239C285.696 470.239 283.58 470.24 281.464 470.24C279.889 470.241 279.889 470.241 278.283 470.241C261.281 470.245 244.28 470.262 227.278 470.286C209.817 470.309 192.355 470.322 174.894 470.323C165.093 470.324 155.291 470.33 145.49 470.348C137.142 470.363 128.794 470.368 120.446 470.36C116.19 470.356 111.933 470.357 107.677 470.371C103.774 470.384 99.8708 470.383 95.9677 470.37C94.5619 470.369 93.156 470.372 91.7502 470.38C77.4272 470.464 64.6679 468.328 53.8125 458.437C43.5316 447.562 41.6878 434.564 41.6992 420.25C41.6949 419.038 41.6906 417.826 41.6862 416.577C41.6805 414.019 41.6799 411.46 41.6843 408.902C41.6874 405.04 41.664 401.178 41.6386 397.316C41.5544 365.136 48.0279 339.248 71 316C71.6316 315.296 72.2632 314.592 72.914 313.867C95.1185 289.706 133.384 276.822 165.507 276.86Z" fill="white"/>
        <path d="M320.437 63C321.97 64.3201 323.491 65.6534 325 67C326.207 67.9939 326.207 67.9939 327.437 69.0078C347.148 85.7005 360.822 111.152 363 137C364.944 168.211 357.527 194.324 338 219C337.497 219.659 336.995 220.317 336.477 220.996C332.078 226.501 326.553 230.715 321 235C320.218 235.61 319.435 236.219 318.629 236.848C295.785 253.759 267.202 259.665 239.297 255.711C211.316 251.263 186.1 235.929 169.078 213.23C151.596 188.608 145.085 158.235 150.125 128.438C154.107 110.658 161.93 93.7053 174 80C174.675 79.1814 175.351 78.3629 176.047 77.5195C210.962 36.4236 277.991 29.6685 320.437 63Z" fill="white"/>
        </svg>    
     ]]
    
     local foguete = [[
        <svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M56 198C188.33 198 320.66 198 457 198C457.637 209.469 458.104 220.577 458 232C441.341 232.916 424.68 233.35 408.001 233.707C404.302 233.787 400.603 233.869 396.904 233.951C390.702 234.089 384.501 234.224 378.299 234.357C371.181 234.511 364.063 234.667 356.945 234.826C350.025 234.98 343.106 235.132 336.187 235.282C333.274 235.346 330.361 235.41 327.448 235.475C312.631 235.804 297.821 236.113 283 236C282.832 237.245 282.832 237.245 282.66 238.516C281.406 247.574 279.879 256.559 278.215 265.551C277.951 266.986 277.687 268.421 277.423 269.856C276.877 272.828 276.328 275.8 275.777 278.772C275.071 282.587 274.371 286.402 273.672 290.218C273.132 293.166 272.588 296.112 272.043 299.058C271.783 300.467 271.524 301.876 271.267 303.284C270.91 305.238 270.547 307.19 270.183 309.142C269.978 310.252 269.773 311.362 269.562 312.506C269 315 269 315 268 316C266.508 316.108 265.01 316.147 263.514 316.158C262.545 316.168 261.576 316.178 260.578 316.188C259.506 316.194 258.434 316.199 257.33 316.205C256.208 316.215 255.086 316.225 253.93 316.235C250.202 316.267 246.474 316.292 242.746 316.316C240.169 316.337 237.592 316.358 235.015 316.379C228.913 316.429 222.811 316.474 216.709 316.517C209.763 316.567 202.818 316.622 195.873 316.677C181.582 316.791 167.291 316.898 153 317C152.739 318.186 152.478 319.371 152.209 320.593C149.755 331.748 147.298 342.902 144.838 354.056C143.573 359.79 142.309 365.525 141.048 371.261C139.831 376.792 138.612 382.323 137.391 387.853C136.924 389.967 136.459 392.081 135.995 394.195C135.346 397.148 134.694 400.1 134.041 403.052C133.848 403.933 133.656 404.815 133.457 405.722C132.114 411.772 132.114 411.772 131 414C121.197 414.206 111.482 413.426 101.711 412.723C99.8387 412.59 97.9664 412.458 96.0941 412.326C92.1857 412.05 88.2773 411.772 84.3691 411.491C79.3753 411.133 74.3811 410.78 69.3868 410.429C65.5261 410.157 61.6656 409.883 57.8051 409.608C55.9641 409.477 54.123 409.347 52.2818 409.217C49.7052 409.035 47.1287 408.85 44.5522 408.664C43.4267 408.586 43.4267 408.586 42.2785 408.505C37.4932 408.157 32.7567 407.629 28 407C32.9019 387.737 38.1025 368.567 43.4206 349.415C44.782 344.512 46.1387 339.607 47.4949 334.703C51.494 320.243 55.4999 305.785 59.5284 291.333C61.3246 284.889 63.116 278.443 64.9039 271.997C66.1631 267.457 67.4292 262.92 68.7004 258.384C69.4838 255.582 70.2608 252.779 71.0361 249.975C71.5653 248.068 72.1022 246.164 72.6394 244.259C72.9528 243.121 73.2662 241.982 73.5891 240.809C73.8633 239.826 74.1375 238.843 74.42 237.83C75.3198 233.44 75.5811 230.178 73.5789 226.119C72.9276 225.141 72.2764 224.164 71.6055 223.156C70.8971 222.075 70.1888 220.993 69.459 219.879C68.7024 218.752 67.9453 217.626 67.1875 216.5C65.7175 214.285 64.2552 212.064 62.793 209.844C62.1384 208.866 61.4838 207.888 60.8093 206.881C59.0188 204.03 57.5055 201.011 56 198ZM250.28 235.795C230.141 235.127 215.838 235.995 199.789 249.504C198 251 198 251 195 253C194.506 255.595 194.506 255.595 194.523 258.637C194.492 259.772 194.462 260.907 194.43 262.076C194.412 263.268 194.394 264.46 194.375 265.688C194.059 280.073 194.059 280.073 193 286C191.395 284.564 189.791 283.126 188.188 281.688C187.294 280.887 186.401 280.086 185.48 279.262C184.662 278.515 183.843 277.769 183 277C182.455 276.627 181.911 276.254 181.35 275.869C179.146 272.817 179.751 269.437 179.926 265.832C179.952 265.037 179.979 264.242 180.006 263.424C180.094 260.886 180.203 258.349 180.312 255.812C180.376 254.092 180.438 252.371 180.498 250.65C180.649 246.433 180.82 242.216 181 238C177.37 238 173.74 238 170 238C167.918 243.686 166.689 249.515 165.398 255.418C165.157 256.512 164.916 257.606 164.667 258.734C164.16 261.039 163.654 263.344 163.149 265.65C162.375 269.186 161.594 272.721 160.812 276.256C160.32 278.497 159.828 280.739 159.336 282.98C159.102 284.04 158.867 285.099 158.626 286.191C158.412 287.172 158.198 288.154 157.978 289.165C157.789 290.028 157.599 290.892 157.404 291.781C156.91 294.116 156.91 294.116 157 297C188.35 297 219.7 297 252 297C253.815 287.306 255.63 277.613 257.5 267.625C258.074 264.563 258.649 261.501 259.24 258.346C259.692 255.931 260.143 253.516 260.594 251.102C260.831 249.838 261.069 248.574 261.313 247.272C261.648 245.476 261.648 245.476 261.99 243.643C262.186 242.599 262.381 241.556 262.582 240.48C263.055 238.091 263.055 238.091 263 236C261.508 236.008 261.508 236.008 259.987 236.017C256.745 236.003 253.519 235.918 250.28 235.795Z" fill="white"/>
        <path d="M82.3264 114.886C83.8023 114.887 85.2781 114.892 86.7539 114.902C87.4409 114.903 88.128 114.904 88.8358 114.905C91.4114 114.911 93.9869 114.925 96.5625 114.938C102.317 114.958 108.071 114.979 114 115C114 133.48 114 151.96 114 171C118.62 171 123.24 171 128 171C128 152.52 128 134.04 128 115C134.27 115 140.54 115 147 115C147 133.48 147 151.96 147 171C151.62 171 156.24 171 161 171C161 152.52 161 134.04 161 115C166.61 115 172.22 115 178 115C178 133.48 178 151.96 178 171C182.62 171 187.24 171 192 171C192 152.52 192 134.04 192 115C279.45 115 366.9 115 457 115C457 137.77 457 160.54 457 184C322.69 184 188.38 184 50 184C56.8913 165.623 56.8913 165.623 60.1289 158.109C60.4859 157.273 60.8429 156.436 61.2107 155.574C62.3247 152.964 63.4434 150.357 64.5625 147.75C65.6814 145.134 66.7994 142.518 67.9171 139.902C68.633 138.227 69.3496 136.552 70.067 134.878C72.4629 129.281 74.8087 123.667 77.1052 118.028C78.5412 114.773 78.4869 115.018 82.3264 114.886Z" fill="white"/>
        <path d="M467 131C473.27 131 479.54 131 486 131C486 144.86 486 158.72 486 173C479.73 173 473.46 173 467 173C467 159.14 467 145.28 467 131Z" fill="white"/>
        </svg>        
     ]]
    
    local carro = [[ 
        <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M8.56326 0.0197272C8.64872 0.0193492 8.64872 0.0193492 8.7359 0.0189636C8.92641 0.0182294 9.11692 0.0180992 9.30744 0.0179724C9.44421 0.0175797 9.58098 0.0171535 9.71775 0.0166964C10.0891 0.0155849 10.4605 0.0150371 10.8319 0.0146601C11.0642 0.0144113 11.2964 0.0140631 11.5287 0.0136845C12.256 0.012525 12.9833 0.0117051 13.7106 0.0113775C14.5489 0.0109978 15.3872 0.00951089 16.2256 0.00705226C16.8743 0.00521596 17.5231 0.00436336 18.1718 0.00425015C18.559 0.00416146 18.9461 0.00366474 19.3332 0.00214523C19.6976 0.000742363 20.0621 0.000567228 20.4266 0.00130894C20.5598 0.001374 20.6931 0.00100957 20.8264 0.000167567C22.1968 -0.00797918 23.3849 0.278694 24.4035 1.35081C24.8708 1.90674 25.1464 2.52326 25.3973 3.21758C25.4238 3.29017 25.4502 3.36276 25.4774 3.43754C25.8255 4.39917 26.1588 5.36703 26.4917 6.335C26.5855 6.60771 26.6797 6.88027 26.774 7.15279C26.8647 7.41532 26.9551 7.67801 27.0455 7.94068C27.0794 8.03837 27.1132 8.13606 27.148 8.23671C27.1787 8.3263 27.2095 8.4159 27.2411 8.50821C27.2683 8.58709 27.2955 8.66597 27.3235 8.74723C27.3814 8.93652 27.3814 8.93652 27.3814 9.10613C27.4591 9.10347 27.4591 9.10347 27.5384 9.10075C27.7748 9.09367 28.0113 9.08928 28.2478 9.08493C28.3293 9.08209 28.4108 9.07925 28.4948 9.07632C28.9669 9.06981 29.2793 9.07596 29.6398 9.44537C29.9956 9.87799 29.9969 10.2549 29.9854 10.8076C29.9859 10.8827 29.9865 10.9577 29.9871 11.035C29.9819 11.6083 29.8817 11.8958 29.5035 12.3077C29.2221 12.5198 29.04 12.5435 28.7053 12.5833C28.7296 12.6434 28.7539 12.7035 28.779 12.7655C29.9565 15.6926 29.9565 15.6926 29.9633 17.096C29.964 17.1999 29.9646 17.3038 29.9653 17.4108C29.9657 17.5249 29.966 17.6389 29.9663 17.7529C29.967 17.8739 29.9676 17.9948 29.9683 18.1158C29.9703 18.5118 29.9715 18.9077 29.9726 19.3037C29.973 19.4403 29.9734 19.577 29.9739 19.7137C29.9756 20.2822 29.977 20.8507 29.9779 21.4192C29.9792 22.2324 29.9817 23.0455 29.9862 23.8587C29.9892 24.4315 29.9907 25.0042 29.9911 25.577C29.9914 25.9187 29.9923 26.2603 29.9949 26.602C29.9972 26.9235 29.9977 27.2449 29.9968 27.5664C29.9968 27.684 29.9974 27.8016 29.9988 27.9192C30.0062 28.5884 29.9934 29.1187 29.5619 29.6298C29.1447 29.9733 28.7454 29.9831 28.2365 29.9862C28.176 29.9867 28.1155 29.9872 28.0532 29.9877C27.9253 29.9885 27.7975 29.989 27.6697 29.9894C27.4753 29.9902 27.2811 29.9928 27.0868 29.9955C26.9622 29.9961 26.8376 29.9965 26.713 29.9968C26.6267 29.9984 26.6267 29.9984 26.5387 30C26.0384 29.9977 25.6796 29.8725 25.2933 29.5079C25.0092 29.1454 24.9477 28.9136 24.952 28.4358C24.9525 28.3374 24.953 28.239 24.9535 28.1377C24.9548 28.0353 24.9561 27.933 24.9575 27.8276C24.9582 27.7239 24.9589 27.6203 24.9596 27.5135C24.9614 27.2578 24.9642 27.002 24.9672 26.7463C25.3784 26.7463 25.7896 26.7463 26.2132 26.7463C26.2132 26.2985 26.2132 25.8507 26.2132 25.3893C18.8118 25.3893 11.4104 25.3893 3.78468 25.3893C3.78468 25.8371 3.78468 26.2849 3.78468 26.7463C4.19587 26.7463 4.60706 26.7463 5.03071 26.7463C5.04126 27.0997 5.04896 27.4528 5.05504 27.8064C5.05831 27.9059 5.06157 28.0054 5.06493 28.1079C5.07287 28.7233 5.03153 29.1629 4.64132 29.6298C4.22408 29.9733 3.82484 29.9831 3.31589 29.9862C3.2554 29.9867 3.19491 29.9872 3.13258 29.9877C3.00474 29.9885 2.8769 29.989 2.74906 29.9894C2.55473 29.9902 2.36046 29.9928 2.16615 29.9955C2.04157 29.9961 1.917 29.9965 1.79243 29.9968C1.73489 29.9979 1.67736 29.9989 1.61808 30C1.11777 29.9977 0.759021 29.8725 0.372696 29.5079C0.0942167 29.1526 0.0271455 28.92 0.0252358 28.4524C0.024459 28.3503 0.0236821 28.2483 0.0228818 28.1431C0.02283 28.0313 0.0227782 27.9196 0.0227249 27.8044C0.0221312 27.6853 0.0214748 27.5661 0.0207606 27.447C0.0190507 27.1231 0.018366 26.7992 0.0179705 26.4753C0.0176863 26.2722 0.0172003 26.069 0.0166467 25.8659C0.0147371 25.1551 0.0137225 24.4442 0.0134466 23.7334C0.0131652 23.0748 0.0108499 22.4163 0.00757459 21.7578C0.00485107 21.19 0.0036691 20.6221 0.00361515 20.0542C0.003554 19.7162 0.00290106 19.3783 0.00065567 19.0403C-0.0114934 17.0906 0.140034 15.3715 0.88863 13.5745C0.927731 13.4773 0.966833 13.3802 1.00712 13.2801C1.10108 13.0472 1.19621 12.815 1.29262 12.5833C1.20699 12.5713 1.12135 12.5592 1.03313 12.5468C0.735048 12.4964 0.590729 12.4495 0.358094 12.244C0.0423167 11.7578 -0.00196934 11.3848 0.00764767 10.797C0.00644301 10.723 0.00523835 10.6491 0.00399719 10.5729C0.0066248 10.1004 0.058869 9.81087 0.358094 9.44537C0.718648 9.07596 1.03103 9.06981 1.50313 9.07632C1.58464 9.07916 1.66616 9.082 1.75014 9.08493C1.83347 9.08646 1.91679 9.08799 2.00263 9.08957C2.20734 9.09355 2.41188 9.09942 2.61652 9.10613C2.62837 9.05973 2.64022 9.01333 2.65243 8.96553C2.83092 8.2912 3.05528 7.63682 3.28243 6.98062C3.32463 6.85837 3.36683 6.73612 3.40902 6.61387C3.49712 6.3589 3.58546 6.10403 3.67393 5.84921C3.78641 5.52503 3.89795 5.20048 4.00926 4.87582C4.09595 4.62357 4.18331 4.37159 4.27086 4.11969C4.31225 4.00025 4.35338 3.8807 4.39425 3.76105C4.87909 2.34349 5.47529 1.17743 6.744 0.45568C7.35495 0.168043 7.89636 0.0213782 8.56326 0.0197272ZM8.06791 3.93282C7.92978 4.16558 7.84648 4.35535 7.7564 4.61129C7.72168 4.70727 7.68697 4.80326 7.6512 4.90215C7.52298 5.26119 7.40001 5.62229 7.27697 5.98346C7.23105 6.11738 7.1851 6.25128 7.13912 6.38517C7.0186 6.73634 6.89847 7.08767 6.77845 7.43905C6.5865 8.00072 6.39392 8.56213 6.20141 9.12357C6.1347 9.31828 6.06814 9.51305 6.00161 9.70782C5.96014 9.82904 5.91866 9.95025 5.87716 10.0715C5.85765 10.1285 5.83814 10.1856 5.81804 10.2444C5.68402 10.6346 5.54275 11.0207 5.3935 11.4042C5.32948 11.5772 5.32948 11.5772 5.34222 11.82C11.7157 11.82 18.0891 11.82 24.6557 11.82C24.596 11.4952 24.5292 11.2298 24.4241 10.9235C24.3923 10.8305 24.3605 10.7374 24.3277 10.6416C24.2931 10.5412 24.2585 10.4409 24.2228 10.3375C24.1863 10.2312 24.1499 10.1249 24.1135 10.0186C24.0367 9.79477 23.9598 9.571 23.8827 9.34729C23.7864 9.06775 23.6904 8.78808 23.5945 8.50836C23.4076 7.96299 23.2196 7.41806 23.0307 6.87351C22.9014 6.50038 22.7745 6.12636 22.6482 5.75202C22.5799 5.55231 22.5116 5.35262 22.4432 5.15294C22.3976 5.01565 22.3976 5.01565 22.3511 4.87559C22.1913 4.41311 22.0641 4.06414 21.6964 3.76321C21.4224 3.65902 21.1543 3.66727 20.8662 3.66649C20.7881 3.66611 20.7881 3.66611 20.7085 3.66572C20.5343 3.66499 20.36 3.66486 20.1857 3.66473C20.0607 3.66434 19.9358 3.66391 19.8108 3.66346C19.4712 3.66235 19.1317 3.6618 18.7922 3.66142C18.5801 3.66117 18.3679 3.66082 18.1557 3.66045C17.4917 3.65929 16.8277 3.65847 16.1637 3.65814C15.3975 3.65776 14.6313 3.65627 13.8651 3.65381C13.2726 3.65198 12.6802 3.65112 12.0877 3.65101C11.7339 3.65092 11.3802 3.65042 11.0264 3.64891C10.6936 3.64751 10.3608 3.64733 10.0279 3.64807C9.90598 3.64813 9.78402 3.64777 9.66206 3.64693C9.49514 3.64585 9.32829 3.64635 9.16137 3.64723C9.0681 3.64711 8.97482 3.64698 8.87872 3.64686C8.55682 3.68507 8.35444 3.76884 8.06791 3.93282ZM2.61652 16.3148C2.51985 16.3901 2.51985 16.3901 2.42122 16.4669C2.03629 16.8381 1.80921 17.3704 1.71942 17.9189C1.69317 18.6706 1.94324 19.2835 2.4054 19.8341C2.82896 20.2395 3.35988 20.4194 3.91883 20.4092C4.49775 20.3324 5.04122 20.0193 5.42009 19.5376C5.76448 18.935 5.87282 18.3786 5.80948 17.6718C5.61936 16.9724 5.2786 16.5211 4.7116 16.1466C4.07837 15.7784 3.19221 15.8604 2.61652 16.3148ZM24.5316 17.3302C24.1833 17.8769 24.1162 18.3792 24.1884 19.0287C24.3432 19.7179 24.6575 20.2016 25.206 20.5821C25.7263 20.873 26.2461 20.9055 26.811 20.7537C27.3555 20.5459 27.7432 20.2293 28.029 19.6797C28.3013 19.0217 28.3352 18.4228 28.1163 17.7407C27.8612 17.1218 27.4575 16.7035 26.8764 16.456C25.9343 16.1851 25.1284 16.5071 24.5316 17.3302ZM10.8715 21.8274C10.8715 22.555 10.8715 23.2827 10.8715 24.0324C13.5956 24.0324 16.3197 24.0324 19.1264 24.0324C19.1264 23.3048 19.1264 22.5771 19.1264 21.8274C16.4023 21.8274 13.6782 21.8274 10.8715 21.8274Z" fill="white"/>
    </svg>
    ]]
    
    local players = [[
        <svg width="43" height="56" viewBox="0 0 43 56" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M28.6387 35.6562C28.7333 35.744 28.7333 35.744 28.8299 35.8336C29.2352 36.2452 29.3114 36.5333 29.5625 37.1875C29.5625 39.2087 29.5625 41.23 29.5625 43.3125C24.2412 43.3125 18.92 43.3125 13.4375 43.3125C13.4375 36.9995 13.4375 36.9995 13.9081 36.1903C14.2791 35.7209 14.6714 35.3753 15.1224 35.0478C15.1931 34.9959 15.2638 34.944 15.3366 34.8905C19.5106 31.8691 24.7017 32.0037 28.6387 35.6562Z" fill="white"/>
    <path d="M35.4414 25.1562C35.5681 25.1962 35.6949 25.2361 35.8216 25.2759C37.3231 25.7735 39.2762 26.7733 40.1445 28.5469C40.2908 28.9535 40.3331 29.2704 40.3316 29.7181C40.3315 29.902 40.3315 29.902 40.3315 30.0896C40.3307 30.2207 40.3298 30.3519 40.3289 30.487C40.3287 30.6222 40.3284 30.7573 40.3282 30.8966C40.3274 31.2546 40.3259 31.6126 40.324 31.9706C40.3223 32.3365 40.3216 32.7023 40.3207 33.0682C40.3189 33.7851 40.316 34.5019 40.3125 35.2187C39.0371 35.2341 37.7618 35.2456 36.4864 35.2527C35.8942 35.2561 35.302 35.2607 34.7099 35.2683C34.1386 35.2755 33.5674 35.2793 32.9962 35.281C32.778 35.2822 32.5598 35.2846 32.3416 35.2881C32.0365 35.2929 31.7316 35.2936 31.4265 35.2932C31.3358 35.2956 31.2451 35.298 31.1517 35.3004C30.9189 35.2979 30.7125 35.2907 30.4863 35.2187C30.2725 34.9013 30.2725 34.9013 30.1504 34.5625C28.926 33.1076 27.2627 32.1473 25.6992 31.5C25.8075 31.1012 25.9346 30.8221 26.1454 30.5019C26.9424 29.2007 27.155 27.6386 27.2949 26.0312C27.9485 25.6707 28.6036 25.3385 29.2843 25.0742C29.3663 25.0417 29.3663 25.0417 29.45 25.0086C31.4197 24.2669 33.4836 24.4862 35.4414 25.1562Z" fill="white"/>
    <path d="M15.2852 25.7031C15.3636 25.7233 15.4421 25.7435 15.523 25.7642C15.7051 25.9219 15.7051 25.9219 15.7543 26.1229C15.7892 26.3974 15.8114 26.6702 15.8311 26.9473C15.9642 28.3716 16.3369 29.9382 17.1509 30.9702C17.3008 31.1719 17.3008 31.1719 17.3008 31.5C17.2194 31.5372 17.138 31.5744 17.0541 31.6128C14.4037 32.8198 14.4037 32.8198 12.4297 35.2188C9.21477 35.2188 5.99984 35.2188 2.6875 35.2188C2.6875 28.7579 2.6875 28.7579 3.16188 27.9966C3.68348 27.4187 4.26654 26.9894 4.87109 26.5781C4.92491 26.5413 4.97873 26.5045 5.03418 26.4665C6.03109 25.7947 7.06647 25.329 8.14648 24.9375C8.20386 24.9162 8.26124 24.8949 8.32036 24.8729C10.6061 24.0586 13.1003 24.6957 15.2852 25.7031Z" fill="white"/>
    <path d="M34.8535 13.7812C35.3411 14.2961 35.6597 14.9181 35.9453 15.6406C35.9803 15.7266 36.0152 15.8126 36.0513 15.9012C36.4442 17.0467 36.4232 18.5741 36.1448 19.7627C35.892 20.5861 35.5272 21.2807 35.0215 21.875C34.9804 21.9276 34.9394 21.9802 34.8971 22.0344C34.1312 22.9702 33.0927 23.3597 32.0564 23.3238C31.0263 23.2013 30.0514 22.7304 29.3105 21.7656C28.3338 20.2322 28.106 18.7892 28.2187 16.8437C28.2867 16.4024 28.3934 16.0374 28.5547 15.6406C28.611 15.4981 28.611 15.4981 28.6685 15.3527C29.2107 14.0843 30.0273 13.2498 31.0952 12.8037C32.4241 12.4047 33.7493 12.7269 34.8535 13.7812Z" fill="white"/>
    <path d="M13.3535 13.7812C13.8411 14.2961 14.1597 14.9181 14.4453 15.6406C14.4803 15.7266 14.5152 15.8126 14.5513 15.9012C14.9442 17.0467 14.9232 18.5741 14.6448 19.7627C14.392 20.5861 14.0272 21.2807 13.5215 21.875C13.4804 21.9276 13.4394 21.9802 13.3971 22.0344C12.6312 22.9702 11.5927 23.3597 10.5564 23.3238C9.52625 23.2013 8.55138 22.7304 7.81054 21.7656C6.83381 20.2322 6.60605 18.7892 6.71874 16.8437C6.78667 16.4024 6.89337 16.0374 7.05468 15.6406C7.11103 15.4981 7.11103 15.4981 7.16851 15.3527C7.71071 14.0843 8.52728 13.2498 9.5952 12.8037C10.9241 12.4047 12.2493 12.7269 13.3535 13.7812Z" fill="white"/>
    <path d="M24.4532 22.433C25.3585 23.6827 25.5835 25.0223 25.5572 26.6913C25.5072 28.1237 24.9597 29.2709 24.1704 30.2396C23.2054 31.3052 22.0912 31.5308 20.8611 31.4202C19.7444 31.2558 18.9176 30.438 18.2069 29.3557C17.4589 28.052 17.3717 26.6181 17.4687 25.0469C17.656 23.6928 18.3215 22.4897 19.1747 21.6938C19.6477 21.3011 20.1127 21.0475 20.6601 20.8906C20.7184 20.8737 20.7766 20.8568 20.8366 20.8394C22.2175 20.543 23.479 21.2008 24.4532 22.433Z" fill="white"/>
    </svg>
    ]]
    
    local bomba = [[
        <svg width="36" height="40" viewBox="0 0 36 40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M28.0547 7.57812C28.1329 7.65201 28.211 7.726 28.2891 7.80003C28.3544 7.86181 28.3544 7.86181 28.421 7.92485C28.586 8.0848 28.7404 8.25443 28.894 8.42773C28.9755 8.51928 28.9755 8.51928 29.0586 8.61267C29.1185 8.68065 29.1185 8.68065 29.1797 8.75C28.8545 9.18394 28.508 9.58479 28.1475 9.9826C28.0618 10.0777 28.0618 10.0777 27.9744 10.1747C27.7933 10.3754 27.612 10.5759 27.4307 10.7764C27.3072 10.9131 27.1838 11.0499 27.0604 11.1867C26.7592 11.5205 26.4578 11.8541 26.1563 12.1875C26.2762 12.4726 26.4174 12.6469 26.6237 12.8647C26.7211 12.9694 26.7211 12.9694 26.8204 13.0763C26.9229 13.1859 27.0257 13.2952 27.1291 13.4038C27.6093 13.9098 28.0491 14.3911 28.0855 15.1611C28.0109 15.9064 27.7148 16.2861 27.2631 16.8082C27.0483 17.0567 26.848 17.3145 26.6484 17.5781C26.688 17.6805 26.688 17.6805 26.7284 17.785C28.0477 21.2748 27.9999 25.2158 26.7173 28.7111C26.1165 30.2751 25.2442 31.806 24.1172 32.9688C24.0592 33.0332 24.0012 33.0977 23.9414 33.1641C23.8834 33.2285 23.8254 33.293 23.7656 33.3594C23.733 33.3983 23.7004 33.4373 23.6668 33.4775C21.6295 35.8576 18.4374 37.102 15.536 37.2034C11.8834 37.2654 8.63401 35.7653 6.02051 32.959C3.63525 30.2118 2.45506 26.535 2.51368 22.7472C2.61399 19.2174 3.91271 15.8835 6.15784 13.3926C6.26063 13.2782 6.36221 13.1624 6.46134 13.0441C8.56461 10.5739 11.7382 9.3507 14.7371 9.22987C16.371 9.18256 17.9352 9.47144 19.4766 10.0781C19.5606 10.111 19.6446 10.1438 19.7312 10.1776C19.9048 10.2469 20.0775 10.3181 20.25 10.3906C20.2903 10.344 20.2903 10.344 20.3314 10.2964C20.4561 10.153 20.5815 10.0106 20.707 9.86816C20.7493 9.81927 20.7915 9.77038 20.835 9.72C21.2638 9.23596 21.6825 8.86194 22.3066 8.80859C23.2005 8.8748 23.7331 9.63907 24.3281 10.3076C24.4098 10.3989 24.4098 10.3989 24.4932 10.4921C24.6258 10.6404 24.7583 10.7889 24.8906 10.9375C25.1299 10.8226 25.2853 10.6743 25.4684 10.4695C25.555 10.3733 25.555 10.3733 25.6433 10.2752C25.7049 10.2059 25.7665 10.1367 25.83 10.0653C25.9253 9.95899 25.9253 9.95899 26.0227 9.85053C26.1913 9.66259 26.3595 9.47418 26.5276 9.28567C26.6993 9.0932 26.8715 8.90117 27.0437 8.70911C27.3811 8.33252 27.718 7.95549 28.0547 7.57812ZM8.92969 16.7188C7.93041 17.9885 7.42801 19.4564 7.41578 21.131C7.45958 21.4538 7.55079 21.6228 7.73438 21.875C8.01922 22.0814 8.23949 22.1642 8.57813 22.1094C8.8162 21.959 9.03895 21.801 9.21094 21.5625C9.25969 21.3479 9.25969 21.3479 9.28126 21.1035C9.43897 19.839 9.7309 18.6953 10.6172 17.8125C10.8644 17.6051 11.1186 17.4298 11.3906 17.2656C11.4422 17.2343 11.4938 17.203 11.5469 17.1707C12.0089 16.9308 12.503 16.8724 13.0048 16.8067C13.3333 16.761 13.5824 16.7164 13.8516 16.4844C14.0386 16.2098 14.1204 15.9695 14.1328 15.625C14.0194 15.2191 13.8883 15.0012 13.5703 14.7656C12.1513 13.9773 9.85339 15.6552 8.92969 16.7188Z" fill="white"/>
    <path d="M32.0625 4.0625C32.2612 4.19496 32.3216 4.28999 32.3855 4.53552C32.435 4.85011 32.4486 5.00758 32.3069 5.29694C32.1007 5.61435 31.8474 5.88371 31.5967 6.15723C31.5488 6.21035 31.5009 6.26347 31.4516 6.31821C31.0068 6.80807 31.0068 6.80807 30.6343 6.82129C30.3866 6.81907 30.3121 6.80207 30.0937 6.65039C29.8668 6.38243 29.845 6.1733 29.8507 5.81421C29.9123 5.45155 30.1432 5.24783 30.375 5C30.4393 4.92588 30.5037 4.85176 30.57 4.77539C31.3595 3.8701 31.3595 3.8701 32.0625 4.0625Z" fill="white"/>
    <path d="M31.1924 8.81347C31.2955 8.92182 31.398 9.03099 31.5 9.14061C31.5736 9.21407 31.6473 9.2874 31.7211 9.36065C32.3886 10.0395 32.3886 10.0395 32.4492 10.459C32.4398 10.7967 32.35 11.0086 32.1328 11.25C31.8436 11.4127 31.6523 11.4342 31.3401 11.3278C31.0093 11.1577 30.7778 10.875 30.5288 10.5859C30.4819 10.5331 30.435 10.4802 30.3867 10.4257C29.8627 9.82995 29.8627 9.82995 29.8521 9.4287C29.8572 9.15959 29.8905 9.00151 30.041 8.78905C30.4215 8.40477 30.8022 8.44382 31.1924 8.81347Z" fill="white"/>
    <path d="M26.9297 4.0625C27.1942 4.26695 27.4103 4.51265 27.6328 4.77051C27.6931 4.83571 27.7534 4.90092 27.8155 4.96811C28.2948 5.50953 28.2948 5.50953 28.3455 5.89416C28.3324 6.27248 28.2325 6.43417 28.0063 6.7041C27.7614 6.84384 27.5456 6.86047 27.2812 6.79687C26.7259 6.48644 26.1453 5.8021 25.8047 5.23437C25.7663 4.96945 25.7663 4.71806 25.8047 4.45312C26.1307 3.98608 26.4289 3.88425 26.9297 4.0625Z" fill="white"/>
    <path d="M31.83 6.84764C31.9289 6.84635 32.0279 6.84422 32.1268 6.84123C32.2699 6.83694 32.4129 6.83524 32.556 6.8341C32.6417 6.83255 32.7273 6.831 32.8155 6.82941C33.1105 6.88754 33.2113 7.01215 33.3984 7.26562C33.4822 7.45183 33.4765 7.55228 33.4643 7.75878C33.4621 7.8181 33.4598 7.87742 33.4575 7.93853C33.3879 8.15806 33.2968 8.29682 33.13 8.43877C32.7759 8.61609 32.3681 8.56417 31.9878 8.55468C31.8987 8.55488 31.8097 8.55508 31.7179 8.55529C30.987 8.54671 30.987 8.54671 30.6562 8.28124C30.4916 8.04608 30.4866 7.79082 30.4925 7.49755C30.529 7.25443 30.6411 7.12103 30.7968 6.95312C31.0983 6.78562 31.4954 6.85084 31.83 6.84764Z" fill="white"/>
    <path d="M29.3203 2.81249C29.7126 3.0592 29.7126 3.0592 29.8125 3.28124C29.8306 3.61153 29.8316 3.94211 29.8333 4.27293C29.8345 4.43706 29.8376 4.60106 29.8407 4.76516C29.8414 4.86999 29.842 4.97482 29.8424 5.07964C29.8435 5.17479 29.8445 5.26994 29.8455 5.36798C29.8064 5.6725 29.7237 5.79896 29.5313 6.01562C29.3067 6.14038 29.0724 6.12292 28.8281 6.09374C28.6288 5.99743 28.5167 5.92827 28.3985 5.72536C28.2605 5.3319 28.3069 4.87954 28.3052 4.46288C28.3029 4.36389 28.3006 4.26489 28.2982 4.1629C28.2939 3.34935 28.2939 3.34935 28.5005 3.06091C28.7705 2.81508 28.9777 2.77517 29.3203 2.81249Z" fill="white"/>
    </svg>
    ]]
    
    local olho = [[
        <svg width="34" height="33" viewBox="0 0 34 33" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M22.1133 4.82731C22.2459 4.90691 22.3787 4.98612 22.5117 5.06472C22.6002 5.11748 22.6888 5.17024 22.7773 5.223C22.7773 5.27523 22.7773 5.32746 22.7773 5.38127C22.839 5.40412 22.9006 5.42697 22.9641 5.45051C23.1758 5.53954 23.1758 5.53954 23.375 5.69782C23.375 5.75005 23.375 5.80228 23.375 5.85609C23.4107 5.86201 23.4464 5.86792 23.4831 5.87402C23.6999 5.95829 23.8588 6.11457 24.0349 6.28145C24.0728 6.31694 24.1107 6.35242 24.1497 6.38899C24.2683 6.50076 24.3862 6.61353 24.5039 6.72659C24.5393 6.76031 24.5747 6.79402 24.6112 6.82876C25.5049 7.68426 26.3287 8.64981 27.0273 9.73379C27.0837 9.81856 27.1402 9.90326 27.1967 9.98789C27.4888 10.4284 27.7609 10.8722 27.9954 11.3604C28.097 11.5686 28.2069 11.7683 28.3181 11.9694C28.5406 12.3836 28.726 12.8124 28.9054 13.2551C28.9807 13.4379 29.0595 13.6188 29.1419 13.7973C29.1984 13.9208 29.1984 13.9208 29.2561 14.0467C29.2904 14.1194 29.3247 14.192 29.3601 14.2668C29.4382 14.5575 29.3867 14.6791 29.2851 14.9568C29.2684 15.0036 29.2517 15.0505 29.2344 15.0987C28.7976 16.2985 28.2383 17.4015 27.625 18.4833C27.5875 18.5498 27.55 18.6163 27.5114 18.6848C27.4588 18.7762 27.4588 18.7762 27.405 18.8694C27.3581 18.9511 27.3581 18.9511 27.3103 19.0344C27.2827 19.0729 27.255 19.1114 27.2265 19.1511C27.1827 19.1511 27.1389 19.1511 27.0937 19.1511C27.0718 19.2555 27.0499 19.36 27.0273 19.4676C26.9835 19.4676 26.9397 19.4676 26.8945 19.4676C26.8797 19.5104 26.8649 19.5533 26.8496 19.5974C26.7338 19.8435 26.5789 20.0357 26.4172 20.2392C26.3505 20.3241 26.2838 20.4091 26.2172 20.4942C26.1689 20.5559 26.1689 20.5559 26.1196 20.6188C26.0084 20.7635 25.9037 20.914 25.7988 21.0652C25.5652 21.3879 25.2927 21.6446 25.0118 21.9069C24.8325 22.0767 24.8325 22.0767 24.6702 22.2773C23.626 23.5177 22.0995 24.5081 20.7187 25.0863C20.6064 25.14 20.4944 25.1944 20.3825 25.2495C18.7774 26.011 17.0623 26.3556 15.3398 26.4316C15.233 26.4365 15.233 26.4365 15.124 26.4415C12.2127 26.507 9.18667 25.5807 6.73191 23.6965C6.55188 23.5584 6.37342 23.4234 6.18666 23.2986C6.13923 23.2618 6.09181 23.225 6.04295 23.187C6.04295 23.1348 6.04295 23.0826 6.04295 23.0287C5.99912 23.0124 5.95529 22.9961 5.91014 22.9793C5.63974 22.8316 5.39961 22.635 5.17967 22.3957C5.17967 22.3434 5.17967 22.2912 5.17967 22.2374C5.14269 22.2178 5.10571 22.1982 5.06761 22.178C4.88588 22.061 4.73631 21.926 4.58201 21.7626C4.58201 21.7103 4.58201 21.6581 4.58201 21.6043C4.52924 21.5801 4.52924 21.5801 4.4754 21.5554C4.24732 21.3985 4.08042 21.1848 3.8972 20.9613C3.85861 20.9146 3.82003 20.868 3.78027 20.8199C3.3181 20.2576 2.9092 19.6694 2.51797 19.0354C2.39664 18.8344 2.39664 18.8344 2.25779 18.6762C2.25779 18.5979 2.25779 18.5195 2.25779 18.4388C2.21397 18.4388 2.17014 18.4388 2.12498 18.4388C1.84406 18.0304 1.63888 17.5472 1.43187 17.0827C1.32708 16.8539 1.21412 16.6332 1.09983 16.4109C0.377664 14.9243 0.377664 14.9243 0.409832 14.3614C0.478744 14.1734 0.567401 14.0189 0.664044 13.8489C0.73097 13.6957 0.793936 13.5405 0.856923 13.3849C1.14484 12.675 1.45211 11.9873 1.82486 11.3351C1.88975 11.2214 1.95365 11.1068 2.01629 10.9913C2.47233 10.1524 2.9933 9.3321 3.58592 8.62587C3.65962 8.52405 3.73292 8.42179 3.80589 8.31922C4.36093 7.55667 4.36093 7.55667 4.72235 7.36401C4.85758 7.29265 4.85758 7.29265 4.90858 7.13041C4.98718 6.94842 5.05648 6.87154 5.19316 6.7504C5.2359 6.7122 5.27865 6.67401 5.3227 6.63467C5.3916 6.57489 5.3916 6.57489 5.4619 6.51391C5.53298 6.45139 5.53298 6.45139 5.60551 6.3876C6.0489 6.00151 6.50581 5.64629 6.97264 5.30213C7.05238 5.24062 7.05238 5.24062 7.13372 5.17786C8.23386 4.34912 9.45386 3.8535 10.6914 3.40285C10.7675 3.37485 10.7675 3.37485 10.8451 3.34628C11.1448 3.2386 11.4466 3.15605 11.7539 3.08631C11.8451 3.06505 11.8451 3.06505 11.9382 3.04337C15.3845 2.27198 19.0116 2.86629 22.1133 4.82731ZM10.0937 6.80573C10.0055 6.84444 10.0055 6.84444 9.91552 6.88394C8.66812 7.43803 7.55865 8.37063 6.52024 9.34305C6.47893 9.38121 6.43761 9.41938 6.39504 9.4587C6.14485 9.69583 5.93587 9.94529 5.73556 10.2424C5.64248 10.3697 5.54532 10.4676 5.43284 10.5697C4.59759 11.3929 4.0049 12.68 3.45311 13.7698C3.40727 13.8548 3.40727 13.8548 3.3605 13.9416C3.20087 14.2455 3.16299 14.4431 3.18748 14.7985C3.25744 15.0144 3.25744 15.0144 3.3618 15.2189C3.39801 15.2939 3.43422 15.3689 3.47152 15.4462C3.60598 15.7081 3.7454 15.9647 3.89175 16.2174C3.95709 16.333 4.01907 16.4514 4.07852 16.5714C4.40653 17.2132 4.81569 17.7897 5.24244 18.3405C5.36009 18.4935 5.47171 18.6496 5.58226 18.8098C6.02571 19.427 6.59724 19.9028 7.13364 20.3985C7.22714 20.486 7.31895 20.576 7.4105 20.6664C7.57501 20.8172 7.73925 20.9309 7.92308 21.0454C8.13837 21.1817 8.34686 21.3198 8.54979 21.4806C8.951 21.7862 9.39522 22.004 9.82811 22.2374C9.88546 22.2695 9.94281 22.3017 10.0019 22.3348C10.356 22.5307 10.7136 22.6687 11.0898 22.7913C11.1699 22.8176 11.2499 22.8438 11.3324 22.8708C14.71 23.9637 18.1584 23.4692 21.25 21.5252C21.4584 21.3794 21.6524 21.2196 21.8476 21.0503C21.9843 20.941 22.1213 20.8322 22.2585 20.7239C22.3225 20.6731 22.3864 20.6223 22.4523 20.5699C22.5828 20.4662 22.7145 20.3645 22.8471 20.2645C23.0479 20.0965 23.205 19.9152 23.375 19.705C23.5031 19.5641 23.6317 19.424 23.761 19.2846C23.8982 19.1349 24.0351 18.9848 24.1719 18.8345C24.2202 18.7814 24.2686 18.7282 24.3184 18.6734C24.5945 18.3578 24.8339 18.0167 25.0683 17.6573C25.1128 17.5894 25.1128 17.5894 25.1581 17.5201C25.3174 17.2928 25.3174 17.2928 25.3672 17.0144C25.411 17.0144 25.4548 17.0144 25.5 17.0144C25.589 16.8843 25.589 16.8843 25.6756 16.7133C25.7266 16.6169 25.7266 16.6169 25.7787 16.5185C25.8318 16.4163 25.8318 16.4163 25.886 16.312C25.9206 16.2469 25.9552 16.1819 25.9909 16.1148C26.4376 15.3421 26.4376 15.3421 26.6312 14.4653C26.4834 13.9907 26.2528 13.5664 26.0312 13.1367C25.9704 13.0185 25.9704 13.0185 25.9083 12.898C25.5581 12.2482 25.1509 11.6552 24.736 11.0634C24.6702 10.969 24.6053 10.8737 24.5413 10.7776C24.4653 10.6643 24.3853 10.5547 24.3047 10.446C24.2608 10.446 24.217 10.446 24.1719 10.446C24.1545 10.3988 24.1371 10.3516 24.1192 10.3029C24.0338 10.1182 23.9541 10.0219 23.8191 9.88711C23.7482 9.81596 23.7482 9.81596 23.6759 9.74337C23.6204 9.68798 23.5649 9.63258 23.5078 9.57551C23.4406 9.50568 23.3735 9.43571 23.3065 9.36562C22.916 8.95999 22.5263 8.59323 22.0816 8.27285C21.9289 8.16184 21.7855 8.04268 21.6401 7.91859C21.2285 7.58866 20.7708 7.35857 20.3203 7.11532C20.2049 7.0526 20.0902 6.98806 19.9756 6.9232C19.5877 6.70494 19.2058 6.5456 18.7929 6.41005C18.7076 6.37889 18.6222 6.34755 18.5369 6.31607C17.7461 6.03086 16.9569 5.88422 16.1367 5.77695C16.0577 5.76645 15.9787 5.75594 15.8973 5.74511C13.9149 5.5173 11.9303 5.92486 10.0937 6.80573Z" fill="white"/>
    <path d="M14.8501 7.95325C14.9251 7.95365 15.0001 7.95404 15.0774 7.95445C16.4329 7.98772 17.6577 8.60158 18.6519 9.7091C18.6984 9.76949 18.745 9.82988 18.793 9.8921C18.8505 9.96065 18.908 10.0292 18.9673 10.0998C19.0194 10.1619 19.0714 10.2239 19.125 10.2878C19.1647 10.3302 19.2045 10.3727 19.2454 10.4164C19.3242 10.5252 19.3242 10.5252 19.3242 10.7626C19.3681 10.7626 19.4119 10.7626 19.4571 10.7626C20.3 12.2026 20.5979 13.9735 20.3678 15.6997C20.0981 17.3241 19.4079 18.855 18.2822 19.8655C16.9384 20.9309 15.4791 21.5036 13.8603 21.1357C13.0604 20.9279 12.3559 20.5958 11.6875 20.0216C11.6457 19.988 11.6038 19.9545 11.5607 19.9199C11.4454 19.8262 11.3337 19.7265 11.2227 19.6259C11.2227 19.5737 11.2227 19.5215 11.2227 19.4676C11.1842 19.4482 11.1456 19.4287 11.1059 19.4086C10.2482 18.837 9.75014 17.3684 9.49612 16.3022C9.1207 14.5428 9.37447 12.7081 10.114 11.1425C10.4398 10.5011 10.7908 9.95683 11.2891 9.49642C11.3329 9.4551 11.3767 9.41379 11.4219 9.37122C11.5527 9.25094 11.6855 9.13538 11.8203 9.0216C11.8603 8.98742 11.9003 8.95325 11.9415 8.91804C12.7915 8.23636 13.838 7.94616 14.8501 7.95325ZM15.5391 11.7914C15.2367 12.2913 15.2083 12.8519 15.2735 13.4533C15.5058 14.1478 15.8985 14.5822 16.4688 14.8777C17.0067 14.9757 17.471 14.9303 17.9214 14.5525C18.3144 14.1359 18.5185 13.6656 18.5901 13.0449C18.5981 12.5525 18.4964 12.071 18.241 11.6776C17.8519 11.2355 17.4813 10.9979 16.9419 10.9753C16.3388 10.9947 15.9526 11.2771 15.5391 11.7914Z" fill="white"/>
    </svg>
    ]]
    
    local seringa = [[
        <svg width="32" height="34" viewBox="0 0 32 34" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_1_685)">
    <path d="M17.5 4.0508C17.8552 4.27479 18.152 4.59162 18.4413 4.90125C18.4827 4.94507 18.5242 4.98888 18.5668 5.03402C18.7044 5.1796 18.8414 5.32564 18.9785 5.47169C19.0775 5.57668 19.1765 5.68164 19.2755 5.78658C19.5435 6.07067 19.811 6.35519 20.0785 6.6398C20.3586 6.93775 20.639 7.23537 20.9194 7.53305C21.4199 8.06462 21.9201 8.59653 22.4202 9.12856C22.8737 9.6109 23.3274 10.0929 23.7814 10.5746C24.3091 11.1347 24.8367 11.6949 25.3639 12.2555C25.6428 12.5521 25.9218 12.8485 26.201 13.1447C26.4633 13.423 26.7252 13.7015 26.9868 13.9803C27.083 14.0827 27.1793 14.1849 27.2757 14.2871C27.4071 14.4263 27.538 14.5658 27.6688 14.7055C27.7073 14.7461 27.7457 14.7866 27.7853 14.8284C27.8203 14.8659 27.8553 14.9034 27.8914 14.9421C27.9216 14.9743 27.9519 15.0064 27.983 15.0396C28.1911 15.3042 28.2157 15.5297 28.1875 15.8711C28.1091 16.0586 28.0448 16.1675 27.8906 16.2903C27.6855 16.3569 27.5261 16.3594 27.3125 16.336C27.0389 16.1651 26.8225 15.9639 26.6001 15.7248C26.5551 15.6767 26.5551 15.6767 26.5092 15.6277C26.4147 15.5265 26.3206 15.4249 26.2266 15.3233C26.1621 15.2541 26.0975 15.1849 26.033 15.1157C25.8758 14.9473 25.719 14.7785 25.5625 14.6094C25.2121 14.9192 24.8888 15.25 24.5676 15.5935C24.5129 15.6516 24.4582 15.7098 24.4019 15.7698C24.2511 15.9303 24.1004 16.0909 23.9499 16.2516C23.7871 16.4253 23.6241 16.5988 23.4611 16.7723C23.179 17.0726 22.897 17.3731 22.6151 17.6736C22.1694 18.1488 21.7234 18.6235 21.2773 19.0983C21.1245 19.2609 20.9717 19.4234 20.819 19.586C20.7808 19.6266 20.7426 19.6673 20.7033 19.7091C20.2694 20.171 19.8355 20.6329 19.4016 21.0949C19.3422 21.1582 19.3422 21.1582 19.2815 21.2228C18.6386 21.9073 17.996 22.5921 17.3534 23.2769C16.6932 23.9806 16.0326 24.6838 15.3717 25.3868C14.9643 25.8201 14.5572 26.2538 14.1505 26.6878C13.8718 26.9851 13.5928 27.2821 13.3136 27.5788C13.1525 27.7499 12.9916 27.9212 12.8312 28.0929C12.6571 28.2791 12.4823 28.4646 12.3074 28.65C12.257 28.7043 12.2065 28.7585 12.1545 28.8144C11.78 29.2095 11.4297 29.5301 10.8812 29.5674C10.4985 29.5622 10.1433 29.456 9.77539 29.3521C9.70122 29.3318 9.62705 29.3115 9.55063 29.2905C9.31483 29.2258 9.07929 29.1601 8.84375 29.0943C8.60816 29.0292 8.37252 28.9643 8.13686 28.8994C7.99066 28.8591 7.8445 28.8186 7.6984 28.7779C7.63144 28.7593 7.56447 28.7407 7.49548 28.7215C7.4083 28.6972 7.4083 28.6972 7.31936 28.6724C7.25522 28.6555 7.19108 28.6385 7.125 28.6211C7.08233 28.6036 7.03966 28.5861 6.99569 28.5681C6.84238 28.5135 6.7245 28.4841 6.5625 28.4883C6.3463 28.6122 6.19212 28.7907 6.02443 28.9792C5.94871 29.0598 5.94871 29.0598 5.87146 29.142C5.70504 29.32 5.54117 29.5005 5.37719 29.681C5.26215 29.805 5.14695 29.9287 5.03159 30.0523C4.75923 30.3447 4.48861 30.6387 4.21863 30.9336C3.82182 31.3667 3.42249 31.7972 3.02308 32.2277C2.73658 32.5365 2.4505 32.8457 2.16565 33.1563C2.11333 33.2131 2.06101 33.2699 2.0071 33.3284C1.90898 33.4349 1.81111 33.5417 1.71351 33.6488C1.649 33.7186 1.649 33.7186 1.58318 33.7899C1.54577 33.8307 1.50837 33.8715 1.46982 33.9136C1.375 34 1.375 34 1.25 34C0.913955 31.6346 0.913955 31.6346 1.51212 30.7441C1.97115 30.139 2.52879 29.6269 3.08256 29.1227C3.46478 28.7718 3.83542 28.4072 4.20639 28.0431C4.33598 27.9181 4.46819 27.7971 4.60133 27.6764C5.00803 27.3235 5.00803 27.3235 5.21831 26.8365C5.18784 26.6413 5.13348 26.4796 5.0625 26.2969C5.03188 26.1738 5.00264 26.0504 4.97471 25.9266C4.94168 25.7977 4.90835 25.6688 4.87475 25.54C4.85704 25.471 4.83933 25.4021 4.82109 25.3311C4.76511 25.1134 4.70875 24.8958 4.65234 24.6782C4.59578 24.4592 4.53929 24.2402 4.48292 24.0211C4.44799 23.8855 4.41294 23.7498 4.37775 23.6143C4.36189 23.5528 4.34603 23.4914 4.32969 23.4281C4.31578 23.3744 4.30186 23.3207 4.28752 23.2654C4.15575 22.7175 4.11406 22.2273 4.375 21.7149C4.54271 21.4903 4.73205 21.2921 4.92429 21.0913C4.98111 21.0307 5.03793 20.97 5.09647 20.9075C5.25355 20.7399 5.41158 20.5733 5.56979 20.4069C5.74048 20.2269 5.91025 20.0461 6.08014 19.8653C6.37439 19.5525 6.66921 19.2403 6.96441 18.9285C7.39123 18.4777 7.81718 18.026 8.24293 17.5741C8.93374 16.8408 9.62524 16.1083 10.3172 15.3762C10.9892 14.6652 11.661 13.9539 12.3323 13.242C12.3737 13.1981 12.415 13.1542 12.4577 13.109C12.6654 12.8888 12.873 12.6686 13.0807 12.4484C14.8028 10.6221 16.526 8.79698 18.25 6.97268C18.14 6.72175 18.0039 6.56493 17.8164 6.37087C17.7864 6.33945 17.7563 6.30803 17.7254 6.27565C17.6297 6.17564 17.5337 6.07606 17.4375 5.97658C17.3108 5.84554 17.1846 5.71406 17.0586 5.5823C17.0024 5.52417 16.9463 5.46605 16.8884 5.40616C16.699 5.18712 16.6336 5.05061 16.5977 4.75637C16.6339 4.43693 16.7259 4.34206 16.9375 4.11721C17.1384 4.01046 17.2769 4.02404 17.5 4.0508ZM19.1568 7.9938C19.1179 8.03553 19.0789 8.07726 19.0388 8.12026C18.9967 8.1652 18.9546 8.21014 18.9113 8.25644C18.8671 8.30395 18.8229 8.35146 18.7773 8.40041C18.7329 8.44792 18.6885 8.49543 18.6427 8.54438C18.5325 8.66226 18.4224 8.78029 18.3125 8.89846C18.5542 9.20639 18.8055 9.49669 19.0752 9.77704C19.1475 9.853 19.2197 9.92896 19.292 10.0049C19.4043 10.1226 19.5168 10.2403 19.6294 10.3577C19.7392 10.4724 19.8486 10.5874 19.958 10.7026C20.0086 10.755 20.0086 10.755 20.0602 10.8085C20.3005 11.0621 20.4221 11.2269 20.4648 11.5838C20.4375 11.8203 20.4375 11.8203 20.2969 12.0113C20.1345 12.1446 20.0703 12.1888 19.875 12.2188C19.4383 12.1466 19.1602 11.914 18.8633 11.5835C18.824 11.5414 18.7847 11.4992 18.7442 11.4558C18.6202 11.3223 18.4976 11.1874 18.375 11.0525C18.2909 10.9617 18.2066 10.8709 18.1223 10.7803C17.5134 10.1222 17.5134 10.1222 17.4375 9.96096C17.1932 10.0662 17.0298 10.2443 16.8486 10.4408C16.8171 10.4746 16.7855 10.5083 16.753 10.543C16.6528 10.6503 16.5529 10.758 16.4531 10.8657C16.385 10.9388 16.3169 11.0117 16.2488 11.0847C16.0822 11.2631 15.916 11.442 15.75 11.6211C16.0701 12.0302 16.4178 12.3999 16.7769 12.7701C16.8199 12.8151 16.8629 12.8601 16.9072 12.9064C16.9461 12.9466 16.9849 12.9868 17.025 13.0281C17.1812 13.2161 17.2456 13.359 17.2656 13.6092C17.2495 13.8193 17.2235 13.9614 17.125 14.1446C17.0234 14.1985 17.0234 14.1985 16.875 14.211C16.7977 14.2219 16.7203 14.2329 16.6406 14.2442C16.4104 14.2406 16.3096 14.1758 16.1416 14.0115C16.0983 13.9693 16.055 13.9271 16.0104 13.8837C15.7848 13.6545 15.5631 13.4217 15.3437 13.1858C15.2983 13.1372 15.2529 13.0887 15.2061 13.0386C15.0956 12.9204 14.9852 12.8021 14.875 12.6836C14.6307 12.7888 14.4673 12.9669 14.2861 13.1635C14.2546 13.1972 14.223 13.2309 14.1905 13.2657C14.0903 13.3729 13.9904 13.4807 13.8906 13.5884C13.8225 13.6614 13.7544 13.7344 13.6863 13.8073C13.5197 13.9858 13.3535 14.1647 13.1875 14.3438C13.4342 14.6582 13.6917 14.9543 13.9661 15.2416C14.0028 15.2804 14.0396 15.3192 14.0775 15.3592C14.1934 15.4816 14.3096 15.6037 14.4258 15.7259C14.58 15.888 14.734 16.0503 14.8879 16.2127C14.9411 16.2684 14.9411 16.2684 14.9952 16.3251C15.2163 16.5585 15.305 16.6531 15.3359 16.9876C15.3317 17.2099 15.3112 17.2678 15.1914 17.4649C14.9739 17.6158 14.8453 17.6579 14.5886 17.6347C14.0362 17.4995 13.4873 16.6617 13.0937 16.2405C13.0178 16.1594 12.9417 16.0784 12.8657 15.9973C12.6811 15.8005 12.4968 15.6034 12.3125 15.4063C12.0682 15.5115 11.9048 15.6896 11.7236 15.8862C11.6763 15.9367 11.6763 15.9367 11.628 15.9883C11.5278 16.0956 11.4279 16.2033 11.3281 16.3111C11.26 16.3841 11.1919 16.457 11.1238 16.53C10.9572 16.7085 10.791 16.8873 10.625 17.0664C10.8087 17.2622 10.9933 17.4568 11.1802 17.6493C11.2686 17.7414 11.3569 17.8335 11.4453 17.9256C11.49 17.9714 11.5347 18.0172 11.5808 18.0645C11.8653 18.3625 12.1022 18.6224 12.1445 19.0628C12.1241 19.2669 12.096 19.4113 12 19.5899C11.8984 19.6438 11.8984 19.6438 11.75 19.6563C11.6727 19.6672 11.5953 19.6782 11.5156 19.6895C11.2854 19.6859 11.1846 19.6212 11.0166 19.4568C10.9733 19.4146 10.93 19.3725 10.8854 19.329C10.6598 19.0998 10.4381 18.867 10.2187 18.6311C10.1733 18.5825 10.1279 18.534 10.0811 18.4839C9.97055 18.3657 9.86021 18.2474 9.75 18.1289C9.50572 18.2341 9.34227 18.4122 9.16113 18.6088C9.1138 18.6594 9.1138 18.6594 9.06551 18.711C8.96525 18.8182 8.86543 18.926 8.76562 19.0337C8.69754 19.1067 8.62942 19.1797 8.56128 19.2526C8.39468 19.4311 8.22849 19.61 8.0625 19.7891C8.26243 20.0019 8.46313 20.2139 8.66448 20.4253C8.81411 20.5825 8.9634 20.74 9.11268 20.8976C9.19143 20.9806 9.27029 21.0635 9.34926 21.1462C9.46384 21.2664 9.57803 21.387 9.69214 21.5076C9.72742 21.5444 9.76271 21.5812 9.79906 21.6191C10.0585 21.8947 10.1744 22.0544 10.2148 22.4412C10.2079 22.6588 10.1839 22.7168 10.0664 22.9102C9.8489 23.0611 9.72034 23.1032 9.46364 23.08C8.91123 22.9448 8.36233 22.107 7.96875 21.6858C7.89275 21.6047 7.81674 21.5237 7.74072 21.4426C7.55614 21.2458 7.37177 21.0487 7.1875 20.8516C6.84061 21.0068 6.59232 21.3138 6.32774 21.5894C6.26294 21.6564 6.19752 21.7227 6.13151 21.7884C6.03572 21.8837 5.94194 21.9808 5.84839 22.0785C5.79204 22.1361 5.7357 22.1937 5.67766 22.253C5.54976 22.4666 5.54389 22.5695 5.589 22.8148C5.60088 22.8682 5.61276 22.9216 5.625 22.9766C5.63818 23.0422 5.65136 23.1079 5.66494 23.1755C5.76106 23.6408 5.86934 24.1031 5.97918 24.5649C6.03476 24.7988 6.08892 25.0328 6.13989 25.2678C6.18955 25.4967 6.24262 25.7243 6.29816 25.9517C6.32848 26.0795 6.35532 26.2083 6.38208 26.337C6.44192 26.5734 6.49799 26.7566 6.625 26.961C6.88438 27.1193 7.14529 27.1706 7.4375 27.2266C7.56251 27.2619 7.68725 27.2983 7.81164 27.336C7.93753 27.3713 8.06346 27.4064 8.18945 27.4414C8.25692 27.4602 8.32439 27.4789 8.39391 27.4983C8.53484 27.5374 8.67579 27.5765 8.81677 27.6155C9.03258 27.6752 9.24822 27.7356 9.46386 27.796C9.60155 27.8341 9.73925 27.8723 9.87695 27.9104C9.94114 27.9284 10.0053 27.9465 10.0715 27.9651C10.1314 27.9815 10.1913 27.9979 10.253 28.0148C10.3054 28.0294 10.3578 28.0439 10.4117 28.0589C10.5763 28.0927 10.7076 28.1065 10.875 28.0899C11.0078 27.998 11.0078 27.998 11.1272 27.8627C11.1997 27.7868 11.1997 27.7868 11.2736 27.7092C11.3259 27.6526 11.3783 27.5961 11.4322 27.5378C11.5164 27.4487 11.5164 27.4487 11.6024 27.3578C11.7585 27.1927 11.9135 27.0266 12.0684 26.8604C12.2356 26.6813 12.4037 26.5032 12.5716 26.325C12.8626 26.0161 13.1529 25.7065 13.4429 25.3966C13.8622 24.9484 14.2823 24.5012 14.7026 24.0541C15.3845 23.3289 16.0657 22.6029 16.7465 21.8764C17.4079 21.1707 18.0696 20.4653 18.7317 19.7603C18.7929 19.6952 18.7929 19.6952 18.8554 19.6287C19.0601 19.4108 19.2648 19.1929 19.4695 18.9749C21.1681 17.1667 22.8657 15.3572 24.5625 13.5469C24.3668 13.3013 24.172 13.0573 23.9577 12.8295C23.9163 12.7853 23.8749 12.7411 23.8322 12.6955C23.788 12.6487 23.7439 12.602 23.6984 12.5538C23.6509 12.5032 23.6034 12.4526 23.5545 12.4005C23.3987 12.2347 23.2427 12.0691 23.0867 11.9036C22.978 11.7881 22.8694 11.6727 22.7608 11.5572C22.5339 11.316 22.3069 11.075 22.0798 10.834C21.788 10.5243 21.4965 10.2144 21.2051 9.90432C20.9812 9.66626 20.7572 9.42835 20.5332 9.19049C20.4256 9.07618 20.318 8.96182 20.2105 8.84741C20.0609 8.68827 19.911 8.52934 19.7612 8.37047C19.7164 8.32276 19.6716 8.27506 19.6255 8.22591C19.5849 8.183 19.5444 8.14009 19.5026 8.09588C19.4672 8.05828 19.4318 8.02069 19.3953 7.98196C19.2772 7.86841 19.2751 7.87774 19.1568 7.9938Z" fill="white"/>
    <path d="M24.5625 -1.62574e-05C24.8193 0.167026 25.0325 0.34987 25.2451 0.575599C25.2737 0.605739 25.3023 0.635879 25.3317 0.666932C25.4264 0.76704 25.5207 0.867611 25.6149 0.968192C25.6831 1.04045 25.7513 1.11268 25.8195 1.18488C26.0041 1.38035 26.1882 1.57624 26.3723 1.77223C26.5651 1.97748 26.7583 2.1824 26.9514 2.38737C27.2755 2.73145 27.5993 3.07581 27.9229 3.42033C28.2971 3.81861 28.6717 4.21642 29.0466 4.61398C29.3687 4.95556 29.6905 5.29739 30.0121 5.63945C30.2041 5.84365 30.3961 6.04776 30.5884 6.25164C30.7691 6.4432 30.9494 6.63509 31.1296 6.82722C31.1957 6.89769 31.262 6.96804 31.3284 7.03827C31.4189 7.13411 31.509 7.2304 31.5991 7.32671C31.6497 7.38048 31.7002 7.43425 31.7523 7.48964C31.9701 7.75071 32.028 7.94852 32.0205 8.30284C31.9881 8.50949 31.8884 8.62288 31.75 8.76561C31.5219 8.8868 31.3098 8.89298 31.0625 8.83201C30.8254 8.66277 30.6353 8.45213 30.4375 8.23436C30.3782 8.17167 30.3187 8.10916 30.259 8.04681C30.109 7.88918 29.9603 7.73032 29.8125 7.5703C29.564 7.67659 29.3975 7.86059 29.2128 8.05956C29.1787 8.09585 29.1445 8.13214 29.1093 8.16953C28.9967 8.28922 28.8846 8.40938 28.7725 8.52955C28.6944 8.61277 28.6163 8.69595 28.5381 8.77911C28.3328 8.99782 28.1278 9.21691 27.9229 9.4361C27.7136 9.65979 27.504 9.8831 27.2944 10.1064C26.8834 10.5445 26.4728 10.9831 26.0625 11.4219C25.9927 11.3587 25.923 11.2956 25.8533 11.2323C25.8144 11.1972 25.7756 11.162 25.7356 11.1257C25.6003 11.0006 25.4733 10.8687 25.3477 10.7329C25.284 10.6643 25.284 10.6643 25.219 10.5944C25.188 10.5606 25.157 10.5269 25.125 10.4922C25.225 10.2282 25.3982 10.0512 25.5855 9.85502C25.6196 9.81871 25.6538 9.7824 25.689 9.74499C25.8016 9.62539 25.9147 9.50626 26.0278 9.38713C26.1062 9.30416 26.1844 9.22117 26.2627 9.13814C26.4685 8.91995 26.6748 8.70215 26.8811 8.48444C27.0916 8.26211 27.3018 8.0394 27.512 7.81673C27.9243 7.38005 28.337 6.94379 28.75 6.5078C28.453 6.12815 28.1346 5.77886 27.8052 5.43103C27.7516 5.3742 27.698 5.31738 27.6428 5.25883C27.473 5.07872 27.3029 4.89885 27.1328 4.71898C27.0171 4.59634 26.9014 4.47369 26.7856 4.35102C26.5031 4.05154 26.2204 3.75225 25.9375 3.45311C25.5139 3.82222 25.1323 4.2338 24.7463 4.64583C24.6741 4.72269 24.6019 4.79954 24.5296 4.87638C24.3407 5.07732 24.152 5.27846 23.9634 5.47964C23.7703 5.68543 23.5771 5.89103 23.3839 6.09665C23.0058 6.49914 22.6278 6.90184 22.25 7.30467C22.0753 7.2152 21.9475 7.13221 21.8115 6.98457C21.762 6.93129 21.762 6.93129 21.7114 6.87692C21.6777 6.84003 21.6441 6.80313 21.6094 6.76512C21.5747 6.72771 21.5401 6.6903 21.5044 6.65176C21.4193 6.5598 21.3346 6.46743 21.25 6.37498C21.5974 5.92494 21.9848 5.51944 22.3726 5.10937C22.4449 5.03263 22.5172 4.95588 22.5895 4.87911C22.7787 4.67842 22.968 4.47793 23.1573 4.27748C23.351 4.07238 23.5445 3.86708 23.738 3.6618C24.1169 3.26002 24.4959 2.85845 24.875 2.45701C24.7797 2.24413 24.6808 2.10284 24.5212 1.9377C24.4768 1.89122 24.4324 1.84473 24.3866 1.79684C24.3402 1.74899 24.2939 1.70114 24.2461 1.65184C24.1541 1.55636 24.0622 1.46073 23.9705 1.36494C23.9297 1.32282 23.8889 1.28069 23.8469 1.23729C23.6569 1.02474 23.6671 0.82978 23.6692 0.548614C23.696 0.328414 23.7881 0.215812 23.9375 0.06639C24.1354 -0.0387475 24.3484 -0.0427648 24.5625 -1.62574e-05Z" fill="white"/>
    </g>
    <defs>
    <clipPath id="clip0_1_685">
    <rect width="32" height="34" fill="white"/>
    </clipPath>
    </defs>
    </svg>
    ]]
    
    local settings = [[
        <svg width="34" height="29" viewBox="0 0 34 29" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M16.0657 1.78794C16.1395 1.78764 16.2133 1.78735 16.2893 1.78704C16.4446 1.78668 16.5999 1.78675 16.7551 1.78723C16.9906 1.78772 17.226 1.78608 17.4615 1.78429C17.6132 1.7842 17.765 1.78423 17.9167 1.7844C17.9861 1.78376 18.0554 1.78313 18.1268 1.78247C19.053 1.78982 19.7655 2.09212 20.4365 2.62317C21.0941 3.21581 21.2569 3.85579 21.2941 4.64193C21.3203 5.18539 21.3961 5.64039 21.7149 6.11719C21.7436 6.176 21.7436 6.176 21.773 6.236C21.8667 6.37124 21.9453 6.39655 22.1133 6.45703C22.2639 6.5296 22.4138 6.60301 22.5636 6.67673C22.9757 6.85434 23.4934 6.85678 23.9358 6.76214C24.1988 6.67583 24.4473 6.56627 24.6987 6.45836C24.7453 6.43839 24.7918 6.41842 24.8398 6.39784C24.9319 6.35801 25.0237 6.31769 25.1151 6.27682C25.8957 5.93318 26.7846 5.8923 27.6292 6.09595C28.0004 6.20855 28.3115 6.36401 28.6211 6.57031C28.7033 6.62233 28.7033 6.62233 28.7871 6.67541C29.6849 7.3323 30.7451 8.91032 30.8789 9.91211C30.9493 10.7445 30.7242 11.4724 30.1236 12.1388C29.8341 12.3915 29.5168 12.5819 29.1614 12.7623C28.4739 13.1124 28.0469 13.387 27.7578 14.0469C27.6638 14.6458 27.7412 15.1303 28.1563 15.6328C28.4397 15.9294 28.8671 16.1062 29.2516 16.2936C30.0586 16.6906 30.5206 17.2586 30.8125 18.0117C31.1001 19.1933 30.5009 20.0864 29.8247 21.0774C29.7866 21.1344 29.7485 21.1914 29.7093 21.2502C29.1624 22.0533 28.5584 22.6552 27.4922 22.9395C26.3742 23.1853 25.3944 22.8932 24.4232 22.4346C24.3773 22.4129 24.3313 22.3912 24.284 22.3688C24.2431 22.3492 24.2023 22.3296 24.1602 22.3094C23.747 22.1401 23.2234 22.1471 22.7885 22.2458C22.4767 22.3475 22.2332 22.4676 21.9805 22.6562C21.9367 22.6562 21.8928 22.6562 21.8477 22.6562C21.8285 22.6895 21.8093 22.7227 21.7896 22.7569C21.7445 22.8329 21.6979 22.9082 21.6485 22.9822C21.3659 23.4181 21.3177 23.8619 21.2975 24.3523C21.2591 25.2582 20.9724 25.9505 20.1834 26.5875C19.5043 27.0639 18.7994 27.2141 17.9344 27.2121C17.8236 27.2125 17.8236 27.2125 17.7107 27.213C17.5554 27.2133 17.4002 27.2132 17.2449 27.2128C17.0094 27.2123 16.774 27.2139 16.5385 27.2157C16.3868 27.2158 16.235 27.2158 16.0833 27.2156C16.014 27.2162 15.9446 27.2169 15.8732 27.2175C14.947 27.2102 14.2346 26.9079 13.5635 26.3768C12.9059 25.7842 12.7431 25.1442 12.7059 24.3581C12.6797 23.8146 12.6039 23.3596 12.2852 22.8828C12.266 22.8436 12.2468 22.8044 12.2271 22.764C12.1333 22.6288 12.0547 22.6034 11.8867 22.543C11.7362 22.4704 11.5862 22.397 11.4364 22.3233C11.0243 22.1457 10.5066 22.1432 10.0642 22.2379C9.80121 22.3242 9.55273 22.4337 9.3013 22.5416C9.25475 22.5616 9.20821 22.5816 9.16025 22.6022C9.06816 22.642 8.97636 22.6823 8.8849 22.7232C8.1117 23.0636 7.22767 23.1058 6.38747 22.9147C5.207 22.5511 4.66745 21.7925 4.07155 20.8968C4.02922 20.8342 3.98689 20.7715 3.94328 20.7069C3.33793 19.8048 2.92256 19.0679 3.19582 18.0046C3.48623 17.1243 4.09843 16.5953 5.00202 16.1461C5.64139 15.8277 5.98275 15.5491 6.2422 14.9531C6.33625 14.3543 6.259 13.8695 5.84377 13.3672C5.56652 13.0784 5.17056 12.9244 4.79461 12.7455C3.97389 12.35 3.4629 11.7599 3.18752 10.9883C2.9073 9.80279 3.49619 8.91798 4.17531 7.92261C4.2134 7.86558 4.25149 7.80856 4.29074 7.74981C4.86484 6.90678 5.50537 6.30166 6.63276 6.0305C7.71062 5.82677 8.64912 6.12741 9.57682 6.56543C9.62277 6.58712 9.66873 6.60881 9.71608 6.63115C9.75691 6.65077 9.79774 6.67039 9.83981 6.6906C10.253 6.85989 10.7766 6.85293 11.2115 6.75417C11.5233 6.6525 11.7668 6.53239 12.0195 6.34375C12.0634 6.34375 12.1072 6.34375 12.1524 6.34375C12.1715 6.31053 12.1907 6.27731 12.2105 6.24308C12.2555 6.16713 12.3021 6.09179 12.3516 6.01784C12.6342 5.58193 12.6823 5.13809 12.7025 4.64768C12.7409 3.74182 13.0277 3.04946 13.8167 2.41253C14.4958 1.93607 15.2006 1.78587 16.0657 1.78794ZM13.1485 11.3848C12.0739 12.3386 11.7161 13.5458 11.736 14.8341C11.7697 15.7582 12.2431 16.6874 12.9492 17.3887C12.9822 17.4248 13.0151 17.461 13.0491 17.4982C13.9243 18.4209 15.2699 18.8932 16.6223 19.0206C18.0618 19.0917 19.4643 18.67 20.5479 17.8648C21.5416 17.0883 22.2038 16.0165 22.2666 14.8617C22.3077 13.6584 21.9885 12.5427 21.0508 11.6113C21.0178 11.5752 20.9849 11.539 20.9509 11.5018C20.0758 10.5791 18.7302 10.1068 17.3777 9.97937C15.7596 9.89946 14.2965 10.4375 13.1485 11.3848Z" fill="white"/>
    </svg>
    ]]
    
    local user = [[
        <svg width="503" height="522" viewBox="0 0 503 522" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_177_410)">
        <path d="M251.193 0.00413894C252.143 0.00599506 253.092 0.00785118 254.07 0.00976355C268.133 0.0560217 281.817 0.574207 295.654 3.37716C296.975 3.62303 296.975 3.62303 298.322 3.87387C357.008 14.8942 413.441 49.5743 449.704 99.0947C450.113 99.6449 450.522 100.195 450.943 100.762C458.482 110.939 465.098 121.59 471.291 132.698C471.678 133.387 472.064 134.077 472.463 134.787C485.398 158.125 493.841 184.167 499.071 210.468C499.216 211.192 499.361 211.916 499.51 212.661C502.439 228.589 503.057 244.511 502.996 260.682C502.993 262.159 502.993 262.159 502.991 263.667C502.946 278.262 502.447 292.462 499.746 306.822C499.588 307.736 499.43 308.649 499.267 309.59C488.648 370.493 455.23 429.058 407.512 466.691C406.982 467.115 406.452 467.54 405.906 467.977C396.099 475.8 385.835 482.666 375.132 489.093C374.468 489.494 373.803 489.896 373.119 490.31C350.631 503.733 325.536 512.495 300.192 517.923C299.495 518.073 298.798 518.223 298.079 518.378C282.731 521.418 267.389 522.059 251.807 521.996C250.857 521.994 249.908 521.992 248.93 521.99C234.867 521.944 221.183 521.426 207.346 518.623C206.465 518.459 205.585 518.295 204.678 518.126C145.992 507.106 89.5589 472.426 53.2959 422.905C52.887 422.355 52.4782 421.805 52.0569 421.238C44.518 411.06 37.9023 400.409 31.7093 389.302C31.3224 388.613 30.9355 387.923 30.5369 387.213C17.6023 363.875 9.15856 337.833 3.92882 311.532C3.78416 310.808 3.63949 310.084 3.49044 309.339C0.561179 293.41 -0.0571506 277.489 0.00398829 261.318C0.00577685 260.333 0.00756541 259.348 0.00940817 258.333C0.0539826 243.738 0.553307 229.538 3.25424 215.178C3.49116 213.808 3.49116 213.808 3.73287 212.41C14.3521 151.507 47.7699 92.9419 95.4878 55.309C96.018 54.8847 96.5481 54.4604 97.0943 54.0233C106.901 46.1996 117.165 39.334 127.868 32.9071C128.532 32.5056 129.197 32.1041 129.881 31.6904C152.369 18.2672 177.464 9.50451 202.808 4.07723C203.505 3.9271 204.202 3.77697 204.921 3.62229C220.269 0.582377 235.611 -0.0593094 251.193 0.00413894Z" fill="#191919"/>
        <path d="M323.026 48.8211C343.919 66.844 358.005 92.6401 360.214 120.384C361.94 153.062 352.472 181.857 330.593 206.313C324.153 213.061 317.148 218.504 309.214 223.384C308.647 223.736 308.08 224.087 307.496 224.45C283.873 238.824 254.706 242.893 227.82 236.845C199.068 229.721 174.877 212.743 159.214 187.384C153.042 176.945 149.065 166.14 146.214 154.384C145.967 153.405 145.721 152.427 145.468 151.419C139.748 123.927 146.719 94.9449 161.214 71.3836C163.675 67.8356 166.341 64.6028 169.214 61.3836C169.876 60.5793 170.539 59.7749 171.221 58.9461C187.033 40.2751 211.338 26.429 235.805 23.5828C268.84 20.8506 297.426 27.4713 323.026 48.8211ZM193.526 81.6336C179.117 100.066 173.699 120.495 176.486 143.647C179.914 164.453 192.173 182.149 209.038 194.442C226.528 206.051 247.212 209.919 267.839 206.259C280.165 203.469 290.47 198.381 300.214 190.384C301.09 189.671 301.967 188.958 302.87 188.223C317.231 175.961 326.752 157.758 328.437 138.884C329.635 118.717 325.45 99.429 312.206 83.5946C311.548 82.865 310.891 82.1353 310.214 81.3836C309.412 80.489 308.61 79.5944 307.784 78.6727C293.93 64.0159 276.22 55.982 256.214 54.3836C255.146 54.2947 255.146 54.2947 254.057 54.2039C231.199 53.3322 208.202 64.3791 193.526 81.6336Z" fill="white"/>
        <path d="M362.434 301.714C363.445 302.6 363.445 302.6 364.476 303.503C383.965 321.595 397.001 348.53 397.97 374.89C398.003 377.577 398.005 380.262 397.994 382.95C397.994 383.961 397.995 384.973 397.995 386.015C397.994 389.329 397.986 392.643 397.978 395.957C397.976 398.266 397.975 400.575 397.974 402.885C397.97 408.941 397.96 414.997 397.949 421.053C397.939 427.242 397.934 433.431 397.929 439.62C397.918 451.746 397.9 463.873 397.879 476C387.185 476 376.491 476 365.472 476C365.463 472.91 365.453 469.821 365.444 466.638C365.409 456.382 365.353 446.126 365.286 435.871C365.246 429.658 365.214 423.446 365.198 417.233C365.183 411.227 365.147 405.222 365.099 399.217C365.084 396.936 365.076 394.655 365.076 392.374C365.064 376.586 364.257 362.372 356.548 348.149C356.025 347.154 356.025 347.154 355.492 346.14C352.617 340.815 349.251 336.135 345.218 331.591C344.744 330.996 344.27 330.4 343.782 329.786C326.941 309.003 295.609 296.983 269.3 293.992C252.972 292.833 236.622 293.003 220.654 296.734C219.601 296.975 219.601 296.975 218.526 297.22C200.582 301.47 184.467 309.412 170.018 320.636C169.266 321.193 168.514 321.751 167.739 322.325C158.444 329.66 151.334 339.582 146.219 350.078C145.901 350.723 145.583 351.367 145.256 352.031C138.808 366.103 139.16 380.447 139.118 395.568C139.101 397.894 139.082 400.22 139.063 402.546C139.015 408.628 138.985 414.71 138.958 420.793C138.928 427.015 138.881 433.238 138.835 439.46C138.748 451.64 138.681 463.82 138.623 476C127.929 476 117.235 476 106.216 476C106.171 462.736 106.133 449.472 106.111 436.209C106.101 430.048 106.087 423.888 106.064 417.728C106.041 411.775 106.029 405.821 106.024 399.867C106.021 397.605 106.013 395.342 106.002 393.08C105.839 358.172 114.433 329.326 139.537 303.772C196.304 247.667 297.81 246.528 362.434 301.714Z" fill="white"/>
        <path d="M258.214 344.384C259.153 344.616 260.092 344.848 261.059 345.087C264.495 345.971 267.908 346.916 271.323 347.876C272.567 348.222 273.812 348.569 275.094 348.926C277.714 349.657 280.333 350.392 282.95 351.13C286.299 352.074 289.651 353.004 293.004 353.931C296.217 354.821 299.426 355.724 302.635 356.626C303.837 356.957 305.038 357.288 306.275 357.63C307.39 357.947 308.505 358.264 309.654 358.59C310.634 358.865 311.613 359.139 312.622 359.422C315.306 360.418 317.113 361.447 319.214 363.384C326.814 390.201 322.995 430.129 310.651 455.071C297.941 476.46 277.121 490.868 253.776 498.509C235.734 497.876 216.737 482.569 204.776 469.884C187.085 449.409 182.798 423.761 182.953 397.474C182.964 395.318 182.953 393.163 182.94 391.007C182.931 383.974 183.184 377.004 183.979 370.012C184.116 368.808 184.253 367.603 184.394 366.362C185.378 362.786 186.123 362.294 189.214 360.384C191.957 359.371 191.957 359.371 195.14 358.467C196.336 358.123 197.531 357.78 198.762 357.426C200.063 357.062 201.365 356.699 202.667 356.337C204.01 355.958 205.352 355.579 206.695 355.199C209.508 354.406 212.322 353.621 215.138 352.839C218.731 351.841 222.318 350.821 225.904 349.796C228.675 349.006 231.451 348.231 234.227 347.459C235.551 347.089 236.873 346.714 238.193 346.334C251.376 342.556 251.376 342.556 258.214 344.384ZM252.214 376.384C252.214 390.904 252.214 405.424 252.214 420.384C264.094 420.384 275.974 420.384 288.214 420.384C288.848 415.305 289.336 410.929 289.311 405.915C289.308 404.768 289.305 403.62 289.302 402.438C289.293 401.265 289.285 400.092 289.276 398.884C289.272 397.68 289.267 396.476 289.262 395.235C289.251 392.285 289.234 389.334 289.214 386.384C284.267 384.956 279.319 383.532 274.37 382.111C272.686 381.627 271.002 381.142 269.318 380.656C266.901 379.959 264.483 379.264 262.065 378.571C261.31 378.352 260.555 378.134 259.777 377.908C256.055 376.782 256.055 376.782 252.214 376.384ZM217.214 421.384C218.527 431.893 221.254 439.409 228.214 447.384C228.85 448.114 229.487 448.845 230.143 449.598C236.017 455.891 242.62 460.385 250.214 464.384C250.874 464.384 251.534 464.384 252.214 464.384C252.214 450.194 252.214 436.004 252.214 421.384C240.664 421.384 229.114 421.384 217.214 421.384Z" fill="white"/>
        </g>
        <defs>
        <clipPath id="clip0_177_410">
        <rect width="503" height="522" fill="white"/>
        </clipPath>
        </defs>
        </svg>        
    ]]
    
    local computador = [[
    <svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_196_6)">
    <path d="M45.8835 41.4988C47.7767 41.4949 49.67 41.4892 51.5632 41.482C56.7366 41.4673 61.9096 41.4774 67.083 41.4917C72.6733 41.5029 78.2636 41.4909 83.854 41.4819C94.7931 41.468 105.732 41.4755 116.671 41.4906C129.414 41.5075 142.157 41.5042 154.9 41.5005C178.323 41.4944 201.746 41.5102 225.17 41.5357C246.54 41.5588 267.911 41.5642 289.281 41.5539C294.756 41.5513 300.23 41.5488 305.705 41.5463C306.379 41.546 307.053 41.5457 307.747 41.5454C325.622 41.5378 343.496 41.5443 361.371 41.555C363.933 41.5566 366.496 41.5581 369.058 41.5596C370.949 41.5607 370.949 41.5607 372.878 41.5619C381.759 41.5666 390.64 41.5648 399.52 41.5605C410.342 41.5556 421.163 41.5616 431.984 41.5814C437.505 41.5913 443.025 41.5964 448.545 41.5885C453.6 41.5815 458.654 41.5883 463.709 41.6061C465.536 41.6102 467.363 41.6092 469.19 41.6026C482.105 41.5601 493.864 42.0266 504 51C508.814 56.8454 512.242 62.7737 512.263 70.4699C512.271 71.5628 512.278 72.6557 512.286 73.7816C512.284 74.9767 512.283 76.1719 512.281 77.4032C512.29 79.3141 512.29 79.3141 512.299 81.2637C512.315 84.7979 512.319 88.3321 512.32 91.8664C512.324 95.6791 512.339 99.4918 512.352 103.305C512.38 111.642 512.392 119.979 512.4 128.316C512.406 133.524 512.414 138.732 512.423 143.94C512.448 158.366 512.468 172.793 512.475 187.219C512.476 188.142 512.476 189.066 512.476 190.017C512.477 190.942 512.477 191.867 512.478 192.821C512.479 194.696 512.48 196.571 512.48 198.446C512.481 199.376 512.481 200.306 512.482 201.264C512.49 216.326 512.525 231.388 512.571 246.45C512.619 261.922 512.644 277.395 512.646 292.867C512.648 301.551 512.659 310.234 512.696 318.918C512.726 326.314 512.737 333.71 512.72 341.107C512.712 344.877 512.714 348.648 512.742 352.418C512.772 356.515 512.756 360.611 512.735 364.708C512.751 365.887 512.767 367.067 512.784 368.282C512.659 378.796 509.213 387.142 501.688 394.562C493.029 402.231 482.077 401.417 471.281 401.341C469.595 401.34 467.909 401.34 466.223 401.342C461.668 401.343 457.113 401.325 452.558 401.304C447.789 401.285 443.02 401.284 438.252 401.28C429.232 401.271 420.212 401.246 411.191 401.216C400.918 401.182 390.645 401.166 380.372 401.151C359.248 401.12 338.124 401.065 317 401C317 414.53 317 428.06 317 442C328.623 441.881 328.623 441.881 340.245 441.73C341.709 441.721 343.173 441.713 344.637 441.707C345.764 441.684 345.764 441.684 346.915 441.661C352.915 441.658 356.015 443.07 360.25 447.187C362.452 450.727 363.196 453.884 363 458C361.431 463.23 359.535 465.977 355 469C351.953 470.524 348.778 470.148 345.435 470.147C344.645 470.151 343.856 470.155 343.042 470.158C340.381 470.169 337.72 470.173 335.06 470.177C333.158 470.183 331.256 470.19 329.354 470.197C324.176 470.214 318.998 470.225 313.821 470.233C310.587 470.238 307.354 470.244 304.121 470.251C294.009 470.27 283.897 470.284 273.786 470.292C262.105 470.302 250.424 470.328 238.743 470.369C229.721 470.399 220.698 470.414 211.676 470.417C206.284 470.419 200.893 470.428 195.501 470.453C190.429 470.477 185.357 470.481 180.284 470.471C178.422 470.47 176.561 470.477 174.699 470.49C172.157 470.508 169.615 470.501 167.073 470.488C166.337 470.499 165.601 470.51 164.843 470.521C158.879 470.446 155.458 468.288 151.188 464.312C148.965 459.984 148.282 455.455 149.66 450.742C151.689 446.291 153.502 444.161 158 442C160.865 441.748 163.506 441.649 166.363 441.707C167.417 441.712 167.417 441.712 168.493 441.716C171.099 441.732 173.706 441.774 176.312 441.812C182.149 441.874 187.986 441.936 194 442C194 428.47 194 414.94 194 401C188.908 401.021 183.816 401.042 178.569 401.063C161.737 401.13 144.906 401.174 128.074 401.207C117.87 401.228 107.666 401.256 97.4617 401.302C88.5646 401.342 79.6677 401.367 70.7706 401.376C66.0624 401.382 61.3544 401.394 56.6463 401.423C52.2083 401.45 47.7706 401.458 43.3324 401.452C41.71 401.454 40.0875 401.461 38.4651 401.477C27.3196 401.578 17.1946 401.143 8.5625 393.25C3.19277 387.363 -0.115365 380.8 -0.139805 372.776C-0.145496 371.687 -0.151187 370.598 -0.157051 369.477C-0.158231 368.276 -0.15941 367.075 -0.160625 365.837C-0.165713 364.565 -0.170802 363.293 -0.176044 361.982C-0.18996 358.443 -0.197537 354.905 -0.204018 351.366C-0.210387 348.332 -0.220455 345.298 -0.230576 342.265C-0.263911 332.268 -0.285426 322.271 -0.303776 312.274C-0.308571 309.67 -0.313554 307.066 -0.318581 304.462C-0.349557 288.29 -0.376242 272.117 -0.393002 255.945C-0.396951 252.198 -0.400953 248.452 -0.405025 244.705C-0.406034 243.774 -0.407042 242.842 -0.408081 241.883C-0.425077 226.808 -0.466172 211.733 -0.517048 196.658C-0.568865 181.177 -0.597949 165.696 -0.605198 150.214C-0.609856 141.524 -0.624555 132.834 -0.66494 124.143C-0.699304 116.74 -0.713154 109.336 -0.700516 101.932C-0.694703 98.1575 -0.698453 94.3833 -0.728687 90.6086C-0.761268 86.5071 -0.746849 82.4071 -0.728252 78.3055C-0.745047 77.1247 -0.76184 75.9438 -0.779144 74.7272C-0.667386 64.8319 2.43098 56.0887 9.5625 49C20.0506 40.9005 33.3297 41.4269 45.8835 41.4988ZM28 71C27.9794 120.479 27.9588 169.959 27.9375 220.937C27.9284 236.59 27.9193 252.243 27.9099 268.371C27.9066 282.339 27.9066 282.339 27.9046 296.307C27.9036 302.554 27.8999 308.801 27.8944 315.047C27.8881 322.242 27.8852 329.437 27.8866 336.632C27.8872 340.317 27.8862 344.001 27.8808 347.686C27.8751 351.621 27.877 355.556 27.8797 359.491C27.8768 360.655 27.8739 361.819 27.8709 363.018C27.8729 364.065 27.8749 365.113 27.877 366.192C27.8766 367.103 27.8762 368.014 27.8758 368.952C27.7725 370.993 27.7725 370.993 29 372C31.4129 372.1 33.7971 372.134 36.2105 372.126C37.3616 372.128 37.3616 372.128 38.5359 372.13C41.1403 372.134 43.7447 372.13 46.3491 372.127C48.2219 372.128 50.0947 372.13 51.9676 372.132C57.1397 372.136 62.3118 372.134 67.4839 372.131C73.0518 372.128 78.6197 372.132 84.1876 372.135C95.1052 372.139 106.023 372.138 116.941 372.135C125.809 372.133 134.678 372.133 143.547 372.134C144.806 372.134 146.066 372.134 147.364 372.134C149.922 372.135 152.48 372.135 155.039 372.135C178.374 372.138 201.71 372.135 225.046 372.13C246.367 372.125 267.688 372.126 289.01 372.13C312.942 372.136 336.874 372.138 360.806 372.135C363.355 372.134 365.904 372.134 368.453 372.134C369.708 372.134 370.962 372.133 372.255 372.133C381.119 372.132 389.982 372.134 398.846 372.136C409.64 372.139 420.433 372.138 431.227 372.133C436.74 372.13 442.253 372.129 447.766 372.133C452.804 372.136 457.842 372.134 462.88 372.129C464.711 372.128 466.542 372.128 468.373 372.131C470.845 372.134 473.317 372.131 475.789 372.126C476.515 372.128 477.24 372.131 477.988 372.133C481.276 372.404 481.276 372.404 484 371C484.097 369.4 484.124 367.795 484.123 366.192C484.125 365.144 484.127 364.097 484.129 363.018C484.126 361.854 484.123 360.69 484.12 359.491C484.121 358.268 484.122 357.045 484.123 355.785C484.124 352.368 484.121 348.951 484.116 345.534C484.112 341.801 484.113 338.069 484.114 334.336C484.114 327.081 484.11 319.826 484.103 312.57C484.096 304.183 484.095 295.796 484.095 287.409C484.089 265.252 484.075 243.095 484.062 220.937C484.042 171.458 484.021 121.979 484 71C333.52 71 183.04 71 28 71Z" fill="white"/>
    </g>
    <defs>
    <clipPath id="clip0_196_6">
    <rect width="512" height="512" fill="white"/>
    </clipPath>
    </defs>
    </svg>

    ]]
    
    local fogo = [[
    <svg width="296" height="385" viewBox="0 0 296 385" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M189 0C188.608 1.13437 188.216 2.26875 187.812 3.4375C187.202 5.28957 186.599 7.14415 186 9C185.802 9.6115 185.604 10.223 185.399 10.853C175.987 40.2288 176.979 69.278 190.312 97.25C197.852 111.725 208.195 123.056 221 133C221.69 133.539 222.38 134.077 223.091 134.632C225.414 136.444 227.738 138.254 230.062 140.062C230.85 140.675 231.637 141.288 232.448 141.919C235.57 144.346 238.693 146.769 241.852 149.148C247.257 153.289 252.105 157.903 256.938 162.688C257.589 163.33 258.241 163.973 258.913 164.635C262.154 167.898 264.79 170.927 267 175C267.858 176.138 268.733 177.264 269.625 178.375C290.034 205.469 298.44 238.641 294.28 272.245C289.234 306.406 270.647 337.369 243 358C238.776 360.88 234.456 363.494 230 366C228.946 366.596 227.891 367.191 226.805 367.805C203.045 380.443 177.784 384.331 151.188 384.438C150.376 384.444 149.565 384.45 148.73 384.457C107.929 384.656 71.795 369.796 42.75 341.125C32.0582 330.278 23.906 318.561 17 305C16.6843 304.384 16.3687 303.767 16.0435 303.132C-2.14221 266.799 -4.1423 223.181 8.51514 184.805C17.2684 159.714 30.9454 137.649 51 120C51.66 120 52.32 120 53 120C52.8299 120.548 52.6597 121.096 52.4844 121.66C51.6363 124.434 50.8165 127.216 50 130C49.6636 131.124 49.3271 132.248 48.9805 133.406C40.9767 161.464 43.0603 190.336 56.7656 216.352C58.4405 219.286 60.1806 222.153 62 225C62.455 225.723 62.9101 226.446 63.3789 227.191C65.7959 230.821 67.91 233.383 72 235C76.6421 235.589 79.5966 235.735 83.4375 232.938C86.5964 229.316 86.8299 227.777 87 223C86.2122 219.526 85.0154 216.225 83.8125 212.875C78.9165 198.411 75.4506 183.322 75 168C74.9693 167.041 74.9693 167.041 74.938 166.063C73.6298 119.164 89.9113 74.6761 121.903 40.2402C137.17 24.1357 165.281 0 189 0ZM158 172C151.002 192.62 154.321 211.176 159 232C162.977 249.794 161.812 265.359 151.973 281.215C143.433 293.272 131.571 299.86 118 305C125.086 314.812 139.356 321.438 151 324C168.59 325.731 183.478 321.894 197.586 311.004C208.881 301.49 217.428 286.887 219 272C220.13 251.781 215.214 237.142 201.719 221.926C199.02 219.022 196.278 216.393 193.23 213.867C179.163 202.091 169.413 189.871 160.297 174.043C159.869 173.369 159.441 172.695 159 172C158.67 172 158.34 172 158 172Z" fill="white"/>
    </svg>

    ]]
    
     local background1
     local x,y = guiGetScreenSize()
     background1 = svgCreate(500,500, background)
    
     local background2
     local x,y = guiGetScreenSize()
     background2 = svgCreate(500,500, selfPlayer)
     
     local background3
     local x,y = guiGetScreenSize()
     background3 = svgCreate(500,500, foguete)
    
     local background4
     local x,y = guiGetScreenSize()
     background4 = svgCreate(500,500, carro)
    
     local background5
     local x,y = guiGetScreenSize()
     background5 = svgCreate(500,500, players)
    
     local background6
     local x,y = guiGetScreenSize()
     background6 = svgCreate(500,500, bomba)
     
     local background7
     local x,y = guiGetScreenSize()
     background7 = svgCreate(500,500, olho)
    
     local background8
     local x,y = guiGetScreenSize()
     background8 = svgCreate(500,500, seringa)
    
     local background9
     local x,y = guiGetScreenSize()
     background9 = svgCreate(500,500, settings)
    
     local background10
     local x,y = guiGetScreenSize()
     background10 = svgCreate(500,500, user)
     
     local background11
     local x,y = guiGetScreenSize()
     background11 = svgCreate(500,500, computador)
    
     local background12
     local x,y = guiGetScreenSize()
     background12 = svgCreate(500,500, fogo)
    
    local SharkMenu = false
    local toggleKey = "delete"
    local selectedTab = 1
    local IsTab1Visible = 1
    local IsTab1Visible2 = 1
    local x,y = guiGetScreenSize() 
    
    local tabAreas = {
        {x = 742, y = 227, width = 68, height = 47},  -- Área da primeira aba
        {x = 742, y = 284, width = 68, height = 47},  -- Área da segunda aba
        {x = 742, y = 341, width = 68, height = 47},  -- Área da terça aba
        {x = 742, y = 398, width = 68, height = 47},  -- Área da quarta aba
        {x = 742, y = 455, width = 68, height = 47},  -- Área da quinta aba
        {x = 742, y = 512, width = 68, height = 47},  -- Área da sexta aba
        {x = 742, y = 569, width = 68, height = 47},  -- Área da setima aba
        {x = 742, y = 626, width = 68, height = 47},  -- Área da oitava aba
    }
    
    local switches = {
        { id = 1, x = 1365, y = 234, width = 50, height = 20, selectedTab = 1, state = false },
        { id = 2, x = 1365, y = 291, width = 50, height = 20, selectedTab = 1, state = false },
        { id = 3, x = 1365, y = 348, width = 50, height = 20, selectedTab = 1, state = false },
        { id = 4, x = 1365, y = 408, width = 50, height = 20, selectedTab = 1, state = false },
        { id = 5, x = 1365, y = 468, width = 50, height = 20, selectedTab = 1, state = false },
    }
    
    -- Função para desenhar um retângulo com cantos arredondados
    function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI)
        dxDrawRectangle(x, y, width, height, color, postGUI)  -- Desenha o retângulo principal
    end
    
    -- Função para desenhar os switches
    function drawSwitch(x, y, width, height, state)
        -- Desenha a borda do switch
        dxDrawRoundedRectangle(x - 1, y - 1, width + 2, height + 2, 9, tocolor(44, 44, 44, 255), false)
    
        -- Desenha o fundo do switch
        dxDrawRoundedRectangle(x, y, width, height, 9, tocolor(16, 16, 16, 255), false)
    
        -- Calcula a posição x da bolinha (handle) com base no estado do switch
        local handleX
        if state then
            handleX = x + width - 19 -- Posição para ligado
        else
            handleX = x + 4 -- Posição para desligado
        end
    
        -- Determina a cor da bolinha baseada no estado do switch
        local handleColor
        if state then
            handleColor = tocolor(0, 149, 249, 255) -- Cor azul quando ligado
        else
            handleColor = tocolor(169, 169, 169, 255) -- Cor cinza quando desligado
        end
    
        dxDrawRoundedRectangle(handleX, y + 4, 15, 14, 6, handleColor, false) -- Bolinha com a cor baseada no estado
    end
    
    function checkSwitchClick(cursorX, cursorY)
        for i, switch in ipairs(switches) do
            -- Ajusta a posição e as dimensões usando calculatePosition
            local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
        
            -- Verifica se o clique ocorreu sobre este switch na aba correta
            if cursorX >= switchX and cursorX <= switchX + switchWidth and
               cursorY >= switchY and cursorY <= switchY + switchHeight and
               switch.selectedTab == selectedTab then
                -- Alterna o estado para o oposto
                switch.state = not switch.state
                playSoundFrontEnd(37)
                
                -- Envia uma notificação para ativação/desativação do switch
                notifySwitchState(switch.id, switch.state)
            end
        end
    end
    

    function notifySwitchState(switchId, state)
        local message
        local color
    
        -- Define a mensagem e a cor com base no ID do switch e seu estado
        if switchId == 1 then
            message = state and "GodMode ativado." or "GodMode desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 2 then
            message = state and "Anti Fogo ativado." or "Anti Fogo desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 3 then
            message = state and "Noragdoll ativado." or "Noragdoll desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 4 then
            message = state and "Invisivel ativado." or "Invisivel desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 5 then
            message = state and "Stamina Infinita ativado." or "Stamina Infinita desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 6 then
            message = state and "Aimbot ativado." or "Aimbot desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 7 then
            message = state and "Fov ativado." or "Fov desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 8 then
            message = state and "Incluir peds ativado." or "Incluir peds desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 9 then
            message = state and "Verificar visibilidade ativado." or "Verificar visibilidade desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 10 then
            message = state and "Fast reload ativado." or "Fast reload desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 11 then
            message = state and "Bullet tracer ativado." or "Bullet tracer desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 12 then
            message = state and "Esp ativado." or "Esp desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 13 then
            message = state and "Esp Names ativado." or "Esp Names desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 14 then
            message = state and "Esp Healthbar ativado." or "Esp Healthbar desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 15 then
            message = state and "Esp Skeleton ativado." or "Esp Skeleton desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 16 then
            message = state and "Esp Lines ativado." or "Esp Lines desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 17 then
            message = state and "Esp Box ativado." or "Esp Box desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 21 then
            message = state and "Esp Corner ativado." or "Esp Corner desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 18 then
            message = state and "Esp Skeleton ADM ativado." or "Esp Skeleton ADM desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 19 then
            message = state and "Esp Lines ADM ativado." or "Esp Lines ADM desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        elseif switchId == 20 then
            message = state and "Mostrar lista ADM ativado." or "Mostrar lista ADM desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        else
            message = state and "Switch desconhecido ativado." or "Switch desconhecido desativado."
            color = state and {0, 149, 249} or {0, 149, 249}
        end
    
        -- Exibe a notificação
        addNotification(message, color)
    end

    -- Função para desenhar todos os switches
    function drawAllSwitches0()
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 1 then
            for _, switch in ipairs(switches) do
                -- Ajusta a posição e as dimensões usando calculatePosition
                local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
            
                -- Desenha o switch
                drawSwitch(switchX, switchY, switchWidth, switchHeight, switch.state)
            end
        end
    end
    
    -- Adiciona o evento para verificar o clique do mouse
    addEventHandler("onClientClick", root, function(button, state, cursorX, cursorY)
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 1 and button == "left" and state == "down" then
            checkSwitchClick(cursorX, cursorY)
        end
    end)
    
    -- Exemplo de como você pode atualizar a aba selecionada (pode ser feito conforme sua lógica de interface)
    function setSelectedTab(tab)
        selectedTab = tab
    end
    
    local switches2 = {
        { id = 6, x = 1365, y = 234, width = 50, height = 20, selectedTab = 2, state = false },
        { id = 7, x = 1365, y = 348, width = 50, height = 20, selectedTab = 2, state = false },
        { id = 8, x = 1365, y = 408, width = 50, height = 20, selectedTab = 2, state = false },
        { id = 9, x = 1365, y = 528, width = 50, height = 20, selectedTab = 2, state = false },
    }
    
    -- Função para desenhar um retângulo com cantos arredondados
    function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI)
        dxDrawRectangle(x, y, width, height, color, postGUI)  -- Desenha o retângulo principal
    end
    
    -- Função para desenhar os switches
    function drawSwitch2(x, y, width, height, state)
        -- Desenha a borda do switch
        dxDrawRoundedRectangle(x - 1, y - 1, width + 2, height + 2, 9, tocolor(44, 44, 44, 255), false)
    
        -- Desenha o fundo do switch
        dxDrawRoundedRectangle(x, y, width, height, 9, tocolor(16, 16, 16, 255), false)
    
        -- Calcula a posição x da bolinha (handle) com base no estado do switch
        local handleX
        if state then
            handleX = x + width - 19 -- Posição para ligado
        else
            handleX = x + 4 -- Posição para desligado
        end
    
        -- Determina a cor da bolinha baseada no estado do switch
        local handleColor
        if state then
            handleColor = tocolor(0, 149, 249, 255) -- Cor azul quando ligado
        else
            handleColor = tocolor(169, 169, 169, 255) -- Cor cinza quando desligado
        end
    
        dxDrawRoundedRectangle(handleX, y + 4, 15, 14, 6, handleColor, false) -- Bolinha com a cor baseada no estado
    end
    
    -- Função para verificar o clique nos switches
    function checkSwitchClick2(cursorX, cursorY)
        for i, switch in ipairs(switches2) do
            -- Ajusta a posição e as dimensões usando calculatePosition
            local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
    
            -- Verifica se o clique ocorreu sobre este switch na aba correta
            if cursorX >= switchX and cursorX <= switchX + switchWidth and
               cursorY >= switchY and cursorY <= switchY + switchHeight and
               switch.selectedTab == selectedTab then
                -- Alterna o estado para o oposto
                switch.state = not switch.state
                playSoundFrontEnd(37)

                notifySwitchState(switch.id, switch.state)
            end
        end
    end
    
    -- Função para desenhar todos os switches
    function drawAllSwitches2()
        if SharkMenu and selectedTab == 2 and IsTab1Visible2 == 1 then
            for _, switch in ipairs(switches2) do
                -- Ajusta a posição e as dimensões usando calculatePosition
                local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
    
                -- Desenha o switch
                drawSwitch2(switchX, switchY, switchWidth, switchHeight, switch.state)
            end
        end
    end
    
    -- Adiciona o evento para verificar o clique do mouse
    addEventHandler("onClientClick", root, function(button, state, cursorX, cursorY)
        if SharkMenu and selectedTab == 2 and IsTab1Visible2 == 1 and button == "left" and state == "down" then
            checkSwitchClick2(cursorX, cursorY)
        end
    end)
    
    -- Adiciona o evento para desenhar os switches
    addEventHandler("onClientRender", root, function()
        drawAllSwitches2()
    end)    
    
    
    local switches4 = {
        { id = 12, x = 1079, y = 263, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 18, x = 1079, y = 578, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 19, x = 1079, y = 613, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 20, x = 1079, y = 645, width = 46, height = 18, selectedTab = 6, state = false },
    }
    
    -- Função para desenhar um retângulo com cantos arredondados
    function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI)
        dxDrawRectangle(x, y, width, height, color, postGUI)  -- Desenha o retângulo principal
    end
    
    -- Função para desenhar os switches
    function drawSwitch4(x, y, width, height, state)
        -- Desenha a borda do switch
        dxDrawRoundedRectangle(x - 1, y - 1, width + 2, height + 2, 9, tocolor(44, 44, 44, 255), false)
    
        -- Desenha o fundo do switch
        dxDrawRoundedRectangle(x, y, width, height, 9, tocolor(16, 16, 16, 255), false)
    
        -- Calcula a posição x da bolinha (handle) com base no estado do switch
        local handleX
        if state then
            handleX = x + width - 19 -- Posição para ligado
        else
            handleX = x + 4 -- Posição para desligado
        end
    
        -- Determina a cor da bolinha baseada no estado do switch
        local handleColor
        if state then
            handleColor = tocolor(0, 149, 249, 255) -- Cor azul quando ligado
        else
            handleColor = tocolor(169, 169, 169, 255) -- Cor cinza quando desligado
        end
    
        dxDrawRoundedRectangle(handleX, y + 4, 15, 14, 6, handleColor, false) -- Bolinha com a cor baseada no estado
    end
    
    -- Função para verificar o clique nos switches
    function checkSwitchClick4(cursorX, cursorY)
        for i, switch in ipairs(switches4) do
            -- Ajusta a posição e as dimensões usando calculatePosition
            local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
    
            -- Verifica se o clique ocorreu sobre este switch na aba correta
            if cursorX >= switchX and cursorX <= switchX + switchWidth and
               cursorY >= switchY and cursorY <= switchY + switchHeight and
               switch.selectedTab == selectedTab then
                -- Alterna o estado para o oposto
                switch.state = not switch.state
                playSoundFrontEnd(37)

                notifySwitchState(switch.id, switch.state)
            end
        end
    end
    
    -- Função para desenhar todos os switches
    function drawAllSwitches4()
        if SharkMenu and selectedTab == 6 then
            for _, switch in ipairs(switches4) do
                -- Ajusta a posição e as dimensões usando calculatePosition
                local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
    
                -- Desenha o switch
                drawSwitch4(switchX, switchY, switchWidth, switchHeight, switch.state)
            end
        end
    end
    
    -- Adiciona o evento para verificar o clique do mouse
    addEventHandler("onClientClick", root, function(button, state, cursorX, cursorY)
        if SharkMenu and selectedTab == 6 and button == "left" and state == "down" then
            checkSwitchClick4(cursorX, cursorY)
        end
    end)
    

    local switches00 = {
        { id = 13, x = 1079, y = 298, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 14, x = 1079, y = 333, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 15, x = 1079, y = 369, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 16, x = 1079, y = 407, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 17, x = 1079, y = 446, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 21, x = 1079, y = 484, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 22, x = 1374, y = 299, width = 46, height = 18, selectedTab = 6, state = false },
        { id = 23, x = 1374, y = 334, width = 46, height = 18, selectedTab = 6, state = false },
    }
    
    -- Função para desenhar um retângulo com cantos arredondados
    function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI)
        dxDrawRectangle(x, y, width, height, color, postGUI)  -- Desenha o retângulo principal
    end
    
    -- Função para desenhar os switches
    function drawSwitchEsp(x, y, width, height, state)
        -- Desenha a borda do switch
        dxDrawRoundedRectangle(x - 1, y - 1, width + 2, height + 2, 9, tocolor(44, 44, 44, 255), false)
    
        -- Desenha o fundo do switch
        dxDrawRoundedRectangle(x, y, width, height, 9, tocolor(16, 16, 16, 255), false)
    
        -- Calcula a posição x da bolinha (handle) com base no estado do switch
        local handleX
        if state then
            handleX = x + width - 19 -- Posição para ligado
        else
            handleX = x + 4 -- Posição para desligado
        end
    
        -- Determina a cor da bolinha baseada no estado do switch
        local handleColor
        if state then
            handleColor = tocolor(0, 149, 249, 255) -- Cor azul quando ligado
        else
            handleColor = tocolor(169, 169, 169, 255) -- Cor cinza quando desligado
        end
    
        dxDrawRoundedRectangle(handleX, y + 4, 15, 14, 6, handleColor, false) -- Bolinha com a cor baseada no estado
    end
    
    -- Função para verificar o clique nos switches
    function checkSwitchClickEsp(cursorX, cursorY)
        for i, switch in ipairs(switches00) do
            -- Ajusta a posição e as dimensões usando calculatePosition
            local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
        
            -- Verifica se o clique ocorreu sobre este switch na aba correta
            if cursorX >= switchX and cursorX <= switchX + switchWidth and
               cursorY >= switchY and cursorY <= switchY + switchHeight and
               switch.selectedTab == selectedTab then
                -- Alterna o estado para o oposto
                switch.state = not switch.state
                playSoundFrontEnd(37)

                notifySwitchState(switch.id, switch.state)
                
                -- Atualiza a variável espBox com base no estado do switch 15
                if switch.id == 15 then
                    espBox = switch.state
                end
            end
        end
    end
    
    -- Função para desenhar todos os switches
    function drawAllSwitches()
        if SharkMenu and selectedTab == 6 then
            for _, switch in ipairs(switches00) do
                -- Ajusta a posição e as dimensões usando calculatePosition
                local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
    
                -- Desenha o switch
                drawSwitchEsp(switchX, switchY, switchWidth, switchHeight, switch.state)
            end
        end
    end
    
    -- Adiciona o evento para verificar o clique do mouse
    addEventHandler("onClientClick", root, function(button, state, cursorX, cursorY)
        if selectedTab == 6 and button == "left" and state == "down" then
            checkSwitchClickEsp(cursorX, cursorY)
        end
    end)
    
    -- Adiciona o evento para desenhar os switches
    addEventHandler("onClientRender", root, function()
        if selectedTab == 6 then
            drawAllSwitches()
        end
    end)
    

    local switches3 = {
        { id = 10, x = 1365, y = 234, width = 50, height = 20, selectedTab = 2, state = false },
        { id = 11, x = 1365, y = 291, width = 50, height = 20, selectedTab = 2, state = false },
    }
    
    -- Função para desenhar um retângulo com cantos arredondados
    function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI)
        dxDrawRectangle(x, y, width, height, color, postGUI)  -- Desenha o retângulo principal
    end
    
    -- Função para desenhar os switches
    function drawSwitch3(x, y, width, height, state)
        -- Desenha a borda do switch
        dxDrawRoundedRectangle(x - 1, y - 1, width + 2, height + 2, 9, tocolor(44, 44, 44, 255), false)
    
        -- Desenha o fundo do switch
        dxDrawRoundedRectangle(x, y, width, height, 9, tocolor(16, 16, 16, 255), false)
    
        -- Calcula a posição x da bolinha (handle) com base no estado do switch
        local handleX
        if state then
            handleX = x + width - 19 -- Posição para ligado
        else
            handleX = x + 4 -- Posição para desligado
        end
    
        -- Determina a cor da bolinha baseada no estado do switch
        local handleColor
        if state then
            handleColor = tocolor(0, 149, 249, 255) -- Cor azul quando ligado
        else
            handleColor = tocolor(169, 169, 169, 255) -- Cor cinza quando desligado
        end
    
        dxDrawRoundedRectangle(handleX, y + 4, 15, 14, 6, handleColor, false) -- Bolinha com a cor baseada no estado
    end
    
    -- Função para calcular a posição ajustada dos switches
    function calculatePosition(x, y, width, height)
        local adjustedX = x
        local adjustedY = y
        local adjustedWidth = width
        local adjustedHeight = height
        -- Aqui você pode adicionar qualquer lógica de ajuste específica
        return adjustedX, adjustedY, adjustedWidth, adjustedHeight
    end
    
    -- Função para verificar o clique nos switches
    function checkSwitchClick3(cursorX, cursorY)
        for i, switch in ipairs(switches3) do
            -- Ajusta a posição e as dimensões usando calculatePosition
            local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
        
            -- Verifica se o clique ocorreu sobre este switch na aba correta
            if cursorX >= switchX and cursorX <= switchX + switchWidth and
               cursorY >= switchY and cursorY <= switchY + switchHeight and
               switch.selectedTab == selectedTab then
                -- Alterna o estado para o oposto
                switch.state = not switch.state
                playSoundFrontEnd(37)

                notifySwitchState(switch.id, switch.state)
            end
        end
    end
    
    -- Função para desenhar todos os switches
    function drawAllSwitches3()
        if SharkMenu and selectedTab == 2 and IsTab1Visible2 == 2 then
            for _, switch in ipairs(switches3) do
                -- Ajusta a posição e as dimensões usando calculatePosition
                local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
        
                -- Desenha o switch
                drawSwitch3(switchX, switchY, switchWidth, switchHeight, switch.state)
            end
        end
    end
    
    -- Adiciona o evento para verificar o clique do mouse
    addEventHandler("onClientClick", root, function(button, state, cursorX, cursorY)
        if SharkMenu and selectedTab == 2 and IsTab1Visible2 == 2 and button == "left" and state == "down" then
            checkSwitchClick3(cursorX, cursorY)
        end
    end)
    
    -- Adiciona o evento para desenhar os switches
    addEventHandler("onClientRender", root, function()
        if selectedTab == 2 then
            drawAllSwitches3()
        end
    end)
    
    local switches7 = {
        { id = 24, x = 1365, y = 348, width = 50, height = 20, selectedTab = 1, state = false },
    }
    
    -- Função para desenhar um retângulo com cantos arredondados
    function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI)
        dxDrawRectangle(x, y, width, height, color, postGUI)  -- Desenha o retângulo principal
    end
    
    -- Função para desenhar os switches
    function drawSwitch7(x, y, width, height, state)
        -- Desenha a borda do switch
        dxDrawRoundedRectangle(x - 1, y - 1, width + 2, height + 2, 9, tocolor(44, 44, 44, 255), false)
    
        -- Desenha o fundo do switch
        dxDrawRoundedRectangle(x, y, width, height, 9, tocolor(16, 16, 16, 255), false)
    
        -- Calcula a posição x da bolinha (handle) com base no estado do switch
        local handleX
        if state then
            handleX = x + width - 19 -- Posição para ligado
        else
            handleX = x + 4 -- Posição para desligado
        end
    
        -- Determina a cor da bolinha baseada no estado do switch
        local handleColor
        if state then
            handleColor = tocolor(0, 149, 249, 255) -- Cor azul quando ligado
        else
            handleColor = tocolor(169, 169, 169, 255) -- Cor cinza quando desligado
        end
    
        dxDrawRoundedRectangle(handleX, y + 4, 15, 14, 6, handleColor, false) -- Bolinha com a cor baseada no estado
    end
    
    -- Função para calcular a posição ajustada dos switches
    function calculatePosition(x, y, width, height)
        local adjustedX = x
        local adjustedY = y
        local adjustedWidth = width
        local adjustedHeight = height
        -- Aqui você pode adicionar qualquer lógica de ajuste específica
        return adjustedX, adjustedY, adjustedWidth, adjustedHeight
    end
    
    -- Função para verificar o clique nos switches
    function checkSwitchClick7(cursorX, cursorY)
        for i, switch in ipairs(switches7) do
            -- Ajusta a posição e as dimensões usando calculatePosition
            local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
        
            -- Verifica se o clique ocorreu sobre este switch na aba correta
            if cursorX >= switchX and cursorX <= switchX + switchWidth and
               cursorY >= switchY and cursorY <= switchY + switchHeight and
               switch.selectedTab == selectedTab then
                -- Alterna o estado para o oposto
                switch.state = not switch.state
                playSoundFrontEnd(37)

                notifySwitchState(switch.id, switch.state)
            end
        end
    end
    
    -- Função para desenhar todos os switches
    function drawAllSwitches7()
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 2 then
            for _, switch in ipairs(switches7) do
                -- Ajusta a posição e as dimensões usando calculatePosition
                local switchX, switchY, switchWidth, switchHeight = calculatePosition(switch.x, switch.y, switch.width, switch.height)
        
                -- Desenha o switch
                drawSwitch7(switchX, switchY, switchWidth, switchHeight, switch.state)
            end
        end
    end
    
    -- Adiciona o evento para verificar o clique do mouse
    addEventHandler("onClientClick", root, function(button, state, cursorX, cursorY)
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 2 and button == "left" and state == "down" then
            checkSwitchClick7(cursorX, cursorY)
        end
    end)
    
    function isCursorOver(x, y, width, height)
        local mouseX, mouseY = getCursorPosition()
        if mouseX and mouseY then
            local screenX, screenY = guiGetScreenSize()
            local mouseX, mouseY = mouseX * screenX, mouseY * screenY
            return (mouseX >= x and mouseX <= x + width and mouseY >= y and mouseY <= y + height)
        end
        return false
    end
    
    function dxDrawRoundedRectangle(x, y, width, height, radius, color, postGUI, subPixelPositioning)
        local radius2 = radius * 2
        local x2, y2 = x + width, y + height
        dxDrawRectangle(x + radius, y, width - radius2, height, color, postGUI, subPixelPositioning) 
        dxDrawRectangle(x, y + radius, radius, height - radius2, color, postGUI, subPixelPositioning) 
        dxDrawRectangle(x2 - radius, y + radius, radius, height - radius2, color, postGUI, subPixelPositioning) 
        dxDrawRectangle(x + radius, y2 - radius, width - radius2, radius, color, postGUI, subPixelPositioning) 
        dxDrawCircle(x + radius, y + radius, radius, 180, 270, color, color, 16, 1, postGUI) 
        dxDrawCircle(x2 - radius, y + radius, radius, 270, 360, color, color, 16, 1, postGUI) 
        dxDrawCircle(x + radius, y2 - radius, radius, 90, 180, color, color, 16, 1, postGUI) 
        dxDrawCircle(x2 - radius, y2 - radius, radius, 0, 90, color, color, 16, 1, postGUI) 
    end
    
    function onClick(button, state, absoluteX, absoluteY)
        if button == "left" and state == "down" and SharkMenu then
            for i, area in ipairs(tabAreas) do
                -- Calculando a posição e o tamanho proporcional para a área clicável
                local areaX, areaY, areaWidth, areaHeight = calculatePosition(area.x, area.y, area.width, area.height)
                
                -- Verificando se o clique está dentro da área
                if absoluteX >= areaX and absoluteX <= areaX + areaWidth and absoluteY >= areaY and absoluteY <= areaY + areaHeight then
                    selectedTab = i
                    break
                end
            end
        end
    end
    
    addEventHandler("onClientClick", root, onClick)
    
    local scrollValue = 0
    local scrollMin = 0
    local scrollMax = 100
    
    local scrollbarX, scrollbarY, scrollbarWidth, scrollbarHeight = calculatePosition(1160, 592, 236, 20)
    local thumbWidth = 7
    local thumbHeight = scrollbarHeight
    
    local isDragging = false
    local dragOffset = 0
    
    -- Função para desenhar a scrollbar
    function drawScrollbar()
        -- Desenhar o fundo da scrollbar
        local scrollbarX, scrollbarY, scrollbarWidth, scrollbarHeight = calculatePosition(1160, 592, 236, 20)
        dxDrawRectangle(scrollbarX, scrollbarY, scrollbarWidth, scrollbarHeight, tocolor(58, 58, 58, 255), false)
        -- Calcular a posição do thumb
        local thumbX = scrollbarX + ((scrollValue - scrollMin) / (scrollMax - scrollMin)) * (scrollbarWidth - thumbWidth)
        -- Desenhar o thumb
        dxDrawRoundedRectangle(thumbX, scrollbarY, thumbWidth, thumbHeight, 5,tocolor(0, 149, 249, 255), false)
        -- Desenhar o valor atual
        dxDrawText(tostring(scrollValue), scrollbarX, scrollbarY, scrollbarX + scrollbarWidth, scrollbarY + scrollbarHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
    end
    
    -- Função para atualizar o valor da scrollbar
    function updateScrollbarValue(absoluteX)
        local scrollbarX, scrollbarY, scrollbarWidth, scrollbarHeight = calculatePosition(1160, 592, 236, 20)
        local thumbX = absoluteX - (thumbWidth / 2)
        thumbX = math.max(scrollbarX, math.min(scrollbarX + scrollbarWidth - thumbWidth, thumbX))
        return math.floor((thumbX - scrollbarX) / (scrollbarWidth - thumbWidth) * (scrollMax - scrollMin) + scrollMin)
    end
    
    -- Função para verificar o clique na scrollbar
    function onClientClick(button, state, absoluteX, absoluteY)
        if selectedTab == 1 and IsTab1Visible == 1 and button == "left" and state == "down" then
            -- Verificar se o clique está dentro do thumb
            local scrollbarX, scrollbarY, scrollbarWidth, scrollbarHeight = calculatePosition(1160, 592, 236, 20)
            local thumbX = scrollbarX + ((scrollValue - scrollMin) / (scrollMax - scrollMin)) * (scrollbarWidth - thumbWidth)
            if absoluteX >= thumbX and absoluteX <= thumbX + thumbWidth and absoluteY >= scrollbarY and absoluteY <= scrollbarY + thumbHeight then
                isDragging = true
                dragOffset = absoluteX - thumbX
            -- Verificar se o clique está dentro da scrollbar, mas fora do thumb
            elseif absoluteX >= scrollbarX and absoluteX <= scrollbarX + scrollbarWidth and absoluteY >= scrollbarY and absoluteY <= scrollbarY + scrollbarHeight then
                dragOffset = thumbWidth / 2
                scrollValue = updateScrollbarValue(absoluteX)
                isDragging = true
                setPedArmor(localPlayer, scrollValue) 
            end
        elseif button == "left" and state == "up" then
            isDragging = false
        end
    end
    
    -- Função para mover o cursor
    function onClientCursorMove(_, _, absoluteX, absoluteY)
        if isDragging then
            scrollValue = updateScrollbarValue(absoluteX)
            setPedArmor(localPlayer, scrollValue) 
        end
    end
    
    addEventHandler("onClientClick", root, onClientClick)
    addEventHandler("onClientCursorMove", root, onClientCursorMove)
    
    local scrollValue4 = 60
    local scrollMin4 = 60
    local scrollMax4 = 300
    
    local scrollbarX4, scrollbarY4, scrollbarWidth4, scrollbarHeight4 = calculatePosition(1160, 297, 236, 20)
    local thumbWidth4 = 7
    local thumbHeight4 = scrollbarHeight4
    
    local isDragging4 = false
    local dragOffset4 = 0
    
    -- Função para desenhar a scrollbar
    function drawScrollbar4()
        local scrollbarX4, scrollbarY4, scrollbarWidth4, scrollbarHeight4 = calculatePosition(1160, 297, 236, 20)
        -- Desenhar o fundo da scrollbar
        dxDrawRectangle(scrollbarX4, scrollbarY4, scrollbarWidth4, scrollbarHeight4, tocolor(58, 58, 58, 255), false)
        
        -- Calcular a posição do thumb
        local thumbX4 = scrollbarX4 + ((scrollValue4 - scrollMin4) / (scrollMax4 - scrollMin4)) * (scrollbarWidth4 - thumbWidth4)
        
        -- Desenhar o thumb
        dxDrawRoundedRectangle(thumbX4, scrollbarY4, thumbWidth4, thumbHeight4, 5, tocolor(0, 149, 249, 255), false)
        
        -- Desenhar o valor atual
        dxDrawText(tostring(scrollValue4), scrollbarX4, scrollbarY4, scrollbarX4 + scrollbarWidth4, scrollbarY4 + scrollbarHeight4, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
    end
    
    -- Função para atualizar o valor da scrollbar
    function updateScrollbarValue4(absoluteX4)
        local scrollbarX4, scrollbarY4, scrollbarWidth4, scrollbarHeight4 = calculatePosition(1160, 297, 236, 20)
        local thumbX4 = absoluteX4 - (thumbWidth4 / 2)
        thumbX4 = math.max(scrollbarX4, math.min(scrollbarX4 + scrollbarWidth4 - thumbWidth4, thumbX4))
        return math.floor((thumbX4 - scrollbarX4) / (scrollbarWidth4 - thumbWidth4) * (scrollMax4 - scrollMin4) + scrollMin4)
    end
    
    -- Função para verificar o clique na scrollbar
    function onClientClick4(button, state, absoluteX4, absoluteY4)
        if selectedTab == 2 and IsTab1Visible2 == 1 and button == "left" and state == "down" then
            local scrollbarX4, scrollbarY4, scrollbarWidth4, scrollbarHeight4 = calculatePosition(1160, 297, 236, 20)
            -- Verificar se o clique está dentro do thumb
            local thumbX4 = scrollbarX4 + ((scrollValue4 - scrollMin4) / (scrollMax4 - scrollMin4)) * (scrollbarWidth4 - thumbWidth4)
            if absoluteX4 >= thumbX4 and absoluteX4 <= thumbX4 + thumbWidth4 and absoluteY4 >= scrollbarY4 and absoluteY4 <= scrollbarY4 + thumbHeight4 then
                isDragging4 = true
                dragOffset4 = absoluteX4 - thumbX4
            -- Verificar se o clique está dentro da scrollbar, mas fora do thumb
            elseif absoluteX4 >= scrollbarX4 and absoluteX4 <= scrollbarX4 + scrollbarWidth4 and absoluteY4 >= scrollbarY4 and absoluteY4 <= scrollbarY4 + scrollbarHeight4 then
                scrollValue4 = updateScrollbarValue4(absoluteX4)
                isDragging4 = true
            end
        elseif button == "left" and state == "up" then
            isDragging4 = false
        end
    end
    
    -- Função para mover o cursor
    function onClientCursorMove4(_, _, absoluteX4, absoluteY4)
        if isDragging4 then
            scrollValue4 = updateScrollbarValue4(absoluteX4)
        end
    end
    
    addEventHandler("onClientClick", root, onClientClick4)
    addEventHandler("onClientCursorMove", root, onClientCursorMove4)
    
    local scrollValue2 = 1
    local scrollMin2 = 0
    local scrollMax2 = 10
    
    local scrollbarX2, scrollbarY2, scrollbarWidth2, scrollbarHeight2 = calculatePosition(1160, 295, 255, 20)
    local thumbWidth2 = 7
    local thumbHeight2 = scrollbarHeight2
    
    local isDragging2 = false
    local dragOffset2 = 0
    
    -- Função para desenhar a scrollbar
    function drawScrollbar2()
        local scrollbarX2, scrollbarY2, scrollbarWidth2, scrollbarHeight2 = calculatePosition(1160, 295, 255, 20)
        -- Desenhar o fundo da scrollbar
        dxDrawRectangle(scrollbarX2, scrollbarY2, scrollbarWidth2, scrollbarHeight2, tocolor(58, 58, 58, 255), false)
        -- Calcular a posição do thumb
        local thumbX2 = scrollbarX2 + ((scrollValue2 - scrollMin2) / (scrollMax2 - scrollMin2)) * (scrollbarWidth2 - thumbWidth2)
        -- Desenhar o thumb
        dxDrawRoundedRectangle(thumbX2, scrollbarY2, thumbWidth2, thumbHeight2, 5,tocolor(0, 149, 249, 255), false)
        -- Desenhar o valor atual
        dxDrawText(tostring(scrollValue2), scrollbarX2, scrollbarY2, scrollbarX2 + scrollbarWidth2, scrollbarY2 + scrollbarHeight2, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
    end
    
    -- Função para atualizar o valor da scrollbar
    function updateScrollbarValue2(absoluteX2)
        local scrollbarX2, scrollbarY2, scrollbarWidth2, scrollbarHeight2 = calculatePosition(1160, 295, 255, 20)
        local thumbX2 = absoluteX2 - (thumbWidth2 / 2)
        thumbX2 = math.max(scrollbarX2, math.min(scrollbarX2 + scrollbarWidth2 - thumbWidth2, thumbX2))
        return math.floor((thumbX2 - scrollbarX2) / (scrollbarWidth2 - thumbWidth2) * (scrollMax2 - scrollMin2) + scrollMin2)
    end
    
    -- Função para verificar o clique na scrollbar
    function onClientClick2(button, state, absoluteX2, absoluteY2)
        if selectedTab == 1 and IsTab1Visible == 2 and button == "left" and state == "down" then
            -- Verificar se o clique está dentro do thumb
            local scrollbarX2, scrollbarY2, scrollbarWidth2, scrollbarHeight2 = calculatePosition(1160, 295, 255, 20)
            local thumbX2 = scrollbarX2 + ((scrollValue2 - scrollMin2) / (scrollMax2 - scrollMin2)) * (scrollbarWidth2 - thumbWidth2)
            if absoluteX2 >= thumbX2 and absoluteX2 <= thumbX2 + thumbWidth2 and absoluteY2 >= scrollbarY2 and absoluteY2 <= scrollbarY2 + thumbHeight2 then
                isDragging2 = true
                dragOffset2 = absoluteX2 - thumbX2
            -- Verificar se o clique está dentro da scrollbar, mas fora do thumb
            elseif absoluteX2 >= scrollbarX2 and absoluteX2 <= scrollbarX2 + scrollbarWidth2 and absoluteY2 >= scrollbarY2 and absoluteY2 <= scrollbarY2 + scrollbarHeight2 then
                dragOffset2 = thumbWidth2 / 2
                scrollValue2 = updateScrollbarValue2(absoluteX2)
                isDragging2 = true
            end
        elseif button == "left" and state == "up" then
            isDragging2 = false
        end
    end
    
    -- Função para mover o cursor
    function onClientCursorMove2(_, _, absoluteX2, absoluteY2)
        if isDragging2 then
            scrollValue2 = updateScrollbarValue2(absoluteX2)
        end
    end
    
    addEventHandler("onClientClick", root, onClientClick2)
    addEventHandler("onClientCursorMove", root, onClientCursorMove2)
    
    -- Parâmetros e estados para a scrollbar
    local scrollbar1 = {
        x = 1204,
        y = 245,
        width = 209,
        height = 19,
        scrollValue = 0,
        scrollMin = 0,
        scrollMax = 312,
        isDragging = false,
        dragOffset = 0
    }
    
    local thumbWidth1 = 7
    local thumbHeight1 = scrollbar1.height
    
    -- Função para desenhar a scrollbar
    function drawScrollbar1()
        local scrollbarX1, scrollbarY1, scrollbarWidth1, scrollbarHeight1 = calculatePosition(scrollbar1.x, scrollbar1.y, scrollbar1.width, scrollbar1.height)
        
        -- Desenhar o fundo da scrollbar
        dxDrawRectangle(scrollbarX1, scrollbarY1, scrollbarWidth1, scrollbarHeight1, tocolor(58, 58, 58, 255), false)
        
        -- Calcular a posição do thumb
        local thumbX1 = scrollbarX1 + ((scrollbar1.scrollValue - scrollbar1.scrollMin) / (scrollbar1.scrollMax - scrollbar1.scrollMin)) * (scrollbarWidth1 - thumbWidth1)
        
        -- Desenhar o thumb
        dxDrawRectangle(thumbX1, scrollbarY1, thumbWidth1, thumbHeight1, tocolor(0, 149, 249, 255), false)
        
        -- Desenhar o valor atual
        dxDrawText(tostring(scrollbar1.scrollValue), scrollbarX1, scrollbarY1 - 25, scrollbarX1 + scrollbarWidth1, scrollbarY1, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
    end
    
    -- Função para atualizar o valor da scrollbar
    function updateScrollbarValue1(absoluteX1)
        local scrollbarX1, scrollbarY1, scrollbarWidth1, scrollbarHeight1 = calculatePosition(scrollbar1.x, scrollbar1.y, scrollbar1.width, scrollbar1.height)
        local thumbX1 = absoluteX1 - (thumbWidth1 / 2)
        thumbX1 = math.max(scrollbarX1, math.min(scrollbarX1 + scrollbarWidth1 - thumbWidth1, thumbX1))
        return math.floor((thumbX1 - scrollbarX1) / (scrollbarWidth1 - thumbWidth1) * (scrollbar1.scrollMax - scrollbar1.scrollMin) + scrollbar1.scrollMin)
    end
    
    -- Função para verificar o clique na scrollbar
    function onClientClick1(button, state, absoluteX1, absoluteY1)
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 3 and button == "left" and state == "down" then
            local scrollbarX1, scrollbarY1, scrollbarWidth1, scrollbarHeight1 = calculatePosition(scrollbar1.x, scrollbar1.y, scrollbar1.width, scrollbar1.height)
            -- Verificar se o clique está dentro do thumb
            local thumbX1 = scrollbarX1 + ((scrollbar1.scrollValue - scrollbar1.scrollMin) / (scrollbar1.scrollMax - scrollbar1.scrollMin)) * (scrollbarWidth1 - thumbWidth1)
            if absoluteX1 >= thumbX1 and absoluteX1 <= thumbX1 + thumbWidth1 and absoluteY1 >= scrollbarY1 and absoluteY1 <= scrollbarY1 + thumbHeight1 then
                scrollbar1.isDragging = true
                scrollbar1.dragOffset = absoluteX1 - thumbX1
            -- Verificar se o clique está dentro da scrollbar, mas fora do thumb
            elseif absoluteX1 >= scrollbarX1 and absoluteX1 <= scrollbarX1 + scrollbarWidth1 and absoluteY1 >= scrollbarY1 and absoluteY1 <= scrollbarY1 + scrollbarHeight1 then
                scrollbar1.dragOffset = thumbWidth1 / 2
                scrollbar1.scrollValue = updateScrollbarValue1(absoluteX1)
                scrollbar1.isDragging = true
                updatePlayerSkin(scrollbar1.scrollValue) -- Atualiza a skin do jogador
            end
        elseif button == "left" and state == "up" then
            scrollbar1.isDragging = false
        end
    end
    
    -- Função para mover o cursor
    function onClientCursorMove1(_, _, absoluteX1, absoluteY1)
        if scrollbar1.isDragging then
            scrollbar1.scrollValue = updateScrollbarValue1(absoluteX1)
            updatePlayerSkin(scrollbar1.scrollValue) -- Atualiza a skin do jogador
            refreshPlayersList(scrollbar1.scrollValue)
        end
    end
    
    -- Função para atualizar a skin do jogador com base no valor da scrollbar
    function updatePlayerSkin(skinID)
        if skinID >= 0 and skinID <= 312 then
            setPedSkin(localPlayer, skinID)
        end
    end
    
    -- Adicionar handlers de eventos
    addEventHandler("onClientClick", root, onClientClick1)
    addEventHandler("onClientCursorMove", root, onClientCursorMove1)
    
    local scrollValue5 = 10
    local scrollMin5 = 10
    local scrollMax5 = 400
    
    local scrollbarX5, scrollbarY5, scrollbarWidth5, scrollbarHeight5 = calculatePosition(1250, 264, 180, 20)
    local thumbWidth5 = 7
    local thumbHeight5 = scrollbarHeight5
    
    local isDragging5 = false
    local dragOffset5 = 0
    
    -- Variáveis para a segunda scrollbar
    local scrollValue6 = 1
    local scrollMin6 = 1
    local scrollMax6 = 10
    
    local scrollbarX6, scrollbarY6, scrollbarWidth6, scrollbarHeight6 = calculatePosition(1250, 372, 180, 17)
    local thumbWidth6 = 7
    local thumbHeight6 = scrollbarHeight6
    
    local isDragging6 = false
    local dragOffset6 = 0
    
    -- Função para desenhar as scrollbars
    function drawScrollbars()
        -- Calcular posição e tamanho do thumb para a primeira scrollbar
        local scrollbarX5, scrollbarY5, scrollbarWidth5, scrollbarHeight5 = calculatePosition(1250, 264, 180, 20)
        local thumbX5 = scrollbarX5 + ((scrollValue5 - scrollMin5) / (scrollMax5 - scrollMin5)) * (scrollbarWidth5 - thumbWidth5)
        dxDrawRectangle(scrollbarX5, scrollbarY5, scrollbarWidth5, scrollbarHeight5, tocolor(58, 58, 58, 255), false)
        dxDrawRoundedRectangle(thumbX5, scrollbarY5, thumbWidth5, thumbHeight5, 5, tocolor(0, 149, 249, 255), false)
        dxDrawText(tostring(scrollValue5), scrollbarX5, scrollbarY5, scrollbarX5 + scrollbarWidth5, scrollbarY5 + scrollbarHeight5, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
    
        -- Calcular posição e tamanho do thumb para a segunda scrollbar
        local scrollbarX6, scrollbarY6, scrollbarWidth6, scrollbarHeight6 = calculatePosition(1250, 372, 180, 17)
        local thumbX6 = scrollbarX6 + ((scrollValue6 - scrollMin6) / (scrollMax6 - scrollMin6)) * (scrollbarWidth6 - thumbWidth6)
        dxDrawRectangle(scrollbarX6, scrollbarY6, scrollbarWidth6, scrollbarHeight6, tocolor(58, 58, 58, 255), false)
        dxDrawRoundedRectangle(thumbX6, scrollbarY6, thumbWidth6, thumbHeight6, 5, tocolor(0, 149, 249, 255), false)
        dxDrawText(tostring(scrollValue6), scrollbarX6, scrollbarY6, scrollbarX6 + scrollbarWidth6, scrollbarY6 + scrollbarHeight6, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
    end
    
    -- Função para atualizar o valor da scrollbar
    function updateScrollbarValue5(absoluteX5)
        local scrollbarX5, scrollbarY5, scrollbarWidth5, scrollbarHeight5 = calculatePosition(1250, 264, 180, 20)
        local thumbX5 = absoluteX5 - (thumbWidth5 / 2)
        thumbX5 = math.max(scrollbarX5, math.min(scrollbarX5 + scrollbarWidth5 - thumbWidth5, thumbX5))
        return math.floor((thumbX5 - scrollbarX5) / (scrollbarWidth5 - thumbWidth5) * (scrollMax5 - scrollMin5) + scrollMin5)
    end
    
    function updateScrollbarValue6(absoluteX6)
        local scrollbarX6, scrollbarY6, scrollbarWidth6, scrollbarHeight6 = calculatePosition(1250, 372, 180, 17)
        local thumbX6 = absoluteX6 - (thumbWidth6 / 2)
        thumbX6 = math.max(scrollbarX6, math.min(scrollbarX6 + scrollbarWidth6 - thumbWidth6, thumbX6))
        return math.floor((thumbX6 - scrollbarX6) / (scrollbarWidth6 - thumbWidth6) * (scrollMax6 - scrollMin6) + scrollMin6)
    end
    
    -- Função para verificar o clique nas scrollbars
    function onClientClick(button, state, absoluteX, absoluteY)
        if selectedTab == 6 and button == "left" and state == "down" then
            -- Verificar clique na primeira scrollbar
            local scrollbarX5, scrollbarY5, scrollbarWidth5, scrollbarHeight5 = calculatePosition(1250, 264, 180, 20)
            local thumbX5 = scrollbarX5 + ((scrollValue5 - scrollMin5) / (scrollMax5 - scrollMin5)) * (scrollbarWidth5 - thumbWidth5)
            if absoluteX >= thumbX5 and absoluteX <= thumbX5 + thumbWidth5 and absoluteY >= scrollbarY5 and absoluteY <= scrollbarY5 + scrollbarHeight5 then
                isDragging5 = true
                dragOffset5 = absoluteX - thumbX5
            elseif absoluteX >= scrollbarX5 and absoluteX <= scrollbarX5 + scrollbarWidth5 and absoluteY >= scrollbarY5 and absoluteY <= scrollbarY5 + scrollbarHeight5 then
                scrollValue5 = updateScrollbarValue5(absoluteX)
                isDragging5 = true
            end
    
            -- Verificar clique na segunda scrollbar
            local scrollbarX6, scrollbarY6, scrollbarWidth6, scrollbarHeight6 = calculatePosition(1250, 372, 180, 17)
            local thumbX6 = scrollbarX6 + ((scrollValue6 - scrollMin6) / (scrollMax6 - scrollMin6)) * (scrollbarWidth6 - thumbWidth6)
            if absoluteX >= thumbX6 and absoluteX <= thumbX6 + thumbWidth6 and absoluteY >= scrollbarY6 and absoluteY <= scrollbarY6 + scrollbarHeight6 then
                isDragging6 = true
                dragOffset6 = absoluteX - thumbX6
            elseif absoluteX >= scrollbarX6 and absoluteX <= scrollbarX6 + scrollbarWidth6 and absoluteY >= scrollbarY6 and absoluteY <= scrollbarY6 + scrollbarHeight6 then
                scrollValue6 = updateScrollbarValue6(absoluteX)
                isDragging6 = true
            end
        elseif button == "left" and state == "up" then
            isDragging5 = false
            isDragging6 = false
        end
    end
    
    -- Função para mover o cursor
    function onClientCursorMove(_, _, absoluteX, absoluteY)
        if isDragging5 then
            scrollValue5 = updateScrollbarValue5(absoluteX)
            maxDistance = scrollValue5
        end
        if isDragging6 then
            scrollValue6 = updateScrollbarValue6(absoluteX)
        end
    end
    
    addEventHandler("onClientClick", root, onClientClick)
    addEventHandler("onClientCursorMove", root, onClientCursorMove)
    
    function toggleMenu()
        SharkMenu = not SharkMenu -- Alternar entre visível e invisível
    
        if SharkMenu then
            showCursor(true) -- Mostrar o cursor quando o menu está visível
        else
            showCursor(false) -- Esconder o cursor quando o menu está invisível
        end
    end
    
    -- Associar a tecla padrão para abrir/fechar o menu e mostrar/ocultar o cursor
    bindKey(toggleKey, "down", toggleMenu)

    function drawRectangleWithBorder(x, y, width, height, color, borderColor, borderWidth)
        -- Desenha o retângulo principal
        dxDrawRectangle(x, y, width, height, color, false)
        
        -- Desenha a borda ao redor do retângulo
        -- Borda superior
        dxDrawRectangle(x, y - borderWidth, width, borderWidth, borderColor, false)
        -- Borda inferior
        dxDrawRectangle(x, y + height, width, borderWidth, borderColor, false)
        -- Borda esquerda
        dxDrawRectangle(x - borderWidth, y, borderWidth, height, borderColor, false)
        -- Borda direita
        dxDrawRectangle(x + width, y, borderWidth, height, borderColor, false)
    end

    function drawTabImages()

        local image2X, image2Y, image2Width, image2Height = calculatePosition(757, 233, 36, 36)
        local image3X, image3Y, image3Width, image3Height = calculatePosition(759, 295, 36, 36)
        local image4X, image4Y, image4Width, image4Height = calculatePosition(761, 352, 30, 30)
        local image5X, image5Y, image5Width, image5Height = calculatePosition(754, 393, 43, 56)
        local image6X, image6Y, image6Width, image6Height = calculatePosition(760, 458, 36, 40)
        local image7X, image7Y, image7Width, image7Height = calculatePosition(761, 523, 34, 34)
        local image8X, image8Y, image8Width, image8Height = calculatePosition(762, 576, 32, 34)
        local image9X, image9Y, image9Width, image9Height = calculatePosition(758, 637, 34, 29)

        local height, width = 50, 40
        local recX = 750
    
        if selectedTab == 1 then
            dxDrawRoundedRectangle(recX, image2Y - 2, height, width, 3, tocolor(0, 149, 249, 50), false)
        end
    
        if selectedTab == 2 then
            dxDrawRoundedRectangle(recX, image3Y - 4, height, width, 3, tocolor(0, 149, 249, 50), false)
        end

        if selectedTab == 3 then
            dxDrawRoundedRectangle(recX, image4Y - 4, height, width, 3, tocolor(0, 149, 249, 50), false)
        end

        if selectedTab == 4 then
            dxDrawRoundedRectangle(recX, image5Y + 7, height, width, 3, tocolor(0, 149, 249, 50), false)
        end

        if selectedTab == 5 then
            dxDrawRoundedRectangle(recX, image6Y, height, width, 3, tocolor(0, 149, 249, 50), false)
        end

        if selectedTab == 6 then
            dxDrawRoundedRectangle(recX, image7Y - 4, height, width, 3, tocolor(0, 149, 249, 50), false)
        end

        if selectedTab == 7 then
            dxDrawRoundedRectangle(recX, image8Y - 2, height, width, 3, tocolor(0, 149, 249, 50), false)
        end

        if selectedTab == 8 then
            dxDrawRoundedRectangle(recX, image9Y - 6, height, width, 3, tocolor(0, 149, 249, 50), false)
        end
    end

    addEventHandler("onClientRender", root,
        function()
            if not SharkMenu then return end
        -- Calculando posições e tamanhos proporcionais
        local panelX, panelY, panelWidth, panelHeight = calculatePosition(742, 159, 698, 609)
        local sidePanelX, sidePanelY, sidePanelWidth, sidePanelHeight = calculatePosition(742, 159, 68, 609)
        local image1X, image1Y, image1Width, image1Height = calculatePosition(727, 159, 100, 74)
        local image2X, image2Y, image2Width, image2Height = calculatePosition(757, 233, 36, 36)
        local image3X, image3Y, image3Width, image3Height = calculatePosition(759, 295, 36, 36)
        local image4X, image4Y, image4Width, image4Height = calculatePosition(761, 352, 30, 30)
        local image5X, image5Y, image5Width, image5Height = calculatePosition(754, 393, 43, 56)
        local image6X, image6Y, image6Width, image6Height = calculatePosition(760, 458, 36, 40)
        local image7X, image7Y, image7Width, image7Height = calculatePosition(761, 523, 34, 34)
        local image8X, image8Y, image8Width, image8Height = calculatePosition(762, 576, 32, 34)
        local image9X, image9Y, image9Width, image9Height = calculatePosition(758, 637, 34, 29)
        local lineStartX, lineStartY = calculatePosition(817, 206, 1, 0) -- Apenas X para linha
        local lineEndX, lineEndY = calculatePosition(1440, 206, 1, 0) -- Apenas X para linha

        local defaultColor = tocolor(255, 255, 255, 255) -- Branco

        -- Cores específicas
        local specificColors = {
            [1] = tocolor(0, 149, 249, 255), -- Cor para a imagem 2 quando selectedTab é 1
            [2] = tocolor(0, 149, 249, 255)  -- Cor para a imagem 3 quando selectedTab é 2
        }

        local color2 = (selectedTab == 1) and specificColors[1] or defaultColor
        local color3 = (selectedTab == 2) and specificColors[1] or defaultColor
        local color4 = (selectedTab == 3) and specificColors[1] or defaultColor
        local color5 = (selectedTab == 4) and specificColors[1] or defaultColor
        local color6 = (selectedTab == 5) and specificColors[1] or defaultColor
        local color7 = (selectedTab == 6) and specificColors[1] or defaultColor
        local color8 = (selectedTab == 7) and specificColors[1] or defaultColor
        local color9 = (selectedTab == 8) and specificColors[1] or defaultColor

        dxDrawRoundedRectangle(panelX, panelY, panelWidth, panelHeight, 10, tocolor(16, 16, 16, 255), false)
        drawParticles()
        updateParticles()
        dxDrawRoundedRectangle(sidePanelX, sidePanelY, sidePanelWidth, sidePanelHeight, 10, tocolor(30, 30, 30, 210), false)
        drawTabImages()
        dxDrawImage(image1X, image1Y, image1Width, image1Height, background1, 0, 0, 0, tocolor(255, 255, 255, 255))
        dxDrawImage(image2X, image2Y, image2Width, image2Height, background2, 0, 0, 0, color2)
        dxDrawImage(image3X, image3Y, image3Width, image3Height, background3, 0, 0, 0, color3)
        dxDrawImage(image4X, image4Y, image4Width, image4Height, background4, 0, 0, 0, color4)
        dxDrawImage(image5X, image5Y, image5Width, image5Height, background5, 0, 0, 0, color5)
        dxDrawImage(image6X, image6Y, image6Width, image6Height, background6, 0, 0, 0, color6)
        dxDrawImage(image7X, image7Y, image7Width, image7Height, background7, 0, 0, 0, color7)
        dxDrawImage(image8X, image8Y, image8Width, image8Height, background8, 0, 0, 0, color8)
        dxDrawImage(image9X, image9Y, image9Width, image9Height, background9, 0, 0, 0, color9)
        dxDrawLine(lineStartX, lineStartY, lineEndX, lineEndY, tocolor(63, 63, 63, 255), 1, false)
            drawPlayerName()

            drawSnake2(panelX, panelY, panelWidth, panelHeight)
            
            if selectedTab == 1 and IsTab1Visible == 1 then
                local textJogadorX, textJogadorY, textJogadorWidth, textJogadorHeight = calculatePosition(827, 170, 72, 26)
                local textOutrosX, textOutrosY, textOutrosWidth, textOutrosHeight = calculatePosition(917, 170, 72, 26)
                local textRoupasX, textRoupasY, textRoupasWidth, textRoupasHeight = calculatePosition(1008, 170, 72, 26)
                local rect1X, rect1Y, rect1Width, rect1Height = calculatePosition(816, 224, 614, 50)
                local rect2X, rect2Y, rect2Width, rect2Height = calculatePosition(816, 281, 614, 50)
                local textGodModeX, textGodModeY, textGodModeWidth, textGodModeHeight = calculatePosition(819, 229, 74, 22)
                local textGodModeDescX, textGodModeDescY, textGodModeDescWidth, textGodModeDescHeight = calculatePosition(820, 251, 123, 20)
                local rect3X, rect3Y, rect3Width, rect3Height = calculatePosition(816, 338, 614, 50)
                local textAntiFogoX, textAntiFogoY, textAntiFogoWidth, textAntiFogoHeight = calculatePosition(820, 284, 73, 22)
                local textAntiFogoDescX, textAntiFogoDescY, textAntiFogoDescWidth, textAntiFogoDescHeight = calculatePosition(820, 308, 144, 20)
                local textNoRagDollX, textNoRagDollY, textNoRagDollWidth, textNoRagDollHeight = calculatePosition(820, 341, 84, 20)
                local textNoRagDollDescX, textNoRagDollDescY, textNoRagDollDescWidth, textNoRagDollDescHeight = calculatePosition(820, 361, 191, 27)
                local rect4X, rect4Y, rect4Width, rect4Height = calculatePosition(816, 398, 614, 50)
                local textInvisivelX, textInvisivelY, textInvisivelWidth, textInvisivelHeight = calculatePosition(820, 402, 111, 20)
                local textInvisivelDescX, textInvisivelDescY, textInvisivelDescWidth, textInvisivelDescHeight = calculatePosition(820, 422, 137, 26)
                local rect5X, rect5Y, rect5Width, rect5Height = calculatePosition(816, 458, 614, 50)
                local textStaminaX, textStaminaY, textStaminaWidth, textStaminaHeight = calculatePosition(820, 462, 111, 20)
                local textStaminaDescX, textStaminaDescY, textStaminaDescWidth, textStaminaDescHeight = calculatePosition(820, 482, 175, 26)
                local rect6X, rect6Y, rect6Width, rect6Height = calculatePosition(816, 518, 614, 50)
                local textReviverX, textReviverY, textReviverWidth, textReviverHeight = calculatePosition(820, 523, 53, 20)
                local textReviverDescX, textReviverDescY, textReviverDescWidth, textReviverDescHeight = calculatePosition(820, 542, 132, 26)
                local rect7X, rect7Y, rect7Width, rect7Height = calculatePosition(816, 578, 614, 50)
                local textColetX, textColetY, textColetWidth, textColetHeight = calculatePosition(820, 582, 48, 20)
                local textColetDescX, textColetDescY, textColetDescWidth, textColetDescHeight = calculatePosition(820, 602, 149, 26)
                local rect8X, rect8Y, rect8Width, rect8Height = calculatePosition(816, 638, 614, 50)
                local textSuicidioX, textSuicidioY, textSuicidioWidth, textSuicidioHeight = calculatePosition(820, 643, 63, 20)
                local textSuicidioDescX, textSuicidioDescY, textSuicidioDescWidth, textSuicidioDescHeight = calculatePosition(820, 662, 76, 26)
                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda
            
                -- Desenhando o painel com as posições e tamanhos proporcionais
                dxDrawText("Jogador", textJogadorX, textJogadorY, textJogadorX + textJogadorWidth, textJogadorY + textJogadorHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Outros", textOutrosX, textOutrosY, textOutrosX + textOutrosWidth, textOutrosY + textOutrosHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Roupas", textRoupasX, textRoupasY, textRoupasX + textRoupasWidth, textRoupasY + textRoupasHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect1X, rect1Y, rect1Width, rect1Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                drawRectangleWithBorder(rect2X, rect2Y, rect2Width, rect2Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("GodMode", textGodModeX, textGodModeY, textGodModeX + textGodModeWidth, textGodModeY + textGodModeHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você ficará imortal.", textGodModeDescX, textGodModeDescY, textGodModeDescX + textGodModeDescWidth, textGodModeDescY + textGodModeDescHeight, tocolor(94, 94, 94, 255), 1.0, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect3X, rect3Y, rect3Width, rect3Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Anti Fogo", textAntiFogoX, textAntiFogoY, textAntiFogoX + textAntiFogoWidth, textAntiFogoY + textAntiFogoHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você não pegará fogo.", textAntiFogoDescX, textAntiFogoDescY, textAntiFogoDescX + textAntiFogoDescWidth, textAntiFogoDescY + textAntiFogoDescHeight, tocolor(94, 94, 94, 255), 1.0, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("No RagDoll", textNoRagDollX, textNoRagDollY, textNoRagDollX + textNoRagDollWidth, textNoRagDollY + textNoRagDollHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você não irá ficar em ragdoll.", textNoRagDollDescX, textNoRagDollDescY, textNoRagDollDescX + textNoRagDollDescWidth, textNoRagDollDescY + textNoRagDollDescHeight, tocolor(94, 94, 94, 255), 1.0, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect4X, rect4Y, rect4Width, rect4Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Invisivel [Visual]", textInvisivelX, textInvisivelY, textInvisivelX + textInvisivelWidth, textInvisivelY + textInvisivelHeight, tocolor(255, 255, 255, 255), 1.2, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você ficará invisível.", textInvisivelDescX, textInvisivelDescY, textInvisivelDescX + textInvisivelDescWidth, textInvisivelDescY + textInvisivelDescHeight, tocolor(94, 94, 94, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect5X, rect5Y, rect5Width, rect5Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Stamina Infinita", textStaminaX, textStaminaY, textStaminaX + textStaminaWidth, textStaminaY + textStaminaHeight, tocolor(255, 255, 255, 255), 1.2, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Sua stamina ficará infinita.", textStaminaDescX, textStaminaDescY, textStaminaDescX + textStaminaDescWidth, textStaminaDescY + textStaminaDescHeight, tocolor(94, 94, 94, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect6X, rect6Y, rect6Width, rect6Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Reviver", textReviverX, textReviverY, textReviverX + textReviverWidth, textReviverY + textReviverHeight, tocolor(255, 255, 255, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você voltará a vida.", textReviverDescX, textReviverDescY, textReviverDescX + textReviverDescWidth, textReviverDescY + textReviverDescHeight, tocolor(94, 94, 94, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect7X, rect7Y, rect7Width, rect7Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Colete", textColetX, textColetY, textColetX + textColetWidth, textColetY + textColetHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você receberá colete.", textColetDescX, textColetDescY, textColetDescX + textColetDescWidth, textColetDescY + textColetDescHeight, tocolor(94, 94, 94, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect8X, rect8Y, rect8Width, rect8Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Suicídio", textSuicidioX, textSuicidioY, textSuicidioX + textSuicidioWidth, textSuicidioY + textSuicidioHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você irá se Suicidar.", textSuicidioDescX, textSuicidioDescY, textSuicidioDescX + textSuicidioDescWidth, textSuicidioDescY + textSuicidioDescHeight, tocolor(94, 94, 94, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
    
                drawAllSwitches0()
    
                drawScrollbar()
    
            elseif selectedTab == 1 and IsTab1Visible == 2 then
                local textJogadorX, textJogadorY, textJogadorWidth, textJogadorHeight = calculatePosition(827, 170, 72, 26)
                local textOutrosX, textOutrosY, textOutrosWidth, textOutrosHeight = calculatePosition(917, 170, 72, 26)
                local textRoupasX, textRoupasY, textRoupasWidth, textRoupasHeight = calculatePosition(1008, 170, 72, 26)
                local rect1X, rect1Y, rect1Width, rect1Height = calculatePosition(816, 224, 614, 50)
                local rect2X, rect2Y, rect2Width, rect2Height = calculatePosition(816, 281, 614, 50)
                local textNoclipX, textNoclipY, textNoclipWidth, textNoclipHeight = calculatePosition(820, 229, 73, 22)
                local textNoclipDescX, textNoclipDescY, textNoclipDescWidth, textNoclipDescHeight = calculatePosition(820, 251, 123, 20)
                local rect3X, rect3Y, rect3Width, rect3Height = calculatePosition(816, 338, 614, 50)
                local textVelocidadeX, textVelocidadeY, textVelocidadeWidth, textVelocidadeHeight = calculatePosition(820, 284, 73, 22)
                local textVelocidadeDescX, textVelocidadeDescY, textVelocidadeDescWidth, textVelocidadeDescHeight = calculatePosition(820, 308, 144, 20)
                local textFreecamX, textFreecamY, textFreecamWidth, textFreecamHeight = calculatePosition(820, 341, 72, 22)
                local textFreecamDescX, textFreecamDescY, textFreecamDescWidth, textFreecamDescHeight = calculatePosition(820, 361, 191, 27)

                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda

                -- Desenhando o painel com as posições e tamanhos proporcionais
                dxDrawText("Jogador", textJogadorX, textJogadorY, textJogadorX + textJogadorWidth, textJogadorY + textJogadorHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Outros", textOutrosX, textOutrosY, textOutrosX + textOutrosWidth, textOutrosY + textOutrosHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Roupas", textRoupasX, textRoupasY, textRoupasX + textRoupasWidth, textRoupasY + textRoupasHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect1X, rect1Y, rect1Width, rect1Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                drawRectangleWithBorder(rect2X, rect2Y, rect2Width, rect2Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Noclip [CAPS]", textNoclipX, textNoclipY, textNoclipX + textNoclipWidth, textNoclipY + textNoclipHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você poderá voar.", textNoclipDescX, textNoclipDescY, textNoclipDescX + textNoclipDescWidth, textNoclipDescY + textNoclipDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect3X, rect3Y, rect3Width, rect3Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Velocidade", textVelocidadeX, textVelocidadeY, textVelocidadeX + textVelocidadeWidth, textVelocidadeY + textVelocidadeHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Velocidade do Noclip.", textVelocidadeDescX, textVelocidadeDescY, textVelocidadeDescX + textVelocidadeDescWidth, textVelocidadeDescY + textVelocidadeDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Freecam", textFreecamX, textFreecamY, textFreecamX + textFreecamWidth, textFreecamY + textFreecamHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você terá uma câmera livre.", textFreecamDescX, textFreecamDescY, textFreecamDescX + textFreecamDescWidth, textFreecamDescY + textFreecamDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                drawScrollbar2()
                for i, switch in ipairs(switches7) do
                    drawSwitch7(switch.x, switch.y, switch.width, switch.height, switch.state)
                end
            elseif selectedTab == 1 and IsTab1Visible == 3 then
                local textJogadorX, textJogadorY, textJogadorWidth, textJogadorHeight = calculatePosition(827, 170, 72, 26)
                local textOutrosX, textOutrosY, textOutrosWidth, textOutrosHeight = calculatePosition(917, 170, 72, 26)
                local textRoupasX, textRoupasY, textRoupasWidth, textRoupasHeight = calculatePosition(1008, 170, 72, 26)
                local rect1X, rect1Y, rect1Width, rect1Height = calculatePosition(816, 224, 614, 50)
                local textMudarSkinX, textMudarSkinY, textMudarSkinWidth, textMudarSkinHeight = calculatePosition(820, 229, 73, 22)
                local textMudarSkinDescX, textMudarSkinDescY, textMudarSkinDescWidth, textMudarSkinDescHeight = calculatePosition(820, 251, 123, 20)
                local rect2X, rect2Y, rect2Width, rect2Height = calculatePosition(816, 281, 614, 50)
                local textCopiarSkinX, textCopiarSkinY, textCopiarSkinWidth, textCopiarSkinHeight = calculatePosition(820, 284, 73, 22)
                local textCopiarSkinDescX, textCopiarSkinDescY, textCopiarSkinDescWidth, textCopiarSkinDescHeight = calculatePosition(820, 308, 144, 20)
                local rect3X, rect3Y, rect3Width, rect3Height = calculatePosition(846, 380, 283, 343)

                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda
            
                -- Desenhando o painel com as posições e tamanhos proporcionais
                dxDrawText("Jogador", textJogadorX, textJogadorY, textJogadorX + textJogadorWidth, textJogadorY + textJogadorHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Outros", textOutrosX, textOutrosY, textOutrosX + textOutrosWidth, textOutrosY + textOutrosHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Roupas", textRoupasX, textRoupasY, textRoupasX + textRoupasWidth, textRoupasY + textRoupasHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect1X, rect1Y, rect1Width, rect1Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                drawRectangleWithBorder(rect2X, rect2Y, rect2Width, rect2Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Mudar Skin", textMudarSkinX, textMudarSkinY, textMudarSkinX + textMudarSkinWidth, textMudarSkinY + textMudarSkinHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você poderá mudar sua skin.", textMudarSkinDescX, textMudarSkinDescY, textMudarSkinDescX + textMudarSkinDescWidth, textMudarSkinDescY + textMudarSkinDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect3X, rect3Y, rect3Width, rect3Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Copiar Skin", textCopiarSkinX, textCopiarSkinY, textCopiarSkinX + textCopiarSkinWidth, textCopiarSkinY + textCopiarSkinHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você poderá copiar skin de players.", textCopiarSkinDescX, textCopiarSkinDescY, textCopiarSkinDescX + textCopiarSkinDescWidth, textCopiarSkinDescY + textCopiarSkinDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
    
                drawScrollbar1()
                
           
            elseif selectedTab == 2 and IsTab1Visible2 == 1 then
                local textAimbotX, textAimbotY, textAimbotWidth, textAimbotHeight = calculatePosition(827, 170, 72, 26)
                local textOutrosX, textOutrosY, textOutrosWidth, textOutrosHeight = calculatePosition(917, 170, 72, 26)
                local rect1X, rect1Y, rect1Width, rect1Height = calculatePosition(816, 224, 614, 50)
                local rect2X, rect2Y, rect2Width, rect2Height = calculatePosition(816, 281, 614, 50)
                local textAimbotDescX, textAimbotDescY, textAimbotDescWidth, textAimbotDescHeight = calculatePosition(820, 229, 73, 22)
                local textAimbotDescTextX, textAimbotDescTextY, textAimbotDescTextWidth, textAimbotDescTextHeight = calculatePosition(820, 251, 123, 20)
                local rect3X, rect3Y, rect3Width, rect3Height = calculatePosition(816, 338, 614, 50)
                local textFOVX, textFOVY, textFOVWidth, textFOVHeight = calculatePosition(820, 284, 73, 22)
                local textFOVDescX, textFOVDescY, textFOVDescWidth, textFOVDescHeight = calculatePosition(819, 308, 145, 20)
                local textShowFOVX, textShowFOVY, textShowFOVWidth, textShowFOVHeight = calculatePosition(820, 341, 84, 20)
                local textShowFOVDescX, textShowFOVDescY, textShowFOVDescWidth, textShowFOVDescHeight = calculatePosition(820, 361, 191, 27)
                local rect4X, rect4Y, rect4Width, rect4Height = calculatePosition(816, 398, 614, 50)
                local textIncludePedsX, textIncludePedsY, textIncludePedsWidth, textIncludePedsHeight = calculatePosition(820, 402, 111, 20)
                local textIncludePedsDescX, textIncludePedsDescY, textIncludePedsDescWidth, textIncludePedsDescHeight = calculatePosition(820, 422, 137, 26)
                local rect5X, rect5Y, rect5Width, rect5Height = calculatePosition(816, 458, 614, 50)
                local textChangeFOVColorX, textChangeFOVColorY, textChangeFOVColorWidth, textChangeFOVColorHeight = calculatePosition(820, 462, 131, 20)
                local textChangeFOVColorDescX, textChangeFOVColorDescY, textChangeFOVColorDescWidth, textChangeFOVColorDescHeight = calculatePosition(820, 482, 175, 26)
                local rect6X, rect6Y, rect6Width, rect6Height = calculatePosition(816, 518, 614, 50)
                local textCheckVisibilityX, textCheckVisibilityY, textCheckVisibilityWidth, textCheckVisibilityHeight = calculatePosition(820, 523, 124, 20)
                local textCheckVisibilityDescX, textCheckVisibilityDescY, textCheckVisibilityDescWidth, textCheckVisibilityDescHeight = calculatePosition(820, 542, 132, 26)
            
                -- Desenhando o painel com as posições e tamanhos proporcionais
                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda
                dxDrawText("Aimbot", textAimbotX, textAimbotY, textAimbotX + textAimbotWidth, textAimbotY + textAimbotHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Outros", textOutrosX, textOutrosY, textOutrosX + textOutrosWidth, textOutrosY + textOutrosHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect1X, rect1Y, rect1Width, rect1Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                drawRectangleWithBorder(rect2X, rect2Y, rect2Width, rect2Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Aimbot", textAimbotDescX, textAimbotDescY, textAimbotDescX + textAimbotDescWidth, textAimbotDescY + textAimbotDescHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Ativar/desativar Aimbot.", textAimbotDescTextX, textAimbotDescTextY, textAimbotDescTextX + textAimbotDescWidth, textAimbotDescTextY + textAimbotDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect3X, rect3Y, rect3Width, rect3Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("FOV do Aimbot", textFOVX, textFOVY, textFOVX + textFOVWidth, textFOVY + textFOVHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Area onde o Aimbot irá pegar.", textFOVDescX, textFOVDescY, textFOVDescX + textFOVDescWidth, textFOVDescY + textFOVDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Mostrar FOV", textShowFOVX, textShowFOVY, textShowFOVX + textShowFOVWidth, textShowFOVY + textShowFOVHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Mostra a área onde o Aimbot irá pegar.", textShowFOVDescX, textShowFOVDescY, textShowFOVDescX + textShowFOVDescWidth, textShowFOVDescY + textShowFOVDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect4X, rect4Y, rect4Width, rect4Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Incluir Peds", textIncludePedsX, textIncludePedsY, textIncludePedsX + textIncludePedsWidth, textIncludePedsY + textIncludePedsHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Inclui os peds no Aimbot.", textIncludePedsDescX, textIncludePedsDescY, textIncludePedsDescX + textIncludePedsDescWidth, textIncludePedsDescY + textIncludePedsDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect5X, rect5Y, rect5Width, rect5Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Mudar a cor do FOV", textChangeFOVColorX, textChangeFOVColorY, textChangeFOVColorX + textChangeFOVColorWidth, textChangeFOVColorY + textChangeFOVColorHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Mudar a cor do FOV da sua tela.", textChangeFOVColorDescX, textChangeFOVColorDescY, textChangeFOVColorDescX + textChangeFOVColorDescWidth, textChangeFOVColorDescY + textChangeFOVColorDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect6X, rect6Y, rect6Width, rect6Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Verificar visibilidade", textCheckVisibilityX, textCheckVisibilityY, textCheckVisibilityX + textCheckVisibilityWidth, textCheckVisibilityY + textCheckVisibilityHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Verifica se o alvo está visível.", textCheckVisibilityDescX, textCheckVisibilityDescY, textCheckVisibilityDescX + textCheckVisibilityDescWidth, textCheckVisibilityDescY + textCheckVisibilityDescHeight, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
    
                drawAllSwitches2()
    
                drawScrollbar4()
            elseif selectedTab == 2 and IsTab1Visible2 == 2 then
                local textAimbotX, textAimbotY, textAimbotWidth, textAimbotHeight = calculatePosition(827, 170, 72, 26)
                local textOutrosX, textOutrosY, textOutrosWidth, textOutrosHeight = calculatePosition(917, 170, 72, 26)
                local rect1X, rect1Y, rect1Width, rect1Height = calculatePosition(816, 224, 614, 50)
                local rect2X, rect2Y, rect2Width, rect2Height = calculatePosition(816, 281, 614, 50)
                local rect3X, rect3Y, rect3Width, rect3Height = calculatePosition(816, 338, 614, 50)
                local textTracerColorX, textTracerColorY, textTracerColorWidth, textTracerColorHeight = calculatePosition(820, 341, 84, 20)
                local textTracerColorDescX, textTracerColorDescY, textTracerColorDescWidth, textTracerColorDescHeight = calculatePosition(820, 361, 191, 27)
                local textFastReloadX, textFastReloadY, textFastReloadWidth, textFastReloadHeight = calculatePosition(820, 229, 73, 22)
                local textFastReloadDescX, textFastReloadDescY, textFastReloadDescWidth, textFastReloadDescHeight = calculatePosition(820, 251, 123, 20)
                local textBulletTracerX, textBulletTracerY, textBulletTracerWidth, textBulletTracerHeight = calculatePosition(820, 284, 73, 22)
                local textBulletTracerDescX, textBulletTracerDescY, textBulletTracerDescWidth, textBulletTracerDescHeight = calculatePosition(820, 308, 144, 20)
                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda
            
                -- Desenhando o painel com as posições e tamanhos proporcionais
                dxDrawText("Aimbot", textAimbotX, textAimbotY, textAimbotX + textAimbotWidth, textAimbotY + textAimbotHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Outros", textOutrosX, textOutrosY, textOutrosX + textOutrosWidth, textOutrosY + textOutrosHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                drawRectangleWithBorder(rect1X, rect1Y, rect1Width, rect1Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                drawRectangleWithBorder(rect2X, rect2Y, rect2Width, rect2Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                drawRectangleWithBorder(rect3X, rect3Y, rect3Width, rect3Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Mudar a cor dos traçante", textTracerColorX, textTracerColorY, textTracerColorX + textTracerColorWidth, textTracerColorY + textTracerColorHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você poderá escolher a cor do traçante.", textTracerColorDescX, textTracerColorDescY, textTracerColorDescX + textTracerColorDescWidth, textTracerColorDescY + textTracerColorDescHeight, tocolor(94, 94, 94, 255), 1.0, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Fast Reload", textFastReloadX, textFastReloadY, textFastReloadX + textFastReloadWidth, textFastReloadY + textFastReloadHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você recarregará a arma mais rápido.", textFastReloadDescX, textFastReloadDescY, textFastReloadDescX + textFastReloadDescWidth, textFastReloadDescY + textFastReloadDescHeight, tocolor(94, 94, 94, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Bullet Tracer", textBulletTracerX, textBulletTracerY, textBulletTracerX + textBulletTracerWidth, textBulletTracerY + textBulletTracerHeight, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Cria traçantes nos tiros das armas.", textBulletTracerDescX, textBulletTracerDescY, textBulletTracerDescX + textBulletTracerDescWidth, textBulletTracerDescY + textBulletTracerDescHeight, tocolor(94, 94, 94, 255), 1, "default-bold", "left", "center", false, false, false, false, false)
    
                drawAllSwitches3()

            elseif selectedTab == 3 then
                local textX, textY, textW, textH = calculatePosition(827, 170, 899, 196)
                dxDrawText("Vehicles", textX, textY, textW, textH, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)

                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda
                
                local rectX, rectY, rectW, rectH = calculatePosition(827, 196, 70, 5)
                drawRectangleWithBorder(rectX, rectY, rectW, rectH, tocolor(0, 149, 249, 255), borderColor, borderWidth)
            
                local rect1X, rect1Y, rect1W, rect1H = calculatePosition(816, 224, 614, 50)
                drawRectangleWithBorder(rect1X, rect1Y, rect1W, rect1H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                
                local text1X, text1Y, text1W, text1H = calculatePosition(820, 229, 893, 251)
                dxDrawText("Reparar Veículo", text1X, text1Y, text1W, text1H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você repará o seu veículo por completo.", text1X, text1Y + 22, text1W, text1H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
            
                local rect2X, rect2Y, rect2W, rect2H = calculatePosition(816, 281, 614, 50)
                drawRectangleWithBorder(rect2X, rect2Y, rect2W, rect2H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
            
                local text2X, text2Y, text2W, text2H = calculatePosition(820, 284, 893, 308)
                dxDrawText("Quebrar Motor", text2X, text2Y, text2W, text2H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você quebrará o motor do seu veículo.", text2X, text2Y + 22, text2W, text2H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
            
                local rect3X, rect3Y, rect3W, rect3H = calculatePosition(816, 338, 614, 50)
                drawRectangleWithBorder(rect3X, rect3Y, rect3W, rect3H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
            
                local text3X, text3Y, text3W, text3H = calculatePosition(820, 341, 904, 361)
                dxDrawText("Teleportar Até um Veículo", text3X, text3Y, text3W, text3H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você irá teleportar até um carro vazio.", text3X, text3Y + 22, text3W, text3H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
            
                local rect4X, rect4Y, rect4W, rect4H = calculatePosition(816, 398, 614, 50)
                drawRectangleWithBorder(rect4X, rect4Y, rect4W, rect4H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local text4X, text4Y, text4W, text4H = calculatePosition(820, 402, 931, 422)
                dxDrawText("Tunar Veículo", text4X, text4Y, text4W, text4H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você vai tunar seu veículo ao maximo.", text4X, text4Y + 22, text4W, text4H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
            
                local rect5X, rect5Y, rect5W, rect5H = calculatePosition(816, 458, 614, 50)
                drawRectangleWithBorder(rect5X, rect5Y, rect5W, rect5H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect6X, rect6Y, rect6W, rect6H = calculatePosition(816, 515, 614, 50)
                drawRectangleWithBorder(rect6X, rect6Y, rect6W, rect6H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect8X, rect8Y, rect8W, rect8H = calculatePosition(816, 571, 614, 50)
                drawRectangleWithBorder(rect8X, rect8Y, rect8W, rect8H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect9X, rect9Y, rect9W, rect9H = calculatePosition(816, 627, 614, 50)
                drawRectangleWithBorder(rect9X, rect9Y, rect9W, rect9H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect10X, rect10Y, rect10W, rect10H = calculatePosition(816, 683, 614, 50)
                drawRectangleWithBorder(rect10X, rect10Y, rect10W, rect10H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
            
                local text5X, text5Y, text5W, text5H = calculatePosition(820, 462, 931, 482)
                dxDrawText("Blindar Veículo", text5X, text5Y, text5W, text5H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você blindará seu veículo.", text5X, text5Y + 22, text5W, text5H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                local text5X, text5Y, text5W, text5H = calculatePosition(820, 580, 931, 482)
                dxDrawText("Mudar Modelo", text5X, text5Y, text5W, text5H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você mudará o modelo do seu veículo.", text5X, text5Y + 22, text5W, text5H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                local text8X, text8Y, text8W, text8H = calculatePosition(820, 695, 931, 482)
                dxDrawText("Valor do Modelo", text8X, text8Y, text8W, text8H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você mudará o valor modelo.", text8X, text8Y + 22, text8W, text8H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                local text9X, text9Y, text9W, text9H = calculatePosition(820, 805, 931, 482)
                dxDrawText("Mudar Modelo Proximo", text9X, text9Y, text9W, text9H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você mudará o modelo do carro mais proximo.", text9X, text9Y + 22, text9W, text9H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                local text10X, text10Y, text10W, text10H = calculatePosition(820, 910, 931, 482)
                dxDrawText("Trollar Veículos Proximo", text10X, text10Y, text10W, text10H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você irá aplicar um efeito troll em veículos proximos.", text10X, text10Y + 22, text10W, text10H + 20, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                    drawScrollbar9()
            elseif selectedTab == 4 then
                local textX, textY, textW, textH = calculatePosition(827, 170, 899, 196)
                dxDrawText("Players", textX, textY, textW, textH, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                
                local rectX, rectY, rectW, rectH = calculatePosition(827, 196, 70, 5)
                dxDrawRectangle(rectX, rectY, rectW, rectH, tocolor(0, 149, 249, 255), false)

                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda

                local rect1X, rect1Y, rect1W, rect1H = calculatePosition(1158, 389, 259, 39)
                drawRectangleWithBorder(rect1X, rect1Y, rect1W, rect1H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
            
                local text1X, text1Y, text1W, text1H = calculatePosition(1158, 389, 1417, 429)
                dxDrawText("Teleportar", text1X, text1Y, text1W, text1H, tocolor(254, 254, 254, 255), 1.50, "default", "center", "center", false, false, false, false, false)
            
                local rect2X, rect2Y, rect2W, rect2H = calculatePosition(1158, 450, 259, 39)
                drawRectangleWithBorder(rect2X, rect2Y, rect2W, rect2H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
            
                local rect3X, rect3Y, rect3W, rect3H = calculatePosition(1158, 510, 259, 39)
                drawRectangleWithBorder(rect3X, rect3Y, rect3W, rect3H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect4X, rect4Y, rect4W, rect4H = calculatePosition(1159, 574, 259, 39)
                drawRectangleWithBorder(rect4X, rect4Y, rect4W, rect4H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect5X, rect5Y, rect5W, rect5H = calculatePosition(1159, 638, 259, 39)
                drawRectangleWithBorder(rect5X, rect5Y, rect5W, rect5H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
            
                local text2X, text2Y, text2W, text2H = calculatePosition(1158, 449, 1417, 489)
                dxDrawText("Spectar", text2X, text2Y, text2W, text2H, tocolor(254, 254, 254, 255), 1.50, "default", "center", "center", false, false, false, false, false)
            
                local text3X, text3Y, text3W, text3H = calculatePosition(1158, 509, 1417, 549)
                dxDrawText("Fumaça", text3X, text3Y, text3W, text3H, tocolor(254, 254, 254, 255), 1.50, "default", "center", "center", false, false, false, false, false)

                dxDrawText("Fuck Player", rect4X, rect4Y, 1418, 613, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)

                dxDrawText("Grudar Veículo", rect5X, rect5Y + 66, 1418, 613, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
            elseif selectedTab == 5 then
                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda

                local rect1X, rect1Y, rect1Width, rect1Height = calculatePosition(1270, 240, 138, 46)
                local rect2X, rect2Y, rect2Width, rect2Height = calculatePosition(1270, 320, 138, 46)
                local rect3X, rect3Y, rect3Width, rect3Height = calculatePosition(822, 217, 429, 543)
                local text1X, text1Y, text1W, text1H = calculatePosition(1269, 239, 1408, 285)
                local text2X, text2Y, text2W, text2H = calculatePosition(1269, 320, 1408, 366)
                local lineX, lineY, lineW, lineH = calculatePosition(828, 196, 70, 5)
                dxDrawRectangle(lineX, lineY, lineW, lineH, tocolor(0, 149, 249, 255), false)

                dxDrawRoundedRectangle(rect3X, rect3Y, rect3Width, rect3Height, 7, tocolor(60, 0, 255, 255), false)
                local textAimbotX, textAimbotY, textAimbotWidth, textAimbotHeight = calculatePosition(827, 170, 72, 26)
                dxDrawText("Executor", textAimbotX, textAimbotY, textAimbotX + textAimbotWidth, textAimbotY + textAimbotHeight, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                
                drawRectangleWithBorder(rect1X, rect1Y, rect1Width, rect1Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                drawRectangleWithBorder(rect2X, rect2Y, rect2Width, rect2Height, tocolor(16, 16, 16, 210), borderColor, borderWidth)
                dxDrawText("Executar", text1X, text1Y, text1W, text1H, tocolor(255, 255, 255, 255), 1.30, "default", "center", "center", false, false, false, false, false)
                dxDrawText("Limpar", text2X, text2Y, text2W, text2H, tocolor(255, 255, 255, 255), 1.30, "default", "center", "center", false, false, false, false, false)

            elseif selectedTab == 6 then
                local textX, textY, textW, textH = calculatePosition(805, 170, 899, 196)
                dxDrawText("ESP", textX, textY, textW, textH, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
            
                -- Desenhar a linha azul
                local lineX, lineY, lineW, lineH = calculatePosition(820, 196, 70, 5)
                dxDrawRectangle(lineX, lineY, lineW, lineH, tocolor(0, 149, 249, 255), false)
            
                -- Desenhar os retângulos de fundo
                local rect1X, rect1Y, rect1W, rect1H = calculatePosition(827, 220, 308, 296)
                dxDrawRectangle(rect1X, rect1Y, rect1W, rect1H, tocolor(30, 30, 30, 210), false)
            
                local rect2X, rect2Y, rect2W, rect2H = calculatePosition(1145, 220, 285, 211)
                dxDrawRectangle(rect2X, rect2Y, rect2W, rect2H, tocolor(30, 30, 30, 210), false)
            
                local rect3X, rect3Y, rect3W, rect3H = calculatePosition(827, 526, 308, 156)
                dxDrawRectangle(rect3X, rect3Y, rect3W, rect3H, tocolor(30, 30, 30, 210), false)
            
                -- Desenhar as linhas de fundo azul
                local lineBg1X, lineBg1Y, lineBg1W, lineBg1H = calculatePosition(827, 220, 308, 32)
                dxDrawRectangle(lineBg1X, lineBg1Y, lineBg1W, lineBg1H, tocolor(0, 149, 249, 78), false)
            
                local lineBg2X, lineBg2Y, lineBg2W, lineBg2H = calculatePosition(1145, 220, 285, 32)
                dxDrawRectangle(lineBg2X, lineBg2Y, lineBg2W, lineBg2H, tocolor(0, 149, 249, 78), false)
            
                local lineBg3X, lineBg3Y, lineBg3W, lineBg3H = calculatePosition(827, 526, 308, 32)
                dxDrawRectangle(lineBg3X, lineBg3Y, lineBg3W, lineBg3H, tocolor(0, 149, 249, 78), false)

                local lineBg4X, lineBg4Y, lineBg4W, lineBg4H = calculatePosition(1145, 450, 285, 32)
                dxDrawRectangle(lineBg4X, lineBg4Y, lineBg4W, lineBg4H, tocolor(0, 149, 249, 78), false)
            
                -- Desenhar os textos
                local enableTextX, enableTextY, enableTextW, enableTextH = calculatePosition(837, 262, 889, 281)
                dxDrawText("Enable", enableTextX, enableTextY, enableTextW, enableTextH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espNamesX, espNamesY, espNamesW, espNamesH = calculatePosition(837, 297, 937, 320)
                dxDrawText("ESP Names", espNamesX, espNamesY, espNamesW, espNamesH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espHealthbarX, espHealthbarY, espHealthbarW, espHealthbarH = calculatePosition(837, 330, 960, 353)
                dxDrawText("ESP Healthbar", espHealthbarX, espHealthbarY, espHealthbarW, espHealthbarH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espSkeletonX, espSkeletonY, espSkeletonW, espSkeletonH = calculatePosition(837, 368, 950, 391)
                dxDrawText("ESP Skeleton", espSkeletonX, espSkeletonY, espSkeletonW, espSkeletonH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espLinesX, espLinesY, espLinesW, espLinesH = calculatePosition(837, 405, 926, 427)
                dxDrawText("ESP Lines", espLinesX, espLinesY, espLinesW, espLinesH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espBoxX, espBoxY, espBoxW, espBoxH = calculatePosition(837, 442, 916, 465)
                dxDrawText("ESP Box", espBoxX, espBoxY, espBoxW, espBoxH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espCornerX, espCornerY, espCornerW, espCornerH = calculatePosition(837, 479, 960, 502)
                dxDrawText("ESP Corner", espCornerX, espCornerY, espCornerW, espCornerH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espTextX, espTextY, espTextW, espTextH = calculatePosition(861, 224, 895, 247)
                dxDrawText("ESP", espTextX, espTextY, espTextW, espTextH, tocolor(255, 255, 255, 255), 1.50, "default", "left", "top", false, false, false, false, false)
            
                local administratorsTextX, administratorsTextY, administratorsTextW, administratorsTextH = calculatePosition(864, 530, 985, 553)
                dxDrawText("Administrators", administratorsTextX, administratorsTextY, administratorsTextW, administratorsTextH, tocolor(255, 255, 255, 255), 1.50, "default", "left", "top", false, false, false, false, false)
            
                local settingsTextX, settingsTextY, settingsTextW, settingsTextH = calculatePosition(1182, 225, 1216, 248)
                dxDrawText("Settings", settingsTextX, settingsTextY, settingsTextW, settingsTextH, tocolor(255, 255, 255, 255), 1.50, "default", "left", "top", false, false, false, false, false)
            
                local espSkeletonAdminX, espSkeletonAdminY, espSkeletonAdminW, espSkeletonAdminH = calculatePosition(837, 576, 950, 599)
                dxDrawText("ESP Skeleton", espSkeletonAdminX, espSkeletonAdminY, espSkeletonAdminW, espSkeletonAdminH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local espLinesAdminX, espLinesAdminY, espLinesAdminW, espLinesAdminH = calculatePosition(837, 609, 926, 631)
                dxDrawText("ESP Lines", espLinesAdminX, espLinesAdminY, espLinesAdminW, espLinesAdminH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local showListTextX, showListTextY, showListTextW, showListTextH = calculatePosition(837, 641, 936, 663)
                dxDrawText("Mostrar Lista", showListTextX, showListTextY, showListTextW, showListTextH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local distanceTextX, distanceTextY, distanceTextW, distanceTextH = calculatePosition(1155, 262, 1232, 281)
                dxDrawText("Distance", distanceTextX, distanceTextY, distanceTextW, distanceTextH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local namesTextOutlineX, namesTextOutlineY, namesTextOutlineW, namesTextOutlineH = calculatePosition(1155, 298, 1321, 317)
                dxDrawText("Names Text Outline", namesTextOutlineX, namesTextOutlineY, namesTextOutlineW, namesTextOutlineH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local showDistanceTextX, showDistanceTextY, showDistanceTextW, showDistanceTextH = calculatePosition(1155, 333, 1284, 352)
                dxDrawText("Show Distance", showDistanceTextX, showDistanceTextY, showDistanceTextW, showDistanceTextH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                local textSizeTextX, textSizeTextY, textSizeTextW, textSizeTextH = calculatePosition(1155, 369, 1232, 388)
                dxDrawText("Text Size", textSizeTextX, textSizeTextY, textSizeTextW, textSizeTextH, tocolor(255, 255, 255, 255), 1.40, "default-bold", "left", "top", false, false, false, false, false)
            
                -- Desenhar os retângulos para os botões
                local addNameX, addNameY, addNameW, addNameH = calculatePosition(1150, 591, 123, 32)
                dxDrawRectangle(addNameX, addNameY, addNameW, addNameH, tocolor(12, 12, 12, 210), false)
            
                local removeNameX, removeNameY, removeNameW, removeNameH = calculatePosition(1297, 591, 123, 32)
                dxDrawRectangle(removeNameX, removeNameY, removeNameW, removeNameH, tocolor(12, 12, 12, 210), false)
            
                -- Desenhar os textos dos botões
                local addButtonTextX, addButtonTextY, addButtonTextW, addButtonTextH = calculatePosition(1151, 592, 1273, 623)
                dxDrawText("Adicionar", addButtonTextX, addButtonTextY, addButtonTextW, addButtonTextH, tocolor(255, 255, 255, 255), 1.20, "default", "center", "center", false, false, false, false, false)
            
                local removeButtonTextX, removeButtonTextY, removeButtonTextW, removeButtonTextH = calculatePosition(1297, 591, 1419, 622)
                dxDrawText("Remover", removeButtonTextX, removeButtonTextY, removeButtonTextW, removeButtonTextH, tocolor(255, 255, 255, 255), 1.20, "default", "center", "center", false, false, false, false, false)
            
                local configsAdmTextX, configsAdmTextY, configsAdmTextW, configsAdmTextH = calculatePosition(1185, 451, 1283, 482)
                dxDrawText("Configs ADM", configsAdmTextX, configsAdmTextY, configsAdmTextW, configsAdmTextH, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)

                local comp1X, comp1Y, comp1W, comp1H = calculatePosition(836, 225, 22, 23)
                local comp2X, comp2Y, comp2W, comp2H = calculatePosition(836, 532, 22, 23)
                local comp3X, comp3Y, comp3W, comp3H = calculatePosition(1154, 455, 22, 23)
                local comp4X, comp4Y, comp4W, comp4H = calculatePosition(1153, 225, 22, 23)
                dxDrawImage(comp1X, comp1Y, comp1W, comp1H, background11, 0, 0, 0, tocolor(0, 149, 249,255))
                dxDrawImage(comp2X, comp2Y, comp2W, comp2H, background11, 0, 0, 0, tocolor(0, 149, 249,255))
                dxDrawImage(comp3X, comp3Y, comp3W, comp3H, background11, 0, 0, 0, tocolor(0, 149, 249,255))
                dxDrawImage(comp4X, comp4Y, comp4W, comp4H, background12, 0, 0, 0, tocolor(0, 149, 249,255))
    
                drawAllSwitches4()

                drawAllSwitches()
                drawScrollbars()

            elseif selectedTab == 7 then
                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda
                
                local rect1X, rect1Y, rect1W, rect1H = calculatePosition(817, 223, 287, 95)
                drawRectangleWithBorder(rect1X, rect1Y, rect1W, rect1H, tocolor(16, 16, 16, 255), borderColor, borderWidth)
                local rect3X, rect3Y, rect3W, rect3H = calculatePosition(838, 269, 245, 35)
                drawRectangleWithBorder(rect3X, rect3Y, rect3W, rect3H, tocolor(0, 149, 249, 180), borderColor, borderWidth)

                local iconX, iconY, iconW, iconH = calculatePosition(846, 227, 1076, 258)
                dxDrawText("Corrigir Triggers", iconX, iconY, iconW, iconH, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
                local icon2X, icon2Y, icon2W, icon2H = calculatePosition(838, 269, 1083, 304)
                dxDrawText("Abrir/Fechar", icon2X, icon2Y, icon2W, icon2H, tocolor(255, 255, 255, 255), 1.30, "default", "center", "center", false, false, false, false, false)
            elseif selectedTab == 8 then
                local textX, textY, textW, textH = calculatePosition(827, 170, 899, 196)
                dxDrawText("Settings", textX, textY, textW, textH, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
            
                -- Desenhar a linha azul
                local lineX, lineY, lineW, lineH = calculatePosition(827, 196, 70, 5)
                dxDrawRectangle(lineX, lineY, lineW, lineH, tocolor(0, 149, 249, 255), false)

                local borderColor = tocolor(63, 63, 63, 160) -- Cor da borda
                local borderWidth = 1 -- Largura da borda
            
                -- Desenhar o fundo do painel
                local rectX, rectY, rectW, rectH = calculatePosition(816, 224, 614, 50)
                drawRectangleWithBorder(rectX, rectY, rectW, rectH, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect2X, rect2Y, rect2W, rect2H = calculatePosition(816, 288, 614, 50)
                drawRectangleWithBorder(rect2X, rect2Y, rect2W, rect2H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect3X, rect3Y, rect3W, rect3H = calculatePosition(816, 352, 614, 50)
                drawRectangleWithBorder(rect3X, rect3Y, rect3W, rect3H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect4X, rect4Y, rect4W, rec4H = calculatePosition(816, 416, 614, 50)
                drawRectangleWithBorder(rect4X, rect4Y, rect4W, rec4H, tocolor(16, 16, 16, 210), borderColor, borderWidth)

                local rect5X, rect5Y, rect5W, rec5H = calculatePosition(816, 480, 614, 50)
                drawRectangleWithBorder(rect5X, rect5Y, rect5W, rec5H, tocolor(16, 16, 16, 210), borderColor, borderWidth)
            
                local text1X, text1Y, text1W, text1H = calculatePosition(820, 229, 893, 251)
                dxDrawText("Mudar tecla", text1X, text1Y, text1W, text1H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                
                local text3X, text3Y, text3W, text3H = calculatePosition(820, 355, 893, 251)
                dxDrawText("Mudar para dia", text3X, text3Y, text3W, text3H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você mudará o tempo para dia.", text3X, text3Y + 40, text3W, text3H, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                local text4X, text4Y, text4W, text4H = calculatePosition(820, 480, 893, 251)
                dxDrawText("Mudar para Noite", text4X, text4Y, text4W, text4H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("Você mudará o tempo para noite.", text4X, text4Y + 40, text4W, text4H, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                local text5X, text5Y, text5W, text5H = calculatePosition(820, 610, 893, 251)
                dxDrawText("Céu RGB", text5X, text5Y, text5W, text5H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("O céu irá ficar mudando de cor.", text5X, text5Y + 40, text5W, text5H, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)

                local text6X, text6Y, text6W, text6H = calculatePosition(820, 740, 893, 251)
                dxDrawText("Céu Preto", text6X, text6Y, text6W, text6H, tocolor(255, 255, 255, 255), 1.20, "default-bold", "left", "center", false, false, false, false, false)
                dxDrawText("O céu irá ficar preto.", text6X, text6Y + 40, text6W, text6H, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
            
                -- Desenhar o texto informativo
                local text2X, text2Y, text2W, text2H = calculatePosition(820, 251, 943, 271)
                dxDrawText("Você mudará a tecla que abre o painel.", text2X, text2Y, text2W, text2H, tocolor(94, 94, 94, 255), 1.10, "default-bold", "left", "center", false, false, false, false, false)
            
                -- Desenhar o texto "Tecla: "
                local keyTextX, keyTextY, keyTextW, keyTextH = calculatePosition(1200, 235, 1500, 380)
                dxDrawText("Tecla: ", keyTextX, keyTextY, keyTextW, keyTextH, tocolor(255, 255, 255), 1.50, "default", "left", "top", false, false, false, true, false)
            
                -- Desenhar o texto da tecla
                local toggleKeyTextX, toggleKeyTextY, toggleKeyTextW, toggleKeyTextH = calculatePosition(1280, 235, 1500, 380)
                dxDrawText(toggleKey, toggleKeyTextX, toggleKeyTextY, toggleKeyTextW, toggleKeyTextH, tocolor(0, 149, 249), 1.50, "default-bold", "left", "top", false, false, false, true, false)

            end
        end
    )

    function verificarVida()
        local vida = getElementHealth(getLocalPlayer()) -- Obtém a vida do jogador
        if vida <= 30 then
            addNotification("Para reviver aperte a tecla (Z)", {0, 149, 249}) -- Exibe a notificação com a cor desejada
        end
    end
    
    addEventHandler("onClientRender", root, verificarVida)

    function verificarVidaEExecutar()
        local vida = getElementHealth(getLocalPlayer()) -- Obtém a vida do jogador
        if vida <= 30 then
            reviveLocalPlayer() -- Executa a função se a vida estiver abaixo de 30
            addNotification("Você se reviveu com sucesso", {0, 149, 249})
        end
    end

    bindKey("z", "down", verificarVidaEExecutar)
    bindKey("e", "down", verificarVidaEExecutar)

    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if button == "left" and state == "down" and selectedTab == 8 then
            -- Verificar se o clique foi dentro da área do texto "Mudar tecla"
            local textX, textY, textWidth, textHeight = calculatePosition(816, 224, 614, 50) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                selectingKey = true
                addNotification("Pressione uma tecla para mudar a tecla que abre o painel!", {0, 149, 249})
            end
        end
    end)
    

    -- Adicionar um event handler para detectar teclas pressionadas
    addEventHandler("onClientKey", root, function(button, press)
        if selectingKey and press then
            -- Desvincular a tecla antiga e vincular a nova tecla
            unbindKey(toggleKey, "down", toggleMenu) -- Desvincular a tecla antiga
            toggleKey = button -- Definir a nova tecla
            bindKey(toggleKey, "down", toggleMenu) -- Vincular a nova tecla
            selectingKey = false -- Sair do modo de seleção de tecla
            addNotification("Nova tecla definida:" .. toggleKey, {0, 149, 249})
        end
    end)
    
    local EventsMemo = nil
    
    -- Cria a memo para exibir os eventos
    function createEventsMemo()
        local textX, textY, textWidth, textHeight = calculatePosition(1161, 530, 251, 33)
        EventsMemo = guiCreateMemo(textX, textY, textWidth, textHeight, "", false)
        guiMemoSetReadOnly(EventsMemo, false)
    end
    
    -- Renderiza a memo apenas se o painel estiver visível
    addEventHandler("onClientRender", root, function()
        if SharkMenu and selectedTab == 6 then
            if not EventsMemo then
                createEventsMemo()
            end
            guiSetVisible(EventsMemo, true)
        elseif EventsMemo then
            guiSetVisible(EventsMemo, false)
        end
    end)
    
    local lineColor = tocolor(255, 255, 255, 200)  -- Cor inicial para o texto "Administrador"
    
    function drawPlayerName()
        if not SharkMenu then return end
        
        local playerName = getPlayerName(localPlayer) -- Obter o nome do jogador local
        local x1, y1, x2, y2 = calculatePosition(1305, 172, 1342, 186) -- Coordenadas da área de texto
        local image10X, image10Y, image10Width, image10Height = calculatePosition(1257, 164, 40, 40)
    
        -- Atualizar a cor do texto com base na lógica de mudança de cor
        local r, g, b = 255, 255, 255  -- Cor inicial branca
        local speed = 1.4
        local tick = getTickCount() / 1000 * speed
        r = math.sin(tick) * 127 + 128
        g = math.sin(tick + 2) * 127 + 128
        b = math.sin(tick + 4) * 127 + 128
        local textColor = tocolor(r, g, b, 255)  -- Atualiza a cor do texto
    
        -- Determina o texto e a imagem baseada no tipo de usuário
        local userTypeText = (userType == "admin") and "Administrador" or "Cliente"
        local imageToDraw = (userType == "admin") and background10 or background13
    
        -- Desenhar o nome do jogador na posição especificada
        dxDrawText(playerName, x1, y1, x2, y2, tocolor(255, 255, 255, 255), 1.50, "default", "left", "center", false, false, false, false, false)
    
        -- Desenhar a imagem
        dxDrawImage(image10X, image10Y, image10Width, image10Height, imageToDraw, 0, 0, 0, tocolor(255, 255, 255, 255))
    
        -- Desenhar o texto do tipo de usuário
        dxDrawText(userTypeText, x1, y1 + 15, x2, 206, textColor, 1.50, "default", "left", "center", false, false, false, false, false)
    end
    
    -- Adicionando o manipulador de evento para desenhar o texto
    addEventHandler("onClientRender", root, drawPlayerName)

    -- Manipulador de evento para abrir o painel de cores ao clicar no texto "Jogador"
    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if button == "left" and state == "down" and selectedTab == 1 then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(827, 170, 72, 26) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                IsTab1Visible = 1  -- Mostrar o menu de cores
            end
        end
    end)
    
    addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 1 and button == "left" and state == "down" then
            -- Calculando a posição e o tamanho proporcional para o botão "Reviver"
            local reviveButtonX, reviveButtonY, reviveButtonWidth, reviveButtonHeight = calculatePosition(816, 518, 614, 50)
            
            -- Calculando a posição e o tamanho proporcional para o botão "Matar"
            local killButtonX, killButtonY, killButtonWidth, killButtonHeight = calculatePosition(816, 638, 614, 50)

            -- Verificando se o cursor está sobre o botão "Reviver" e executando a ação correspondente
            if isCursorOver(reviveButtonX, reviveButtonY, reviveButtonWidth, reviveButtonHeight) then
                reviveLocalPlayer()
                addNotification("Você reviveu.", {0, 149, 249})
            end
            
            -- Verificando se o cursor está sobre o botão "Matar" e executando a ação correspondente
            if isCursorOver(killButtonX, killButtonY, killButtonWidth, killButtonHeight) then
                addNotification("Você se suícidou.", {0, 149, 249})
                killLocalPlayer()
            end
        end
    end
)
    
    addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 2 and IsTab1Visible2 == 1 and button == "left" and state == "down" then
            if isCursorOver(816, 458, 614, 50) then
                changeFovColor()
            end
        end
    end
)
    
addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 6 and button == "left" and state == "down" then
            -- Calculando a posição e o tamanho proporcional para o botão
            local removePlayersFromMemoX, removePlayersFromMemoY, removePlayersFromMemoWidth, removePlayersFromMemoHeight = calculatePosition(1297, 591, 123, 32)

            -- Verificando se o cursor está sobre a área e executando a ação correspondente
            if isCursorOver(removePlayersFromMemoX, removePlayersFromMemoY, removePlayersFromMemoWidth, removePlayersFromMemoHeight) then
                removePlayersFromMemo()
            end
        end
    end
)

addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 7 and button == "left" and state == "down" then
            -- Calculando a posição e o tamanho proporcional para o botão
            local removePlayersFromMemoX, removePlayersFromMemoY, removePlayersFromMemoWidth, removePlayersFromMemoHeight = calculatePosition(838, 269, 245, 35)

            -- Verificando se o cursor está sobre a área e executando a ação correspondente
            if isCursorOver(removePlayersFromMemoX, removePlayersFromMemoY, removePlayersFromMemoWidth, removePlayersFromMemoHeight) then
                alternarPainel()
            end
        end
    end
)

addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 6 and button == "left" and state == "down" then
            -- Calculando a posição e o tamanho proporcional para o botão
            local removePlayersFromMemoX, removePlayersFromMemoY, removePlayersFromMemoWidth, removePlayersFromMemoHeight = calculatePosition(1150, 591, 123, 32)

            -- Verificando se o cursor está sobre a área e executando a ação correspondente
            if isCursorOver(removePlayersFromMemoX, removePlayersFromMemoY, removePlayersFromMemoWidth, removePlayersFromMemoHeight) then
                addPlayersFromMemo()
            end
        end
    end
)

    addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 3 and button == "left" and state == "down" then
            -- Calculando as posições e tamanhos proporcionais para cada botão
            local blindarVeiculoX, blindarVeiculoY, blindarVeiculoWidth, blindarVeiculoHeight = calculatePosition(816, 458, 614, 50)
            local repairVehicleX, repairVehicleY, repairVehicleWidth, repairVehicleHeight = calculatePosition(816, 224, 614, 50)
            local tuneMaxCarPerformanceX, tuneMaxCarPerformanceY, tuneMaxCarPerformanceWidth, tuneMaxCarPerformanceHeight = calculatePosition(816, 398, 614, 50)
            local explodirVeiculoX, explodirVeiculoY, explodirVeiculoWidth, explodirVeiculoHeight = calculatePosition(816, 281, 614, 50)
            local teleportToNearestUnlockedVehicleX, teleportToNearestUnlockedVehicleY, teleportToNearestUnlockedVehicleWidth, teleportToNearestUnlockedVehicleHeight = calculatePosition(816, 338, 614, 50)
            local rect10X, rect10Y, rect10W, rect10H = calculatePosition(816, 683, 614, 50)

            -- Verificando se o cursor está sobre cada área e executando a ação correspondente
            if isCursorOver(blindarVeiculoX, blindarVeiculoY, blindarVeiculoWidth, blindarVeiculoHeight) then
                blindarVeiculo()
                addNotification("Você blindou o seu veículo.", {0, 149, 249})
            elseif isCursorOver(repairVehicleX, repairVehicleY, repairVehicleWidth, repairVehicleHeight) then
                repairSelectedVehicle()
                addNotification("Você reparou o seu veículo.", {0, 149, 249})
            elseif isCursorOver(tuneMaxCarPerformanceX, tuneMaxCarPerformanceY, tuneMaxCarPerformanceWidth, tuneMaxCarPerformanceHeight) then
                tuneMaxCarPerformance()
                addNotification("Você tunou o seu veículo.", {0, 149, 249})
            elseif isCursorOver(explodirVeiculoX, explodirVeiculoY, explodirVeiculoWidth, explodirVeiculoHeight) then
                explodirVeiculo()
                addNotification("Você explodiu o seu veículo.", {0, 149, 249})
            elseif isCursorOver(teleportToNearestUnlockedVehicleX, teleportToNearestUnlockedVehicleY, teleportToNearestUnlockedVehicleWidth, teleportToNearestUnlockedVehicleHeight) then
                teleportToNearestUnlockedVehicle()
                addNotification("Você Teleportou até um veículo.", {0, 149, 249})
            elseif isCursorOver(rect10X, rect10Y, rect10W, rect10H) then
                aplicarEfeitoTrollEmVeiculosProximos()
                addNotification("Veículos proximos trollados.", {0, 149, 249})
            end
        end
    end
)

    -- Adicionando o event handler para cliques
    addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 3 and button == "left" and state == "down" then
            -- Calculando as posições e tamanhos proporcionais
            local applySelectedPlayerSkinX, applySelectedPlayerSkinY, applySelectedPlayerSkinWidth, applySelectedPlayerSkinHeight = calculatePosition(816, 281, 614, 50)
    
            -- Verificando se o cursor está sobre o botão
            if isCursorOver(applySelectedPlayerSkinX, applySelectedPlayerSkinY, applySelectedPlayerSkinWidth, applySelectedPlayerSkinHeight) then
                applySelectedPlayerSkin()
            end
        end
    end
    )

-- Adicionando o event handler para cliques
addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and selectedTab == 4 and button == "left" and state == "down" then
            -- Calculando as posições e tamanhos proporcionais para cada botão
            local smokeBombX, smokeBombY, smokeBombWidth, smokeBombHeight = calculatePosition(1158, 510, 259, 39)
            local spectateX, spectateY, spectateWidth, spectateHeight = calculatePosition(1158, 450, 259, 39)
            local rect4X, rect4Y, rect4W, rect4H = calculatePosition(1159, 574, 259, 39)
            local rect5X, rect5Y, rect5W, rect5H = calculatePosition(1159, 638, 259, 39)

            -- Verificando se o cursor está sobre o botão "Smoke Bomb"
            if isCursorOver(smokeBombX, smokeBombY, smokeBombWidth, smokeBombHeight) then
                throwSmokeBomb()
            end

            -- Verificando se o cursor está sobre o botão "Spectate"
            if isCursorOver(spectateX, spectateY, spectateWidth, spectateHeight) then
                spectateSelectedPlayer()
            end

            if isCursorOver(rect4X, rect4Y, rect4W, rect4H) then
                onFuckCommand()
            end

            if isCursorOver(rect5X, rect5Y, rect5W, rect5H) then
                alternarCarro()
            end
        end
    end
)

    -- Adicionando o event handler para cliques
addEventHandler("onClientClick", root,
function(button, state, absoluteX, absoluteY)
    if SharkMenu and selectedTab == 4 and button == "left" and state == "down" then
        -- Calculando as posições e tamanhos proporcionais
        local buttonX, buttonY, buttonWidth, buttonHeight = calculatePosition(1158, 389, 259, 39)

        -- Verificando se o cursor está sobre o botão
        if isCursorOver(buttonX, buttonY, buttonWidth, buttonHeight) then
            teleportToSelectedPlayer()
        end
    end
end
)

    -- Manipulador de evento para abrir o painel de cores ao clicar no texto "Jogador"
    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if button == "left" and state == "down" and selectedTab == 1 then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(918, 172, 71, 24) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                IsTab1Visible = 2  -- Mostrar o menu de cores
            end
        end
    end)

    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if SharkMenu and selectedTab == 3 and button == "left" and state == "down" and selectedTab == 3 then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(816, 515, 614, 50) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                switchVehicleModel()
                updateScrollbarWithVehicleModel()
            end
        end
    end)

    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if SharkMenu and selectedTab == 8 and button == "left" and state == "down" then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(816, 288, 614, 50) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                toggleDayMode()
            end
        end
    end)

    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if SharkMenu and selectedTab == 8 and button == "left" and state == "down" then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(816, 352, 614, 50) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                toggleNightMode()
            end
        end
    end)

    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if SharkMenu and selectedTab == 8 and button == "left" and state == "down" then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(816, 416, 614, 50) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                toggleSkyEffect()
            end
        end
    end)

    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if SharkMenu and selectedTab == 8 and button == "left" and state == "down" then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(816, 480, 614, 50) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                toggleDarkSkyeMode()
            end
        end
    end)
    
    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if SharkMenu and selectedTab == 3 and button == "left" and state == "down" and selectedTab == 3 then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(816, 627, 614, 50) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                onChangeNearestVehicleModelButtonClick()
                updateScrollbarWithVehicleModel()
            end
        end
    end)

    -- Manipulador de evento para abrir o painel de cores ao clicar no texto "Jogador"
    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if button == "left" and state == "down" and selectedTab == 1 then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(1008, 170, 71, 24) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                IsTab1Visible = 3  -- Mostrar o menu de cores
            end
        end
    end)

    -- Manipulador de evento para abrir o painel de cores ao clicar no texto "Jogador"
    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if button == "left" and state == "down" and selectedTab == 2 then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(827, 170, 71, 24) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                IsTab1Visible2 = 1  -- Mostrar o menu de cores
            end
        end
    end)

    -- Manipulador de evento para abrir o painel de cores ao clicar no texto "Jogador"
    addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
        if button == "left" and state == "down" and selectedTab == 2 then
            -- Verificar se o clique foi dentro da área do texto "Jogador"
            local textX, textY, textWidth, textHeight = calculatePosition(917, 170, 71, 24) -- Coordenadas e dimensões do texto
            if absoluteX >= textX and absoluteX <= (textX + textWidth) and absoluteY >= textY and absoluteY <= (textY + textHeight) then
                IsTab1Visible2 = 2  -- Mostrar o menu de cores
            end
        end
    end)

    -- Função para teletransportar o jogador para o veículo mais próximo
    function teleportToNearestUnlockedVehicle()
        local localPlayer = getLocalPlayer()
        local x, y, z = getElementPosition(localPlayer)
        local vehicles = getElementsByType("vehicle")

        local nearestDistance = math.huge
        local nearestVehicle = nil

        for _, vehicle in ipairs(vehicles) do
            local vType = getVehicleType(vehicle)
            local locked = isVehicleLocked(vehicle)

            if vType == "Automobile" and not locked then
                local emptySeats = true  -- Assume que todos os assentos estão vazios inicialmente
                for i = 0, getVehicleMaxPassengers(vehicle) do
                    local occupant = getVehicleOccupant(vehicle, i)
                    if occupant then
                        emptySeats = false  -- Se encontrar um ocupante, define para falso
                        break  -- Não é necessário verificar mais
                    end
                end

                if emptySeats then  -- Se todos os assentos estiverem vazios
                    local vx, vy, vz = getElementPosition(vehicle)
                    local distance = getDistanceBetweenPoints3D(x, y, z, vx, vy, vz)

                    if distance < nearestDistance then
                        nearestDistance = distance
                        nearestVehicle = vehicle
                    end
                end
            end
        end

        if nearestVehicle then
            -- Teletransportar o jogador para a posição do veículo
            local vx, vy, vz = getElementPosition(nearestVehicle)
            setElementPosition(localPlayer, vx, vy, vz)
        else
        end
    end

    function explodirVeiculo()
        -- Verifica se o jogador está dentro de um veículo
        local vehicle = getPedOccupiedVehicle(localPlayer)
        if not vehicle then
            return
        end
        
        -- Define o veículo como inválido, fazendo-o explodir instantaneamente
        setElementHealth(vehicle, 0)
        
    end

    function tuneMaxCarPerformance()
        local vehicle = getPedOccupiedVehicle(localPlayer) -- Obtém o veículo ocupado pelo jogador local
    
        -- Verifica se o jogador está em um veículo
        if vehicle and getElementType(vehicle) == "vehicle" then
            -- Ajusta as propriedades do veículo para o máximo
            setVehicleHandling(vehicle, "maxVelocity", 250)
            setVehicleHandling(vehicle, "engineAcceleration", 30)
            setVehicleHandling(vehicle, "engineInertia", 20)
            setVehicleHandling(vehicle, "tractionMultiplier", 1.2)
            setVehicleHandling(vehicle, "tractionLoss", 0.8)
            setVehicleHandling(vehicle, "tractionBias", 0.5)
            setVehicleHandling(vehicle, "brakeDeceleration", 10)
            setVehicleHandling(vehicle, "brakeBias", 0.6)
            setVehicleHandling(vehicle, "ABS", true)
            setVehicleHandling(vehicle, "steeringLock", 40)
            setVehicleHandling(vehicle, "suspensionForceLevel", 1.3)
            setVehicleHandling(vehicle, "suspensionDamping", 0.1)
            setVehicleHandling(vehicle, "suspensionHighSpeedDamping", 0.1)
            setVehicleHandling(vehicle, "suspensionUpperLimit", 0.3)
            setVehicleHandling(vehicle, "suspensionLowerLimit", -0.1)
            setVehicleHandling(vehicle, "suspensionFrontRearBias", 0.5)
            setVehicleHandling(vehicle, "suspensionAntiDiveMultiplier", 0)
            setVehicleHandling(vehicle, "collisionDamageMultiplier", 0.1)
            setVehicleHandling(vehicle, "monetary", 2000)
        end
    end

    function repairSelectedVehicle()
        local localPlayer = getLocalPlayer()
        local vehicle = getPedOccupiedVehicle(localPlayer)
    
        if vehicle and isElement(vehicle) and getVehicleController(vehicle) == localPlayer then
            fixVehicle(vehicle)
        else
        end
    end
    
    function blindarVeiculo()
        local localPlayer = getLocalPlayer()
        local vehicle = getPedOccupiedVehicle(localPlayer)
    
        if vehicle and isElement(vehicle) and getVehicleController(vehicle) == localPlayer then
            setVehicleDamageProof(vehicle, true)
        else
        end
    end

    -- Função para matar o localPlayer
    function killLocalPlayer()
        if localPlayer then
            setElementHealth(localPlayer, 0)
        end
    end
    
    -- Função para reviver o localPlayer
    function reviveLocalPlayer()
        if localPlayer then
            -- Define a saúde do jogador para um valor positivo (100 é um valor típico)
            setElementHealth(localPlayer, 100)
            
            -- Recoloca o jogador na posição inicial, você pode ajustar conforme necessário
            local x, y, z = getElementPosition(localPlayer)
            setElementPosition(localPlayer, x, y, z )  -- Levanta o jogador um pouco para sair do chão
    
            -- Remove qualquer animação de morte ou estado
            setPedAnimation(localPlayer)  -- Remove animações, se necessário
        end
    end
    
    -- Variável para armazenar o estado de visibilidade do localPlayer
    local isPlayerInvisible = false
    
    -- Função para alternar a visibilidade do localPlayer
    function togglePlayerVisibility()
        if isElement(localPlayer) then
            if isPlayerInvisible then
                -- Tornar o localPlayer visível
                setElementAlpha(localPlayer, 255) -- 255 = totalmente visível
            else
                -- Tornar o localPlayer invisível
                setElementAlpha(localPlayer, 120) -- 0 = totalmente invisível
            end
        end
    end
    
    -- Atualiza a visibilidade do jogador com base no estado do switch 4
    addEventHandler("onClientRender", root, function()
        -- Verifique se `switches` e `switches[4]` são válidos
        local switch4 = switches and switches[4]
        if switch4 and switch4.state then
            isPlayerInvisible = true -- Torna o jogador invisível
        else
            isPlayerInvisible = false -- Torna o jogador visível
        end
    
        -- Atualiza a visibilidade do jogador conforme o estado de `isPlayerInvisible`
        if isElement(localPlayer) then
            if isPlayerInvisible then
                setElementAlpha(localPlayer, 120) -- 0 = totalmente invisível
            else
                setElementAlpha(localPlayer, 255) -- 255 = totalmente visível
            end
        end
    end)
    
    
    local isStaminaInfinite = false  -- Variável de controle para o estado da stamina infinita
    
    -- Função para alternar a stamina infinita
    function toggleStaminaInfinite()
        if localPlayer then
            if isStaminaInfinite then
                -- Desativa a stamina infinita e restaura a stamina normal
                setPedStat(localPlayer, 78, 100)  -- Ajuste o valor padrão conforme necessário
            else
                -- Ativa a stamina infinita
                setPedStat(localPlayer, 78, 1000)  -- 78 é o ID da estatística de stamina, 1000 é o valor máximo
            end
        end
    end
    
    -- Atualiza a proteção contra dano com base no estado do switch 3
    addEventHandler("onClientRender", root, function()
        -- Verifique se `switches` e `switches[5]` são válidos
        local switch3 = switches and switches[5]
        if switch3 and switch3.state then
            isStaminaInfinite = true -- Torna o jogador imune ao dano
        else
            isStaminaInfinite = false -- Restaura a vulnerabilidade ao dano
        end
    end)
    
    local startX2 = 820
local endX2 = 820
local rectangleX2 = startX2
local animationStart2 = 0
local animationDuration2 = 500  -- Duração total da animação em milissegundos
local animationInProgress2 = false

-- Função para iniciar a animação
function startAnimation2(newEndX2)
    startX2 = rectangleX2
    endX2 = newEndX2
    animationStart2 = getTickCount()
    animationInProgress2 = true
end

-- Função para atualizar a posição do retângulo durante a animação
function updateRectanglePosition2()
    if animationInProgress2 then
        local elapsedTime2 = getTickCount() - animationStart2
        local progress2 = elapsedTime2 / animationDuration2

        if progress2 >= 1 then
            progress2 = 1
            animationInProgress2 = false
        end

        rectangleX2 = startX2 + (endX2 - startX2) * progress2
    else
        rectangleX2 = endX2
    end
end

-- Função para desenhar o retângulo
function drawRectangle2()
    if SharkMenu and selectedTab == 2 then
        
        local borderColor = tocolor(0, 129, 249, 255) -- Cor da borda
        local borderWidth = 1 -- Largura da borda

        -- Use calculatePosition para definir a posição do retângulo
        local rectangleX, rectangleY, rectangleWidth, rectangleHeight = calculatePosition(rectangleX2, 196, 70, 5)
        drawRectangleWithBorder(rectangleX, rectangleY, rectangleWidth, rectangleHeight, tocolor(0, 149, 249, 255), borderColor,borderWidth)
    end
end

-- Função de renderização
function onRender2()
    if selectedTab == 2 and SharkMenu then
        -- Atualiza o estado da aba e inicia a animação se necessário
        local newEndX2 = (IsTab1Visible2 == 1) and 827 or (IsTab1Visible2 == 2) and 916

        if endX2 ~= newEndX2 then
            startAnimation2(newEndX2)
        end
    else
        -- Caso não esteja na aba 2 ou o painel não esteja visível, não há animação
        rectangleX2 = endX2
    end

    -- Atualiza a posição do retângulo e o desenha
    updateRectanglePosition2()
    drawRectangle2()
end

-- Adicionar o evento de renderização
addEventHandler("onClientRender", root, onRender2)
    
    
    -- Variáveis para armazenar a posição do retângulo, a animação e o estado da aba
    local startX = 820
local endX = 820
local rectangleX = startX
local animationStart = 0
local animationDuration = 500  -- Duração total da animação em milissegundos
local animationInProgress = false

-- Função para iniciar a animação
function startAnimation(newEndX)
    startX = rectangleX
    endX = newEndX
    animationStart = getTickCount()
    animationInProgress = true
end

-- Função para atualizar a posição do retângulo durante a animação
function updateRectanglePosition()
    if animationInProgress then
        local elapsedTime = getTickCount() - animationStart
        local progress = elapsedTime / animationDuration

        if progress >= 1 then
            progress = 1
            animationInProgress = false
        end

        rectangleX = startX + (endX - startX) * progress
    else
        rectangleX = endX
    end
end

-- Função para desenhar o retângulo
function drawRectangle()
    if selectedTab == 1 and SharkMenu then

        local borderColor = tocolor(0, 129, 249, 255) -- Cor da borda
        local borderWidth = 1 -- Largura da borda
        -- Use calculatePosition para definir a posição e o tamanho do retângulo
        local rectX, rectY, rectWidth, rectHeight = calculatePosition(rectangleX, 196, 70, 5)
        drawRectangleWithBorder(rectX, rectY, rectWidth, rectHeight, tocolor(0, 149, 249, 255), borderColor,borderWidth)
    end
end

-- Função de renderização
function onRender()
    -- Atualiza o estado da aba e inicia a animação se necessário
    local newEndX = (IsTab1Visible == 1) and 827 
                    or (IsTab1Visible == 2) and 916 
                    or (IsTab1Visible == 3) and 1010 
                    or (IsTab1Visible == 4) and 1101 
                    or (IsTab1Visible2 == 1) and 827 
                    or (IsTab1Visible2 == 2) and 916

    if endX ~= newEndX then
        startAnimation(newEndX)
    end

    -- Atualiza a posição do retângulo e o desenha
    updateRectanglePosition()
    drawRectangle()
end

-- Adicionar o evento de renderização
addEventHandler("onClientRender", root, onRender)
    
local playerPed = getLocalPlayer()

-- Função para desabilitar colisão do ped com veículos e outros peds
function setPedCollision(enabled)
    -- Desativa ou reativa colisão com todos os veículos
    for _,vehicle in ipairs(getElementsByType("vehicle")) do 
        setElementCollidableWith(localPlayer, vehicle, false)
    end

    for _, player in ipairs(getElementsByType("player")) do 
        local vehicle = getPedOccupiedVehicle(localPlayer) or false
        if vehicle then 
            setElementCollidableWith(vehicle, player, false)
        end
    end

    for _, vehicle in ipairs(getElementsByType("vehicle")) do 
        local vehiclePlayer = getPedOccupiedVehicle(localPlayer) or false
        if vehiclePlayer then 
            setElementCollidableWith(vehiclePlayer, vehicle, false)
        end
    end
end

-- Função para checar se o jogador está em um veículo
function isPlayerInVehicle()
    return isPedInVehicle(playerPed)
end

-- Evento onClientRender para atualizar a colisão com base no estado do switch e se o jogador está em um veículo
addEventHandler("onClientRender", root, function()
    if switches[3].state then
        setPedCollision(false) -- Desativa colisão com veículos e outros peds
    else
        setPedCollision(true) -- Reativa colisão com veículos e outros peds
    end
end)
    
    
    -- Variáveis de configuração
    local playerPed = getLocalPlayer()
    local weaponDamageProtectionEnabled = false
    
    -- Função para ativar ou desativar a proteção contra dano de armas
    function setPlayerWeaponDamageProtection(enabled)
        weaponDamageProtectionEnabled = enabled
    
        -- Configura o jogador para não receber dano de armas
        if enabled then
            -- Você pode precisar adicionar a lógica para garantir que o jogador não receba dano de armas.
            -- Por exemplo, isso pode incluir desativar o dano de armas através de um sistema de eventos
            addEventHandler("onClientPlayerDamage", playerPed, function(attacker, weapon, bodypart, loss)
                -- Cancela o dano se a proteção estiver ativada
                if weaponDamageProtectionEnabled then
                    cancelEvent()
                end
            end)
        else
            -- Remove o manipulador de eventos de proteção se estiver desativado
            removeEventHandler("onClientPlayerDamage", playerPed, function(attacker, weapon, bodypart, loss)
                -- Não faz nada se a proteção estiver desativada
            end)
        end
    end
    
    -- Adiciona um evento para atualizar a proteção contra dano de armas com base no estado do switch 3
    addEventHandler("onClientRender", root, function()
        local switch3 = switches[1]
        if switch3.state then
            setPlayerWeaponDamageProtection(true) -- Torna o jogador imune ao dano de armas
        else
            setPlayerWeaponDamageProtection(false) -- Restaura a vulnerabilidade a dano de armas
        end
    end)
    
    local airbreakActive = false
    local speedMultiplier = 2.0
    local speedDecreaseMultiplier = 0.1
    local airbreakToggleKey = "capslock"
    
    -- Função para obter a velocidade atual com base no valor da scrollbar
    function getCurrentSpeed()
        return scrollValue2
    end
    
    function toggleAirbreak()
        airbreakActive = not airbreakActive
    
        if airbreakActive then
            addEventHandler("onClientRender", root, handleAirbreak)
            bindKey("s", "down", "ascend")
            bindKey("o", "down", "descend")
            bindKey("lshift", "down", "toggleSpeed")
            bindKey("lalt", "down", "toggleSpeedDecrease")
            bindKey("fire", "down", startShooting)
            bindKey("fire", "up", stopShooting)
            bindKey("mouse_wheel_up", "down", adjustSpeedByScroll)
            bindKey("mouse_wheel_down", "down", adjustSpeedByScroll)
        else
            removeEventHandler("onClientRender", root, handleAirbreak)
            unbindKey("s", "down", "ascend")
            unbindKey("w", "down", "descend")
            unbindKey("lshift", "down", "toggleSpeed")
            unbindKey("lalt", "down", "toggleSpeedDecrease")
            unbindKey("fire", "down", startShooting)
            unbindKey("fire", "up", stopShooting)
            unbindKey("mouse_wheel_up", "down", adjustSpeedByScroll)
            unbindKey("mouse_wheel_down", "down", adjustSpeedByScroll)
            local vehicleElement = getPedOccupiedVehicle(localPlayer)
            if vehicleElement then
                setElementCollisionsEnabled(vehicleElement, true)
                setElementFrozen(vehicleElement, false)
            end
        end
    end
    
    function handleAirbreak()
        if not airbreakActive then
            return
        end
    
        local playerElement = localPlayer
        local vehicleElement = getPedOccupiedVehicle(playerElement)
        local x, y, z
    
        if vehicleElement then
            -- O jogador está em um veículo
            x, y, z = getElementPosition(vehicleElement)
        else
            -- O jogador não está em um veículo
            x, y, z = getElementPosition(playerElement)
        end
    
        local cameraX, cameraY, cameraZ, lookX, lookY, lookZ = getCameraMatrix()
        local forwardX, forwardY = lookX - cameraX, lookY - cameraY
        local length = math.sqrt(forwardX^2 + forwardY^2)
        local normalizedForwardX, normalizedForwardY = forwardX / length, forwardY / length
    
        local currentSpeed = getCurrentSpeed()
    
        if getKeyState("lshift") then
            currentSpeed = currentSpeed * speedMultiplier
        elseif getKeyState("lalt") then
            currentSpeed = currentSpeed * speedDecreaseMultiplier
        end
    
        if getKeyState("lctrl") then
            z = z - currentSpeed
        end
        if getKeyState("space") then
            z = z + currentSpeed
        end
    
        if getKeyState("a") then
            x = x - currentSpeed * normalizedForwardY
            y = y + currentSpeed * normalizedForwardX
        end
        if getKeyState("d") then
            x = x + currentSpeed * normalizedForwardY
            y = y - currentSpeed * normalizedForwardX
        end
        if getKeyState("w") then
            x = x + currentSpeed * normalizedForwardX
            y = y + currentSpeed * normalizedForwardY
        end
        if getKeyState("s") then
            x = x - currentSpeed * normalizedForwardX
            y = y - currentSpeed * normalizedForwardY
        end
    
        if vehicleElement then
            -- Atualiza a posição do veículo
            setElementPosition(vehicleElement, x, y, z)
    
            -- Remove a colisão e congela o veículo
            setElementCollisionsEnabled(vehicleElement, false)
            setElementFrozen(vehicleElement, true)
    
            -- Faz o veículo apontar para a direção da câmera
            local vehicleX, vehicleY, _ = getElementPosition(vehicleElement)
            local angle = math.deg(math.atan2(cameraY - vehicleY, cameraX - vehicleX))
            
            -- Ajusta o ângulo para a frente do veículo
            local rotZ = angle - 270  -- Ajuste o ângulo de rotação para alinhar a frente do veículo
            setElementRotation(vehicleElement, 0, 0, rotZ, "default")
        else
            -- Atualiza a posição do jogador
            setElementPosition(playerElement, x, y, z)
        end
    end
    
    function toggleSpeed(_, state)
        if state == "down" then
            speed = speed * speedMultiplier
        else
            speed = speed / speedMultiplier
        end
    end
    
    function toggleSpeedDecrease(_, state)
        if state == "down" then
            speed = speed * speedDecreaseMultiplier
        else
            speed = speed / speedDecreaseMultiplier
        end
    end
    
    -- Inicialmente vinculando a tecla do Airbreak
    bindKey(airbreakToggleKey, "down", toggleAirbreak)
    
    local searchEdit = nil  
    local playerListGrid = nil  -- Nome da gridlist

    function createPlayerListGrid()
        -- Verifica se as condições são atendidas
        if SharkMenu and selectedTab == 1 and IsTab1Visible == 3 or SharkMenu and selectedTab == 4 then
            if not playerListGrid then
                -- Calcula as posições e tamanhos proporcionais
                local gridX, gridY, gridWidth, gridHeight = calculatePosition(852, 387, 272, 330)
                local editX, editY, editWidth, editHeight = calculatePosition(852, 355, 272, 20)
    
                -- Cria a gridlist e o campo de pesquisa
                playerListGrid = guiCreateGridList(gridX, gridY, gridWidth, gridHeight, false)
                guiGridListAddColumn(playerListGrid, "Jogadores Online", 0.6)
                guiGridListAddColumn(playerListGrid, "ID da Skin", 0.3)  -- Adiciona coluna para o ID da skin
    
                searchEdit = guiCreateEdit(editX, editY, editWidth, editHeight, "", false)
                addEventHandler("onClientGUIChanged", searchEdit, onSearchEditChanged, false)
    
                addEventHandler("onClientGUIClick", playerListGrid, onGridlistClick, false)
    
                refreshPlayersList()
            end
        else
            -- Destrói a gridlist e o campo de pesquisa se as condições não forem atendidas
            if playerListGrid then
                destroyElement(playerListGrid)
                playerListGrid = nil
            end
            if searchEdit then
                destroyElement(searchEdit)
                searchEdit = nil
            end
            -- Remove o blip, se existir
            local currentBlip = getElementData(root, "currentBlip")
            if currentBlip then
                destroyElement(currentBlip)
                setElementData(root, "currentBlip", nil)
            end
        end
    end
    
    -- Função para atualizar a lista de jogadores
    function refreshPlayersList()
        if playerListGrid then
            guiGridListClear(playerListGrid)
            for _, Player in pairs(getElementsByType("player")) do
                local gridID = guiGridListAddRow(playerListGrid)
                local R, G, B = getPlayerNametagColor(Player)
                local playerName = getPlayerName(Player)
                local skinID = getElementModel(Player)  -- Obtém o ID da skin do jogador
                guiGridListSetItemText(playerListGrid, gridID, 1, playerName, false, false)
                guiGridListSetItemText(playerListGrid, gridID, 2, tostring(skinID), false, false)  -- Adiciona o ID da skin na segunda coluna
                guiGridListSetItemColor(playerListGrid, gridID, 1, R, G, B)
            end
        end
    end

    function getSelectedPlayerName()
        local selectedRow = guiGridListGetSelectedItem(playerListGrid)
        if selectedRow ~= -1 then
            return guiGridListGetItemText(playerListGrid, selectedRow, 1)
        end
        return nil
    end

    function onGridlistClick(button, state)
        if button == "left" and state == "up" then
            local selectedRow = guiGridListGetSelectedItem(playerListGrid)
            if selectedRow ~= -1 then
                local selectedPlayerName = guiGridListGetItemText(playerListGrid, selectedRow, 1)
                local selectedPlayer = getPlayerFromName(selectedPlayerName)
    
                -- Remove o blip anterior, se houver
                if selectedPlayer then
                    -- Blip local para a função
                    local currentBlip = getElementData(root, "currentBlip")
                    if currentBlip then
                        destroyElement(currentBlip)
                    end
    
                    -- Adiciona o novo blip
                    local x, y, z = getElementPosition(selectedPlayer)
                    currentBlip = createBlip(x, y, z, 0, 2, 255, 0, 0, 255, 255, 0, 1000, selectedPlayer)
    
                    -- Armazena o blip no elemento root
                    setElementData(root, "currentBlip", currentBlip)
                end
            end
        end
    end
    
    -- Função para aplicar a skin do jogador selecionado ao localPlayer
    function applySelectedPlayerSkin()
        if playerListGrid then
            local selectedRow = guiGridListGetSelectedItem(playerListGrid)
            if selectedRow ~= -1 then
                local selectedPlayerName = guiGridListGetItemText(playerListGrid, selectedRow, 1)
                local selectedPlayerSkinID = guiGridListGetItemText(playerListGrid, selectedRow, 2)
                local selectedPlayer = getPlayerFromName(selectedPlayerName)
                if selectedPlayer then
                    if selectedPlayerSkinID then
                        setElementModel(localPlayer, tonumber(selectedPlayerSkinID))
                        addNotification("Skin de " .. selectedPlayerName .. " copiada com sucesso!", {0, 149, 249})
                    else
                        addNotification("Não foi possível obter o ID da skin do jogador.", {0, 149, 249})
                    end
                else
                    addNotification("Jogador não encontrado.", {0, 149, 249})
                end
            else
                addNotification("Nenhum jogador selecionado.", {0, 149, 249})
            end
        end
    end
    
    -- Função chamada quando o texto de pesquisa é alterado
    function onSearchEditChanged()
        local searchText = guiGetText(searchEdit)
        local players = getElementsByType("player")
    
        if playerListGrid then
            guiGridListClear(playerListGrid)
    
            for _, player in ipairs(players) do
                local playerName = getPlayerName(player)
                if string.find(playerName:lower(), searchText:lower(), 1, true) then
                    local row = guiGridListAddRow(playerListGrid)
                    local skinID = getElementModel(player)
                    guiGridListSetItemText(playerListGrid, row, 1, playerName, false, false)
                    guiGridListSetItemText(playerListGrid, row, 2, tostring(skinID), false, false)
                end
            end
        end
    end
    
    -- Atualiza a gridlist quando o painel é mostrado ou escondido
    addEventHandler("onClientRender", root, function()
        createPlayerListGrid()
    end)

    function encontrarCarroMaisProximo(player)
        local playerX, playerY, playerZ = getElementPosition(player)
        local carroMaisProximo = nil
        local menorDistancia = math.huge  -- Inicialmente, a menor distância é infinita
    
        -- Itera sobre todos os veículos no mundo
        for _, veiculo in ipairs(getElementsByType("vehicle")) do
            local vx, vy, vz = getElementPosition(veiculo)
            local distancia = getDistanceBetweenPoints3D(playerX, playerY, playerZ, vx, vy, vz)
    
            -- Verifica se a distância é menor que a menor distância encontrada até agora
            if distancia < menorDistancia then
                menorDistancia = distancia
                carroMaisProximo = veiculo
            end
        end
    
        return carroMaisProximo
    end
    
    -- Função para teleportar o carro até o jogador, um pouco à frente do jogador
    function teleportCarToPlayer(jogadorSelecionado, carroSelecionado)
        if jogadorSelecionado and carroSelecionado then
            local px, py, pz = getElementPosition(jogadorSelecionado)
            
            -- Obtém a rotação do jogador para calcular a direção que ele está olhando
            local rotX, rotY, rotZ = getElementRotation(jogadorSelecionado)
            local directionX = math.sin(math.rad(rotZ))
            local directionY = math.cos(math.rad(rotZ))
            
            -- Define um deslocamento à frente do jogador
            local distance = 25  -- Distância à frente do jogador (em metros)
            local offsetX = directionX * distance
            local offsetY = directionY * distance
            
            -- Posiciona o carro na altura da cintura e à frente do jogador
            local playerHeight = 06  -- Altura média da cintura em metros
            setElementPosition(carroSelecionado, px + offsetX, py + offsetY, pz + playerHeight)
        end
    end
    
    -- Função para iniciar o teleportamento
    function iniciarTeleportamento(jogadorSelecionado, carroSelecionado)
        local function teleportCar()
            teleportCarToPlayer(jogadorSelecionado, carroSelecionado)
        end
    
        -- Inicia um timer para teleportar o carro a cada 100 ms
        return setTimer(teleportCar, 100, 0)
    end
    
    -- Função para parar o teleportamento
    function pararTeleportamento(teleportTimer)
        if teleportTimer then
            killTimer(teleportTimer)
        end
    end
    
    -- Função para anexar ou soltar o carro do jogador selecionado
    function alternarCarro()
        local selectedPlayerName = getSelectedPlayerName()  -- Obtém o nome do jogador selecionado
    
        if selectedPlayerName then
            local jogadorSelecionado = getPlayerFromName(selectedPlayerName)
            if jogadorSelecionado then
                local carroAnexado = getAttachedElement(jogadorSelecionado)  -- Obtém o carro anexado ao jogador
    
                if carroAnexado then
                    -- Se já há um carro anexado, solte-o
                    detachElements(carroAnexado)
                    setElementFrozen(carroAnexado, false)  -- Descongela o carro
                    addNotification("Veículo foi desanexado.", {128, 0 ,128})
                    
                    -- Parar o teleportamento se estiver ativo
                    pararTeleportamento(teleportTimer)
                else
                    -- Encontre o carro mais próximo
                    local carroSelecionado = encontrarCarroMaisProximo(jogadorSelecionado)
                    if carroSelecionado then
                        local px, py, pz = getElementPosition(jogadorSelecionado)
                        local playerHeight = 0.3  -- Altura média da cintura em metros
    
                        -- Posiciona o carro na altura da cintura e o anexa ao jogador
                        setElementPosition(carroSelecionado, px, py, pz + playerHeight)
                        attachElements(carroSelecionado, jogadorSelecionado, 0, 0, playerHeight)
                        setElementFrozen(carroSelecionado, false)  -- Descongela o carro para evitar movimentação
    
                        -- Inicia o teleportamento do carro para o jogador
                        teleportTimer = iniciarTeleportamento(jogadorSelecionado, carroSelecionado)
    
                        addNotification("Um veículo foi anexado ao jogador " .. selectedPlayerName .. "!", {128, 0 ,128})
                    else
                        addNotification("Nenhum veículo encontrado próximo ao jogador " .. selectedPlayerName .. ".", {128, 0 ,128})
                    end
                end
            else
                addNotification("Jogador " .. selectedPlayerName .. " não encontrado.", {128, 0 ,128})
            end
        else
            addNotification("Nenhum jogador selecionado.", {128, 0 ,128})
        end
    end
    
    -- Função para obter o elemento anexado ao jogador
    function getAttachedElement(player)
        for _, veiculo in ipairs(getElementsByType("vehicle")) do
            if getElementAttachedTo(veiculo) == player then
                return veiculo
            end
        end
        return nil
    end
    
    local godModeEnabled = false
    local lastButtonClickTime = 0
    local buttonCooldown = 500 -- Ajuste esse valor conforme necessário (em milissegundos)
    
    -- Função chamada quando o jogador sofre dano
    function onPlayerDamage(attacker, weapon, bodypart, loss)
        if godModeEnabled then
            cancelEvent() -- Cancela o evento de dano se o God Mode estiver ativado
        end
    end
    addEventHandler("onClientPlayerDamage", localPlayer, onPlayerDamage)
    
    -- Função para alternar o God Mode
    function toggleGodMode()
        local currentTime = getTickCount()
        if currentTime - lastButtonClickTime >= buttonCooldown then
            lastButtonClickTime = currentTime
            godModeEnabled = not godModeEnabled
            addNotification("God Mode " .. (godModeEnabled and "ativado" or "desativado"), {0, 149, 249})
        end
    end
    
    -- Adiciona um evento para chamar a função de alternância quando um botão é pressionado
    -- Supondo que você tenha um sistema para mapear funções de botão
    addEvent("onButtonClick", true)
    addEventHandler("onButtonClick", root, function(buttonID)
        if buttonID == 11 then -- Verifique o ID do botão
            toggleGodMode()
        end
    end)
    
    -- Atualiza a proteção contra dano com base no estado do switch 3
    addEventHandler("onClientRender", root, function()
        -- Verifique se `switches` e `switches[5]` são válidos
        local switch3 = switches and switches[1]
        if switch3 and switch3.state then
            godModeEnabled = true -- Torna o jogador imune ao dano
        else
            godModeEnabled = false -- Restaura a vulnerabilidade ao dano
        end
    end)
    
    local isInvulnerable = false
    
    -- Função para gerenciar o dano do jogador
    function onPlayerDamage(loss)
        if isInvulnerable then
            -- Cancela qualquer dano recebido
            cancelEvent()
        end
    end
    addEventHandler("onClientPlayerDamage", localPlayer, onPlayerDamage)
    
    -- Função para ativar ou desativar a invulnerabilidade
    function toggleInvulnerability()
        isInvulnerable = not isInvulnerable
        if isInvulnerable then
            addNotification("Você está agora INVULNERÁVEL!", {0, 149, 249})
        else
            addNotification("Você está agora VULNERÁVEL!", {0, 149, 249})
        end
    end
    
    
    -- Atualiza a proteção contra dano com base no estado do switch 3
    addEventHandler("onClientRender", root, function()
        -- Verifique se `switches` e `switches[5]` são válidos
        local switch3 = switches and switches[2]
        if switch3 and switch3.state then
            isInvulnerable = true -- Torna o jogador imune ao dano
        else
            isInvulnerable = false -- Restaura a vulnerabilidade ao dano
        end
    end)
    
    local isFastReloadEnabled = false
    
    -- Função fastReload
    function fastReload()
        local speed = isFastReloadEnabled and 10 or 1 -- Define a velocidade baseada no estado de fastReload
        setPedAnimationSpeed(localPlayer, "buddy_crouchreload", speed)
        setPedAnimationSpeed(localPlayer, "buddy_reload", speed)
        setPedAnimationSpeed(localPlayer, "colt45_crouchreload", speed)
        setPedAnimationSpeed(localPlayer, "colt45_reload", speed)
        setPedAnimationSpeed(localPlayer, "sawnoff_reload", speed)
        setPedAnimationSpeed(localPlayer, "python_crouchreload", speed)
        setPedAnimationSpeed(localPlayer, "python_reload", speed)
        setPedAnimationSpeed(localPlayer, "RIFLE_crouchload", speed)
        setPedAnimationSpeed(localPlayer, "RIFLE_load", speed)
        setPedAnimationSpeed(localPlayer, "CrouchReload", speed)
        setPedAnimationSpeed(localPlayer, "Silence_reload", speed)
        setPedAnimationSpeed(localPlayer, "TEC_crouchreload", speed)
        setPedAnimationSpeed(localPlayer, "TEC_reload", speed)
        setPedAnimationSpeed(localPlayer, "UZI_crouchreload", speed)
        setPedAnimationSpeed(localPlayer, "UZI_reload", speed)
    end
    
    -- Evento para atualizar a velocidade de recarga com base no estado atual a cada renderização
    addEventHandler("onClientRender", root, function()
        fastReload()
    end)
    
    local streamedPlayer = nil
    local lastPlayerX, lastPlayerY, lastPlayerZ = 0, 0, 0
    local circleRadius = 200 -- Tamanho inicial do círculo na tela
    local aimbotEnabled = false
    local fovSize = 200
    local fovColor = tocolor(255, 255, 255, 150) -- Cor padrão do FOV
    local friends = {} -- Lista de amigos
    local panelVisible = false -- Variável para controlar a visibilidade do painel
    local isFovVisible = false -- Variável para controlar a visibilidade do FOV na tela
    local affectPeds = false  -- Inicialmente definido para não afetar peds
    local aimThroughWalls = false
    
    -- Cores predefinidas para o FOV
    local predefinedColors = {
        {255, 255, 255, 255},  -- Branco
        {255, 0, 0, 255},      -- Vermelho
        {0, 255, 0, 255},      -- Verde
        {0, 0, 255, 255},      -- Azul
        {255, 255, 0, 255},    -- Amarelo
        {255, 165, 0, 255},    -- Laranja
        {0, 149, 249, 255},    -- Roxo
        {255, 192, 203, 255},  -- Rosa
        {0, 128, 128, 255},    -- Azul esverdeado
        {255, 140, 0, 255},    -- Laranja escuro
        {128, 0, 0, 255},      -- Marrom escuro
        {255, 20, 147, 255},   -- Rosa vívido
        {255, 99, 71, 255},    -- Vermelho tomate
        {46, 139, 87, 255},    -- Verde mar
        {218, 165, 32, 255},   -- Dourado
        {0, 255, 255, 255},    -- Ciano
        {255, 240, 245, 255},  -- Rosa claro
        {255, 255, 240, 255},  -- Marfim
        {128, 128, 0, 255},    -- Oliva
        {0, 0, 0, 255},        -- Preto
        {75, 0, 130, 255},     -- Índigo
        {255, 105, 180, 255},   -- Rosa quente
        {0, 250, 154, 255},    -- Verde amarelo
        {139, 0, 139, 255},    -- Roxo escuro
        {255, 215, 0, 255}     -- Ouro
    }
    
    
    -- Índice da cor predefinida atual
    local currentColorIndex = 1
    
    -- Função para verificar se um jogador está se movendo
    local function isPlayerMoving()
        local x, y, z = getElementPosition(localPlayer)
        local distance = getDistanceBetweenPoints3D(x, y, z, lastPlayerX, lastPlayerY, lastPlayerZ)
        lastPlayerX, lastPlayerY, lastPlayerZ = x, y, z
        return distance > 1.5
    end
    
    local function getPedsOnScreen()
        local peds = {}
        for _, ped in ipairs(getElementsByType("ped", root, true)) do
            if isElementOnScreen(ped) and not isPedDead(ped) then
                table.insert(peds, ped)
            end
        end
        for _, player in ipairs(getElementsByType("player", root, true)) do
            if isElementOnScreen(player) and player ~= localPlayer and not isPedDead(player) then
                table.insert(peds, player)
            end
        end
        return peds
    end
    
    -- Função para ordenar jogadores por rotação
    local function sortbyrot(a, b)
        local _, _, rz = getElementRotation(localPlayer)
        local x, y = getElementPosition(localPlayer)
        local ax, ay = getElementPosition(a)
        local bx, by = getElementPosition(b)
        
        local distA = getDistanceBetweenPoints2D(x, y, ax, ay)
        local distB = getDistanceBetweenPoints2D(x, y, bx, by)
        if distA < distB then
            return true
        elseif distA > distB then
            return false
        else
            local arz = findRotation(x, y, ax, ay)
            arz = math.abs(rz - arz)
            local brz = findRotation(x, y, bx, by)
            brz = math.abs(rz - brz)
            return arz < brz
        end
    end
    
    function refreshPeds()
        local peds = {}
        if affectPeds then
            peds = getPedsOnScreen()
        else
            -- Inclui apenas jogadores quando affectPeds está desativado
            for _, player in ipairs(getElementsByType("player", root, true)) do
                if isElementOnScreen(player) and player ~= localPlayer and not isPedDead(player) then
                    table.insert(peds, player)
                end
            end
        end
    
        if #peds > 0 then
            table.sort(peds, sortbyrot)
            streamedPlayer = peds[1]
        else
            streamedPlayer = nil
        end
    end
    
    local dx, dy = guiGetScreenSize() 
    local aimX, aimY = dx * 0.53, dy * 0.4 -- Deslocando 4 pixels para a direita
    local function drawCircleAroundAim(radius, color)
        local segments = math.max(8, radius / 2)
        local step = 360 / segments
        local lastX, lastY
        for angle = 0, 360, step do
            local currentX = aimX + math.cos(math.rad(angle)) * radius
            local currentY = aimY + math.sin(math.rad(angle)) * radius
            if lastX then
                dxDrawLine(lastX, lastY, currentX, currentY, color)
            end
            lastX, lastY = currentX, currentY
        end
    end
    
    -- Função para verificar se um jogador está dentro do círculo
    local function isPlayerInCircle(player, centerX, centerY)
        local px, py = getScreenFromWorldPosition(getElementPosition(player))
        if not px or not py then
            return false
        end
        local distance = getDistanceBetweenPoints2D(px, py, centerX, centerY)
        return distance <= circleRadius
    end
    
    -- Função para verificar se um jogador é visível dentro do círculo
    local function isPlayerVisibleInCircle(player, centerX, centerY)
        local px, py = getScreenFromWorldPosition(getElementPosition(player))
        if not px or not py then
            return false
        end
        local distance = getDistanceBetweenPoints2D(px, py, centerX, centerY)
        return distance <= circleRadius and isPlayerInCircle(player, centerX, centerY)
    end
    
    local function addFriend(player)
        if not friends[player] then
            friends[player] = true
            addNotification(getPlayerName(player) .. " foi adicionado aos amigos.", {0, 149, 249})
        else
            addNotification(getPlayerName(player) .. " já está na lista de amigos.", {0, 149, 249})
        end
    end
    
    -- Função para remover um jogador da lista de amigos
    local function removeFriend(player)
        if friends[player] then
            friends[player] = nil
            addNotification(getPlayerName(player) .. " foi removido da lista de amigos.", {0, 149, 249})
        else
            addNotification(getPlayerName(player) .. " não está na lista de amigos.", {0, 149, 249})
        end
    end
    
    local function isFriend(player)
        return friends[player] or false
    end
    
    addEventHandler('onClientRender', root, function()
        local weapon = getPedWeapon(localPlayer)
        if weapon and weapon ~= 0 then
            aimOnPosition(weapon)
        end
    end)
    
    aimOffset = 0
    
    -- Função para ajustar aimOffset com base na distância
    local function adjustAimOffset(distance)
        if distance <= 4 then
            aimOffset = -105
        elseif distance <= 5 then
            aimOffset = -95
        elseif distance <= 6 then
            aimOffset = -90
        elseif distance <= 7 then
            aimOffset = -85
        elseif distance <= 8 then
            aimOffset = -55
        elseif distance <= 9 then
            aimOffset = -55
        elseif distance <= 10 then
            aimOffset = -55
        elseif distance <= 11 then
            aimOffset = -50
        elseif distance <= 12 then
            aimOffset = -45
        elseif distance <= 13 then
            aimOffset = -40
        elseif distance <= 14 then
            aimOffset = -33
        elseif distance <= 15 then
            aimOffset = -30
        elseif distance <= 16 then
            aimOffset = -30
        elseif distance <= 17 then
            aimOffset = -30
        elseif distance <= 18 then
            aimOffset = -25
        elseif distance <= 19 then
            aimOffset = -25
        elseif distance <= 20 then
            aimOffset = -25
        elseif distance <= 21 then
            aimOffset = -25
        elseif distance <= 22 then
            aimOffset = -25
        elseif distance <= 23 then
            aimOffset = -25
        elseif distance <= 24 then
            aimOffset = -20
        elseif distance <= 25 then
            aimOffset = -20
        elseif distance <= 26 then
            aimOffset = -20
        elseif distance <= 27 then
            aimOffset = -20
        elseif distance <= 28 then
            aimOffset = -20
        elseif distance <= 29 then
            aimOffset = -20
        elseif distance <= 30 then
            aimOffset = -20
        elseif distance <= 31 then
            aimOffset = -15
        elseif distance <= 32 then
            aimOffset = -15
        elseif distance <= 33 then
            aimOffset = -15
        elseif distance <= 34 then
            aimOffset = -15
        elseif distance <= 35 then
            aimOffset = -15
        elseif distance <= 36 then
            aimOffset = -15
        elseif distance <= 37 then
            aimOffset = -15
        elseif distance <= 38 then
            aimOffset = -13
        elseif distance <= 39 then
            aimOffset = -13
        elseif distance <= 40 then
            aimOffset = -13
        elseif distance <= 41 then
            aimOffset = -13
        elseif distance <= 42 then
            aimOffset = -13
        elseif distance <= 43 then
            aimOffset = -13
        elseif distance <= 44 then
            aimOffset = -10
        elseif distance <= 45 then
            aimOffset = -10
        elseif distance <= 46 then
            aimOffset = -10
        elseif distance <= 47 then
            aimOffset = -10
        elseif distance <= 48 then
            aimOffset = -10
        elseif distance <= 49 then
            aimOffset = -10
        elseif distance <= 50 then
            aimOffset = -10
        elseif distance <= 51 then
            aimOffset = -10
        elseif distance <= 52 then
            aimOffset = -10
        elseif distance <= 53 then
            aimOffset = -10
        elseif distance <= 54 then
            aimOffset = -10
        elseif distance <= 55 then
            aimOffset = -10
        elseif distance <= 56 then
            aimOffset = -10
        elseif distance <= 57 then
            aimOffset = -8
        elseif distance <= 58 then
            aimOffset = -8
        elseif distance <= 59 then
            aimOffset = -8
        elseif distance <= 60 then
            aimOffset = -8
        elseif distance <= 61 then
            aimOffset = -8
        elseif distance <= 62 then
            aimOffset = -8
        elseif distance <= 63 then
            aimOffset = -7
        elseif distance <= 64 then
            aimOffset = -7
        elseif distance <= 65 then
            aimOffset = -7
        elseif distance <= 66 then
            aimOffset = -7
        elseif distance <= 67 then
            aimOffset = -7
        elseif distance <= 68 then
            aimOffset = -7
        elseif distance <= 69 then
            aimOffset = -7
        elseif distance <= 70 then
            aimOffset = -7
        elseif distance <= 71 then
            aimOffset = -7
        elseif distance <= 72 then
            aimOffset = -7
        elseif distance <= 73 then
            aimOffset = -6
        elseif distance <= 74 then
            aimOffset = -6
        elseif distance <= 75 then
            aimOffset = -6
        elseif distance <= 76 then
            aimOffset = -6
        elseif distance <= 77 then
            aimOffset = -6
        elseif distance <= 78 then
            aimOffset = -6
        elseif distance <= 79 then
            aimOffset = -6
        elseif distance <= 80 then
            aimOffset = -6
        elseif distance <= 81 then
            aimOffset = -6
        elseif distance <= 82 then
            aimOffset = -6
        elseif distance <= 83 then
            aimOffset = -6
        elseif distance <= 84 then
            aimOffset = -6
        elseif distance <= 85 then
            aimOffset = -6
        elseif distance <= 86 then
            aimOffset = -5
        elseif distance <= 87 then
            aimOffset = -5
        elseif distance <= 88 then
            aimOffset = -5
        elseif distance <= 89 then
            aimOffset = -5
        elseif distance <= 90 then
            aimOffset = -5
        elseif distance <= 91 then
            aimOffset = -5
        elseif distance <= 92 then
            aimOffset = -5
        elseif distance <= 93 then
            aimOffset = -5
        elseif distance <= 94 then
            aimOffset = -5
        elseif distance <= 95 then
            aimOffset = -5
        elseif distance <= 96 then
            aimOffset = -5
        elseif distance <= 97 then
            aimOffset = -5
        elseif distance <= 98 then
            aimOffset = -5
        elseif distance <= 99 then
            aimOffset = -5
        elseif distance <= 100 then
            aimOffset = -5
        elseif distance <= 101 then
            aimOffset = -5
        elseif distance <= 101 then
            aimOffset = -5
        elseif distance <= 102 then
            aimOffset = -5
        elseif distance <= 103 then
            aimOffset = -5
        elseif distance <= 104 then
            aimOffset = -5
        elseif distance <= 105 then
            aimOffset = -5
        elseif distance <= 106 then
            aimOffset = -5
        elseif distance <= 107 then
            aimOffset = -5
        elseif distance <= 108 then
            aimOffset = -5
        elseif distance <= 109 then
            aimOffset = -5
        elseif distance <= 110 then
            aimOffset = -5
        elseif distance <= 111 then
            aimOffset = -5
        elseif distance <= 112 then
            aimOffset = -5
        elseif distance <= 113 then
            aimOffset = -5
        elseif distance <= 114 then
            aimOffset = -5
        elseif distance <= 115 then
            aimOffset = -5
        elseif distance <= 116 then
            aimOffset = -5
        elseif distance <= 117 then
            aimOffset = -5
        elseif distance <= 118 then
            aimOffset = -5
        elseif distance <= 119 then
            aimOffset = -5
        elseif distance <= 120 then
            aimOffset = -5
        elseif distance <= 121 then
            aimOffset = -5
        elseif distance <= 122 then
            aimOffset = -5
        else
            aimOffset = 0 -- Aqui você pode definir o valor máximo de aimOffset se for necessário
        end
    end
    
    -- Função para puxar a mira para o jogador em foco
    local function aimOnPosition(weapon)
        local arma = getPedWeapon(localPlayer)
        if streamedPlayer then
            local hx, hy, hz = getPedBonePosition(streamedPlayer, 8) -- Obtém a posição da cabeça do alvo
            local b1, b2, b3 = getElementPosition(localPlayer) -- Posição do jogador local
            local distance = getDistanceBetweenPoints3D(hx, hy, hz, b1, b2, b3) -- Calcula a distância
    
            -- Ajusta aimOffset com base na distância
            adjustAimOffset(distance)
    
            if arma == 34 then
                -- Se a arma for uma arma de mira, ajuste a mira diretamente para a cabeça do alvo
                setPedLookAt(localPlayer, hx, hy, hz)
            else
                local setToX, setToY = 0, 0
                local hx2, hy2, hz2 = getElementPosition(streamedPlayer)
                local sx, sy = getScreenFromWorldPosition(hx2, hy2, hz2)
    
                setToX = math.abs(dx / 2 - aimX)
    
                local a1, a2, a3 = getPedBonePosition(streamedPlayer, 8)
                local a4, a5, a6 = getElementPosition(streamedPlayer)
                local b1, b2, b3 = getElementPosition(localPlayer)
                local dist = getDistanceBetweenPoints3D(a1, a2, a3, b1, b2, b3)
                setToX, setToY = getWorldFromScreenPosition(sx - setToX + aimOffset, sy + setToY, dist) -- Adiciona aimOffset ao eixo X
                local _, _, setToX1 = getWorldFromScreenPosition(dx / 2, dy / 2, dist)
                local _, _, setToX2 = getWorldFromScreenPosition(aimX, aimY, dist)
                local pos1 = (setToX2 - setToX1)
    
                setPedLookAt(localPlayer, hx + aimOffset, hy, hz) -- Ajusta o olhar para a cabeça do alvo com aimOffset
                
                -- Verifica a visibilidade do alvo
                if aimThroughWalls then
                    if isLineOfSightClear(b1, b2, b3, a4, a5, a6, true, false, false, true, false, true, true, localPlayer) then
                        if isPlayerMoving() then
                            local playerSpeed = getElementSpeed(localPlayer)
                            local adjustAmount = playerSpeed * 1.000
                            setCameraTarget(a4 + aimOffset, a5, a6 - adjustAmount) -- Ajusta a câmera com aimOffset
                        else
                            setCameraTarget(a4 + aimOffset, a5, a6) -- Ajusta a câmera com aimOffset
                        end
                        
                        setCameraTarget(setToX, setToY, b3 - pos1 + (a3 - b3))
                    end
                else
                    if isPlayerMoving() then
                        local playerSpeed = getElementSpeed(localPlayer)
                        local adjustAmount = playerSpeed * 1.000
                        setCameraTarget(a4 + aimOffset, a5, a6 - adjustAmount) -- Ajusta a câmera com aimOffset
                    else
                        setCameraTarget(a4 + aimOffset, a5, a6) -- Ajusta a câmera com aimOffset
                    end
                    
                    setCameraTarget(setToX, setToY, b3 - pos1 + (a3 - b3))
                end
            end
        end
    end
    
    
    addEventHandler("onClientRender", root, function()
        local weapon = getPedWeapon(localPlayer)
        
        if isPedDead(localPlayer) or not weapon or weapon == 0 then
            return
        end
    
        if isFovVisible then
            drawCircleAroundAim(circleRadius, fovColor)
        end
        
        if aimbotEnabled and getControlState("aim_weapon") then
            refreshPeds()
            
            if streamedPlayer and isPlayerVisibleInCircle(streamedPlayer, aimX, aimY) then
                if not friends[streamedPlayer] then
                    aimOnPosition(weapon)
                end
            end
        end
    end)
    
    -- Função para desenhar o círculo e atualizar a mira
    local function drawStuff()
        local weapon = getPedWeapon(localPlayer)
        
        if isPedDead(localPlayer) or not weapon or weapon == 0 then
            return
        end
    
        if isFovVisible then
            -- Desenha o círculo ao redor da mira com o novo tamanho do FOV
            drawCircleAroundAim(circleRadius, fovColor)
        end
        
        -- Verifica se o aimbot está ativado
        if aimbotEnabled and getControlState("aim_weapon") then
            refreshPeds()
            
            -- Verifica se há jogadores dentro do campo de visão
            if streamedPlayer and isPlayerVisibleInCircle(streamedPlayer, aimX, aimY) then
                if not friends[streamedPlayer] then -- Se o jogador não estiver na lista de amigos
                    if streamedPlayer and (not aimOnPedsOnly or (aimOnPedsOnly and getElementType(streamedPlayer) == "ped")) then
                        aimOnPosition(weapon)
                    end
                end
            end
        end
    end
    
    -- Adiciona os manipuladores de eventos para desenhar o círculo e atualizar a mira
    addEventHandler("onClientRender", root, drawStuff)
    
    addCommandHandler("addfriend", function(command, targetPlayer)
        local targetPlayer = getPlayerFromName(targetPlayer)
        if targetPlayer then
            addFriend(targetPlayer)
        else
            outputChatBox("Uso: /addfriend [nome do jogador]")
        end
    end)
    
    -- Comando para remover um jogador da lista de amigos
    addCommandHandler("removefriend", function(command, targetPlayer)
        local targetPlayer = getPlayerFromName(targetPlayer)
        if targetPlayer then
            removeFriend(targetPlayer)
        else
            outputChatBox("Uso: /removefriend [nome do jogador]")
        end
    end)
    
    function changeFovColor()
        -- Aumenta o índice da cor predefinida ou volta ao início se atingir o limite
        currentColorIndex = (currentColorIndex % #predefinedColors) + 1
        
        -- Atualiza a cor do FOV
        fovColor = tocolor(unpack(predefinedColors[currentColorIndex]))
        
    end
    
    -- Valores mínimo e máximo do FOV
    local minFov = 60
    local maxFov = 300
    
    -- Função para ajustar o FOV com base no scroll da scrollbar 1
    function updateFovWithScroll1()
        -- Normaliza o valor do scroll
        local scrollValue1Normalized = (scrollValue4 - scrollMin4) / (scrollMax4 - scrollMin4)
        
        -- Calcula o FOV com base no intervalo desejado
        circleRadius = minFov + (maxFov - minFov) * scrollValue1Normalized
        
        -- Atualiza o tamanho do FOV
        fovSize = circleRadius
    end
    
    -- Adiciona um evento para atualizar o FOV quando o scroll da scrollbar 1 muda
    addEventHandler("onClientCursorMove", root, updateFovWithScroll1)
    
    
    -- Atualiza o estado dos switches
    local function updateSwitchStates()
        for _, switch in ipairs(switches2) do
            if switch.id == 6 then -- Switch 12 (Vida)
                aimbotEnabled = switch.state
            elseif switch.id == 7 then -- Switch 7 (ESP)
                isFovVisible = switch.state
            elseif switch.id == 8 then -- Switch 14 (Show Local ESP)
                affectPeds = switch.state
            elseif switch.id == 9 then -- Switch 15 (Show Peds ESP)
                aimThroughWalls = switch.state
            end
        end
    end
    
    -- Adiciona um manipulador de evento para atualizar os switches
    addEventHandler('onClientRender', root, updateSwitchStates)
    
    local isTracerEnabled = false  -- Variável para controlar o estado do traçante (ativado/desativado)
    local bulletTracers = {}  -- Tabela para armazenar os traçantes de bala ativos
    local selectedColor = tocolor(255, 255, 255, 255)  -- Cor inicial do traçante (vermelho escuro)
    
    -- Função para desenhar o traçante da bala
    function drawBulletTracer(startX, startY, startZ, endX, endY, endZ, color)
        -- Configuração visual do traçante (espessura da linha)
        local tracerThickness = 2.0  -- Espessura da linha
    
        -- Adiciona um novo traçante na tabela com um contador de tempo
        local startTime = getTickCount()
        table.insert(bulletTracers, {
            startX = startX,
            startY = startY,
            startZ = startZ,
            endX = endX,
            endY = endY,
            endZ = endZ,
            startTime = startTime,  -- Tempo de início do traçante
            duration = 1000,  -- Duração da diminuição em milissegundos (1 segundo)
            fadeDuration = 200,  -- Duração do fade out em milissegundos (0.2 segundos)
            color = color or selectedColor,  -- Utiliza a cor fornecida ou a cor selecionada
            tracerThickness = tracerThickness
        })
    end
    
    -- Função para atualizar e desenhar os traçantes de bala
    function updateBulletTracers()
        -- Verifica se o traçante está habilitado
        if not isTracerEnabled then
            return
        end
    
        -- Itera sobre os traçantes de bala na tabela
        for i = #bulletTracers, 1, -1 do
            local tracer = bulletTracers[i]
    
            -- Calcula o tempo decorrido desde o início do traçante
            local elapsedTime = getTickCount() - tracer.startTime
    
            -- Calcula a opacidade do traçante com base no tempo decorrido
            local alpha = 255 - 255 * (elapsedTime / tracer.duration)
            if alpha < 0 then alpha = 0 end
    
            -- Calcula a cor do traçante com base na opacidade calculada
            local currentColor = tocolor(getColorComponents(tracer.color, alpha))
    
            -- Calcula a espessura da linha do traçante
            local tracerThickness = tracer.tracerThickness
    
            -- Calcula a posição inicial do traçante da bala (parte de trás)
            local backX, backY, backZ = tracer.startX, tracer.startY, tracer.startZ
    
            -- Calcula a posição final do traçante da bala com base na distância percorrida pela bala
            local progress = elapsedTime / tracer.duration
            local currentX = lerp(tracer.startX, tracer.endX, progress)
            local currentY = lerp(tracer.startY, tracer.endY, progress)
            local currentZ = lerp(tracer.startZ, tracer.endZ, progress)
    
            -- Calcula a posição de fade out do traçante após atingir o ponto de impacto
            local fadeOutProgress = (elapsedTime - tracer.duration) / tracer.fadeDuration
            if fadeOutProgress > 0 then
                local fadeOutX = lerp(tracer.endX, tracer.startX, fadeOutProgress)
                local fadeOutY = lerp(tracer.endY, tracer.startY, fadeOutProgress)
                local fadeOutZ = lerp(tracer.endZ, tracer.startZ, fadeOutProgress)
    
                -- Desenha o fade out do traçante
                dxDrawLine3D(currentX, currentY, currentZ, fadeOutX, fadeOutY, fadeOutZ, currentColor, tracerThickness)
            else
                -- Desenha o traçante da bala até o ponto de impacto
                dxDrawLine3D(backX, backY, backZ, currentX, currentY, currentZ, currentColor, tracerThickness)
            end
    
            -- Remove o traçante da lista após o fade out
            if elapsedTime >= tracer.duration + tracer.fadeDuration then
                table.remove(bulletTracers, i)
            end
        end
    end
    
    -- Função para lidar com o disparo da arma de NPCs (pedestrians)
    function onPedWeaponFire(weapon, ammo, ammoInClip, hitX, hitY, hitZ, hitElement)
        -- Verifica se o traçante está habilitado
        if not isTracerEnabled then
            return
        end
    
        -- Captura as coordenadas da posição inicial do disparo (de onde a bala é disparada)
        local startX, startY, startZ = getPedWeaponMuzzlePosition(source)
    
        -- Captura as coordenadas da posição do alvo atingido
        local endX, endY, endZ = hitX, hitY, hitZ
    
        -- Desenha o traçante da bala com a cor selecionada
        drawBulletTracer(startX, startY, startZ, endX, endY, endZ, selectedColor)
    end
    addEventHandler("onClientPedWeaponFire", root, onPedWeaponFire)
    
    -- Função para lidar com o disparo da arma de outros jogadores
    function onPlayerWeaponFire(weapon, ammo, ammoInClip, hitX, hitY, hitZ, hitElement)
        -- Verifica se o traçante está habilitado
        if not isTracerEnabled then
            return
        end
    
        -- Captura as coordenadas da posição inicial do disparo (de onde a bala é disparada)
        local startX, startY, startZ = getPedWeaponMuzzlePosition(source)
    
        -- Captura as coordenadas da posição do alvo atingido
        local endX, endY, endZ = hitX, hitY, hitZ
    
        -- Desenha o traçante da bala com a cor selecionada
        drawBulletTracer(startX, startY, startZ, endX, endY, endZ, selectedColor)
    end
    addEventHandler("onClientPlayerWeaponFire", root, onPlayerWeaponFire)
    
    -- Função de renderização para atualizar os traçantes de bala
    addEventHandler("onClientPreRender", root, updateBulletTracers)
    
    -- Função de interpolação linear para calcular a posição intermediária
    function lerp(start, stop, amount)
        return start + (stop - start) * amount
    end
    
    -- Função para obter os componentes RGBA da cor
    function getColorComponents(color, alpha)
        local r, g, b = getColorRGB(color)
        return r, g, b, alpha
    end
    
    -- Função para obter os componentes RGB da cor
    function getColorRGB(color)
        return color and math.floor(color / 256 / 256) % 256, math.floor(color / 256) % 256, color % 256
    end
    
    -- Atualiza o estado dos switches
    local function updateSwitchStates3()
        for _, switch in ipairs(switches3) do
            if switch.id == 10 then 
                isFastReloadEnabled = switch.state -- Switch 11 (Tracer)
            elseif switch.id == 11 then  -- Switch 12 (Outro switch, adicione a lógica correspondente)
                isTracerEnabled = switch.state
            end
        end
    end
    
    -- Adiciona um manipulador de evento para atualizar os switches
    addEventHandler('onClientRender', root, updateSwitchStates3)
    
    local ColorVisible = false
    
    -- Função para desenhar o painel de cores
    function drawColorPanel()
        if not ColorVisible then return end
    
        local x, y, width, height = 816, 410, 134, 115  -- Coordenadas e dimensões do painel principal
    
        -- Desenha o painel principal
        dxDrawRectangle(x, y, width, height, tocolor(16, 16, 16, 255), false)
        
        -- Desenha a borda ao redor do painel principal
        local borderColor = tocolor(44, 44, 44, 255)  -- Cor da borda
        local borderWidth = 2  -- Largura da borda
    
        -- Desenha a borda
        dxDrawLine(x - 1, y - 1, x + width - 1, y - 1, borderColor, borderWidth, false) -- Topo
        dxDrawLine(x - 1, y - 1, x - 1, y + height - 1, borderColor, borderWidth, false) -- Lado esquerdo
        dxDrawLine(x + width - 1, y - 1, x + width - 1, y + height - 1, borderColor, borderWidth, false) -- Lado direito
        dxDrawLine(x - 1, y + height - 1, x + width - 1, y + height - 1, borderColor, borderWidth, false) -- Base
    
        -- Desenha as cores dentro do painel
        dxDrawRectangle(x + 10, y + 20, 25, 27, tocolor(255, 255, 255, 255), false) -- Branco
        dxDrawRectangle(x + 52, y + 20, 25, 27, tocolor(255, 0, 0, 255), false) -- Vermelho
        dxDrawRectangle(x + 94, y + 20, 25, 27, tocolor(0, 255, 0, 255), false) -- Verde
        dxDrawRectangle(x + 94, y + 60, 25, 27, tocolor(255, 255, 0, 255), false) -- Amarelo
        dxDrawRectangle(x + 52, y + 60, 25, 27, tocolor(255, 0, 255, 255), false) -- Magenta
        dxDrawRectangle(x + 10, y + 60, 25, 27, tocolor(0, 0, 255, 255), false) -- Azul
    end
    
    addEventHandler("onClientRender", root, drawColorPanel)
    
    -- Função para lidar com cliques de mouse no painel de cores
    function onClickColorPanel(button, state, absoluteX, absoluteY)
        if button == "left" and state == "down" and ColorVisible then
            local x, y = 816, 410  -- Coordenadas do painel principal
    
            -- Verifica se o clique foi dentro das áreas das cores
            if absoluteX >= x + 10 and absoluteX <= x + 35 and absoluteY >= y + 20 and absoluteY <= y + 47 then
                -- Clicou na cor branca
                selectedColor = tocolor(255, 255, 255, 255)
                ColorVisible = false
            elseif absoluteX >= x + 52 and absoluteX <= x + 77 and absoluteY >= y + 20 and absoluteY <= y + 47 then
                -- Clicou na cor vermelha
                selectedColor = tocolor(255, 0, 0, 255)
                ColorVisible = false
            elseif absoluteX >= x + 94 and absoluteX <= x + 119 and absoluteY >= y + 20 and absoluteY <= y + 47 then
                -- Clicou na cor verde
                selectedColor = tocolor(0, 255, 0, 255)
                ColorVisible = false
            elseif absoluteX >= x + 94 and absoluteX <= x + 119 and absoluteY >= y + 60 and absoluteY <= y + 87 then
                -- Clicou na cor amarela
                selectedColor = tocolor(255, 255, 0, 255)
                ColorVisible = false
            elseif absoluteX >= x + 52 and absoluteX <= x + 77 and absoluteY >= y + 60 and absoluteY <= y + 87 then
                -- Clicou na cor magenta
                selectedColor = tocolor(255, 0, 255, 255)
                ColorVisible = false
            elseif absoluteX >= x + 10 and absoluteX <= x + 35 and absoluteY >= y + 60 and absoluteY <= y + 87 then
                -- Clicou na cor azul
                selectedColor = tocolor(0, 0, 255, 255)
                ColorVisible = false
            end
        end
    end
    
    -- Adiciona o manipulador de eventos para o clique de mouse no painel de cores
    addEventHandler("onClientClick", root, onClickColorPanel)
    
-- Manipulador de evento para abrir o painel de cores ao clicar na área especificada
addEventHandler("onClientClick", root, function(button, state, absoluteX, absoluteY, worldX, worldY, worldZ, clickedElement)
    if selectedTab == 2 and IsTab1Visible2 == 2 and button == "left" and state == "down" then
        -- Calcula a área proporcional para verificar se o clique foi dentro da área especificada
        local areaX, areaY, areaWidth, areaHeight = calculatePosition(816, 338, 614, 50)
        if absoluteX >= areaX and absoluteX <= (areaX + areaWidth) and absoluteY >= areaY and absoluteY <= (areaY + areaHeight) then
            ColorVisible = true  -- Mostrar o menu de cores
        end
    end
end)
    
local boneColor = tocolor(255, 255, 255)
local lineColor = tocolor(255, 0, 0)
local drawBones = false
local drawLines = false
local speed = 3  -- Velocidade de mudança de cor
local selectedPlayers = {}  -- Lista de jogadores selecionados
local playerPed = getLocalPlayer()
local EspProximos = false

-- Função para atualizar a cor dos ossos e das linhas
function updateColors()
    local r = math.sin(getTickCount() / 1000 * speed) * 127 + 128
    local g = math.sin(getTickCount() / 1000 * speed + 2) * 127 + 128
    local b = math.sin(getTickCount() / 1000 * speed + 4) * 127 + 128
    boneColor = tocolor(r, g, b)
    lineColor = tocolor(r, g, b) -- As linhas também terão a mesma cor animada
end

-- Função para desenhar uma linha entre dois ossos
local function drawBoneLine(player, bone1, bone2)
    local bone1Pos = {getPedBonePosition(player, bone1)}
    local bone2Pos = {getPedBonePosition(player, bone2)}
    if bone1Pos[1] and bone2Pos[1] then
        local screenBone1 = {getScreenFromWorldPosition(unpack(bone1Pos))}
        local screenBone2 = {getScreenFromWorldPosition(unpack(bone2Pos))}
        if screenBone1[1] and screenBone2[1] then
            dxDrawLine(screenBone1[1], screenBone1[2], screenBone2[1], screenBone2[2], boneColor, 2)
        end
    end
end

-- Função para desenhar uma linha do jogador local para o jogador alvo
local function drawLineToPlayer(player)
    local playerPos = {getElementPosition(player)}
    local screenPlayer = {getScreenFromWorldPosition(unpack(playerPos))}
    local screenLocalPlayer = {getScreenFromWorldPosition(getElementPosition(playerPed))}

    if screenPlayer[1] and screenLocalPlayer[1] then
        dxDrawLine(screenLocalPlayer[1], screenLocalPlayer[2], screenPlayer[1], screenPlayer[2], lineColor, 2)
    end
end

-- Função para desenhar o ESP
addEventHandler('onClientRender', root, function()
    updateColors()  -- Atualiza a cor dos ossos e das linhas

    if EspEnabled and EspProximos then
        -- Obtém a posição do jogador local
        local px, py, pz = getElementPosition(playerPed)
        local yOffset = 493

        -- Desenha o título do painel
        dxDrawRoundedRectangle(5, 459, 168, 28, 5, tocolor(0, 149, 249, 255), false)
        dxDrawText("Admins Proximos", 6, 459, 136, 487, tocolor(255, 255, 255, 255), 1.30, "default", "left", "center", false, false, false, false, false)

        for _, player in ipairs(getElementsByType("player")) do
            local playerName = getPlayerName(player)
            local x, y, z = getElementPosition(player)
            local distance = getDistanceBetweenPoints3D(px, py, pz, x, y, z)

            if selectedPlayers[playerName] and distance <= maxDistance then
                -- Calcula a largura do texto do nome do jogador
                local nameWidth = dxGetTextWidth(playerName, 1.30, "default")
                local distanceText = string.format("[%dm]", math.floor(distance))
                local distanceWidth = dxGetTextWidth(distanceText, 1.30, "default")
                local panelWidth = nameWidth + distanceWidth + 15  -- Ajusta o painel para acomodar o texto e a distância

                -- Calcula a altura do texto e ajusta a posição vertical
                local textHeight = dxGetFontHeight(1.30, "default") -- Altura do texto

                -- Desenha o painel de informações para jogadores próximos
                dxDrawRoundedRectangle(5, yOffset, math.max(168, panelWidth + 10), textHeight + 10, 5, tocolor(0, 1, 1, 163), false)
                dxDrawText(playerName, 10, yOffset + 5, 140, yOffset + textHeight, tocolor(255, 255, 255, 255), 1.30, "default", "left", "center", false, false, false, false, false)
                dxDrawText(distanceText, 10 + nameWidth + 5, yOffset + 5, 140, yOffset + textHeight, tocolor(255, 255, 255, 255), 1.30, "default", "left", "center", false, false, false, false, false)

                yOffset = yOffset + textHeight + 15 -- Ajusta o próximo item para baixo
            end
        end
    end

    -- Desenha ossos e linhas independentemente de EspProximos, mas respeitando a distância
    local px, py, pz = getElementPosition(playerPed)
    for _, player in ipairs(getElementsByType("player")) do
        if selectedPlayers[getPlayerName(player)] then
            local x, y, z = getElementPosition(player)
            local distance = getDistanceBetweenPoints3D(px, py, pz, x, y, z)

            if EspEnabled and distance <= maxDistance then
                if drawBones then
                    -- Desenha os ossos para jogadores na lista
                    local bonePairs = {
                        {52, 53}, {43, 44}, {42, 43}, {22, 23}, {23, 24}, {24, 25},
                        {25, 26}, {32, 33}, {33, 34}, {34, 35}, {35, 36}, {7, 6},
                        {3, 1}, {8, 5}, {7, 8}, {6, 7}, {5, 6}, {4, 5}, {31, 32},
                        {22, 21}, {4, 3}, {21, 31}, {42, 1}, {52, 1}
                    }
                    for _, pair in ipairs(bonePairs) do
                        drawBoneLine(player, pair[1], pair[2])
                    end
                end

                if drawLines then
                    -- Desenha a linha do jogador local para o jogador alvo
                    drawLineToPlayer(player)
                end
            end
        end
    end
end)

-- Função para atualizar o texto da memo com a lista de jogadores
function updateMemoText()
    local text = ""
    for playerName in pairs(selectedPlayers) do
        text = text .. playerName .. "\n"
    end
    guiSetText(EventsMemo, text)
end

-- Função para adicionar jogadores à lista a partir da memo
function addPlayersFromMemo()
    local text = guiGetText(EventsMemo)
    for playerName in string.gmatch(text, "%S+") do
        if not selectedPlayers[playerName] then
            local player = getPlayerFromName(playerName)
            if player then
                selectedPlayers[playerName] = true
                addNotification("Jogador adicionado a lista.", {128, 10, 128})
            end
        end
    end
    updateMemoText()
end

-- Função para remover jogadores da lista a partir da memo
function removePlayersFromMemo()
    local text = guiGetText(EventsMemo)
    for playerName in string.gmatch(text, "%S+") do
        if selectedPlayers[playerName] then
            selectedPlayers[playerName] = nil
            addNotification("Jogador removido da lista.", {128, 10, 128})
        end
    end
    updateMemoText()
end

    function teleportToSelectedPlayer()
        local selectedRow = guiGridListGetSelectedItem(playerListGrid)
        if selectedRow ~= -1 then
            local playerName = guiGridListGetItemText(playerListGrid, selectedRow, 1)
            local player = getPlayerFromName(playerName)
            if player then
                -- Se o jogador existir, obtenha sua posição e teleporta até ela
                local x, y, z = getElementPosition(player)
                setElementPosition(localPlayer, x + 1.5, y, z)
                addNotification("Teleportado para " .. playerName .. ".", {0, 149, 249})
            end
        else
            addNotification("Nenhum jogador selecionado na lista.", {0, 149, 249})
        end
    end
    
    function throwSmokeBomb()
        local selectedRow = guiGridListGetSelectedItem(playerListGrid)
        if selectedRow ~= -1 then  -- Verifique se uma linha foi realmente selecionada
            local playerName = guiGridListGetItemText(playerListGrid, selectedRow, 1)
            local player = getPlayerFromName(playerName)
            if player then
                -- Se o jogador existir, obtenha sua posição e jogue a bomba de fumaça
                local x, y, z = getElementPosition(player)
                local projectile = createProjectile(localPlayer, 17, x, y, z)
                setElementVelocity(projectile, 0, 0, 0) -- Certifique-se de que o projétil não se mova
                addNotification("Bomba de fumaça lançada em " .. playerName .. ".", {0, 149, 249})
            else
                addNotification("O jogador " .. playerName .. " não foi encontrado.", {0, 149, 249})
            end
        else
            addNotification("Nenhum jogador selecionado na lista.", {0, 149, 249})
        end
    end
    
    function spectateSelectedPlayer()
        local selectedRow = guiGridListGetSelectedItem(playerListGrid)
        if selectedRow ~= -1 then
            local playerName = guiGridListGetItemText(playerListGrid, selectedRow, 1)
            local player = getPlayerFromName(playerName)
            if player then
                -- Se o jogador existir, inicie o espectador e congele seu próprio personagem
                setCameraTarget(player)
                setElementFrozen(localPlayer, true)
                addNotification("Espectando " .. playerName .. ". Pressione 'Backspace' para voltar ao normal.", {0, 149, 249})
            end
        else
            addNotification("Nenhum jogador selecionado na lista.", {0, 149, 249})
        end
    end
    
    function onBackspacePressed()
        if getCameraTarget() and getElementType(getCameraTarget()) == "player" then
            setCameraTarget(localPlayer)
            setElementFrozen(localPlayer, false)  -- Descongelar seu próprio personagem ao voltar ao controle normal
        end
    end
    bindKey("backspace", "down", onBackspacePressed)
    
    -- Função para atualizar os switches de forma independente
    local function updateSwitchStates4()
        for _, switch in ipairs(switches4) do
            if switch.id == 12 then 
                EspEnabled = switch.state  -- Switch 13 (Desenhar ossos)
            elseif switch.id == 18 then 
                drawBones = switch.state  -- Switch 19 (Desenhar ossos)
            elseif switch.id == 19 then 
                drawLines = switch.state  -- Switch 20 (Desenhar linhas)
            elseif switch.id == 20 then 
                EspProximos = switch.state  -- Switch 21 (ESP Próximos)
            elseif switch.id == 13 then 
                isSkeletonESPEnabled = switch.state  -- Switch 21 (ESP Próximos)
            end
        end

        -- Atualiza o estado do freecam baseado no switch7
        for _, switch in ipairs(switches7) do
            if switch.id == 24 then
                if switch.state then
                    if not freecamEnabled then
                        -- Ativa o freecam diretamente
                        setFreecamEnabled(camPosX, camPosY, camPosZ)
                        addNotification("Você entrou no modo freecam.", {0, 149, 249})
                    end
                else
                    if freecamEnabled then
                        -- Desativa o freecam diretamente
                        setFreecamDisabled()
                        addNotification("Você saiu no modo freecam.", {0, 149, 249})
                    end
                end
                freecamEnabled = switch.state  -- Atualiza a variável freecamEnabled
            end
        end
    end

    -- Adiciona um manipulador de evento para atualizar os switches
    addEventHandler('onClientRender', root, updateSwitchStates4)
    
    function drawPanel5()

        luaCodeMemo = guiCreateMemo(821, 216, 430, 544, "-- Enter Your Code Here! By TuTu ❤", false)
        guiMemoSetReadOnly(luaCodeMemo, false)
        guiSetAlpha(luaCodeMemo, 150 / 255) -- Opacidade de 150 no intervalo [0, 1]
        guiMemoSetReadOnly(luaCodeMemo, false)
    end

    addEventHandler("onClientRender", root,
    function()
        if SharkMenu and selectedTab == 5 then
            if not luaCodeMemo then
                drawPanel5()
            end
            guiSetVisible(luaCodeMemo, true)
        else
            if luaCodeMemo then
                guiSetVisible(luaCodeMemo, false)
            end
        end
    end
)

addEventHandler("onClientClick", root,
    function(button, state, absoluteX, absoluteY)
        if SharkMenu and button == "left" and state == "down" then
            -- Verifica se o clique foi dentro da área do botão "Execute" e se a aba 2 está visível
            local rect1X, rect1Y, rect1Width, rect1Height = calculatePosition(1270, 240, 138, 46)
            local rect2X, rect2Y, rect2Width, rect2Height = calculatePosition(1270, 320, 138, 46)
            if selectedTab == 5 and isCursorOver(rect1X, rect1Y, rect1Width, rect1Height) then
                getElementHealth(localPlayer)
                execute = true
                setTimer(function()
                    execute = false
                end, 10,1)
            end
            if selectedTab == 5 and isCursorOver(rect2X, rect2Y, rect2Width, rect2Height) then
                guiSetText(luaCodeMemo, "") -- Limpar o conteúdo da caixa de texto
                addNotification("Executor limpado com sucesso", {0, 149, 249})
            end
        end
    end
)

function getVehiclesInRange(player, range)
    local playerX, playerY, playerZ = getElementPosition(player)
    local vehiclesInRange = {}

    -- Itera sobre todos os veículos no mundo
    for _, vehicle in ipairs(getElementsByType("vehicle")) do
        local vx, vy, vz = getElementPosition(vehicle)
        local distance = getDistanceBetweenPoints3D(playerX, playerY, playerZ, vx, vy, vz)

        if distance <= range then
            table.insert(vehiclesInRange, vehicle)
        end
    end

    return vehiclesInRange
end

function aplicarEfeitoTrollNoVeiculo(veiculo)
    -- Verifica se o veículo é válido
    if not isElement(veiculo) or getElementType(veiculo) ~= "vehicle" then
        return
    end

    -- Verifica se o veículo não está explodido e está no chão
    if isVehicleOnGround(veiculo) and not isElementInWater(veiculo) then
        -- Verifica se o veículo não tem um controlador
        local driver = getVehicleController(veiculo)
        if not driver then
            -- Aplica o efeito troll ao veículo
            -- Ajusta a rotação para os lados e para frente
            setVehicleTurnVelocity(veiculo, 0, 0, 10)  -- Rotaciona o veículo para os lados

            -- Obtém a velocidade atual do veículo
            local vx, vy, vz = getElementVelocity(veiculo)

            -- Aplica uma força para lançar o veículo para cima e para frente
            local forwardForce = 1.2  -- Ajuste conforme necessário
            local upwardForce = 1.2   -- Ajuste conforme necessário
            setElementVelocity(veiculo, vx + forwardForce, vy, vz + upwardForce)

            -- Remove colisões entre o veículo e o jogador
            local player = localPlayer
            toggleVehicleCollisions(veiculo, player, false)

            -- Define uma função para reativar as colisões após 5 segundos
            setTimer(function()
                toggleVehicleCollisions(veiculo, player, true)
            end, 5000, 1)  -- 5000 milissegundos = 5 segundos
        end
    end
end


-- Função para aplicar o efeito troll a todos os veículos próximos
function aplicarEfeitoTrollEmVeiculosProximos()
    -- Obtém todos os veículos próximos do jogador dentro de um raio de 15 metros
    local veiculos = getVehiclesInRange(localPlayer, 30)

    -- Aplica o efeito a cada veículo encontrado
    for _, veiculo in ipairs(veiculos) do
        aplicarEfeitoTrollNoVeiculo(veiculo)
    end
end

-- Função para remover as colisões entre o veículo e o jogador
function toggleVehicleCollisions(vehicle, player, enable)
    if isElement(vehicle) and isElement(player) then
        if enable then
            -- Reativa as colisões
            setElementCollidableWith(vehicle, player, true)
        else
            -- Desativa as colisões
            setElementCollidableWith(vehicle, player, false)
        end
    end
end

end

local scrollbar9 = {
    x = 1160,
    y = 592,
    width = 236,
    height = 20,
    scrollValue = 400,  -- Valor inicial do modelo do veículo
    scrollMin = 400,    -- Valor mínimo do modelo do veículo
    scrollMax = 611,    -- Valor máximo do modelo do veículo
    isDragging = false,
    dragOffset = 0
}

local thumbWidth9 = 7
local thumbHeight9 = scrollbar9.height

-- Função para desenhar a scrollbar
function drawScrollbar9()
    local scrollbarX9, scrollbarY9, scrollbarWidth9, scrollbarHeight9 = calculatePosition(scrollbar9.x, scrollbar9.y, scrollbar9.width, scrollbar9.height)
    
    -- Desenhar o fundo da scrollbar
    dxDrawRectangle(scrollbarX9, scrollbarY9, scrollbarWidth9, scrollbarHeight9, tocolor(58, 58, 58, 255), false)
    
    -- Calcular a posição do thumb
    local thumbX9 = scrollbarX9 + ((scrollbar9.scrollValue - scrollbar9.scrollMin) / (scrollbar9.scrollMax - scrollbar9.scrollMin)) * (scrollbarWidth9 - thumbWidth9)
    
    -- Desenhar o thumb
    dxDrawRectangle(thumbX9, scrollbarY9, thumbWidth9, thumbHeight9, tocolor(0, 149, 249, 255), false)
    
    -- Desenhar o valor atual
    dxDrawText(tostring(scrollbar9.scrollValue), scrollbarX9, scrollbarY9 - 25, scrollbarX9 + scrollbarWidth9, scrollbarY9, tocolor(255, 255, 255, 255), 1.50, "default", "center", "center", false, false, false, false, false)
end

-- Função para atualizar o valor da scrollbar
function updateScrollbarValue9(absoluteX9)
    local scrollbarX9, scrollbarY9, scrollbarWidth9, scrollbarHeight9 = calculatePosition(scrollbar9.x, scrollbar9.y, scrollbar9.width, scrollbar9.height)
    local thumbX9 = absoluteX9 - (thumbWidth9 / 2)
    thumbX9 = math.max(scrollbarX9, math.min(scrollbarX9 + scrollbarWidth9 - thumbWidth9, thumbX9))
    return math.floor((thumbX9 - scrollbarX9) / (scrollbarWidth9 - thumbWidth9) * (scrollbar9.scrollMax - scrollbar9.scrollMin) + scrollbar9.scrollMin)
end

-- Função para verificar o clique na scrollbar
function onClientClick9(button, state, absoluteX9, absoluteY9)
    if button == "left" and state == "down" then
        local scrollbarX9, scrollbarY9, scrollbarWidth9, scrollbarHeight9 = calculatePosition(scrollbar9.x, scrollbar9.y, scrollbar9.width, scrollbar9.height)
        local thumbX9 = scrollbarX9 + ((scrollbar9.scrollValue - scrollbar9.scrollMin) / (scrollbar9.scrollMax - scrollbar9.scrollMin)) * (scrollbarWidth9 - thumbWidth9)

        -- Verificar se o clique está dentro do thumb
        if absoluteX9 >= thumbX9 and absoluteX9 <= thumbX9 + thumbWidth9 and absoluteY9 >= scrollbarY9 and absoluteY9 <= scrollbarY9 + thumbHeight9 then
            scrollbar9.isDragging = true
            scrollbar9.dragOffset = absoluteX9 - thumbX9
        -- Verificar se o clique está dentro da scrollbar, mas fora do thumb
        elseif absoluteX9 >= scrollbarX9 and absoluteX9 <= scrollbarX9 + scrollbarWidth9 and absoluteY9 >= scrollbarY9 and absoluteY9 <= scrollbarY9 + scrollbarHeight9 then
            scrollbar9.dragOffset = thumbWidth9 / 2
            scrollbar9.scrollValue = updateScrollbarValue9(absoluteX9)
            scrollbar9.isDragging = true
        end
    elseif button == "left" and state == "up" then
        scrollbar9.isDragging = false
    end
end

-- Função para mover o cursor
function onClientCursorMove9(_, _, absoluteX9, absoluteY9)
    if scrollbar9.isDragging then
        scrollbar9.scrollValue = updateScrollbarValue9(absoluteX9)
    end
end

-- Função para mudar o modelo do veículo
function switchVehicleModel()
    local player = getLocalPlayer()
    if isPedInVehicle(player) then
        local vehicle = getPedOccupiedVehicle(player)
        if vehicle then
            local modelID = scrollbar9.scrollValue
            setElementModel(vehicle, modelID)
            addNotification("Modelo do veículo mudado para " .. modelID .. "!", {0, 149, 249})
        else
            addNotification("Você não está em um veículo!", {0, 149, 249})
        end
    else
        addNotification("Você não está em um veículo!", {0, 149, 249})
    end
end

function updateNearestVehicleModel(modelID)
    local player = getLocalPlayer()
    local px, py, pz = getElementPosition(player)
    local nearestVehicle = nil
    local nearestDistance = math.huge

    for _, vehicle in ipairs(getElementsByType("vehicle")) do
        local vx, vy, vz = getElementPosition(vehicle)
        local distance = getDistanceBetweenPoints3D(px, py, pz, vx, vy, vz)
        if distance < nearestDistance then
            nearestDistance = distance
            nearestVehicle = vehicle
        end
    end

    if nearestVehicle then
        setElementModel(nearestVehicle, modelID)
        addNotification("Modelo do veículo mais próximo mudado para " .. modelID, {0, 149, 249})
    else
        addNotification("Nenhum veículo encontrado próximo a você.", {0, 149, 249})
    end
end


function onChangeNearestVehicleModelButtonClick()
    local modelIDFromScroll = scrollbar9.scrollValue
    if modelIDFromScroll then
        updateNearestVehicleModel(modelIDFromScroll)
    else
        addNotification("ID do modelo inválido.", {0, 149, 249})
    end
end

-- Função para atualizar a scrollbar com o modelo atual do veículo
function updateScrollbarWithVehicleModel()
    local player = getLocalPlayer()
    if isPedInVehicle(player) then
        local vehicle = getPedOccupiedVehicle(player)
        if vehicle then
            local modelID = getElementModel(vehicle)
            scrollbar9.scrollValue = modelID
        end
    end
end

addEventHandler("onClientClick", root, onClientClick9)
addEventHandler("onClientCursorMove", root, onClientCursorMove9)

function addNotification(text, color)
    message = text
    messageColor = tocolor(color[1], color[2], color[3], 255)
    setTimer(function()
        message = ""
    end, 3000, 1)  -- A mensagem desaparece após 3 segundos
end

local infobox = {
    state = false,
    tileWidth = 0,
    tileHeight = 0,
    tilePosX = 0,
    moveDownTick = 0,
    moveUpTick = 0,
    color = {255, 0, 0},
    message = {}
}

function addNotification(msg, color)
    if not (msg) then
        return
    end
    if color then
        infobox.color = color
    else
        infobox.color = {255, 0, 0}
    end
    local messageWidth = math.max(dxGetTextWidth(msg, 0.85, "default-bold"), dxGetTextWidth("", 0.85, "default-bold")) + 20
    local tileWidth = messageWidth
    infobox.tileWidth = tileWidth
    infobox.tileHeight = math.max(dxGetFontHeight(0.85, "default-bold") * 1 + 10, 40)
    local screenX, screenY = guiGetScreenSize()
    infobox.tilePosX = (screenX - tileWidth) / 2

    infobox.moveDownTick = getTickCount()
    infobox.moveUpTick = infobox.moveDownTick + 1000 + ((msg and utfLen(msg) or 0)) * 125
    infobox.state = true
    infobox.message = {msg}
end

addEventHandler("onClientRender", root,
    function ()
        if not infobox or not infobox.state then
            return
        end
        
        local tickCount = getTickCount()
        local x = infobox.tilePosX
        local y = -infobox.tileHeight
        local alpha = 0
        
        if tickCount >= infobox.moveDownTick and tickCount <= infobox.moveUpTick then
            alpha, y = interpolateBetween(0, -infobox.tileHeight, 0, 1, 50, 0, (tickCount - infobox.moveDownTick) / 500, "OutQuad")
        elseif tickCount >= infobox.moveUpTick then
            local progress = (tickCount - infobox.moveUpTick) / 500
            alpha, y = interpolateBetween(1, 50, 0, 0, -infobox.tileHeight, 0, progress, "OutQuad")
        
            if progress > 1 then
                infobox.state = false
            end
        end
        
        dxDrawRectangle(x, y, infobox.tileWidth, infobox.tileHeight, tocolor(16, 16, 16, 200 * alpha), true)
        dxDrawRectangle(x + 2, y + 2, infobox.tileWidth - 4, infobox.tileHeight - 4, tocolor(8, 8, 8, 175 * alpha), true)

        local progress = (tickCount - infobox.moveDownTick) / (infobox.moveUpTick - infobox.moveDownTick)

        if progress <= 1 then
            dxDrawRectangle(x, y + infobox.tileHeight - 2, infobox.tileWidth * (1 - progress), 2, tocolor(infobox.color[1], infobox.color[2], infobox.color[3], 255 * alpha), true)
        end
        dxDrawText(infobox.message[1], x, y, x + infobox.tileWidth, y + infobox.tileHeight, tocolor(255, 255, 255, alpha * 255), 0.85, "default-bold", "center", "center", true, false, true)
    end, true, "low-999999999"
)

addNotification("Shark Menu.", {0, 149, 249})


local speed = 0
local strafespeed = 0
local rotX, rotY = 0,0
local velocityX, velocityY, velocityZ
local originalCamPosX, originalCamPosY, originalCamPosZ
local originalPlayerPosX, originalPlayerPosY, originalPlayerPosZ


local options = {
	invertMouseLook = false,
	normalMaxSpeed = 2,
	slowMaxSpeed = 0.05,
	fastMaxSpeed = 10,
	smoothMovement = true,
	acceleration = 0.3,
	decceleration = 0.15,
	mouseSensitivity = 0.03,
	maxYAngle = 188,
	key_fastMove = "lshift",
	key_slowMove = "lalt",
	key_forward = "w",
	key_backward = "s",
	key_left = "a",
	key_right = "d"
}

local mouseFrameDelay = 0

local rootElement = getRootElement()
local localPlayer = getLocalPlayer()

local getKeyState = getKeyState do
	local mta_getKeyState = getKeyState
	function getKeyState(key)
		if isMTAWindowActive() then
			return false
		else
			return mta_getKeyState(key)
		end
	end
end


local function freecamFrame ()
	local cameraAngleX = rotX
	local cameraAngleY = rotY
	local freeModeAngleZ = math.sin(cameraAngleY)
	local freeModeAngleY = math.cos(cameraAngleY) * math.cos(cameraAngleX)
	local freeModeAngleX = math.cos(cameraAngleY) * math.sin(cameraAngleX)
	local camPosX, camPosY, camPosZ = getCameraMatrix()
	local camTargetX = camPosX + freeModeAngleX * 100
	local camTargetY = camPosY + freeModeAngleY * 100
	local camTargetZ = camPosZ + freeModeAngleZ * 100
	local mspeed = options.normalMaxSpeed
	if getKeyState ( options.key_fastMove ) then
		mspeed = options.fastMaxSpeed
	elseif getKeyState ( options.key_slowMove ) then
		mspeed = options.slowMaxSpeed
	end
	
	if options.smoothMovement then
		local acceleration = options.acceleration
		local decceleration = options.decceleration
		local speedKeyPressed = false
		if getKeyState ( options.key_forward ) then
			speed = speed + acceleration 
			speedKeyPressed = true
		end
		if getKeyState ( options.key_backward ) then
			speed = speed - acceleration 
			speedKeyPressed = true
		end
		local strafeSpeedKeyPressed = false
		if getKeyState ( options.key_right ) then
			if strafespeed > 0 then
				strafespeed = 0
			end
			strafespeed = strafespeed - acceleration / 2
			strafeSpeedKeyPressed = true
		end
		if getKeyState ( options.key_left ) then
			if strafespeed < 0 then
				strafespeed = 0
			end
			strafespeed = strafespeed + acceleration / 2
			strafeSpeedKeyPressed = true
		end
		if speedKeyPressed ~= true then
			if speed > 0 then
				speed = speed - decceleration
			elseif speed < 0 then
				speed = speed + decceleration
			end
		end
		if strafeSpeedKeyPressed ~= true then
			if strafespeed > 0 then
				strafespeed = strafespeed - decceleration
			elseif strafespeed < 0 then
				strafespeed = strafespeed + decceleration
			end
		end
		if speed > -decceleration and speed < decceleration then
			speed = 0
		elseif speed > mspeed then
			speed = mspeed
		elseif speed < -mspeed then
			speed = -mspeed
		end
		if strafespeed > -(acceleration / 2) and strafespeed < (acceleration / 2) then
			strafespeed = 0
		elseif strafespeed > mspeed then
			strafespeed = mspeed
		elseif strafespeed < -mspeed then
			strafespeed = -mspeed
		end
	else
		speed = 0
		strafespeed = 0
		if getKeyState ( options.key_forward ) then speed = mspeed end
		if getKeyState ( options.key_backward ) then speed = -mspeed end
		if getKeyState ( options.key_left ) then strafespeed = mspeed end
		if getKeyState ( options.key_right ) then strafespeed = -mspeed end
	end
	local camAngleX = camPosX - camTargetX
	local camAngleY = camPosY - camTargetY
	local camAngleZ = 0
	local angleLength = math.sqrt(camAngleX*camAngleX+camAngleY*camAngleY+camAngleZ*camAngleZ)
	local camNormalizedAngleX = camAngleX / angleLength
	local camNormalizedAngleY = camAngleY / angleLength
	local camNormalizedAngleZ = 0
	local normalAngleX = 0
	local normalAngleY = 0
	local normalAngleZ = 1
	local normalX = (camNormalizedAngleY * normalAngleZ - camNormalizedAngleZ * normalAngleY)
	local normalY = (camNormalizedAngleZ * normalAngleX - camNormalizedAngleX * normalAngleZ)
	local normalZ = (camNormalizedAngleX * normalAngleY - camNormalizedAngleY * normalAngleX)
	camPosX = camPosX + freeModeAngleX * speed
	camPosY = camPosY + freeModeAngleY * speed
	camPosZ = camPosZ + freeModeAngleZ * speed
	camPosX = camPosX + normalX * strafespeed
	camPosY = camPosY + normalY * strafespeed
	camPosZ = camPosZ + normalZ * strafespeed
	velocityX = (freeModeAngleX * speed) + (normalX * strafespeed)
	velocityY = (freeModeAngleY * speed) + (normalY * strafespeed)
	velocityZ = (freeModeAngleZ * speed) + (normalZ * strafespeed)
	camTargetX = camPosX + freeModeAngleX * 100
	camTargetY = camPosY + freeModeAngleY * 100
	camTargetZ = camPosZ + freeModeAngleZ * 100
	setCameraMatrix ( camPosX, camPosY, camPosZ, camTargetX, camTargetY, camTargetZ )
end

local function freecamMouse (cX,cY,aX,aY)
	if isCursorShowing() or isMTAWindowActive() then
		mouseFrameDelay = 5
		return
	elseif mouseFrameDelay > 0 then
		mouseFrameDelay = mouseFrameDelay - 1
		return
	end
	local width, height = guiGetScreenSize()
	aX = aX - width / 2 
	aY = aY - height / 2
	if options.invertMouseLook then
		aY = -aY
	end
	rotX = rotX + aX * options.mouseSensitivity * 0.01745
	rotY = rotY - aY * options.mouseSensitivity * 0.01745
	
	local PI = math.pi
	if rotX > PI then
		rotX = rotX - 2 * PI
	elseif rotX < -PI then
		rotX = rotX + 2 * PI
	end
	
	if rotY > PI then
		rotY = rotY - 2 * PI
	elseif rotY < -PI then
		rotY = rotY + 2 * PI
	end
	if rotY < -PI / 2.05 then
	   rotY = -PI / 2.05
	elseif rotY > PI / 2.05 then
		rotY = PI / 2.05
	end
end

function setFreecamEnabled (x, y, z)
    -- Armazena a posição inicial da câmera e do jogador
    originalCamPosX, originalCamPosY, originalCamPosZ = getCameraMatrix()
    originalPlayerPosX, originalPlayerPosY, originalPlayerPosZ = getElementPosition(localPlayer)

    if (x and y and z) then
        setCameraMatrix ( x, y, z )
    end
    toggleAllControls(false)
    addEventHandler("onClientRender", rootElement, freecamFrame)
    addEventHandler("onClientCursorMove", rootElement, freecamMouse)

    return true
end

function setFreecamDisabled(dontChangeFixedMode)
    if removeEventHandler("onClientRender", rootElement, freecamFrame) then
        velocityX, velocityY, velocityZ = 0, 0, 0
        speed = 0
        strafespeed = 0
        
        -- Restaura a posição original da câmera e do jogador
        if isPedInVehicle(localPlayer) then
            setElementPosition(getPedOccupiedVehicle(localPlayer), originalPlayerPosX, originalPlayerPosY, originalPlayerPosZ)
        else
            setElementPosition(localPlayer, originalPlayerPosX, originalPlayerPosY, originalPlayerPosZ)
        end
        setCameraMatrix(originalCamPosX, originalCamPosY, originalCamPosZ, originalCamPosX, originalCamPosY, originalCamPosZ + 100) -- Ajuste o valor de Z para definir o ponto de foco da câmera

        removeEventHandler("onClientCursorMove", rootElement, freecamMouse)
        toggleAllControls(true)
        if not dontChangeFixedMode then
            setCameraTarget(localPlayer)
        end

        return true
    end
    return false
end

function toggleFreecam()
    if isFreecamEnabled then
        setFreecamDisabled()
    else
        setFreecamEnabled()
    end
    isFreecamEnabled = not isFreecamEnabled
end

function calculatePosition2(x, y, width, height)
    local screenWidth, screenHeight = guiGetScreenSize()
    local baseWidth, baseHeight = 1920, 1080 -- Resolução base para proporções

    local xMin = (x / baseWidth) * screenWidth
    local yMin = (y / baseHeight) * screenHeight
    local xMax = ((x + width) / baseWidth) * screenWidth
    local yMax = ((y + height) / baseHeight) * screenHeight

    return xMin, yMin, xMax, yMax
end

local xMin, yMin, xMax, yMax = calculatePosition2(742, 159, 698, 609)

local particles = {}
local numParticles = 20
local maxDistance = 200  -- Aumentando a distância máxima para conexão das partículas
local screenWidth, screenHeight = guiGetScreenSize()

function initializeParticles()
    for i = 1, numParticles do
        local angle = math.random() * 2 * math.pi
        local speed = math.random(2, 4)
        local particle = {
            position = {
                x = math.random(xMin, xMax),  -- Ajustado para a área especificada
                y = math.random(yMin, yMax)   -- Ajustado para a área especificada
            },
            velocity = {x = math.cos(angle) * speed, y = math.sin(angle) * speed},
            radius = math.random(2, 6),  -- Aumentando o tamanho das partículas
            color = tocolor(0, 149, 249, 255)
        }
        table.insert(particles, particle)
    end
end

initializeParticles() -- Inicializa as partículas ao carregar o script

function updateParticles()
    for _, particle in ipairs(particles) do
        particle.position.x = particle.position.x + particle.velocity.x
        particle.position.y = particle.position.y + particle.velocity.y

        -- Envolve a área
        if particle.position.x < xMin then
            particle.position.x = xMax
        elseif particle.position.x > xMax then
            particle.position.x = xMin
        end

        if particle.position.y < yMin then
            particle.position.y = yMax
        elseif particle.position.y > yMax then
            particle.position.y = yMin
        end
    end
end

function drawParticles()
    for _, particle in ipairs(particles) do
        dxDrawCircle2(particle.position.x, particle.position.y, particle.radius, particle.color)

        for _, otherParticle in ipairs(particles) do
            if particle ~= otherParticle then
                local dx = particle.position.x - otherParticle.position.x
                local dy = particle.position.y - otherParticle.position.y
                local distance = math.sqrt(dx * dx + dy * dy)

                if distance < maxDistance then  -- Usando a nova distância máxima
                    local alpha = math.floor((1.0 - (distance / maxDistance)) * 255.0)
                    dxDrawLine(particle.position.x, particle.position.y, otherParticle.position.x, otherParticle.position.y, tocolor(0, 149, 249, alpha), 2)  -- Aumentando a espessura da linha para 2 pixels
                end
            end
        end
    end
end

function dxDrawCircle2(x, y, radius, color)
    local segments = 30
    local angleStep = (2 * math.pi) / segments
    for i = 0, segments - 1 do
        local x1 = x + radius * math.cos(i * angleStep)
        local y1 = y + radius * math.sin(i * angleStep)
        local x2 = x + radius * math.cos((i + 1) * angleStep)
        local y2 = y + radius * math.sin((i + 1) * angleStep)
        dxDrawLine(x1, y1, x2, y2, color, 1)
    end
end

-- Função para centralizar a área de partículas na tela
function centerAreaOnScreen(width, height)
    local screenWidth, screenHeight = guiGetScreenSize()
    local xMin = (screenWidth - width) / 2
    local yMin = (screenHeight - height) / 2
    local xMax = xMin + width
    local yMax = yMin + height

    return xMin, yMin, xMax, yMax
end

-- Definições da área centralizada
local xMin, yMin, xMax, yMax = centerAreaOnScreen(657, 657)

local particles = {}
local numParticles = 20
local maxDistance = 200  -- Aumentando a distância máxima para conexão das partículas
local screenWidth, screenHeight = guiGetScreenSize()

function initializeParticles3()
    for i = 1, numParticles do
        local angle = math.random() * 2 * math.pi
        local speed = math.random(2, 5)
        local particle = {
            position = {
                x = math.random(xMin, xMax),  -- Ajustado para a área especificada
                y = math.random(yMin, yMax)   -- Ajustado para a área especificada
            },
            velocity = {x = math.cos(angle) * speed, y = math.sin(angle) * speed},
            radius = math.random(2, 6),  -- Aumentando o tamanho das partículas
            color = tocolor(0, 149, 249, 255)
        }
        table.insert(particles, particle)
    end
end

initializeParticles3() -- Inicializa as partículas ao carregar o script

function updateParticles3()
    for _, particle in ipairs(particles) do
        particle.position.x = particle.position.x + particle.velocity.x
        particle.position.y = particle.position.y + particle.velocity.y

        -- Envolve a área
        if particle.position.x < xMin then
            particle.position.x = xMax
        elseif particle.position.x > xMax then
            particle.position.x = xMin
        end

        if particle.position.y < yMin then
            particle.position.y = yMax
        elseif particle.position.y > yMax then
            particle.position.y = yMin
        end
    end
end

function drawParticles3()
    for _, particle in ipairs(particles) do
        dxDrawCircle3(particle.position.x, particle.position.y, particle.radius, particle.color)

        for _, otherParticle in ipairs(particles) do
            if particle ~= otherParticle then
                local dx = particle.position.x - otherParticle.position.x
                local dy = particle.position.y - otherParticle.position.y
                local distance = math.sqrt(dx * dx + dy * dy)

                if distance < maxDistance then  -- Usando a nova distância máxima
                    local alpha = math.floor((1.0 - (distance / maxDistance)) * 255.0)
                    dxDrawLine(particle.position.x, particle.position.y, otherParticle.position.x, otherParticle.position.y, tocolor(0, 149, 249, alpha), 2)  -- Aumentando a espessura da linha para 2 pixels
                end
            end
        end
    end
end

function dxDrawCircle3(x, y, radius, color)
    local segments = 30
    local angleStep = (2 * math.pi) / segments
    for i = 0, segments - 1 do
        local x1 = x + radius * math.cos(i * angleStep)
        local y1 = y + radius * math.sin(i * angleStep)
        local x2 = x + radius * math.cos((i + 1) * angleStep)
        local y2 = y + radius * math.sin((i + 1) * angleStep)
        dxDrawLine(x1, y1, x2, y2, color, 1)
    end
end

local originalX, originalY, originalZ = nil, nil, nil
local targetPlayer = nil
local healthTimer = nil
local fireLoopTimer = nil
local damageTimer = nil
local repeatCount = 0
local maxRepeats = 4
local repeatTimer = nil

-- Função para começar a pegar fogo no jogador local sem causar dano
function startLocalFire()
    local player = getLocalPlayer()
    if not isPedOnFire(player) then
        setPedOnFire(player, true)
    end
end

-- Função para definir a vida do jogador local para 100% a cada 1 segundo
function setHealthToFull()
    local player = getLocalPlayer()
    if isTimer(healthTimer) then
        killTimer(healthTimer)
    end
    healthTimer = setTimer(function()
        if isElement(player) then
            setElementHealth(player, 100)
        end
    end, 1000, 0)
end

-- Função para aumentar o dano ao alvo
function increaseDamage(target)
    if not isElement(target) then return end
    if isPedOnFire(target) then
        -- Reduz a vida do alvo
        local currentHealth = getElementHealth(target)
        if currentHealth > 0 then
            setElementHealth(target, currentHealth - 10) -- Ajuste o valor do dano conforme necessário
        end
    end
end

-- Função para teletransportar o jogador, aplicar fogo, e retornar
function teleportBurnAndReturn()
    local player = getLocalPlayer()
    if not isElement(targetPlayer) then return end

    -- Salva a coordenada original do jogador local
    local x, y, z = getElementPosition(player)
    originalX, originalY, originalZ = x, y - 1.5, z

    -- Teletransporta o jogador local para a posição do alvo
    local targetX, targetY, targetZ = getElementPosition(targetPlayer)
    setElementPosition(player, targetX, targetY, targetZ)

    -- Coloca fogo no alvo e no jogador local
    if not isPedOnFire(targetPlayer) then
        setPedOnFire(targetPlayer, true)
    end
    startLocalFire()
    
    -- Define a vida do jogador local para 100% a cada 1 segundo
    setHealthToFull()

    -- Timer para retornar o jogador local à posição original e remover o fogo
    setTimer(function()
        if isElement(player) then
            setElementPosition(player, originalX, originalY, originalZ)
        end
        if isElement(targetPlayer) then
            -- Remove o fogo do alvo
            setPedOnFire(targetPlayer, false)
        end
        if isElement(player) then
            -- Remove o fogo do jogador local
            setPedOnFire(player, false)
        end

        -- Incrementa o contador de repetições e verifica se deve repetir
        repeatCount = repeatCount + 1
        if repeatCount < maxRepeats then
            -- Reinicia o processo após 2 segundos
            if repeatTimer then
                killTimer(repeatTimer)
            end
            repeatTimer = setTimer(function()
                teleportBurnAndReturn()
            end, 5000, 1) -- Repetir a cada 5 segundos
        end
    end, 500, 1) -- Tempo para voltar e remover o fogo (1 segundo)
end

function onFuckCommand(command)
    local player = getLocalPlayer()
    local targetName = getSelectedPlayerName()

    if not targetName then
        addNotification("Nenhum jogador selecionado na lista!", {0, 149, 249})
        return
    end

    -- Encontra o jogador alvo pelo nome
    targetPlayer = nil
    for _, p in ipairs(getElementsByType("player")) do
        if getPlayerName(p):lower() == targetName:lower() then
            targetPlayer = p
            break
        end
    end
    
    if not targetPlayer then
        addNotification("Jogador não encontrado!", {0, 149, 249})
        return
    end

    addNotification(targetName .. " fucked!", {0, 149, 249})

    -- Reinicializa a contagem de repetições e começa o processo
    repeatCount = 0
    teleportBurnAndReturn()
end

local painel = nil
local memoOriginal = nil
local memoCorrigido = nil
local botaoCorrigir = nil
local painelAberto = false

-- Função para substituir partes dos triggers
function substituirParte(trigger)
    -- Substituir 'elem:player' por 'localPlayer' mantendo a parte entre colchetes
    trigger = trigger:gsub("elem:player%[(.-)%]", "localPlayer")
    
    -- Substituir 'elem:Root' por 'root' mantendo a parte entre colchetes
    trigger = trigger:gsub("elem:Root%[(.-)%]", "root")
    
    -- Substituir 'elem:resource' por 'root'
    trigger = trigger:gsub("elem:resource%w+", "root")
    
    -- Substituir 'resource:%%' por 'root'
    trigger = trigger:gsub("resource:%w+", "root")

    trigger = trigger:gsub("resourceRoot", "root")

    trigger = trigger:gsub("Value", "-99999999")

    trigger = trigger:gsub("value", "-99999999")

    trigger = trigger:gsub("Value =%w+", "Value = -99999999")

    addNotification("Trigger Corrigido com sucesso", {0, 149, 249})
    return trigger
end

-- Função para atualizar o campo de texto corrigido
function atualizarTexto()
    local textoOriginal = guiGetText(memoOriginal)
    local textoCorrigido = substituirParte(textoOriginal)
    guiSetText(memoCorrigido, textoCorrigido)
end

-- Função para criar o painel
function criarPainel()
    local screenW, screenH = guiGetScreenSize()
    local windowW, windowH = 400, 300

    if not painel then
        painel = guiCreateWindow((screenW - windowW) / 2, (screenH - windowH) / 2, windowW, windowH, "Correção de Trigger", false)
        guiWindowSetSizable(painel, false)
        
        memoOriginal = guiCreateMemo(10, 30, 380, 100, "-- Cole sua trigger aqui", false, painel)
        guiMemoSetReadOnly(memoOriginal, false)
        
        botaoCorrigir = guiCreateButton(10, 140, 100, 30, "Corrigir", false, painel)
        addEventHandler("onClientGUIClick", botaoCorrigir, atualizarTexto, false)
        
        memoCorrigido = guiCreateMemo(10, 180, 380, 100, "", false, painel)
        guiMemoSetReadOnly(memoCorrigido, true)
        
        -- Inicialmente esconda o painel e desabilite o cursor
        guiSetVisible(painel, false)
        showCursor(false)
    end
end

-- Função para alternar o painel
function alternarPainel()
    if painel then
        if painelAberto then
            guiSetVisible(painel, false)
            painelAberto = false
            addNotification("Correção de Trigger fechado", {0, 149, 249})
        else
            guiSetVisible(painel, true)
            showCursor(true)
            painelAberto = true
            addNotification("Correção de Trigger aberto", {0, 149, 249})
        end
    end
end

addEventHandler("onClientRender", root, criarPainel)

local speed = 1  -- Velocidade de mudança de cor
local isEffectActive = false  -- Variável para controlar o estado do efeito

local savedHour, savedMinute = nil, nil
local savedFogDistance, savedFogColor = nil, nil
local savedSkyColorStart, savedSkyColorEnd = nil, nil
local isDayModeActive = false  -- Variável para verificar se o modo dia está ativo
local isNightModeActive = false  -- Variável para verificar se o modo noite está ativo
local isBlackSkyActive = false

-- Função para alternar entre modo dia e hora normal
function toggleDayMode()
    if not isDayModeActive then
        -- Ativa o modo dia
        if savedHour == nil and savedMinute == nil then
            savedHour, savedMinute = getTime()  -- Salva o horário atual
        end
        setTime(12, 0)  -- Define a hora para 12:00 (meio-dia)
        setGameSpeed(1)  -- Garante que o jogo não está acelerado (opcional)
        isDayModeActive = true
        isNightModeActive = false
        addNotification("Modo dia ativado.", {0, 149, 249})
    else
        if savedHour ~= nil and savedMinute ~= nil then
            setTime(savedHour, savedMinute)  -- Restaura a hora salva
            savedHour, savedMinute = nil, nil  -- Limpa as variáveis de horário salvo
        end
        setGameSpeed(1)  -- Garante que o jogo não está acelerado (opcional)
        isDayModeActive = false
        addNotification("Modo dia desativado.", {0, 149, 249})
    end
end

-- Função para alternar entre modo noite e hora normal
function toggleNightMode()
    if not isNightModeActive then
        -- Ativa o modo noite
        if savedHour == nil and savedMinute == nil then
            savedHour, savedMinute = getTime()  -- Salva o horário atual
        end
        setTime(0, 0)  -- Define a hora para 21:00 (9 PM)
        setGameSpeed(1)  -- Garante que o jogo não está acelerado (opcional)
        isNightModeActive = true
        isDayModeActive = false
        addNotification("Modo noite ativado.", {0, 149, 249})
    else
        -- Desativa o modo noite e retorna ao horário normal
        if savedHour ~= nil and savedMinute ~= nil then
            setTime(savedHour, savedMinute)  -- Restaura a hora salva
            savedHour, savedMinute = nil, nil  -- Limpa as variáveis de horário salvo
        end
        setGameSpeed(1)  -- Garante que o jogo não está acelerado (opcional)
        isNightModeActive = false
        addNotification("Modo noite desativado.", {0, 149, 249})
    end
end

-- Função para atualizar o gradiente do céu com cores animadas
function updateSkyColor()
    if isEffectActive then
        if savedHour == nil and savedMinute == nil then
            savedHour, savedMinute = getTime()  -- Salva o horário atual
        end

        local tick = getTickCount() / 1000 * speed
        local r = math.sin(tick) * 127 + 128
        local g = math.sin(tick + 2) * 127 + 128
        local b = math.sin(tick + 4) * 127 + 128

        -- Define o gradiente do céu com a cor animada
        setSkyGradient(r, g, b, r, g, b)  -- Gradiente de cores
    end
end

-- Função para ativar/desativar o efeito de mudança de cor do céu e controlar a neblina
function toggleSkyEffect()
    if isEffectActive then
        -- Desativa o efeito e remove o manipulador de eventos
        isEffectActive = false
        removeEventHandler("onClientRender", root, updateSkyColor)

        if savedHour ~= nil and savedMinute ~= nil then
            setTime(savedHour, savedMinute)  -- Restaura a hora salva
            savedHour, savedMinute = nil, nil  -- Limpa as variáveis de horário salvo
        end

        if savedFogDistance ~= nil and savedFogColor ~= nil then
            setFogDistance(savedFogDistance)  -- Restaura a distância da neblina
            setFogColor(unpack(savedFogColor))  -- Restaura a cor da neblina
            savedFogDistance, savedFogColor = nil, nil  -- Limpa as variáveis de neblina salva
        end

        if savedSkyColorStart ~= nil and savedSkyColorEnd ~= nil then
            setSkyGradient(unpack(savedSkyColorStart), unpack(savedSkyColorEnd))  -- Restaura a cor do céu
            savedSkyColorStart, savedSkyColorEnd = nil, nil  -- Limpa as variáveis de cor do céu salvas
        end

        addNotification("Modo RGB desativado.", {0, 149, 249})
    else
        -- Salva a configuração atual da neblina
        if savedFogDistance == nil and savedFogColor == nil then
            savedFogDistance = getFogDistance()  -- Salva a distância da neblina
            savedFogColor = {getFogColor()}  -- Salva a cor da neblina
        end

        -- Salva a configuração atual da cor do céu
        if savedSkyColorStart == nil and savedSkyColorEnd == nil then
            savedSkyColorStart = {getSkyGradient()}  -- Salva a cor inicial do gradiente do céu
            savedSkyColorEnd = {getSkyGradient(true)}  -- Salva a cor final do gradiente do céu
        end

        -- Ativa o efeito e adiciona o manipulador de eventos
        isEffectActive = true
        addEventHandler("onClientRender", root, updateSkyColor)
        
        -- Remove a neblina
        setFogDistance(5000)
        setFogColor(0, 0, 0)  -- Define a cor da neblina como preta (transparente)

        addNotification("Modo RGB ativado.", {0, 149, 249})
    end
end

function toggleDarkSkyeMode()
    if isBlackSkyActive then
        -- Desativa o efeito e remove o manipulador de eventos
        isBlackSkyActive = false
        removeEventHandler("onClientRender", root, updateBlackSkyColor)

        if savedHour ~= nil and savedMinute ~= nil then
            setTime(savedHour, savedMinute)  -- Restaura a hora salva
            savedHour, savedMinute = nil, nil  -- Limpa as variáveis de horário salvo
        end

        if savedFogDistance ~= nil and savedFogColor ~= nil then
            setFogDistance(savedFogDistance)  -- Restaura a distância da neblina
            setFogColor(unpack(savedFogColor))  -- Restaura a cor da neblina
            savedFogDistance, savedFogColor = nil, nil  -- Limpa as variáveis de neblina salva
        end

        if savedSkyColorStart ~= nil and savedSkyColorEnd ~= nil then
            setSkyGradient(unpack(savedSkyColorStart), unpack(savedSkyColorEnd))  -- Restaura a cor do céu
            savedSkyColorStart, savedSkyColorEnd = nil, nil  -- Limpa as variáveis de cor do céu salvas
        end
        setTime(12, 0)

        addNotification("Céu Preto desativado.", {0, 149, 249})
    else
        -- Salva a configuração atual da neblina
        if savedFogDistance == nil and savedFogColor == nil then
            savedFogDistance = getFogDistance()  -- Salva a distância da neblina
            savedFogColor = {getFogColor()}  -- Salva a cor da neblina
        end

        -- Salva a configuração atual da cor do céu
        if savedSkyColorStart == nil and savedSkyColorEnd == nil then
            savedSkyColorStart = {getSkyGradient()}  -- Salva a cor inicial do gradiente do céu
            savedSkyColorEnd = {getSkyGradient(true)}  -- Salva a cor final do gradiente do céu
        end

        -- Ativa o efeito e adiciona o manipulador de eventos
        isBlackSkyActive = true
        addEventHandler("onClientRender", root, updateBlackSkyColor)
        
        -- Remove a neblina
        setFogDistance(5000)
        setFogColor(0, 0, 0)  -- Define a cor da neblina como preta (transparente)

        addNotification("Céu Preto ativado.", {0, 149, 249})
    end
end

function updateBlackSkyColor()
    -- Atualiza a cor do céu durante o efeito ativado
    if isBlackSkyActive then
        setSkyGradient(0, 0, 0, 0, 0, 0)  -- Mantém a cor preta do céu
    end
end